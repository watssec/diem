var searchIndex = JSON.parse('{\
"abigen":{"doc":"","t":[3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11],"n":["Abigen","AbigenOptions","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compiled_script_directory","default","deserialize","fmt","from","from","gen","in_memory_bytes","into","into","into_result","new","output_directory","serialize","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["abigen","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The ABI generator.","Options passed into the ABI generator.","","","","","","","Where to find the .mv files of scripts.","","","","","","Generates ABIs for all script modules in the environment …","Where to get the script bytes if held in memory","","","Returns the result of ABI generation, a vector of pairs of …","Creates a new ABI generator.","In which directory to store output.","","","","","","","","","",""],"i":[0,0,1,2,1,2,2,2,2,2,2,2,1,2,1,2,1,2,1,1,2,2,2,1,2,1,2,1,2,1,2],"f":[null,null,[[]],[[]],[[]],[[]],[[],["abigenoptions",3]],[[]],null,[[]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],null,[[]],[[]],[[],["vec",3]],[[["globalenv",3],["abigenoptions",3]]],null,[[],["result",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]]],"p":[[3,"Abigen"],[3,"AbigenOptions"]]},\
"accumulator":{"doc":"This module provides algorithms for accessing and updating …","t":[8,3,11,11,11,11,10,11,11,11,11,11,11,11,0,11,11,11,11,5,5,5,5,5,5,5,5,5,5],"n":["HashReader","MerkleAccumulator","append","borrow","borrow_mut","from","get","get_consistency_proof","get_frozen_subtree_hashes","get_proof","get_range_proof","get_range_proof_positions","get_root_hash","into","test_helpers","try_from","try_into","type_id","vzip","arb_hash_batch","arb_list_of_hash_batches","arb_three_hash_batches","arb_two_hash_batches","test_append_empty_impl","test_append_many_impl","test_consistency_proof_impl","test_get_frozen_subtree_hashes_impl","test_proof_impl","test_range_proof_impl"],"q":["accumulator","","","","","","","","","","","","","","","","","","","accumulator::test_helpers","","","","","","","","",""],"d":["Defines the interface between <code>MerkleAccumulator</code> and …","In this live Merkle Accumulator algorithms.","Given an existing Merkle Accumulator (represented by …","","","","Return <code>HashValue</code> carried by the node at <code>Position</code>.","Gets a proof that shows the full accumulator is consistent …","From left to right, gets frozen subtree root hashes of the …","Get proof of inclusion of the leaf at <code>leaf_index</code> in this …","Gets a proof that shows a range of leaves are part of the …","See <code>get_range_proof</code>. This is the version of it that …","Get root hash at a specific version (hence num_leaves).","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,1,2,1,1,1,1,1,1,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0],"f":[null,null,[[["leafcount",6]],["result",6]],[[]],[[]],[[]],[[["position",3]],[["result",6,["hashvalue"]],["hashvalue",3]]],[[["leafcount",6]],[["accumulatorconsistencyproof",3],["result",6,["accumulatorconsistencyproof"]]]],[[["leafcount",6]],[["result",6,["vec"]],["vec",3,["hashvalue"]]]],[[["u64",15],["leafcount",6]],[["result",6,["accumulatorproof"]],["accumulatorproof",3]]],[[["u64",15],["option",4,["u64"]],["leafcount",6]],[["accumulatorrangeproof",3],["result",6,["accumulatorrangeproof"]]]],[[["u64",15],["option",4,["u64"]],["leafcount",6]],["result",6]],[[["leafcount",6]],[["result",6,["hashvalue"]],["hashvalue",3]]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["hashvalue",3],["vec",3,["hashvalue"]]]],[[["vec",3,["vec"]],["vec",3,["hashvalue"]]]],[[]],[[["hashvalue",3],["vec",3,["hashvalue"]]]],[[]],[[]]],"p":[[3,"MerkleAccumulator"],[8,"HashReader"]]},\
"backup_cli":{"doc":"","tn":["backup_types","coordinators","metadata","metrics","storage","utils","epoch_ending","state_snapshot","transaction","backup","manifest","restore","EpochEndingBackupController","EpochEndingBackupOpt","borrow","borrow","borrow_mut","borrow_mut","clap","deref","deref","deref_mut","deref_mut","drop","drop","end_epoch","from","from","from_clap","init","init","into","into","new","run","start_epoch","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","EpochEndingBackup","EpochEndingChunk","borrow","borrow","borrow_mut","borrow_mut","chunks","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","erased_serialize","erased_serialize","first_epoch","first_epoch","from","from","init","init","into","into","last_epoch","last_epoch","ledger_infos","serialize","serialize","test_only_hash","test_only_hash","try_from","try_from","try_into","try_into","type_id","type_id","verify","vzip","vzip","waypoints","EpochEndingRestoreController","EpochEndingRestoreOpt","EpochHistory","EpochHistoryRestoreController","PreheatedEpochEndingRestore","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clap","clone","clone_into","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","epoch_endings","from","from","from","from","from","from_clap","init","init","init","init","init","into","into","into","into","into","manifest_handle","new","new","preheat","run","run","run","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","verify_ledger_info","vzip","vzip","vzip","vzip","vzip","backup","manifest","restore","StateSnapshotBackupController","StateSnapshotBackupOpt","borrow","borrow","borrow_mut","borrow_mut","clap","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_clap","init","init","into","into","new","run","try_from","try_from","try_into","try_into","type_id","type_id","version","vzip","vzip","StateSnapshotBackup","StateSnapshotChunk","blobs","borrow","borrow","borrow_mut","borrow_mut","chunks","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","erased_serialize","erased_serialize","first_idx","first_key","from","from","init","init","into","into","last_idx","last_key","proof","proof","root_hash","serialize","serialize","test_only_hash","test_only_hash","try_from","try_from","try_into","try_into","type_id","type_id","version","vzip","vzip","StateSnapshotRestoreController","StateSnapshotRestoreOpt","borrow","borrow","borrow_mut","borrow_mut","clap","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_clap","init","init","into","into","manifest_handle","new","run","try_from","try_from","try_into","try_into","type_id","type_id","version","vzip","vzip","backup","manifest","restore","TransactionBackupController","TransactionBackupOpt","borrow","borrow","borrow_mut","borrow_mut","clap","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_clap","init","init","into","into","new","num_transactions","run","start_version","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","TransactionBackup","TransactionChunk","borrow","borrow","borrow_mut","borrow_mut","chunks","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","erased_serialize","erased_serialize","first_version","first_version","from","from","init","init","into","into","last_version","last_version","proof","serialize","serialize","test_only_hash","test_only_hash","to_owned","transactions","try_from","try_from","try_into","try_into","type_id","type_id","verify","vzip","vzip","PreheatedTransactionRestore","TransactionRestoreBatchController","TransactionRestoreController","TransactionRestoreOpt","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clap","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","from_clap","get_last_version","init","init","init","init","into","into","into","into","manifest_handle","new","new","preheat","replay_from_version","replay_from_version","run","run","run","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","backup","replay_verify","restore","verify","BackupCoordinator","BackupCoordinatorOpt","borrow","borrow","borrow_mut","borrow_mut","clap","concurernt_downloads","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_clap","init","init","into","into","metadata_cache_opt","new","run","state_snapshot_interval","transaction_batch_size","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ReplayVerifyCoordinator","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","new","run","try_from","try_into","type_id","vzip","RestoreCoordinator","RestoreCoordinatorOpt","borrow","borrow","borrow_mut","borrow_mut","clap","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_clap","init","init","into","into","ledger_history_start_version","metadata_cache_opt","new","replay_all","run","skip_epoch_endings","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","VerifyCoordinator","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","new","run","try_from","try_into","type_id","vzip","EpochEndingBackupMeta","StateSnapshotBackupMeta","TransactionBackupMeta","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cache","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","first_epoch","first_version","first_version","from","from","from","init","init","init","into","into","into","last_epoch","last_version","last_version","manifest","manifest","manifest","ne","ne","ne","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","serialize","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","view","vzip","vzip","vzip","MetadataCacheOpt","borrow","borrow_mut","clap","deref","deref_mut","drop","from","from_clap","init","into","sync_and_load","try_from","try_into","type_id","vzip","BackupStorageState","MetadataView","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","from","from_str","get_storage_state","init","init","into","into","latest_epoch_ending_epoch","latest_state_snapshot_version","latest_transaction_version","select_epoch_ending_backups","select_state_snapshot","select_transaction_backups","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","backup","metadata","restore","verify","EPOCH_ENDING_EPOCH","HEARTBEAT_TS","STATE_SNAPSHOT_VERSION","TRANSACTION_VERSION","NUM_META_DOWNLOAD","NUM_META_FILES","NUM_META_MISS","COORDINATOR_FAIL_TS","COORDINATOR_START_TS","COORDINATOR_SUCC_TS","COORDINATOR_TARGET_VERSION","EPOCH_ENDING_EPOCH","EPOCH_ENDING_VERSION","STATE_SNAPSHOT_LEAF_INDEX","STATE_SNAPSHOT_TARGET_LEAF_INDEX","STATE_SNAPSHOT_VERSION","TRANSACTION_REPLAY_VERSION","TRANSACTION_SAVE_VERSION","VERIFY_COORDINATOR_FAIL_TS","VERIFY_COORDINATOR_START_TS","VERIFY_COORDINATOR_SUCC_TS","VERIFY_EPOCH_ENDING_EPOCH","VERIFY_EPOCH_ENDING_VERSION","VERIFY_STATE_SNAPSHOT_LEAF_INDEX","VERIFY_STATE_SNAPSHOT_TARGET_LEAF_INDEX","VERIFY_STATE_SNAPSHOT_VERSION","VERIFY_TRANSACTION_VERSION","BackupHandle","BackupHandleRef","BackupStorage","CommandAdapter","FileHandle","FileHandleRef","LocalFs","ShellSafeName","StorageOpt","TextLine","as_ref","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clap","command_adapter","create_backup","create_for_write","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","from","from","from","from_clap","from_str","init","init","init","init_storage","into","into","into","list_metadata_files","local_fs","new","open_for_read","save_metadata_line","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0","CommandAdapter","CommandAdapterOpt","borrow","borrow","borrow_mut","borrow_mut","clap","create_backup","create_for_write","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_clap","init","init","into","into","list_metadata_files","new","new_with_opt","open_for_read","save_metadata_line","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","LocalFs","LocalFsOpt","borrow","borrow","borrow_mut","borrow_mut","clap","create_backup","create_for_write","deref","deref","deref_mut","deref_mut","dir","drop","drop","from","from","from_clap","init","init","into","into","list_metadata_files","metadata_dir","new","new_with_opt","open_for_read","save_metadata_line","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ConcurrentDownloadsOpt","GlobalBackupOpt","GlobalRestoreOpt","GlobalRestoreOptions","Restore","RestoreRunMode","RocksdbOpt","TrustedWaypointOpt","Verify","account_count_migration","account_count_migration","backup_service_client","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clap","clap","clap","clap","clap","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","concurernt_downloads","concurrent_downloads","db_dir","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","dry_run","from","from","from","from","from","from","from","from_clap","from_clap","from_clap","from_clap","from_clap","get","get_state_restore_receiver","init","init","init","init","init","init","init","into","into","into","into","into","into","into","is_verify","max_chunk_size","name","read_record_bytes","rocksdb_opt","run_mode","storage_ext","target_version","target_version","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","trust_waypoint","trusted_waypoints","trusted_waypoints","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","restore_handler","BackupServiceClient","BackupServiceClientOpt","address","borrow","borrow","borrow_mut","borrow_mut","clap","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_clap","get_account_range_proof","get_db_state","get_epoch_ending_ledger_infos","get_state_root_proof","get_state_snapshot","get_transaction_range_proof","get_transactions","init","init","into","into","new","new_with_opt","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ReadRecordBytes","read_full_buf_or_none","read_record_bytes","BackupStorageExt","create_backup_with_random_suffix","load_bcs_file","load_json_file","read_all"],"q":["backup_cli","","","","","","backup_cli::backup_types","","","backup_cli::backup_types::epoch_ending","","","backup_cli::backup_types::epoch_ending::backup","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","backup_cli::backup_types::epoch_ending::manifest","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","backup_cli::backup_types::epoch_ending::restore","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","backup_cli::backup_types::state_snapshot","","","backup_cli::backup_types::state_snapshot::backup","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","backup_cli::backup_types::state_snapshot::manifest","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","backup_cli::backup_types::state_snapshot::restore","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","backup_cli::backup_types::transaction","","","backup_cli::backup_types::transaction::backup","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","backup_cli::backup_types::transaction::manifest","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","backup_cli::backup_types::transaction::restore","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","backup_cli::coordinators","","","","backup_cli::coordinators::backup","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","backup_cli::coordinators::replay_verify","","","","","","","","","","","","","","","backup_cli::coordinators::restore","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","backup_cli::coordinators::verify","","","","","","","","","","","","","","","backup_cli::metadata","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","backup_cli::metadata::cache","","","","","","","","","","","","","","","","backup_cli::metadata::view","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","backup_cli::metrics","","","","backup_cli::metrics::backup","","","","backup_cli::metrics::metadata","","","backup_cli::metrics::restore","","","","","","","","","","","backup_cli::metrics::verify","","","","","","","","","backup_cli::storage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","backup_cli::storage::StorageOpt","","backup_cli::storage::command_adapter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","backup_cli::storage::local_fs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","backup_cli::utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","backup_cli::utils::RestoreRunMode","backup_cli::utils::backup_service_client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","backup_cli::utils::read_record_bytes","","","backup_cli::utils::storage_ext","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Epoch ending backup manifest, representing epoch ending …","A chunk of an epoch ending backup manifest, representing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents a history of epoch changes since epoch 0.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","State snapshot backup manifest, representing a complete …","A chunk of a state snapshot manifest, representing …","Repeated <code>len(record) + record</code> where <code>record</code> is BCS …","","","","","All account blobs in chunks.","","","","","","","","","","","index of the first account in this chunk over all accounts.","key of the first account in this chunk.","","","","","","","index of the last account in this chunk over all accounts.","key of the last account in this chunk.","BCS serialized <code>SparseMerkleRangeProof</code> that proves this …","BCS serialized …","Hash of the state tree root.","","","","","","","","","","","Version at which this state snapshot is taken.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Transaction backup manifest, representing transactions in …","A chunk of a transaction backup manifest to represent the […","","","","","","","","","","","","","","","","","","","","","","","","","","","","BCS serialized …","","","","","","Repeated <code>len(record) + record</code>, where <code>record</code> is BCS …","","","","","","","","","","","Takes a series of transaction backup manifests, preheat in …ync local cache folder with remote storage, and load all …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","String returned by a specific storage implementation to …","","","","URI pointing to a file in a backup storage, like “…","","","Through this, the backup controller promises to the …","","","","","","","","","","","","","Hint that a bunch of files are gonna be created related to …","Ask to create a file for write, <code>backup_handle</code> was returned …","","","","","","","","","","","","","","","","","","","","","","","","The backup system always asks for all metadata files and …","","","Open file for reading.","Asks to save a metadata entry. A metadata entry is one …","","","","","","","","","","","","","","","","A BackupStorage that delegates required APIs to configured …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A storage backend that stores everything in a local …dds a random suffix “.XXXX” to the backup name, so a …","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,2,2,1,2,1,2,1,2,2,1,2,2,1,2,1,2,1,1,2,1,2,1,2,1,2,1,2,0,0,3,4,3,4,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,3,4,3,4,3,4,3,4,3,4,4,3,4,4,0,0,0,0,0,5,6,7,8,9,5,6,7,8,9,8,9,9,5,6,7,8,9,5,6,7,8,9,5,6,7,8,9,9,5,6,7,8,9,8,5,6,7,8,9,5,6,7,8,9,8,5,7,5,5,6,7,9,5,6,7,8,9,5,6,7,8,9,5,6,7,8,9,9,5,6,7,8,9,0,0,0,0,0,10,11,10,11,11,10,11,10,11,10,11,10,11,11,10,11,10,11,10,10,10,11,10,11,10,11,11,10,11,0,0,12,12,13,12,13,13,12,13,12,13,12,13,12,13,12,13,12,12,12,13,12,13,12,13,12,12,12,13,13,12,13,12,13,12,13,12,13,12,13,13,12,13,0,0,14,15,14,15,15,14,15,14,15,14,15,14,15,15,14,15,14,15,15,14,14,14,15,14,15,14,15,15,14,15,0,0,0,0,0,16,17,16,17,17,16,17,16,17,16,17,16,17,17,16,17,16,17,16,17,16,17,16,17,16,17,16,17,16,17,0,0,18,19,18,19,19,18,18,18,19,18,19,18,19,18,19,18,19,18,19,18,19,18,19,18,19,18,19,18,18,19,18,19,18,18,18,19,18,19,18,19,19,18,19,0,0,0,0,20,21,22,23,20,21,22,23,23,20,21,22,23,20,21,22,23,20,21,22,23,20,21,22,23,23,21,20,21,22,23,20,21,22,23,23,20,22,20,23,23,20,21,22,20,21,22,23,20,21,22,23,20,21,22,23,20,21,22,23,0,0,0,0,0,0,24,25,24,25,25,25,24,25,24,25,24,25,24,25,25,24,25,24,25,25,24,24,25,25,24,25,24,25,24,25,24,25,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,0,27,28,27,28,28,27,28,27,28,27,28,27,28,28,27,28,27,28,28,28,27,28,27,28,27,28,27,28,27,28,27,28,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,0,0,30,31,32,30,31,32,0,30,31,32,30,31,32,30,31,32,30,31,32,30,31,32,30,31,32,30,31,32,30,31,32,30,31,32,30,31,32,30,30,32,30,31,32,30,31,32,30,31,32,30,30,32,30,31,32,30,31,32,30,31,32,30,31,32,30,31,32,30,31,32,30,31,32,30,31,32,30,31,32,31,0,30,31,32,0,33,33,33,33,33,33,33,33,33,33,0,33,33,33,33,0,0,34,35,34,35,34,35,34,35,34,35,35,34,34,35,35,34,34,35,34,35,35,35,35,34,34,34,35,34,35,34,35,34,35,34,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,0,0,36,0,0,0,37,38,37,38,36,37,38,36,36,0,39,39,37,38,38,36,37,38,36,37,38,36,38,37,38,36,36,38,37,38,36,36,37,38,36,39,0,37,39,39,37,38,38,36,37,38,36,37,38,36,37,38,36,40,41,0,0,42,43,42,43,43,42,42,42,43,42,43,42,43,42,43,43,42,43,42,43,42,42,42,42,42,42,43,42,43,42,43,42,43,0,0,44,45,44,45,45,44,44,44,45,44,45,45,44,45,44,45,45,44,45,44,45,44,44,44,44,44,44,44,45,44,45,44,45,44,45,0,0,0,0,46,0,0,0,46,47,48,0,46,49,50,47,48,51,52,46,49,50,47,48,51,52,49,50,47,51,52,49,50,47,48,51,52,49,50,47,48,51,52,47,48,47,50,51,52,46,49,50,47,48,51,52,46,49,50,47,48,51,52,46,49,50,47,48,51,52,47,46,49,50,47,48,51,52,49,50,47,51,52,52,46,46,49,50,47,48,51,52,46,49,50,47,48,51,52,46,49,46,0,47,48,0,47,48,49,50,47,48,51,52,51,47,48,46,49,50,47,48,48,51,52,46,49,50,47,48,51,52,46,49,50,47,48,51,52,51,46,49,50,47,48,51,52,53,0,0,54,55,54,55,54,54,55,54,55,54,55,54,55,54,54,55,55,55,55,55,55,55,55,54,55,54,55,55,55,54,55,54,55,54,55,54,0,56,56,0,57,57,57,57],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["app",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[]],[[]],[[["argmatches",3]]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["arc",3,["backupserviceclient"]],["globalbackupopt",3],["backupserviceclient",3],["backupstorage",8],["arc",3,["backupstorage"]],["epochendingbackupopt",3]]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],null,null,[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",6]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["app",3]],[[],["epochhistory",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[]],[[]],[[]],[[]],[[]],[[["argmatches",3]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],null,[[["globalrestoreoptions",3],["arc",3,["backupstorage"]],["backupstorage",8],["epochendingrestoreopt",3]]],[[["filehandle",6],["globalrestoreoptions",3],["arc",3,["backupstorage"]],["backupstorage",8],["vec",3,["filehandle"]]]],[[]],[[["option",4,["ledgerinfo"]],["ledgerinfo",3]]],[[["option",4,["ledgerinfo"]],["ledgerinfo",3]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["ledgerinfowithsignatures",4]],["result",6]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["app",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[["argmatches",3]]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["arc",3,["backupserviceclient"]],["globalbackupopt",3],["statesnapshotbackupopt",3],["backupserviceclient",3],["backupstorage",8],["arc",3,["backupstorage"]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],null,null,[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[],["app",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[["argmatches",3]]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],null,[[["arc",3,["epochhistory"]],["globalrestoreoptions",3],["arc",3,["backupstorage"]],["backupstorage",8],["option",4,["arc"]],["statesnapshotrestoreopt",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["app",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[["argmatches",3]]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["arc",3,["backupserviceclient"]],["globalbackupopt",3],["backupserviceclient",3],["backupstorage",8],["transactionbackupopt",3],["arc",3,["backupstorage"]]]],null,[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],null,[[],["transactionchunk",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],null,null,[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",6]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["app",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[["argmatches",3]]],[[],[["version",6],["result",6,["version"]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],null,[[["transactionrestoreopt",3],["arc",3,["epochhistory"]],["globalrestoreoptions",3],["arc",3,["backupstorage"]],["backupstorage",8],["option",4,["arc"]]]],[[["arc",3,["epochhistory"]],["arc",3,["backupstorage"]],["option",4,["arc"]],["version",6],["vec",3,["filehandle"]],["filehandle",6],["globalrestoreoptions",3],["option",4,["version"]],["backupstorage",8]]],[[]],[[],["version",6]],null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["app",3]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[["argmatches",3]]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],null,[[["backupcoordinatoropt",3],["arc",3,["backupserviceclient"]],["globalbackupopt",3],["backupserviceclient",3],["backupstorage",8],["arc",3,["backupstorage"]]]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[["arc",3,["backupstorage"]],["trustedwaypointopt",3],["version",6],["restorehandler",3],["usize",15],["metadatacacheopt",3],["backupstorage",8]],["result",6]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[]],[[]],[[],["app",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[["argmatches",3]]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],null,null,[[["globalrestoreoptions",3],["arc",3,["backupstorage"]],["backupstorage",8],["restorecoordinatoropt",3]]],null,[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[["usize",15],["arc",3,["backupstorage"]],["backupstorage",8],["trustedwaypointopt",3],["metadatacacheopt",3]],["result",6]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["epochendingbackupmeta",3]],[[],["statesnapshotbackupmeta",3]],[[],["transactionbackupmeta",3]],[[]],[[]],[[]],[[["epochendingbackupmeta",3]],["ordering",4]],[[["statesnapshotbackupmeta",3]],["ordering",4]],[[["transactionbackupmeta",3]],["ordering",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["epochendingbackupmeta",3]],["bool",15]],[[["statesnapshotbackupmeta",3]],["bool",15]],[[["transactionbackupmeta",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],null,null,null,[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],null,null,null,null,null,null,[[["epochendingbackupmeta",3]],["bool",15]],[[["statesnapshotbackupmeta",3]],["bool",15]],[[["transactionbackupmeta",3]],["bool",15]],[[["epochendingbackupmeta",3]],[["option",4,["ordering"]],["ordering",4]]],[[["statesnapshotbackupmeta",3]],[["option",4,["ordering"]],["ordering",4]]],[[["transactionbackupmeta",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[]],null,[[]],[[]],[[],["app",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["argmatches",3]]],[[],["usize",15]],[[]],[[["usize",15],["arc",3,["backupstorage"]],["backupstorage",8],["metadatacacheopt",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[["metadata",4],["vec",3,["metadata"]]]],[[]],[[["str",15]],["result",6]],[[],["backupstoragestate",3]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],null,null,null,[[["version",6]],[["vec",3,["epochendingbackupmeta"]],["result",6,["vec"]]]],[[["version",6]],[["result",6,["option"]],["option",4,["statesnapshotbackupmeta"]]]],[[["version",6]],[["vec",3,["transactionbackupmeta"]],["result",6,["vec"]]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["str",15]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["app",3]],null,[[["shellsafename",3]],[["box",3,["future"]],["pin",3,["box"]]]],[[["shellsafename",3],["backuphandleref",6]],[["box",3,["future"]],["pin",3,["box"]]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["argmatches",3]]],[[["str",15]],["result",6]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[],[["pin",3,["box"]],["box",3,["future"]]]],null,[[["str",15]],["result",6]],[[["filehandleref",6]],[["box",3,["future"]],["pin",3,["box"]]]],[[["shellsafename",3],["textline",3]],[["pin",3,["box"]],["box",3,["future"]]]],[[],["result",4]],[[["string",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[],["app",3]],[[["shellsafename",3]],[["box",3,["future"]],["pin",3,["box"]]]],[[["shellsafename",3],["backuphandleref",6]],[["box",3,["future"]],["pin",3,["box"]]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[["argmatches",3]]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],[["pin",3,["box"]],["box",3,["future"]]]],[[["commandadapterconfig",3]]],[[["commandadapteropt",3]]],[[["filehandleref",6]],[["box",3,["future"]],["pin",3,["box"]]]],[[["shellsafename",3],["textline",3]],[["pin",3,["box"]],["box",3,["future"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[],["app",3]],[[["shellsafename",3]],[["box",3,["future"]],["pin",3,["box"]]]],[[["shellsafename",3],["backuphandleref",6]],[["box",3,["future"]],["pin",3,["box"]]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[["argmatches",3]]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],[["pin",3,["box"]],["box",3,["future"]]]],[[],["pathbuf",3]],[[["pathbuf",3]]],[[["localfsopt",3]]],[[["filehandleref",6]],[["box",3,["future"]],["pin",3,["box"]]]],[[["shellsafename",3],["textline",3]],[["pin",3,["box"]],["box",3,["future"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["globalbackupopt",3]],[[],["rocksdbopt",3]],[[],["globalrestoreopt",3]],[[],["globalrestoreoptions",3]],[[],["trustedwaypointopt",3]],[[],["concurrentdownloadsopt",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[],["trustedwaypointopt",3]],[[],["concurrentdownloadsopt",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[],["usize",15]],[[["hashvalue",3],["version",6],["bool",15]],[["jellyfishmerklerestore",3,["accountstateblob"]],["result",6,["jellyfishmerklerestore"]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],null,[[],["str",15]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["globalrestoreopt",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["hashmap",3,["version","waypoint"]],["result",6,["hashmap"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[],["app",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[["argmatches",3]]],[[["hashvalue",3],["version",6]]],[[]],[[["u64",15]]],[[["version",6]]],[[["version",6]]],[[["version",6]]],[[["usize",15],["version",6]]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["string",3]]],[[["backupserviceclientopt",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[["bytesmut",3]],[["pin",3,["box"]],["box",3,["future"]]]],[[],[["box",3,["future"]],["pin",3,["box"]]]],null,[[["str",15]],[["box",3,["future"]],["pin",3,["box"]]]],[[["filehandleref",6]],[["pin",3,["box"]],["box",3,["future"]]]],[[["filehandleref",6]],[["pin",3,["box"]],["box",3,["future"]]]],[[["filehandleref",6]],[["pin",3,["box"]],["box",3,["future"]]]]],"p":[[3,"EpochEndingBackupController"],[3,"EpochEndingBackupOpt"],[3,"EpochEndingChunk"],[3,"EpochEndingBackup"],[3,"EpochEndingRestoreController"],[3,"PreheatedEpochEndingRestore"],[3,"EpochHistoryRestoreController"],[3,"EpochEndingRestoreOpt"],[3,"EpochHistory"],[3,"StateSnapshotBackupController"],[3,"StateSnapshotBackupOpt"],[3,"StateSnapshotChunk"],[3,"StateSnapshotBackup"],[3,"StateSnapshotRestoreController"],[3,"StateSnapshotRestoreOpt"],[3,"TransactionBackupController"],[3,"TransactionBackupOpt"],[3,"TransactionChunk"],[3,"TransactionBackup"],[3,"TransactionRestoreController"],[3,"PreheatedTransactionRestore"],[3,"TransactionRestoreBatchController"],[3,"TransactionRestoreOpt"],[3,"BackupCoordinator"],[3,"BackupCoordinatorOpt"],[3,"ReplayVerifyCoordinator"],[3,"RestoreCoordinator"],[3,"RestoreCoordinatorOpt"],[3,"VerifyCoordinator"],[3,"EpochEndingBackupMeta"],[3,"StateSnapshotBackupMeta"],[3,"TransactionBackupMeta"],[3,"MetadataCacheOpt"],[3,"MetadataView"],[3,"BackupStorageState"],[4,"StorageOpt"],[3,"TextLine"],[3,"ShellSafeName"],[8,"BackupStorage"],[13,"LocalFs"],[13,"CommandAdapter"],[3,"CommandAdapter"],[3,"CommandAdapterOpt"],[3,"LocalFs"],[3,"LocalFsOpt"],[4,"RestoreRunMode"],[3,"GlobalRestoreOpt"],[3,"GlobalRestoreOptions"],[3,"GlobalBackupOpt"],[3,"RocksdbOpt"],[3,"TrustedWaypointOpt"],[3,"ConcurrentDownloadsOpt"],[13,"Restore"],[3,"BackupServiceClientOpt"],[3,"BackupServiceClient"],[8,"ReadRecordBytes"],[8,"BackupStorageExt"]]},\
"backup_service":{"doc":"","t":[5],"n":["start_backup_service"],"q":["backup_service"],"d":[""],"i":[0],"f":[[[["arc",3,["diemdb"]],["socketaddr",4],["diemdb",3]],["runtime",3]]],"p":[]},\
"boogie_backend":{"doc":"","t":[5,0,0,0,13,13,13,3,4,3,3,13,13,13,13,13,13,13,3,4,3,13,13,4,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,3,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,3,13,13,13,4,11,12,12,12,12,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,11,11,11,11,12,12,11,11,12,11,11,11,12,12,12,12,12,12,12,11,11,12,12,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,12,12],"n":["add_prelude","boogie_wrapper","bytecode_translator","options","Abort","Assertion","AtLocation","BoogieError","BoogieErrorKind","BoogieOutput","BoogieWrapper","Exp","Inconclusive","Inconsistency","Internal","List","Literal","Map","Model","ModelValue","ModelValueVector","Result","Temporary","TraceEntry","all_output","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_boogie","call_boogie_and_verify_output","clone","clone","clone_into","clone_into","cmp","env","eq","eq","equivalent","equivalent","errors","execution_trace","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_hash","hash","into","into","into","into","into","into","into","into","kind","loc","message","model","ne","options","partial_cmp","pretty","pretty_or_raw","pretty_struct","pretty_vec_or_struct_body","pretty_vector","targets","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","writer","0","0","0","0","0","0","0","0","1","1","1","1","2","2","BoogieTranslator","FunctionTranslator","StructTranslator","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","from","from","from","has_native_equality","into","into","into","new","translate","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","BoogieArray","BoogieArrayIntern","BoogieOptions","SmtArray","SmtArrayExt","SmtSeq","VectorTheory","adjust_timeout","aggressive_func_inline","bench_repeat","boogie_exe","boogie_flags","borrow","borrow","borrow_mut","borrow_mut","check_tool_versions","clone","clone","clone_into","clone_into","cvc4_exe","debug_trace","default","derive_options","deserialize","deserialize","eager_threshold","fmt","fmt","from","from","func_inline","generate_smt","get_boogie_command","get_boogie_log_file","hard_timeout_secs","into","into","is_extensional","keep_artifacts","lazy_threshold","native_equality","num_instances","proc_cores","random_seed","sequential_task","serialize","serialize","serialize_bound","stable_test_output","stratification_depth","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","type_requires","use_array_theory","use_cvc4","use_exp_boogie","vc_timeout","vector_theory","vector_using_sequences","vzip","vzip","z3_exe","z3_trace_file"],"q":["boogie_backend","","","","boogie_backend::boogie_wrapper","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","boogie_backend::boogie_wrapper::ModelValue","","","boogie_backend::boogie_wrapper::TraceEntry","","","","","","","","","","","boogie_backend::bytecode_translator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","boogie_backend::options","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Adds the prelude to the generated output.","Wrapper around the boogie program. Allows to call boogie …","This module translates the bytecode of a module to Boogie …","","","","","A boogie error.","Kind of boogie error.","Output of a boogie run.","Represents the boogie wrapper.","","","","","","","","Represents a boogie model.","Represents a model value.","Represents a spare representation of a model value vector.","","","A trace entry.","Full output as a string.","","","","","","","","","","","","","","","","","Calls boogie on the given file. On success, returns a …","Calls boogie and analyzes output.","","","","","","","","","","","All errors which could be parsed from the output.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pretty prints the given model value which has given type.","Pretty prints the given model value which has given type. …","Pretty prints a struct.","Pretty prints the body of a struct or vector, enclosed in …","Pretty prints a vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Boogie options.","","","","","Adjust a timeout value, given in seconds, for the runtime …","A string to be used to inline a function of medium size. …","How many times to call the prover backend for the …","Path to the boogie executable.","List of flags to pass on to boogie.","","","","","Checks whether the expected tool versions are installed in …","","","","","Path to the cvc4 executable.","Whether to generate debug trace code.","","Derive options based on other set options.","","","Eager threshold for quantifier instantiation.","","","","","A string to be used to inline a function of small size. …","Whether to produce an SMT file for each verification …","Returns command line to call boogie.","Returns name of file where to log boogie output.","A hard timeout for boogie execution; if the process does …","","","","Whether Boogie output and log should be saved.","Lazy threshold for quantifier instantiation.","Whether native instead of stratified equality should be …","Number of Boogie instances to be run concurrently.","The number of cores to use for parallel processing of …","A seed for the prover.","Whether to run Boogie instances sequentially.","","","A bound to apply to the length of serialization results.","Whether to use the new Boogie <code>{:debug ..}</code> attribute for …","The depth until which stratified functions are expanded.","","","","","","","","","A string determining the type of requires used for …","Whether to use native array theory.","Whether to use cvc4.","Use experimental boogie exe found via env var …","A (soft) timeout for the solver, per verification …","What vector theory to use.","Whether to use the sequence theory as the internal …","","","Path to the z3 executable.","Whether to generate a z3 trace file and where to put it."],"i":[0,0,0,0,1,2,1,0,0,0,0,1,2,2,2,3,3,3,0,0,0,1,1,0,4,5,4,6,1,2,7,3,8,5,4,6,1,2,7,3,8,5,5,2,3,2,3,3,5,2,3,2,3,4,6,7,3,8,5,4,6,1,2,7,3,8,3,3,5,4,6,1,2,7,3,8,6,6,6,6,3,5,3,3,3,3,3,3,5,2,3,5,4,6,1,2,7,3,8,5,4,6,1,2,7,3,8,5,4,6,1,2,7,3,8,5,4,6,1,2,7,3,8,5,9,10,11,12,13,14,15,16,13,14,15,16,13,14,0,0,0,17,18,19,17,18,19,17,18,19,0,17,18,19,17,17,17,18,19,17,18,19,17,18,19,17,18,19,20,20,0,20,20,20,0,21,21,21,21,21,20,21,20,21,21,20,21,20,21,21,21,21,21,20,21,21,20,21,20,21,21,21,21,21,21,20,21,20,21,21,21,21,21,21,21,20,21,21,21,21,20,21,20,21,20,21,20,21,21,21,21,21,21,21,21,20,21,21,21],"f":[[[["codewriter",3],["globalenv",3],["boogieoptions",3]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],[["result",6,["boogieoutput"]],["boogieoutput",3]]],[[["str",15]],["result",6]],[[],["boogieerrorkind",4]],[[],["modelvalue",4]],[[]],[[]],[[["modelvalue",4]],["ordering",4]],null,[[["boogieerrorkind",4]],["bool",15]],[[["modelvalue",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[["modelvalue",4]],["bool",15]],null,[[["modelvalue",4]],[["option",4,["ordering"]],["ordering",4]]],[[["boogiewrapper",3],["model",3],["type",4]],[["option",4,["rcdoc"]],["rcdoc",3]]],[[["boogiewrapper",3],["model",3],["type",4]],["rcdoc",3]],[[["boogiewrapper",3],["structid",3],["model",3],["moduleid",3]],[["option",4,["rcdoc"]],["rcdoc",3]]],[[["vec",3,["rcdoc"]],["rcdoc",3]],["rcdoc",3]],[[["boogiewrapper",3],["model",3],["type",4]],[["option",4,["rcdoc"]],["rcdoc",3]]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["type",4],["globalenv",3],["boogieoptions",3]],["bool",15]],[[]],[[]],[[]],[[["functiontargetsholder",3],["globalenv",3],["codewriter",3],["boogieoptions",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[["usize",15]],["usize",15]],null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",6]],[[],["vectortheory",4]],[[],["boogieoptions",3]],[[]],[[]],null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],null,null,[[["str",15]],[["result",6,["vec"]],["vec",3,["string"]]]],[[["str",15]],["string",3]],null,[[]],[[]],[[],["bool",15]],null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],null,null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,[[]],[[]],null,null],"p":[[4,"TraceEntry"],[4,"BoogieErrorKind"],[4,"ModelValue"],[3,"BoogieOutput"],[3,"BoogieWrapper"],[3,"BoogieError"],[3,"Model"],[3,"ModelValueVector"],[13,"Literal"],[13,"List"],[13,"Map"],[13,"AtLocation"],[13,"Temporary"],[13,"Result"],[13,"Abort"],[13,"Exp"],[3,"BoogieTranslator"],[3,"FunctionTranslator"],[3,"StructTranslator"],[4,"VectorTheory"],[3,"BoogieOptions"]]},\
"borrow_graph":{"doc":"","t":[0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["graph","references","BorrowGraph","add_strong_borrow","add_strong_field_borrow","add_weak_borrow","add_weak_field_borrow","all_refs","between_edges","borrow","borrow_mut","borrowed_by","clone","clone_into","contains_id","default","display","eq","fmt","from","in_edges","into","is_mutable","join","leq","ne","new","new_ref","out_edges","release","remap_refs","to_owned","try_from","try_into","type_id","RefID","borrow","borrow_mut","clone","clone_into","cmp","eq","fmt","from","into","ne","new","number","partial_cmp","to_owned","try_from","try_into","type_id"],"q":["borrow_graph","","borrow_graph::graph","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_graph::references","","","","","","","","","","","","","","","","",""],"d":["","","","Add a strong (exact) epsilon borrow from <code>parent_id</code> to …","Add a strong (exact) field borrow from <code>parent_id</code> to …","Add a weak (prefix) epsilon borrow from <code>parent_id</code> to …","Add a weak (prefix) field borrow from <code>parent_id</code> to <code>child_id</code>…","Returns all ref ids in the map","Return the edges between parent and child","","","Return the references borrowing the <code>id</code> reference The …","","","Checks if the current reference is in the graph","","Prints out a view of the borrow graph","","","","Return the incoming edges into id","","checks if the given reference is mutable or not","Joins other into self It adds only ‘unmatched’ edges …","checks if <code>self</code> covers <code>other</code>","","creates an empty borrow graph","Adds a new reference to the borrow graph Fails if the id …","Return the outgoing edges from id","Remove reference <code>id</code> from the graph Fixes any transitive …","Utility for remapping the reference ids according the …","","","","","Unique identifier for the reference","","","","","","","","","","","Creates a new reference id from the given number","Returns the number representing this reference id.","","","","",""],"i":[0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],"f":[null,null,null,[[["refid",3]]],[[["refid",3]]],[[["refid",3]]],[[["refid",3]]],[[],[["refid",3],["btreeset",3,["refid"]]]],[[["refid",3]],["vec",3]],[[]],[[]],[[["refid",3]]],[[],["borrowgraph",3]],[[]],[[["refid",3]],["bool",15]],[[],["borrowgraph",3]],[[]],[[["borrowgraph",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[["refid",3]],["vec",3]],[[]],[[["refid",3]],["bool",15]],[[]],[[],["bool",15]],[[["borrowgraph",3]],["bool",15]],[[]],[[["refid",3],["bool",15]]],[[["refid",3]],["vec",3]],[[["refid",3]]],[[["btreemap",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[]],[[],["refid",3]],[[]],[[["refid",3]],["ordering",4]],[[["refid",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[["refid",3]],["bool",15]],[[["usize",15]]],[[],["usize",15]],[[["refid",3]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"BorrowGraph"],[3,"RefID"]]},\
"bounded_executor":{"doc":"A bounded tokio <code>Handle</code>. Only a bounded number of tasks can …","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BoundedExecutor","borrow","borrow_mut","clone","clone_into","fmt","from","into","new","spawn","spawn_blocking","to_owned","try_from","try_into","try_spawn","try_spawn_blocking","type_id"],"q":["bounded_executor","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","Create a new <code>BoundedExecutor</code> from an existing tokio <code>Handle</code> …","Spawn a <code>Future</code> on the <code>BoundedExecutor</code>. This function is …","Like <code>BoundedExecutor::spawn</code> but spawns the given closure …","","","","Try to spawn a <code>Future</code> on the <code>BoundedExecutor</code>. If the …","Like <code>BoundedExecutor::try_spawn</code> but spawns the given …",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[]],[[]],[[],["boundedexecutor",3]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[["usize",15],["handle",3]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["joinhandle"]],["joinhandle",3]]],[[]],[[],["typeid",3]]],"p":[[3,"BoundedExecutor"]]},\
"bytecode":{"doc":"","t":[0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,6,3,3,3,3,3,8,4,3,13,13,13,8,13,13,13,3,3,13,4,3,13,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,8,3,11,11,11,11,11,11,11,11,10,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,18,3,8,16,6,8,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,12,12,11,11,11,11,11,11,8,13,4,3,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,6,3,3,12,12,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,13,3,8,3,4,13,13,3,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,5,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,3,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,12,11,11,12,12,12,11,11,11,11,11,11,11,12,12,11,11,13,13,3,3,3,13,13,13,13,13,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,12,11,11,11,11,12,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,13,4,13,3,13,12,12,12,11,11,11,11,12,11,11,11,11,12,11,11,11,12,12,11,11,12,11,11,11,12,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,11,11,11,11,11,11,11,11,12,11,12,11,11,3,11,11,11,5,11,11,11,11,11,11,11,11,5,5,5,13,4,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,3,13,13,13,13,13,4,13,3,13,13,13,4,3,13,13,13,4,3,13,13,4,3,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,3,13,13,13,13,13,4,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,13,4,6,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,3,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,12,12,12,5,11,12,11,11,11,11,5,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,5,11,12,12,12,12,11,11,11,12,12,12,5,11,12,11,11,11,12,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11],"n":["access_path","access_path_trie","annotations","borrow_analysis","clean_and_optimize","compositional_analysis","data_invariant_instrumentation","dataflow_analysis","dataflow_domains","debug_instrumentation","eliminate_imm_refs","escape_analysis","from","function_data_builder","function_target","function_target_pipeline","global_invariant_analysis","global_invariant_instrumentation","global_invariant_instrumentation_v2","graph","inconsistency_check","livevar_analysis","loop_analysis","make_footprint","memory_instrumentation","mono_analysis","mut_ref_instrumentation","mutation_tester","options","packed_types_analysis","pipeline_factory","print_targets_for_test","reaching_def_analysis","read_write_set_analysis","spec_instrumentation","stackless_bytecode","stackless_bytecode_generator","stackless_control_flow_graph","usage_analysis","verification_analysis","verification_analysis_v2","well_formed_instrumentation","AbsAddr","AbsAddrDisplay","AbsStructType","AbsStructTypeDisplay","AccessPath","AccessPathDisplay","AccessPathMap","Addr","AddrDisplay","Constant","Field","Footprint","FootprintDomain","Formal","Global","Global","GlobalKey","GlobalKeyDisplay","Local","Offset","OffsetDisplay","Return","Root","RootDisplay","VectorIndex","add_offset","add_offset","add_struct_offset","add_struct_offset","address","all_addresses_types_bound","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","constant","constant","constant","display","display","display","display","display","display","display","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","field","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","footprint","footprint","footprint_paths","formal","from","from","from","from","from","from","from","from","from","from","from","from","from","from_index","from_index","get_access_path","get_concrete_address","get_concrete_addresses","get_type","get_type","get_type","get_type","get_type_tag","global","global","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_closed","is_constant","is_constant","is_formal","is_local","is_return","is_statically_known","is_statically_known","is_statically_known","is_statically_known","is_statically_known","make_footprint","ne","ne","ne","ne","ne","ne","new","new","new","new_address_constant","new_global","new_global_constant","new_root","normalize","normalize","normalize","offsets","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","prepend","prepend","prepend_addrs","remove_access_path","ret","root","struct_type","substitute_footprint","substitute_footprint","substitute_footprint","substitute_footprint","substitute_footprint","substitute_footprint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","AccessPathTrie","AccessPathTrieDisplay","TrieNode","bind_local","bind_local_node","bind_node","bind_return","bind_root","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","children","clone","clone","clone_into","clone_into","data","default","default","deref","deref_mut","display","entry","eq","eq","equivalent","equivalent","filter_map_paths","fmt","fmt","fmt","from","from","from","get_access_path","get_child_data","get_child_data","get_local","get_local_node","get_offset","get_offset_mut","into","into","into","iter_offsets","iter_offsets","iter_paths","iter_paths_opt","iter_values","iter_values","join","join","join_access_path","join_child_data","join_data_opt","join_data_opt_","keys_statically_known","keys_statically_known","local_exists","ne","ne","new","new_opt","partial_cmp","partial_cmp","remove_access_path","remove_local","remove_node","remove_offset","substitute_footprint","substitute_footprint","substitute_footprint_concrete","substitute_footprint_skip_data","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_access_path","update_access_path_weak","vzip","vzip","vzip","Annotations","borrow","borrow_mut","clone","clone_into","default","fmt","from","get","get_or_default_mut","has","into","remove","set","to_owned","try_from","try_into","type_id","vzip","BorrowAnalysisProcessor","BorrowAnnotation","BorrowInfo","BorrowInfoAtCodeOffset","after","before","borrow","borrow","borrow","borrow","borrow_info_str","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","dump_result","dying_nodes","eq","equivalent","fmt","format_borrow_annotation","from","from","from","from","get_borrow_info_at","get_children","get_incoming","get_parents","get_summary","into","into","into","into","is_conditional","is_empty","is_in_use","is_moved","join","name","ne","new","partial_cmp","process","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","CleanAndOptimizeProcessor","borrow","borrow_mut","from","into","name","new","process","try_from","try_into","type_id","vzip","CompositionalAnalysis","SummaryCache","borrow","borrow_mut","from","get","global_env","into","new","summarize","to_summary","try_from","try_into","type_id","vzip","DataInvariantInstrumentationProcessor","borrow","borrow_mut","from","into","name","new","process","try_from","try_into","type_id","vzip","BACKWARD","BlockState","DataflowAnalysis","State","StateMap","TransferFunctions","analyze_function","borrow","borrow_mut","clone","clone_into","cmp","eq","equivalent","execute","execute_block","fmt","from","into","ne","partial_cmp","post","pre","state_per_instruction","to_owned","try_from","try_into","type_id","vzip","AbstractDomain","Changed","JoinResult","MapDomain","SetDomain","Unchanged","add_offset","add_struct_offset","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","combine","constant","default","default","deref","deref","deref_mut","deref_mut","difference","display","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","footprint","footprint_paths","formal","from","from","from","from","from","from","from","from_iter","from_iter","get_concrete_addresses","insert_join","into","into","into","into_iter","into_iter","is_constant","is_disjoint","is_statically_known","join","join","join","ne","ne","partial_cmp","partial_cmp","prepend","singleton","singleton","substitute_footprint","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_values","vzip","vzip","vzip","DebugInstrumenter","borrow","borrow_mut","from","into","name","new","process","try_from","try_into","type_id","vzip","EliminateImmRefs","EliminateImmRefsProcessor","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","name","new","process","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AbsValue","EscapeAnalysisProcessor","InternalRef","NonRef","OkRef","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","equivalent","fmt","from","from","into","into","is_internal_ref","join","name","new","partial_cmp","process","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","FunctionDataBuilder","FunctionDataBuilderOptions","add_local","add_return","borrow","borrow","borrow_mut","borrow_mut","clear_next_debug_comment","data","default","emit","emit_let","emit_let_havoc","emit_prop","emit_vec","emit_with","from","from","fun_env","function_env","get_current_loc","get_loc","get_local_type","get_target","into","into","new","new_attr","new_label","new_with_options","no_fallthrough_jump_removal","options","set_loc","set_loc_and_vc_info","set_loc_from_attr","set_next_debug_comment","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AnnotationFormatter","FunctionData","FunctionTarget","acquires_global_resources","annotations","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","code","data","debug_comments","fmt","fmt","fork","fork_with_instantiation","from","from","func_env","get_acquires_global_resources","get_annotations","get_bytecode","get_bytecode_loc","get_debug_comment","get_id","get_loc","get_local_count","get_local_index","get_local_name","get_local_type","get_modify_ids","get_modify_ids_and_exps","get_modify_targets","get_modify_targets_for_type","get_mut_ref_mapping","get_mut_ref_return_index","get_name","get_non_parameter_locals","get_parameter_count","get_parameters","get_return_count","get_return_type","get_return_types","get_spec","get_type_instantiation","get_type_parameters","get_user_local_count","get_vc_info","global_env","has_local_user_name","into","into","is_exposed","is_intrinsic","is_mutating","is_native","is_opaque","is_pragma_true","is_temporary","local_types","locations","loop_invariants","modify_targets","module_env","name_to_index","new","new","next_free_attr_index","next_free_label_index","pretty_print_bytecode","register_annotation_formatter","register_annotation_formatters_for_test","rename_vars","return_types","symbol_pool","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_args","type_id","type_id","variant","vc_infos","visibility","vzip","vzip","Baseline","FunctionTargetPipeline","FunctionTargetProcessor","FunctionTargetsHolder","FunctionVariant","Inconsistency","Instantiated","ProcessorResultDisplay","Regular","Verification","VerificationFlavor","add_processor","add_target","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","default","default","dump_result","env","eq","eq","equivalent","equivalent","finalize","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get_data","get_data_mut","get_funs","get_funs_and_variants","get_target","get_target_variants","get_targets","initialize","insert_target_data","into","into","into","into","into","is_single_run","is_verified","last_processor","name","ne","ne","partial_cmp","partial_cmp","process","process_and_maybe_remove","processor","remove_target_data","run","run","run_with_dump","run_with_hook","sort_targets_in_topological_order","targets","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","0","0","0","GlobalInvariantAnalysisProcessor","PerBytecodeRelevance","PerFunctionRelevance","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","dump_result","entrypoint_assumptions","exitpoint_assertions","from","from","from","get_info","insts","into","into","into","name","new","per_bytecode_assertions","process","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","GlobalInvariantInstrumentationProcessor","borrow","borrow_mut","from","into","name","new","process","try_from","try_into","type_id","vzip","GlobalInvariantInstrumentationProcessorV2","borrow","borrow_mut","from","into","name","new","process","try_from","try_into","type_id","vzip","Graph","NaturalLoop","borrow","borrow","borrow_mut","borrow_mut","compute_reducible","from","from","into","into","loop_body","loop_header","loop_latch","new","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","InconsistencyCheckInstrumenter","borrow","borrow_mut","from","into","name","new","process","try_from","try_into","type_id","vzip","LiveVarAnalysisProcessor","LiveVarAnnotation","LiveVarInfoAtCodeOffset","after","before","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","fmt","format_livevar_annotation","from","from","from","get_live_var_info_at","into","into","into","name","new","new_no_annotate","process","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","FatLoop","LoopAnalysisProcessor","LoopAnnotation","back_edges","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fat_loops","fmt","fmt","from","from","from","into","into","into","invariants","mut_targets","name","new","process","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","val_targets","vzip","vzip","vzip","MemoryInstrumentationProcessor","borrow","borrow_mut","from","into","name","new","process","try_from","try_into","type_id","vzip","MonoAnalysisProcessor","MonoInfo","axioms","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","dump_result","finalize","fmt","from","from","funs","get_info","initialize","into","into","name","native_inst","new","process","spec_funs","spec_vars","structs","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","type_params","vec_inst","vzip","vzip","Error","Fun","FunctionEnv","Loc","MutRefInstrumenter","Primitive","Reference","ResourceDomain","Struct","Tuple","Type","TypeDomain","TypeParameter","Var","Vector","are_invariants_disabled_at_call","are_invariants_disabled_in_body","at_end","at_start","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","contains","default","display","display","display_line_only","enclosing","eq","eq","equivalent","equivalent","file_id","fmt","fmt","fmt","from","from","from","from","from_type_tag","get_acquires_global_resources","get_bytecode","get_bytecode_loc","get_called_functions","get_calling_functions","get_def_idx","get_doc","get_friend_env","get_friend_name","get_full_name_str","get_func_env_from_pragma","get_hash","get_id","get_ident_pragma","get_identifier","get_loc","get_local_count","get_local_name","get_local_type","get_modify_targets","get_name","get_name_string","get_named_type_parameters","get_num_pragma","get_parameter_count","get_parameter_types","get_parameters","get_qualified_id","get_return_count","get_return_type","get_return_types","get_simple_name_string","get_spec","get_spec_loc","get_struct","get_transitive_closure_of_called_functions","get_transitive_friend","get_type_display_ctxt","get_type_parameter_count","get_type_parameters","get_vars","has_friend","has_unknown_callers","hash","instantiate","instantiate_slice","instantiate_vec","into","into","into","into","into_normalized_type","into_struct_tag","into_struct_type","into_type_tag","is_address","is_explicitly_not_verified","is_exposed","is_friend","is_immutable_reference","is_incomplete","is_intrinsic","is_mutable_reference","is_mutating","is_native","is_native_or_intrinsic","is_num_pragma_set","is_number","is_opaque","is_open","is_parameter","is_pragma_false","is_pragma_true","is_reference","is_script","is_signer","is_signer_or_address","is_spec","is_struct","is_struct_or_vector_of_struct","is_temporary","is_type_parameter","is_vector","matches_name","module_env","module_usage","name","ne","ne","new","new","new_prim","partial_cmp","partial_cmp","process","replace_struct_instantiation","require_struct","should_verify","skip_reference","span","symbol_pool","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_param_map_to_inst","visibility","visibility_str","visit","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","1","1","1","1","2","2","MutationManager","MutationTester","add_sub","borrow","borrow","borrow_mut","borrow_mut","div_mul","from","from","initialize","into","into","mul_div","mutated","name","new","process","sub_add","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AllFunctions","AutoTraceLevel","Off","ProverOptions","VerifiedFunction","assume_wellformed_on_access","auto_trace_level","boogie_poly","borrow","borrow","borrow_mut","borrow_mut","check_inconsistency","clone","clone","clone_into","clone_into","deep_pack_unpack","default","deserialize","deserialize","dump_bytecode","dump_cfg","fmt","fmt","for_interpretation","from","from","functions","generate_only","get","into","into","invariants","minimize_execution_trace","mutation","mutation_add_sub","mutation_div_mul","mutation_mul_div","mutation_sub_add","native_stubs","num_instances","omit_model_debug","report_severity","resource_wellformed_axiom","sequential_task","serialize","serialize","set","stable_test_output","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unconditional_abort_as_inconsistency","verified_functions","verify_scope","vzip","vzip","PackedTypesProcessor","borrow","borrow_mut","from","get_packed_types","into","name","new","process","try_from","try_into","type_id","vzip","default_pipeline","default_pipeline_with_options","experimental_pipeline","Alias","Def","ReachingDefAnnotation","ReachingDefProcessor","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","copy_propagation","default","eq","equivalent","fmt","format_reaching_def_annotation","from","from","from","into","into","into","name","ne","new","partial_cmp","process","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","ReadWriteSetProcessor","ReadWriteSetState","ReadWriteSetStateDisplay","SpecializedReadWriteSetState","access_offset","accesses","apply_summary","assign_local","assign_offset","assign_root","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","display","eq","eq","equivalent","equivalent","fmt","fmt","fmt","format_read_write_set_annotation","from","from","from","from","get_read_write_set","into","into","into","into","is_statically_known","join","locals","name","ne","ne","new","normalize","partial_cmp","partial_cmp","process","remove_global","sub_actuals","substitute_footprint_concrete","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","write_ref","SpecInstrumentationProcessor","borrow","borrow_mut","dump_result","from","initialize","into","name","new","process","try_from","try_into","type_id","vzip","0","1","Abort","AbortAction","Add","Address","And","Assert","Assign","AssignKind","Assume","AttrId","BitAnd","BitOr","Bool","BorrowEdge","BorrowEdgeDisplay","BorrowField","BorrowGlobal","BorrowLoc","BorrowNode","BorrowNodeDisplay","Branch","ByteArray","Bytecode","BytecodeDisplay","Call","CastU128","CastU64","CastU8","Constant","Copy","Destroy","Direct","Div","EmitEvent","Eq","EventStoreDiverge","Exists","Field","FreezeRef","Function","Ge","GetField","GetGlobal","GlobalRoot","Gt","Havoc","HavocKind","Hyper","Index","IsParent","Jump","Label","Label","Le","Load","LocalRoot","Lt","Mod","Modifies","Move","MoveFrom","MoveTo","Mul","MutationAll","MutationValue","Neq","Nop","Not","OpaqueCallBegin","OpaqueCallEnd","Operation","OperationDisplay","Or","Pack","PackRef","PackRefDeep","Prop","PropKind","ReadRef","Reference","Ret","ReturnPlaceholder","SaveMem","SaveSpecVar","Shl","Shr","SpecBlockId","Stop","Store","Sub","TraceAbort","TraceExp","TraceLocal","TraceReturn","U128","U64","U8","Unpack","UnpackRef","UnpackRefDeep","Value","WriteBack","WriteRef","Xor","as_usize","as_usize","as_usize","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branch_dests","can_abort","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","display","display","display","display","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","flatten","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_attr_id","get_exits","get_hash","get_hash","get_hash","get_ref","get_successors","hash","hash","hash","instantiate","instantiate","instantiate","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_branch","is_conditional_branch","is_exit","is_return","is_unconditional_branch","label_offsets","modifies","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","remap_all_vars","remap_src_vars","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","1","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","1","1","1","1","1","1","1","1","1","2","2","2","2","2","2","2","3","3","3","4","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","1","1","1","1","1","1","1","1","1","1","1","1","2","2","2","2","2","2","2","2","2","2","2","2","3","3","StacklessBytecodeGenerator","borrow","borrow_mut","from","generate_bytecode","generate_function","into","new","try_from","try_into","type_id","vzip","Basic","BlockContent","BlockId","Dummy","StacklessControlFlowGraph","blocks","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","content","display","entry_block","exit_block","fmt","from","from","generate_cfg_in_dot_format","instr_indexes","into","into","is_dummmy","new_backward","new_forward","num_blocks","successors","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","lower","upper","MemoryUsage","UsageProcessor","UsageState","accessed","all","analyze","asserted","assumed","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","direct","dump_result","from","from","from","get_all_inst","get_all_uninst","get_direct_inst","get_direct_uninst","get_memory_usage","get_transitive_inst","get_transitive_uninst","into","into","into","join","join","modified","name","new","process","to_owned","to_owned","transitive","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","InvariantAnalysisData","InvariantRelevance","VerificationAnalysisProcessor","VerificationInfo","accessed","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","direct_accessed","direct_modified","dump_result","from","from","from","from","fun_set_with_inv_check_on_exit","fun_set_with_no_inv_check","fun_to_inv_map","get_info","initialize","inlined","into","into","into","into","is_invariant_checking_delegated","is_invariant_checking_disabled","is_invariant_suspendable","modified","name","new","process","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verified","vzip","vzip","vzip","vzip","InvariantAnalysisData","VerificationAnalysisProcessorV2","VerificationInfoV2","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","debug_print_inv_set","default","dep_fun_ids","disabled_inv_fun_set","disabled_invs_for_fun","friend_fun_ids","from","from","from","funs_that_delegate_to_caller","funs_that_modify_inv","funs_that_modify_some_inv","get_info","initialize","inlined","into","into","into","invs_modified_by_fun","name","new","non_inv_fun_set","process","target_fun_ids","target_invariants","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verified","vzip","vzip","vzip","WellFormedInstrumentationProcessor","borrow","borrow_mut","from","into","name","new","process","try_from","try_into","type_id","vzip"],"q":["bytecode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bytecode::access_pathbytecode::access_path::Addr","","bytecode::access_path::Offset","","bytecode::access_path::Root","","","","bytecode::access_path_trie","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bytecode::annotations","","","","","","","","","","","","","","","","","","","bytecode::borrow_analysis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bytecode::clean_and_optimize","","","","","","","","","","","","bytecode::compositional_analysis","","","","","","","","","","","","","","","bytecode::data_invariant_instrumentation","","","","","","","","","","","","bytecode::dataflow_analysis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bytecode::dataflow_domains","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bytecode::debug_instrumentation","","","","","","","","","","","","bytecode::eliminate_imm_refs","","","","","","","","","","","","","","","","","","","","","bytecode::escape_analysis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bytecode::function_data_builder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bytecode::function_target","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bytecode::function_target_pipeline","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bytecode::function_target_pipeline::FunctionVariant","bytecode::function_target_pipeline::VerificationFlavor","","bytecode::global_invariant_analysis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bytecode::global_invariant_instrumentation","","","","","","","","","","","","bytecode::global_invariant_instrumentation_v2","","","","","","","","","","","","bytecode::graph","","","","","","","","","","","","","","","","","","","","","","","bytecode::inconsistency_check","","","","","","","","","","","","bytecode::livevar_analysis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bytecode::loop_analysis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bytecode::memory_instrumentation","","","","","","","","","","","","bytecode::mono_analysis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bytecode::mut_ref_instrumentationbytecode::mut_ref_instrumentation::Type","","","","","","","","","","","","","","","","bytecode::mutation_tester","","","","","","","","","","","","","","","","","","","","","","","","","","","bytecode::options","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bytecode::packed_types_analysis","","","","","","","","","","","","","bytecode::pipeline_factory","","","bytecode::reaching_def_analysis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bytecode::reaching_def_analysis::Def","bytecode::read_write_set_analysis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bytecode::spec_instrumentation","","","","","","","","","","","","","","bytecode::stackless_bytecodebytecode::stackless_bytecode::BorrowEdge","","","bytecode::stackless_bytecode::BorrowNode","","","","bytecode::stackless_bytecode::Bytecode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bytecode::stackless_bytecode::Constant","","","","","","bytecode::stackless_bytecode::Operation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bytecode::stackless_bytecode_generator","","","","","","","","","","","","bytecode::stackless_control_flow_graph","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bytecode::stackless_control_flow_graph::BlockContent","","bytecode::usage_analysis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bytecode::verification_analysis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bytecode::verification_analysis_v2","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bytecode::well_formed_instrumentation","","","","","","","","","","",""],"d":["This file contains an abstraction of concrete <em>access paths</em>…","The obvious approach to abstracting a set of concrete …","","Data flow analysis computing borrow information for …","","","Transformation which injects data invariants into the …","Adapted from AbstractInterpreter for Bytecode, this module …","This module defines traits and representations of domains …","Transformation which injects trace instructions which are …","","This escape analysis flags procedures that return a …","","Provides a builder for <code>FunctionData</code>, including building …","","","","","","","Instrument <code>assert false;</code> in strategic locations in the …","","","","","Analysis which computes information needed in backends for …","","Transformation which mutates code for mutation testing in …","","","","Print function targets for testing and debugging.","","The read/write set analysis is a compositional analysis …","","","","Adapted from control_flow_graph for Bytecode, this module …","","Analysis which computes an annotation for each function on …","Analysis which computes an annotation for each function …","Transformation which injects well-formed assumptions at …","Abstraction of an address: non-empty set of constant or …","","Fully qualified type identifier <code>base</code> bound to type actuals …","","A unique identifier for a memory cell: root followed by …","","Trait for a domain that can be viewed as a partial map …","Building block for abstraction of addresses","","Account address constant","Index into contents of a struct by field offset","Account address read from given access path. This …","Trait for an abstract domain that can represent footprint …","A formal parameter","A key in global storage","A type index into global storage. Only follows a field or …","Abstraction of a key of type <code>addr</code>::<code>ty</code> in global storage","","A local variable","Offset of an access path: either a field, vector index, or …","","A return variable","Root of an access path: a global, local, or return variable","","Unknown index into a vector","Return a new abstract address by adding the offset <code>offset</code> …","extend this access path by adding offset <code>o</code> to the end","Return a new abstract address by adding the offset …","Convert this address-typed abstract value A into an access …","Return the abstract address associated with <code>self</code>","Return <code>true</code> if <code>self</code> has no unbound address or type …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a constant address from concrete address <code>a</code>","Create a constant address from concrete address <code>a</code>","Create a constant <code>GlobalKey</code> using constant <code>addr</code> and type <code>ty</code>","Return a wrapper of <code>self</code> that implements <code>Display</code> using <code>env</code>","Return a wrapper of <code>self</code> that implements <code>Display</code> using <code>env</code>","Return a wrapper of <code>self</code> that implements <code>Display</code> using <code>env</code>","Return a wrapper of <code>self</code> that implements <code>Display</code> using <code>env</code>","Return a wrapper of <code>self</code> that implements <code>Display</code> using <code>env</code>","Return a wrapper of <code>self</code> that implements <code>Display</code> using <code>env</code>","Return a wrapper of <code>self</code> that implements <code>Display</code> using <code>env</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a footprint address from access path <code>ap</code>","Create a footprint address from access path <code>ap</code>","return an iterator over the footprint paths in <code>self</code>","Create a footprint address read from formal <code>temp_index</code>","","","","","","","","","","","","","","Create a <code>Root</code> from local index <code>index</code>","","","Convert <code>self</code> into a concrete <code>AccountAddress</code> if it is a …","Return an iterator over the concrete addresses in <code>self</code>","Return the concrete type of <code>self</code>","Return the type of <code>self</code> in <code>fun</code>","Get the type of offset <code>base</code>/<code>self</code> in function <code>fun</code>","Return the type of this access path","If this <code>self</code> is closed, convert it to a <code>StructTag</code>. Return …","Create a <code>Root</code> from global storage key <code>key</code>","","","","","","","","","","","","","","Unpack <code>self</code> into its root and offsets","","Return <code>true</code> if <code>self</code> has no type variables or if all of <code>self</code>…","Return <code>true</code> if <code>self</code> is a constant","Return <code>true</code> if <code>self</code> is a constant","Return true if this variable is a formal parameter","Return <code>true</code> if this variable is a lol","Return <code>true</code> if this variable is a return value","Return <code>true</code> if <code>self</code> consists only of statically known …","Return true if the address and type parameters of this …","Return true if <code>self</code> can be determined statically","Return true if this offset is the same in all concrete …","Return true if <code>self</code> can be converted to a compact set of …","Create a footprint value for access path <code>ap</code>","","","","","","","","","","","","","","Returns a normalized representation of this type if it …","","","","","","","","","","Produce a new version of <code>self</code> with <code>prefix</code> prepended to …","prepend <code>prefix</code> to self by swapping <code>self</code>’s root for …","Construct a new abstract address by prepending the …","","Create a <code>Root</code> from return variable <code>index</code>","","Return the abstract struct type associated with <code>self</code>","Substitute all occurences of Footprint(ap) in <code>self</code> by …","Substitue the open types in self.types with caller …","Substitute all occurences of Footprint(ap) in <code>self.addr</code> by …","Replace all footprint paths in <code>self</code> using <code>actuals</code> and …","Bind free type variables in <code>self</code> to <code>type_actuals</code>","Replace all footprint paths in <code>self</code> using <code>actuals</code> and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set of (root node, child) associations","","A node in the access Trie: <code>data</code> associated with the parent …","Bind <code>data</code> to <code>local_index</code> in the trie, overwriting the old …","Bind <code>node</code> to <code>local_index</code> in the trie, overwriting the old …","Bind <code>node</code> to <code>lhs</code> in the trie, overwriting the old value of …","Bind <code>data</code> to the return variable <code>return_index</code>","Bind <code>root</code> to <code>data</code>","","","","","","","","","","","","","","","","","Return a wrapper that of <code>self</code> that implements <code>Display</code> …","","","","","","Apply <code>f</code> to each (access path, data) pair encoded in <code>self</code> …","","","","","","","","","","Retrieve the data associated with <code>local_index</code> in the trie. …","Retrieve the node associated with <code>local_index</code> in the trie. …","Return the node mapped to <code>o</code> from self (if any)","Return a mutable reference to the node mapped to <code>o</code> from …","","","","Apply <code>f</code> to each offset in <code>self</code>","Apply <code>f</code> to each offset in <code>self</code>","Apply <code>f</code> to each (access path, data) pair encoded in <code>self</code>","Apply <code>f</code> to each (access path, Option(data)) pair encoded …","Apply <code>f</code> to each node in <code>self</code>","Apply <code>f</code> to each node in <code>self</code>","","","Join the value bound to <code>ap</code> with <code>node</code>","","Like join, but gracefully handles <code>None</code> data fields by …","Like join, but gracefully handles <code>Non</code> data fields by …","Return true if <code>self</code>’s keys can be converted into a …","Return <code>true</code> if the keys of <code>self</code> have no dynamic components …","Return <code>true</code> if there is a value bound to local variable …","","","","","","","","Remove the value bound to the local variable <code>local_index</code>","Removes node located at the given access path Returns the …","Removes the node mapped to <code>o</code> from self (if it exists)","Bind caller data in <code>actuals</code>, <code>type_actuals</code>, and <code>sub_map</code> to …","Bind caller data in <code>actuals</code>, <code>type_actuals</code>, and <code>sub_map</code> to …","Substitute concrete values <code>actuals</code> and <code>type_actuals</code> into …","Same as <code>substitute_footprint</code>, but does not change the <code>data</code> …","","","","","","","","","","","","","Update <code>ap</code> in <code>global</code>. Performs a strong update if the base …","Like <code>update_access_path</code>, but always performs a weak update","","","","A container for an extensible, dynamically typed set of …","","","","","","","","Gets annotation of type T.","Gets annotation of type T or creates one from default.","Tests whether annotation of type T is present.","","Removes annotation of type T.","Sets annotation of type T.","","","","","","Borrow analysis processor.","Borrow annotation computed by the borrow analysis …","","","","","","","","","","","","","","","","","","","","","","","","Returns nodes which are dying from this to the next state. …","","","","Format a borrow annotation.","","","","","","Gets the children of this node.","Gets incoming edges (together with sources) of this node.","Gets the parents of this node.","","","","","","Returns true if this node is conditional, that is, it …","","Checks whether a node is in use. A node is used if it is …","Checks whether this is a moved node.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Trait that lifts an intraprocedural analysis into a …","Provides access to procedure summaries that have already …","","","","Return a summary for a variant of <code>fun_id</code>. Returns None if …","","","","Computes a postcondition for the function <code>data</code> and then …","Specifies mapping from elements of dataflow analysis …","","","","","","","","","","","","","","","","","","","","","","Take a pre-state + instruction and mutate it to produce a …","","","","","","","","","","","","","","","","","","Takes the StateMap resulting from <code>analyze_function</code> and …","","","","","","A trait to be implemented by domains which support a join.","The left operand does not subsume the right one and was …","Represents the abstract outcome of a join.","","Implements a set domain.","The left operand subsumes the right operand: L union R == …","Return a new abstract address by adding the offset <code>offset</code> …","Return a new abstract address by adding the offset …","","","","","","","","","","","","","","","","","","","","Build the least upper bound of two join results, where …","Create a constant address from concrete address <code>a</code>","","","","","","","Implements set difference, which is not following standard …","Return a wrapper of <code>self</code> that implements <code>Display</code> using <code>env</code>","","","","","","","","","","Create a footprint address from access path <code>ap</code>","return an iterator over the footprint paths in <code>self</code>","Create a footprint address read from formal <code>temp_index</code>","","","","","","","","","","Return an iterator over the concrete addresses in <code>self</code>","Join <code>v</code> with self[k] if <code>k</code> is bound, insert <code>v</code> otherwise","","","","","","Return <code>true</code> if <code>self</code> is a constant","Implements is_disjoint which is not available in OrdSet","Return <code>true</code> if <code>self</code> consists only of statically known …","","","","","","","","Produce a new version of <code>self</code> with <code>prefix</code> prepended to …","","Construct a singleton map.","Substitute all occurences of Footprint(ap) in <code>self</code> by …","","","","","","","","","","","","","Updates the values in the range of the map using the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A builder for <code>FunctionData</code>.","","","Add a return parameter.","","","","","This will clear the state that the next <code>self.emit_with(..)</code> …","","","Emits a bytecode.","Emits a let: this creates a new temporary and emits an …","Emits a new temporary with a havoced value of given type.","Emits a Bytecode::Prop based on given kind and expression.","Emits a sequence of bytecodes.","Emits a bytecode via a function which takes a freshly …","","","","","","Gets the location from the bytecode attribute.","","Gets a function target viewpoint on this builder. This …","","","Creates a new builder with options set to default values","Creates a new bytecode attribute id with default location.","Creates a new branching label for bytecode.","Creates a new builder with customized options","","","","Sets the default location as well as information about the …","Sets the default location from a code attribute id.","Sets the debug comment which should be associated with the …","","","","","","","","","A function which is called to display the value of an …","Holds the owned data belonging to a FunctionTarget, …","A FunctionTarget is a drop-in replacement for a …","The set of global resources acquired by  this function.","Annotations associated with this function. This is shared …","","","","","","","","","The bytecode.","","A map from byte code attribute to comments associated with …","","","Fork this function data, without annotations, and mark it …","Fork this function data with (potentially partial) …","","","","Gets acquired resources","Gets annotations.","Gets the bytecode.","Returns the location of the bytecode with the given …","Returns the debug comment, if any, associated with the …","Gets the id of this function.","Returns the location of this function.","Gets the number of locals of this function, including …","Get the index corresponding to a local name. The name must …","Get the name to be used for a local. If the local has a …","Gets the type of the local at index. This must use an …","Get all modifies targets, as instantiated struct ids.","","Gets all modify targets","Gets modify targets for a type","Returns a map from &amp;mut parameters to the return indices …","Gets index of return parameter for a reference input …","Returns the name of this function.","Return an iterator over the non-parameter local variables …","Return the number of parameters of this function","Return an iterator over this function’s parameters","Returns the number of return values of this function.","Returns return type at given index.","Returns return types of this function.","Returns specification associated with this function.","Get the instantiation of this function as a vector of …","Returns the type parameters associated with this function.","Gets the number of user declared locals of this function, …","Returns the verification condition message, if any, …","Shortcut for accessing the global env of this function.","Return true if this local has a user name.","","","Returns true if this function has public, friend, or …","Returns true if this function is marked as intrinsic","Returns true if this function mutates any references (i.e. …","Returns true if this function is native.","Returns true if this function is opaque.","Returns the value of a boolean pragma for this function. …","Returns true if the index is for a temporary, not user …","The locals, including parameters.","A map from byte code attribute to source code location.","The set of asserts that represent loop invariants","A cache of targets modified by this function.","Shortcut for accessing the module env of this function.","A mapping from symbolic names to temporaries.","","Creates new function target data.","Computes the next available index for AttrId.","Computes the next available index for Label.","Pretty print a bytecode instruction with offset, comments, …","Register a formatter. Each function target processor which …","Tests use this function to register all relevant …","Apply a variable renaming to this data, adjusting internal …","The return types.","Shortcut for accessing the symbol pool.","","","","","","","","The type instantiation.","","","The function variant.","A map from byte code attribute to a message to be printed …","Returns the visibility of this function.","","","The baseline variant which was created from the original …","A processing pipeline for function targets.","A trait describing a function target processor.","A data structure which holds data for multiple function …","Describes a function target variant.","","","","","A variant which is instrumented for verification. Only …","Describes a function verification flavor.","Adds a processor to this pipeline. Processor will be …","Adds a new function target. The target will be initialized …","","","","","","","","","","","","","","","","","","","A function which creates a dump of the processors results, …","","","","","","A function which is called once after the last <code>process</code> …","","","","","","","","","","","","Gets function data for a variant.","Gets mutable function data for a variant.","Get an iterator for all functions this holder.","Gets an iterator for all functions and variants in this …","Gets a function target for read-only consumption, for the …","Gets all available variants for function.","Gets targets for all available variants.","A function which is called once before any <code>process</code> call is …","Sets function data for a function’s variant.","","","","","","A function which can be implemented to indicate that …","","Gets the last processor in the pipeline, for testing.","Returns a name for this processor. This should be suitable …","","","","","Processes a function variant. Takes as parameter a target …","Same as <code>process</code> but can return None to indicate that the …","","Removes function data for a variant.","To be implemented if <code>is_single_run()</code> is true.","Run the pipeline on all functions in the targets holder, …","Runs the pipeline on all functions in the targets holder, …","Runs the pipeline on all functions in the targets holder. …","Sort functions in topological order. This is important for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A named struct for holding the information on how an …","A named struct for holding the information on how …","","","","","","","","","","","","","Invariants that needs to be assumed at function entrypoint","Invariants that needs to be asserted at function exitpoint","","","","Get verification information for this function.","for each <code>inst_fun</code> (instantiation of function type …","","","","","","For each bytecode at given code offset, the associated …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This function computes the loop headers and natural loops …","","","","","","","","This function creates a graph from a set of nodes (with a …","","","","","","","","","","","","","","","","","","","","","","","The annotation for live variable analysis. For each code …","","","","","","","","","","","","","","","","Format a live variable annotation.","","","","","","","","","","","","","","","","","","","","","","","","","","A fat-loop captures the information of one or more natural …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The environment extension computed by this analysis.","","","","","","","","","","","","","","","Get the information computed by this analysis.","","","","","","","","","","","","","","","","","","","","","","","","","Locations","","","","","","","Represents a type.","","","","","Returns true if invariants are declared disabled in body …","Returns true if invariants are declared disabled in body …","","","","","","","","","","","","","","","","","","","Checks whether this type contains a type for which the …","","","","","Creates a location which encloses all the locations in the …","","","","","","","","","","","","","Create a <code>Type</code> from <code>t</code>","Returns the acquired global resource types.","Returns the bytecode associated with this function.","Returns the location of the bytecode at the given offset.","Get the functions that this one calls","Get the functions that call this one","Gets the definition index of this function.","Get documentation associated with this function.","Returns the FunctionEnv of the friend function if the …","Returns the name of the friend(the only allowed caller) of …","Gets full name as string.","Returns the FunctionEnv of the function identified by the …","","Gets the id of this function.","Returns the value of a pragma representing an identifier …","Returns the VM identifier for this function","Returns the location of this function.","Gets the number of proper locals of this function. Those …","Get the name to be used for a local. If the local is an …","Gets the type of the local at index. This must use an …","Computes the modified targets of the spec clause, as a map …","Returns the name of this function.","Returns the function name with the module name excluding …","Returns the type parameters with the real names.","Returns the value of a numeric pragma for this function. …","","Returns the parameter types associated with this function","Returns the regular parameters associated with this …","Gets the qualified id of this function.","Returns the number of return values of this function.","Returns return type at given index.","Returns return types of this function.","Returns the function name excluding the address and the …","Returns associated specification.","Returns the location of the specification block of this …","If this is a struct type, return the associated struct env …","Get the transitive closure of the called functions","Returns the FunctionEnv of the transitive friend of the …","Produce a TypeDisplayContext to print types within the …","Return the number of type parameters for self","Returns the type parameters associated with this function.","Get the unbound type variables in the type.","Returns true if a friend is specified for this function.","Return whether this function is exposed outside of the …","","Instantiates type parameters in this type.","Instantiate type parameters in the slice of types.","Instantiate type parameters in the vector of types.","","","","","Attempt to convert this type into a normalized::Type","Attempt to convert this type into a …","Attempt to convert this type into a normalized::Type","Attempt to convert this type into a …","Return true if this is an account address","Determine whether this function is explicitly deactivated …","Return whether this function is exposed outside of the …","Return true if this function is a friend function","Determines whether this is an immutable reference.","Returns true if this type is incomplete, i.e. contains any …","Returns true if this function has the pragma intrinsic set …","Determines whether this is a mutable reference.","Returns true if this function mutates any references (i.e. …","Returns true if this function is native.","","Returns whether the value of a numeric pragma is …","Returns true if this is any number type.","Returns true if this function is opaque.","Return true if this type contains generic types (i.e., …","Return <code>true</code> if idx is a formal parameter index","Returns true if the value of a boolean pragma for this …","Returns the value of a boolean pragma for this function. …","Determines whether this is a reference.","Returns true if the function is a script function","Return true if this is an account address","Returns true if this is an address or signer type.","Returns true if this type is a specification language only …","Determines whether this type is a struct.","Determines whether this is a struct, or a vector of …","Returns true if the index is for a temporary, not user …","Determines whether this is a type parameter.","Determines whether this type is a vector","Returns true if either the name or simple name of this …","Reference to enclosing module.","Compute used modules in this type, adding them to the …","","","","","","","","","","If this is a struct type, replace the type instantiation.","Require this to be a struct, if so extracts its content.","Determine whether the function is target of verification.","Skip reference type.","","Shortcut for accessing the symbol pool.","","","","","","","","","","","","","","","","Convert a partial assignment for type parameters into an …","Return the visibility of this function","Return the visibility string for this function. Useful for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether to assume wellformedness when elements are read …","Auto trace level.","Whether to use the polymorphic boogie backend.","","","","","Whether to check the inconsistency","","","","","Whether pack/unpack should recurse over the structure.","","","","Whether to dump the transformed stackless bytecode to a …","Whether to dump the control-flow graphs (in dot format) to …","","","Whether to run the transformation passes for concrete …","","","","Whether to only generate backend code.","","","","","Whether to minimize execution traces in errors.","Indicates that we should do any mutations","Indicates that we should use the add-subtract mutation on …","Indicates that we should use the divide-multiply mutation …","Indicates that we should use the multiply-divide mutation …","Indicates that we should use the subtract-add mutation on …","Whether to generate stubs for native functions.","Number of Boogie instances to be run concurrently.","Whether to omit debug information in generated model.","Minimal severity level for diagnostics to be reported.","[deprecated] Whether to emit global axiom that resources …","Whether to run Boogie instances sequentially.","","","","Whether output for e.g. diagnosis shall be stable/redacted …","","","","","","","","","Whether to consider a function that abort unconditionally …","","Scope of what functions to verify.","","","","","","","Get all closed types that may be packed by (1) genesis and …","","","","","","","","","","","","","The reaching definitions we are capturing. Currently we …","The annotation for reaching definitions. For each code …","","","","","","","","","","","Perform copy propagation based on reaching definitions …","","","","","Format a reaching definition annotation.","","","","","","","","","","","","","","","","","","","","","","","","","","","A record of the glocals and locals accessed by the current …","","A abstract <code>ReadWriteSetState</code> that has been (fully or …","Record an access of type <code>access_type</code> to the path <code>base</code>/…","","Apply <code>callee_summary</code> to the caller state in <code>self</code>. There …","","Assign <code>ret</code> = <code>base</code>/<code>offset</code> and record an access of type …","","","","","","","","","","","","","","","Return a wrapper of <code>self</code> that implements <code>Display</code> using <code>env</code>","","","","","","","","Return a string representation of the summary for <code>target</code>","","","","","","","","","","Return true if <code>self</code> has no dynamic components and can be …","","","","","","","","","","","Remove the local access paths rooted <code>addr_idx</code>/<code>mid</code>::<code>sid</code>&lt;…","","Substitute concrete values <code>actuals</code> and <code>type_actuals</code> into …","","","","","","","","","","","","","","","","","","","","Write <code>rhs</code> to <code>lhs_ref</code>","Spec Instrumenter","","","","","","","","","","","","","","","","","Information about the action to take on abort. The label …","","","","","","The kind of an assignment in the bytecode.","","An id for an attribute attached to an instruction.","","","","A borrow edge.","","","","","A borrow node – used in memory operations.","A display object for a borrow node.","","","The stackless bytecode.","A display object for a bytecode.","","","","","A constant value.","The assign copies the lhs value.","","Direct borrow.","","","","","","Field borrow with static offset.","","","","","","","","","The type of variable that is being havoc-ed","Composed sequence of edges.","Vector borrow with dynamic index.","","","A label for a branch destination.","","","","","","","","The assign moves the lhs value.","","","","Havoc everything in a mutation","Havoc the value part in a mutation, but keep its pointer …","","","","","","An operation – target of a call. This contains user …","A display object for an operation.","","","","","","A specification property kind.","","","","","","","","","An id for a spec block. A spec block can contain assumes …","","The assign stores the lhs value.","","","","","","","","","","","","Havoc a value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the destination(s) if self is a branch/jump …","Returns true of the operation can cause abort.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a format object for a bytecode in context of a …","Creates a format object for a borrow node in context of a …","","Creates a format object for a bytecode in context of a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the code offsets at which the code exits(aborts or …","","","","","Return the successor offsets of this instruction. In …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a mapping from labels to code offsets.","Return the temporaries this instruction modifies and how …","","","","","","","","","","","","","","","","","","","","","","Remaps variables in the instruction.","Remaps variables in source position in the instructionenerate the dot representation of the CFG (which can be …","","","","","If from_all_blocks is false, perform backward analysis …","","","","","","","","","","","","","","","A summary of the memory accessed / modified per function, …","","","The memory accessed by this function. This is the union of …","","","The memory mentioned by the assert expressions in this …","The memory mentioned by the assume expressions in this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The memory modified by this function.","","","","","","","","","","","","","","","","","","","Analysis info saved for the …","A named tuple for holding the information on how an …","","The annotation for information about verification.","Global invariants covering memories that are accessed in a …","","","","","","","","","","","","Global invariants covering memories that are directly …","Global invariants covering memories that are directly …","","","","","","Functions which have invariants checked on return instead …","Functions which invariants checking is turned-off anywhere …","A mapping from function to the set of global invariants …","Get verification information for this function.","","Whether the function needs to have an inlined variant …","","","","","","","","Global invariants covering memories that are modified in a …","","","","","","","","","","","","","","","","","Whether the function is target of verification.","","","","","","","The annotation for information about verification.","","","","","","","","","Debugging code to print sets of invariants","","Functions in dependent modules that are transitively …","functions where invariants are disabled by pragma …","For each function, give the set of invariants that are …","Functions that are not in target or deps, but that call a …","","","","functions that are in non_inv_fun_set and M[I] for some I. …","Maps invariant ID to set of functions that modify the …","Functions that modify some invariant in the target Does …","Get verification information for this function.","","Whether the function needs to have an inlined variant …","","","","Maps function to the set of invariants that it modifies …","","","Functions where invariants are disabled in a transitive …","","The set of all functions in target module.","global and update invariants in the target module","","","","","","","","","","","Whether the function is target of verification.","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,2,0,4,4,3,0,0,4,0,0,4,0,0,3,1,5,1,2,6,5,7,8,9,10,11,12,13,14,2,6,4,3,5,7,8,9,10,11,12,13,14,2,6,4,3,5,14,2,6,4,3,5,14,2,6,4,3,5,14,2,6,4,3,5,1,2,6,1,14,2,6,4,3,5,14,2,6,4,3,5,14,2,6,4,3,5,3,7,8,9,10,11,12,13,14,2,6,4,3,5,1,2,1,1,7,8,9,10,11,12,13,14,2,6,4,3,5,4,5,15,2,1,14,4,3,5,14,4,3,7,8,9,10,11,12,13,14,2,6,4,3,5,5,14,1,2,4,4,4,1,6,4,3,5,16,14,2,6,4,3,5,14,6,5,5,5,5,5,14,3,5,5,14,2,6,4,3,5,1,5,5,15,4,5,6,1,14,6,4,3,5,14,2,6,4,3,5,7,8,9,10,11,12,13,7,8,9,10,11,12,13,14,2,6,4,3,5,7,8,9,10,11,12,13,14,2,6,4,3,5,7,8,9,10,11,12,13,14,2,6,4,3,5,7,8,9,10,11,12,13,14,2,6,4,3,5,17,18,19,20,21,22,23,24,0,0,0,25,25,25,25,25,26,27,25,26,27,25,27,27,25,27,25,27,27,25,25,25,25,27,27,25,27,25,25,26,27,25,26,27,25,25,27,25,25,25,27,27,26,27,25,27,25,25,25,27,25,27,25,25,27,27,27,27,25,25,27,25,27,27,27,25,25,25,25,27,27,25,25,25,27,25,26,26,27,25,26,27,25,26,27,25,25,25,26,27,25,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,0,0,0,0,29,29,30,31,29,32,31,30,31,29,32,31,29,32,31,29,32,31,29,32,30,31,31,31,31,0,30,31,29,32,32,31,31,31,32,30,31,29,32,31,31,31,31,31,30,31,30,31,30,31,29,32,30,31,29,32,30,31,29,32,30,31,29,32,30,31,29,32,0,33,33,33,33,33,33,33,33,33,33,33,0,0,34,34,34,34,34,34,34,35,35,34,34,34,34,0,36,36,36,36,36,36,36,36,36,36,36,37,0,0,37,0,0,38,39,39,39,39,39,39,39,37,37,39,39,39,39,39,39,39,38,39,39,39,39,39,0,40,0,0,0,40,41,41,41,42,40,41,41,42,42,40,41,42,42,40,41,42,40,41,42,41,42,40,41,41,42,41,42,41,42,41,41,40,41,42,40,41,42,40,41,42,41,41,41,40,41,41,41,42,42,42,41,42,41,42,40,41,42,41,42,41,41,41,43,41,42,41,42,41,42,41,41,42,41,40,41,42,40,41,42,40,41,42,40,41,42,42,40,41,42,0,44,44,44,44,44,44,44,44,44,44,44,0,0,45,46,45,46,45,46,45,46,45,45,45,45,46,45,46,45,46,45,46,0,0,47,47,47,48,47,48,47,47,47,47,47,47,48,47,48,47,47,47,48,48,47,48,47,48,47,48,47,48,47,48,47,0,0,49,49,49,50,49,50,49,49,50,49,49,49,49,49,49,49,50,49,49,49,49,49,49,49,50,49,49,49,49,50,49,49,49,49,49,49,50,49,50,49,50,49,50,0,0,0,51,51,52,51,52,51,52,51,52,51,51,52,51,52,51,51,51,52,51,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,51,52,52,52,52,52,52,51,52,52,52,52,52,52,52,51,51,51,51,52,51,52,51,51,51,52,52,52,51,51,52,52,51,52,52,51,52,51,51,52,51,51,51,52,52,51,53,0,0,0,0,54,54,0,54,53,0,55,56,57,56,54,53,55,57,56,54,53,55,54,53,54,53,54,53,56,55,58,57,54,53,54,53,58,57,56,54,54,53,53,57,56,54,53,55,56,56,56,56,56,56,56,58,56,57,56,54,53,55,58,53,55,58,54,53,54,53,58,58,57,56,58,55,55,55,55,57,54,53,57,54,53,57,56,54,53,55,57,56,54,53,55,57,56,54,53,55,57,56,54,53,55,59,60,61,0,0,0,62,63,64,62,63,64,63,64,63,64,63,62,64,64,62,63,64,0,63,62,63,64,62,62,64,62,63,64,62,63,64,62,63,64,62,63,64,62,63,64,0,65,65,65,65,65,65,65,65,65,65,65,0,66,66,66,66,66,66,66,66,66,66,66,0,0,67,68,67,68,68,67,68,67,68,67,67,67,68,67,68,67,68,67,68,67,68,0,69,69,69,69,69,69,69,69,69,69,69,0,0,0,70,70,71,70,72,71,70,72,70,72,70,72,70,72,70,0,71,70,72,72,71,70,72,71,71,71,71,70,72,71,70,72,71,70,72,71,70,72,71,70,72,0,0,0,73,74,73,75,74,73,75,73,75,73,75,75,73,75,74,73,75,74,73,75,73,73,74,74,74,73,75,74,73,75,74,73,75,74,73,75,73,74,73,75,0,76,76,76,76,76,76,76,76,76,76,76,0,0,77,78,77,78,77,77,77,77,78,78,77,78,77,77,0,78,78,77,78,77,78,78,77,77,77,77,78,77,78,77,78,77,77,77,78,77,79,79,0,0,0,79,79,79,79,79,0,79,79,79,79,80,80,81,81,82,81,80,79,82,81,80,79,81,80,79,81,80,79,81,79,79,81,81,79,81,81,81,79,81,79,81,81,80,79,82,81,80,79,79,80,80,80,80,80,80,80,80,80,80,80,79,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,79,80,80,80,80,80,79,80,80,79,79,79,79,82,81,80,79,79,79,79,79,79,80,80,80,79,79,80,79,80,80,80,80,79,80,79,80,80,80,79,80,79,79,79,79,79,80,79,79,80,80,79,82,81,79,82,81,79,81,79,82,79,79,80,79,81,80,81,80,79,82,81,80,79,82,81,80,79,82,81,80,79,79,80,80,79,82,81,80,79,83,84,85,86,87,88,89,90,91,92,86,88,89,91,86,91,0,0,93,94,93,94,93,93,94,93,94,94,93,93,93,94,94,94,93,94,93,94,93,94,93,94,93,95,0,95,0,95,96,96,96,95,96,95,96,96,95,96,95,96,96,96,95,96,96,96,95,96,96,95,96,95,96,96,95,96,95,96,96,96,96,96,96,96,96,96,96,96,96,95,96,96,96,95,96,95,96,95,96,95,96,96,95,96,95,96,0,97,97,97,0,97,97,97,97,97,97,97,97,0,0,0,98,0,0,0,99,98,100,99,98,100,98,98,98,99,100,98,98,98,0,99,98,100,99,98,100,99,98,99,98,99,98,99,98,100,99,98,100,99,98,100,99,98,100,101,0,0,0,0,102,102,102,102,102,102,103,104,102,105,103,104,102,105,102,105,102,105,102,102,102,105,102,105,104,102,105,0,103,104,102,105,0,103,104,102,105,105,102,102,103,102,105,103,102,102,105,103,102,102,102,102,105,104,103,104,102,105,103,104,102,105,103,104,102,105,103,104,102,105,102,0,106,106,106,106,106,106,106,106,106,106,106,106,106,107,107,108,0,109,110,109,111,108,0,111,0,109,109,110,0,0,109,109,109,0,0,108,110,0,0,108,109,109,109,0,112,109,113,109,109,109,109,109,113,109,109,109,109,109,114,109,109,0,113,113,109,108,0,108,109,108,114,109,109,111,112,109,109,109,115,115,109,108,109,109,109,0,0,109,109,109,109,108,0,109,114,108,114,108,108,109,109,0,109,112,109,109,109,109,109,110,110,110,109,109,109,115,109,109,109,116,117,118,119,120,121,122,116,117,118,112,115,110,109,114,113,111,107,108,119,120,121,122,116,117,118,112,115,110,109,114,113,111,107,108,108,109,116,117,118,112,115,110,109,114,113,111,107,108,116,117,118,112,115,110,109,114,113,111,107,108,116,117,118,112,115,110,114,113,111,109,114,113,108,116,117,118,112,115,110,109,114,113,111,107,108,116,117,118,112,115,110,109,114,113,111,107,108,113,119,120,121,122,116,117,118,112,115,110,110,109,114,113,111,107,108,119,120,121,122,116,117,118,112,115,110,109,114,113,111,107,108,108,108,116,117,118,114,108,116,117,118,114,113,108,119,120,121,122,116,117,118,112,115,110,109,114,113,111,107,108,108,108,108,108,108,108,108,116,117,118,110,109,114,113,107,108,116,117,118,116,117,118,112,115,110,114,113,111,108,108,116,117,118,112,115,110,109,114,113,111,107,108,119,120,121,122,110,119,120,121,122,116,117,118,112,115,110,109,114,113,111,107,108,119,120,121,122,116,117,118,112,115,110,109,114,113,111,107,108,119,120,121,122,116,117,118,112,115,110,109,114,113,111,107,108,119,120,121,122,116,117,118,112,115,110,109,114,113,111,107,108,123,124,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,129,130,131,132,133,134,135,136,138,139,140,129,130,132,133,138,139,140,129,130,133,130,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,147,148,149,150,151,152,153,154,155,156,157,158,160,161,147,148,149,150,151,152,153,154,155,156,157,158,155,157,0,165,165,165,165,165,165,165,165,165,165,165,166,0,0,166,0,167,167,166,167,166,166,166,167,167,167,167,166,167,166,0,167,167,166,167,167,167,167,167,166,167,166,167,166,167,166,167,166,168,168,0,0,0,169,170,171,169,169,171,170,169,171,170,169,170,169,170,169,170,169,170,171,171,170,169,170,170,170,170,0,170,170,171,170,169,170,169,169,171,171,171,170,169,170,171,170,169,171,170,169,171,170,169,171,170,169,0,0,0,0,172,172,173,174,175,172,173,174,175,175,175,175,172,172,174,172,173,174,175,173,173,173,0,174,175,172,173,174,175,0,0,0,172,174,174,174,175,172,173,174,175,172,173,174,175,172,173,174,175,175,172,173,174,175,0,0,0,176,177,178,176,177,178,178,178,0,178,176,176,176,176,176,177,178,176,176,176,0,177,178,176,177,178,176,177,177,176,177,176,176,178,176,177,178,176,177,178,176,177,178,178,176,177,178,0,179,179,179,179,179,179,179,179,179,179,179],"f":[null,null,null,null,null,null,null,null,null,null,null,null,[[["accountaddress",3]]],null,null,null,null,null,null,null,null,null,null,[[["accesspath",3]],["option",4]],null,null,null,null,null,null,null,[[["globalenv",3],["str",15],["functiontargetsholder",3]],["string",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["offset",4]]],[[["offset",4]]],[[["moduleid",3],["type",4],["vec",3,["type"]],["structid",3]]],[[["moduleid",3],["type",4],["vec",3,["type"]],["structid",3]],["accesspath",3]],[[],["absaddr",6]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["absstructtype",3]],[[],["addr",4]],[[],["globalkey",3]],[[],["root",4]],[[],["offset",4]],[[],["accesspath",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["absstructtype",3]],["ordering",4]],[[["addr",4]],["ordering",4]],[[["globalkey",3]],["ordering",4]],[[["root",4]],["ordering",4]],[[["offset",4]],["ordering",4]],[[["accesspath",3]],["ordering",4]],[[["biguint",3]]],[[["biguint",3]]],[[["absstructtype",3],["biguint",3]]],[[["functionenv",3]],["absaddrdisplay",3]],[[["globalenv",3]],["absstructtypedisplay",3]],[[["functionenv",3]],["addrdisplay",3]],[[["functionenv",3]],["globalkeydisplay",3]],[[["functionenv",3]],["rootdisplay",3]],[[["globalenv",3],["type",4]],["offsetdisplay",3]],[[["functionenv",3]],["accesspathdisplay",3]],[[["absstructtype",3]],["bool",15]],[[["addr",4]],["bool",15]],[[["globalkey",3]],["bool",15]],[[["root",4]],["bool",15]],[[["offset",4]],["bool",15]],[[["accesspath",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["accesspath",3]]],[[["accesspath",3]]],[[]],[[["functionenv",3],["tempindex",6]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["functionenv",3],["tempindex",6]]],[[["functionenv",3],["tempindex",6]]],[[["accesspath",3]],["option",4]],[[],[["option",4,["accountaddress"]],["accountaddress",3]]],[[],[["accountaddress",3],["vec",3,["accountaddress"]]]],[[],["type",4]],[[["functionenv",3]],["type",4]],[[["type",4],["globalenv",3]],["type",4]],[[["functionenv",3]],["type",4]],[[["globalenv",3]],[["option",4,["structtag"]],["structtag",3]]],[[["globalkey",3]]],[[["moduleid",3],["type",4],["vec",3,["type"]],["structid",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["accesspath",3]],["option",4]],[[["absstructtype",3]],["bool",15]],[[["addr",4]],["bool",15]],[[["globalkey",3]],["bool",15]],[[["root",4]],["bool",15]],[[["offset",4]],["bool",15]],[[["accesspath",3]],["bool",15]],[[["moduleid",3],["type",4],["vec",3,["type"]],["structid",3]]],[[["moduleid",3],["type",4],["absaddr",6],["vec",3,["type"]],["structid",3]]],[[["offset",4],["vec",3,["offset"]],["root",4]]],[[["moduleid",3],["type",4],["biguint",3],["vec",3,["type"]],["structid",3]]],[[["moduleid",3],["type",4],["absaddr",6],["vec",3,["type"]],["structid",3]]],[[["absstructtype",3],["biguint",3]]],[[["root",4]]],[[["globalenv",3]],[["option",4,["structtag"]],["structtag",3]]],[[["globalenv",3]],["rwoffset",4]],[[["globalenv",3]],[["vec",3,["rwaccesspath"]],["rwaccesspath",3]]],[[]],[[["absstructtype",3]],[["option",4,["ordering"]],["ordering",4]]],[[["addr",4]],[["option",4,["ordering"]],["ordering",4]]],[[["globalkey",3]],[["option",4,["ordering"]],["ordering",4]]],[[["root",4]],[["option",4,["ordering"]],["ordering",4]]],[[["offset",4]],[["option",4,["ordering"]],["ordering",4]]],[[["accesspath",3]],[["option",4,["ordering"]],["ordering",4]]],[[["accesspath",3]]],[[]],[[["absaddr",6]],["absaddr",6]],[[["accesspath",3]],["option",4]],[[["usize",15]]],[[],["root",4]],[[],["absstructtype",3]],[[["functionenv",3],["accesspathmap",8]]],[[]],[[["functionenv",3],["accesspathmap",8]]],[[["functionenv",3],["accesspathmap",8]]],[[]],[[["functionenv",3],["accesspathmap",8]],["absaddr",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[["functionenv",3],["tempindex",6]]],[[["trienode",3],["functionenv",3],["tempindex",6]]],[[["trienode",3],["root",4]]],[[["usize",15]]],[[["root",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["mapdomain",3]],[[],["trienode",3]],[[],["accesspathtrie",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[["functionenv",3]],["accesspathtriedisplay",3]],[[["offset",4]],[["entry",4,["offset","trienode"]],["offset",4],["trienode",3]]],[[["trienode",3]],["bool",15]],[[["accesspathtrie",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["vec",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["accesspath",3]],["option",4]],[[],["option",4]],[[],["option",4]],[[["functionenv",3],["tempindex",6]],["option",4]],[[["functionenv",3],["tempindex",6]],[["option",4,["trienode"]],["trienode",3]]],[[["offset",4]],["option",4]],[[["offset",4]],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["joinresult",4]],[[],["joinresult",4]],[[["trienode",3],["accesspath",3]]],[[["option",4]],["option",4]],[[["option",4]],["joinresult",4]],[[["option",4],["option",4]],["joinresult",4]],[[],["bool",15]],[[],["bool",15]],[[["functionenv",3],["tempindex",6]],["bool",15]],[[["trienode",3]],["bool",15]],[[["accesspathtrie",3]],["bool",15]],[[]],[[["option",4]]],[[["trienode",3]],[["option",4,["ordering"]],["ordering",4]]],[[["accesspathtrie",3]],[["option",4,["ordering"]],["ordering",4]]],[[["accesspath",3]],["option",4]],[[["functionenv",3],["tempindex",6]]],[[["accesspath",3]],[["option",4,["trienode"]],["trienode",3]]],[[["offset",4]],["option",4]],[[["functionenv",3],["accesspathmap",8]]],[[["functionenv",3],["accesspathmap",8]]],[[["functionenv",3],["accesspathmap",8],["globalenv",3]]],[[["functionenv",3],["accesspathmap",8]]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["option",4],["accesspath",3]]],[[["option",4],["accesspath",3]]],[[]],[[]],[[]],null,[[]],[[]],[[],["annotations",3]],[[]],[[],["annotations",3]],[[["formatter",3]],["result",6]],[[]],[[],["option",4]],[[]],[[],["bool",15]],[[]],[[],[["box",3],["option",4,["box"]]]],[[["any",8],["clone",8]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[["functiontarget",3]],["string",3]],[[]],[[]],[[]],[[]],[[],["borrowinfo",3]],[[],["borrowinfoatcodeoffset",3]],[[],["borrowannotation",3]],[[]],[[]],[[]],[[],["borrowinfo",3]],[[],["borrowinfoatcodeoffset",3]],[[],["borrowannotation",3]],[[["formatter",3],["globalenv",3],["functiontargetsholder",3]],["result",6]],[[["borrowinfo",3]],[["borrownode",4],["vec",3,["borrownode"]]]],[[["borrowinfo",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["functiontarget",3],["codeoffset",6]],[["string",3],["option",4,["string"]]]],[[]],[[]],[[]],[[]],[[["codeoffset",6]],[["option",4,["borrowinfoatcodeoffset"]],["borrowinfoatcodeoffset",3]]],[[["borrownode",4]],[["borrownode",4],["vec",3,["borrownode"]]]],[[["borrownode",4]],["setdomain",3]],[[["borrownode",4]],[["borrownode",4],["vec",3,["borrownode"]]]],[[],["borrowinfo",3]],[[]],[[]],[[]],[[]],[[["borrownode",4]],["bool",15]],[[],["bool",15]],[[["borrownode",4]],["bool",15]],[[["borrownode",4]],["bool",15]],[[],["joinresult",4]],[[],["string",3]],[[["borrowinfo",3]],["bool",15]],[[],["box",3]],[[["borrowinfo",3]],[["option",4,["ordering"]],["ordering",4]]],[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[],["string",3]],[[],["box",3]],[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[]],[[["qualifiedid",3,["funid"]],["functionvariant",4],["funid",3]],["option",4]],[[],["globalenv",3]],[[]],[[["functiontargetsholder",3],["globalenv",3]]],[[["functiontarget",3]]],[[["functiontarget",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[]],[[]],[[],["string",3]],[[],["box",3]],[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,[[["stacklesscontrolflowgraph",3]],["statemap",6]],[[]],[[]],[[],["blockstate",3]],[[]],[[["blockstate",3]],["ordering",4]],[[["blockstate",3]],["bool",15]],[[],["bool",15]],[[["bytecode",4],["codeoffset",6]]],[[["blockid",6],["stacklesscontrolflowgraph",3]]],[[["formatter",3]],["result",6]],[[]],[[]],[[["blockstate",3]],["bool",15]],[[["blockstate",3]],[["option",4,["ordering"]],["ordering",4]]],null,null,[[["stacklesscontrolflowgraph",3],["statemap",6]],[["codeoffset",6],["btreemap",3,["codeoffset"]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,[[["offset",4]]],[[["moduleid",3],["type",4],["vec",3,["type"]],["structid",3]]],[[],["ordset",3]],[[],["ordmap",3]],[[]],[[]],[[],["ordset",3]],[[],["ordmap",3]],[[]],[[]],[[]],[[]],[[["functionenv",3]]],[[],["joinresult",4]],[[],["setdomain",3]],[[],["mapdomain",3]],[[]],[[]],[[]],[[["setdomain",3]],["ordering",4]],[[["mapdomain",3]],["ordering",4]],[[["joinresult",4]],["joinresult",4]],[[["biguint",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["functionenv",3]],["absaddrdisplay",3]],[[["joinresult",4]],["bool",15]],[[["setdomain",3]],["bool",15]],[[["mapdomain",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["accesspath",3]]],[[]],[[["functionenv",3],["tempindex",6]]],[[]],[[]],[[["btreeset",3]]],[[["ordset",3]]],[[]],[[["btreemap",3]]],[[["ordmap",3]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[],[["accountaddress",3],["vec",3,["accountaddress"]]]],[[],["joinresult",4]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["joinresult",4]],[[],["joinresult",4]],[[],["joinresult",4]],[[["setdomain",3]],["bool",15]],[[["mapdomain",3]],["bool",15]],[[["setdomain",3]],[["option",4,["ordering"]],["ordering",4]]],[[["mapdomain",3]],[["option",4,["ordering"]],["ordering",4]]],[[["accesspath",3]]],[[]],[[],["mapdomain",3]],[[["functionenv",3],["accesspathmap",8]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[],["string",3]],[[],["box",3]],[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["box",3]],[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["absvalue",4]],[[]],[[["absvalue",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["joinresult",4]],[[],["string",3]],[[],["box",3]],[[],[["option",4,["ordering"]],["ordering",4]]],[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,[[["type",4]],["tempindex",6]],[[["type",4]],["usize",15]],[[]],[[]],[[]],[[]],[[]],null,[[],["functiondatabuilderoptions",3]],[[["bytecode",4]]],[[["exp",3]]],[[["type",4]]],[[["exp",3],["propkind",4]]],[[["bytecode",4],["vec",3,["bytecode"]]]],[[]],[[]],[[]],null,[[],["functionenv",3]],[[],["loc",3]],[[["attrid",3]],["loc",3]],[[["tempindex",6]],["type",4]],[[],["functiontarget",3]],[[]],[[]],[[["functiondata",3],["functionenv",3]]],[[],["attrid",3]],[[],["label",3]],[[["functiondata",3],["functionenv",3],["functiondatabuilderoptions",3]]],null,null,[[["loc",3]]],[[["str",15],["loc",3]]],[[["attrid",3]]],[[["string",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["functiondata",3]],[[]],[[]],null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["functionvariant",4]]],[[["globalenv",3],["functionvariant",4]]],[[]],[[]],null,[[]],[[],["annotations",3]],[[]],[[["attrid",3]],["loc",3]],[[["attrid",3]],[["string",3],["option",4,["string"]]]],[[],["funid",3]],[[],["loc",3]],[[],["usize",15]],[[["symbol",3]],[["usize",15],["option",4,["usize"]]]],[[["usize",15]],["symbol",3]],[[["usize",15]],["type",4]],[[],[["btreeset",3,["qualifiedinstid"]],["qualifiedinstid",3,["structid"]]]],[[],[["vec",3,["exp"]],["btreemap",3,["qualifiedinstid","vec"]],["qualifiedinstid",3,["structid"]]]],[[],["btreemap",3]],[[["qualifiedid",3]],[["vec",3],["option",4,["vec"]]]],[[],[["tempindex",6],["usize",15],["btreemap",3,["tempindex","usize"]]]],[[["usize",15]],[["usize",15],["option",4,["usize"]]]],[[],["symbol",3]],[[],[["usize",15],["range",3,["usize"]]]],[[],["usize",15]],[[],[["usize",15],["range",3,["usize"]]]],[[],["usize",15]],[[["usize",15]],["type",4]],[[]],[[],["spec",3]],[[["functionenv",3]],[["type",4],["vec",3,["type"]]]],[[],[["typeparameter",3],["vec",3,["typeparameter"]]]],[[],["usize",15]],[[["attrid",3]],[["string",3],["option",4,["string"]]]],[[],["globalenv",3]],[[["usize",15]],["bool",15]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["str",15]],["bool",15]],[[["usize",15]],["bool",15]],null,null,null,null,[[],["moduleenv",3]],null,[[["functiondata",3],["functionenv",3]],["functiontarget",3]],[[["type",4],["bytecode",4],["attrid",3],["vec",3,["bytecode"]],["vec",3,["type"]],["loc",3],["functionenv",3],["btreemap",3,["attrid","loc"]],["vec",3,["structid"]],["btreeset",3,["attrid"]],["structid",3]]],[[],["usize",15]],[[],["usize",15]],[[["usize",15],["bytecode",4],["btreemap",3]],["string",3]],[[["annotationformatter",6],["box",3,["annotationformatter"]]]],[[]],[[]],null,[[],["symbolpool",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],null,null,[[],["functionvisibility",4]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[["functiontargetprocessor",8],["box",3,["functiontargetprocessor"]]]],[[["functionenv",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["verificationflavor",4]],[[],["functionvariant",4]],[[]],[[]],[[["verificationflavor",4]],["ordering",4]],[[["functionvariant",4]],["ordering",4]],[[],["functiontargetsholder",3]],[[],["functiontargetpipeline",3]],[[["globalenv",3],["formatter",3],["functiontargetsholder",3]],["result",6]],null,[[["verificationflavor",4]],["bool",15]],[[["functionvariant",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["globalenv",3],["functiontargetsholder",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["qualifiedid",3],["functionvariant",4]],[["option",4,["functiondata"]],["functiondata",3]]],[[["qualifiedid",3],["functionvariant",4]],[["option",4,["functiondata"]],["functiondata",3]]],[[]],[[]],[[["functionvariant",4],["functionenv",3]],["functiontarget",3]],[[["functionenv",3]],[["vec",3,["functionvariant"]],["functionvariant",4]]],[[["functionenv",3]],["vec",3]],[[["globalenv",3],["functiontargetsholder",3]]],[[["functiondata",3],["qualifiedid",3],["functionvariant",4]]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["functiontargetprocessor",8]],[[],["string",3]],[[["verificationflavor",4]],["bool",15]],[[["functionvariant",4]],["bool",15]],[[["verificationflavor",4]],[["option",4,["ordering"]],["ordering",4]]],[[["functionvariant",4]],[["option",4,["ordering"]],["ordering",4]]],[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]],[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],[["functiondata",3],["option",4,["functiondata"]]]],null,[[["qualifiedid",3],["functionvariant",4]],["functiondata",3]],[[["globalenv",3],["functiontargetsholder",3]]],[[["globalenv",3],["functiontargetsholder",3]]],[[["bool",15],["globalenv",3],["str",15],["functiontargetsholder",3]]],[[["globalenv",3],["functiontargetsholder",3]]],[[["functiontargetsholder",3],["globalenv",3]],[["vec",3,["functionenv"]],["functionenv",3]]],null,[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["perbytecoderelevance",3]],[[],["perfunctionrelevance",3]],[[]],[[]],[[],["perbytecoderelevance",3]],[[["formatter",3],["globalenv",3],["functiontargetsholder",3]],["result",6]],null,null,[[]],[[]],[[]],[[["functiontarget",3]],["perfunctionrelevance",3]],null,[[]],[[]],[[]],[[],["string",3]],[[],["box",3]],null,[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[],["string",3]],[[],["box",3]],[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[]],[[]],[[],["string",3]],[[],["box",3]],[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[]],[[]],[[],[["option",4,["vec"]],["vec",3,["naturalloop"]]]],[[]],[[]],[[]],[[]],null,null,null,[[["vec",3],["vec",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[],["string",3]],[[],["box",3]],[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["livevarinfoatcodeoffset",3]],[[],["livevarannotation",3]],[[]],[[]],[[],["livevarinfoatcodeoffset",3]],[[],["livevarannotation",3]],[[["formatter",3]],["result",6]],[[["functiontarget",3],["codeoffset",6]],[["string",3],["option",4,["string"]]]],[[]],[[]],[[]],[[["codeoffset",6]],[["option",4,["livevarinfoatcodeoffset"]],["livevarinfoatcodeoffset",3]]],[[]],[[]],[[]],[[],["string",3]],[[],["box",3]],[[],["box",3]],[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["fatloop",3]],[[],["loopannotation",3]],[[]],[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["string",3]],[[],["box",3]],[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[],["string",3]],[[],["box",3]],[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[],["monoinfo",3]],[[]],[[],["monoinfo",3]],[[["formatter",3],["globalenv",3],["functiontargetsholder",3]],["result",6]],[[["globalenv",3],["functiontargetsholder",3]]],[[["formatter",3]],["result",6]],[[]],[[]],null,[[["globalenv",3]],[["monoinfo",3],["rc",3,["monoinfo"]]]],[[["globalenv",3],["functiontargetsholder",3]]],[[]],[[]],[[],["string",3]],null,[[],["box",3]],[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]],null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[],["bool",15]],[[],["loc",3]],[[],["loc",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["loc",3]],[[],["functionenv",3]],[[],["type",4]],[[]],[[]],[[]],[[["loc",3]],["ordering",4]],[[["type",4]],["ordering",4]],[[],["bool",15]],[[],["loc",3]],[[["globalenv",3]],["locdisplay",3]],[[["typedisplaycontext",4]],["typedisplay",3]],[[["globalenv",3]],["locdisplay",3]],[[],["loc",3]],[[["loc",3]],["bool",15]],[[["type",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["fileid",3]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[["typetag",4],["globalenv",3]],["type",4]],[[],[["global",3],["vec",3,["structid","global"]],["structid",3]]],[[]],[[["u16",15]],["loc",3]],[[],[["btreeset",3,["qualifiedid"]],["qualifiedid",3,["funid"]]]],[[],[["btreeset",3,["qualifiedid"]],["qualifiedid",3,["funid"]]]],[[],["functiondefinitionindex",3]],[[],["str",15]],[[],[["functionenv",3],["option",4,["functionenv"]]]],[[],[["option",4,["rc"]],["rc",3,["string"]]]],[[],["string",3]],[[["str",15]],[["functionenv",3],["option",4,["functionenv"]]]],[[],["u64",15]],[[],["funid",3]],[[["str",15]],[["option",4,["rc"]],["rc",3,["string"]]]],[[],["identifier",3]],[[],["loc",3]],[[],["usize",15]],[[["usize",15]],["symbol",3]],[[["usize",15]],["type",4]],[[],[["qualifiedid",3,["structid"]],["btreemap",3,["qualifiedid","vec"]],["vec",3,["exp","global"]]]],[[],["symbol",3]],[[],[["str",15],["rc",3,["str"]]]],[[],[["typeparameter",3],["global",3],["vec",3,["typeparameter","global"]]]],[[["str",15]],["usize",15]],[[],["usize",15]],[[],[["global",3],["type",4],["vec",3,["type","global"]]]],[[],[["parameter",3],["global",3],["vec",3,["parameter","global"]]]],[[],[["funid",3],["qualifiedid",3,["funid"]]]],[[],["usize",15]],[[["usize",15]],["type",4]],[[],[["global",3],["type",4],["vec",3,["type","global"]]]],[[],[["rc",3,["string"]],["string",3]]],[[],["spec",3]],[[],["loc",3]],[[["globalenv",3]],["option",4]],[[],[["btreeset",3,["qualifiedid"]],["qualifiedid",3,["funid"]]]],[[],["functionenv",3]],[[],["typedisplaycontext",4]],[[],["usize",15]],[[],[["typeparameter",3],["global",3],["vec",3,["typeparameter","global"]]]],[[],[["u16",15],["btreeset",3,["u16"]]]],[[],["bool",15]],[[],["bool",15]],[[]],[[],["type",4]],[[],[["global",3],["type",4],["vec",3,["type","global"]]]],[[["vec",3,["type","global"]],["global",3],["type",4]],[["global",3],["type",4],["vec",3,["type","global"]]]],[[]],[[]],[[]],[[]],[[["globalenv",3]],[["option",4,["type"]],["type",4]]],[[["globalenv",3]],[["option",4,["structtag"]],["structtag",3]]],[[["globalenv",3]],[["option",4,["type"]],["type",4]]],[[["globalenv",3]],[["typetag",4],["option",4,["typetag"]]]],[[],["bool",15]],[[["verificationscope",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["str",15]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["usize",15]],["bool",15]],[[["str",15]],["bool",15]],[[["str",15]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["usize",15]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["str",15]],["bool",15]],null,[[["btreeset",3]]],[[],["string",3]],[[["loc",3]],["bool",15]],[[["type",4]],["bool",15]],[[],["box",3]],[[["span",3],["fileid",3]],["loc",3]],[[["primitivetype",4]],["type",4]],[[["loc",3]],[["option",4,["ordering"]],["ordering",4]]],[[["type",4]],[["option",4,["ordering"]],["ordering",4]]],[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]],[[],["type",4]],[[]],[[["verificationscope",4]],["bool",15]],[[],["type",4]],[[],["span",3]],[[],["symbolpool",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["usize",15],["u16",15],["btreemap",3,["u16","type"]],["type",4]],[["global",3],["type",4],["vec",3,["type","global"]]]],[[],["visibility",4]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,[[]],[[]],[[["globalenv",3],["functiontargetsholder",3]]],[[]],[[]],null,null,[[],["string",3]],[[],["box",3]],[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,[[],["autotracelevel",4]],[[],["proveroptions",3]],[[]],[[]],null,[[]],[[],["result",4]],[[],["result",4]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[]],[[]],[[],["bool",15]],null,[[["globalenv",3]],[["proveroptions",3],["rc",3,["proveroptions"]]]],[[]],[[]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[["globalenv",3],["proveroptions",3]]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[],["bool",15]],null,[[]],[[]],null,[[]],[[]],[[]],[[["type",4],["functiontargetsholder",3],["globalenv",3],["vec",3,["type"]]],[["structtag",3],["btreeset",3,["structtag"]]]],[[]],[[],["string",3]],[[],["box",3]],[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["functiontargetpipeline",3]],[[["proveroptions",3]],["functiontargetpipeline",3]],[[],["functiontargetpipeline",3]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["def",4]],[[]],[[["def",4]],["ordering",4]],[[["reachingdefannotation",3],["bytecode",4],["vec",3,["bytecode"]],["functiontarget",3]],[["bytecode",4],["vec",3,["bytecode"]]]],[[],["reachingdefannotation",3]],[[["def",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["functiontarget",3],["codeoffset",6]],[["string",3],["option",4,["string"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[["def",4]],["bool",15]],[[],["box",3]],[[["def",4]],[["option",4,["ordering"]],["ordering",4]]],[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,[[["offset",4],["access",4],["functionenv",3],["tempindex",6]]],[[],["accesspathtrie",3]],[[["functionenv",3]]],[[["functionenv",3],["tempindex",6]]],[[["offset",4],["access",4],["option",4,["access"]],["functionenv",3],["tempindex",6]]],[[["tempindex",6],["functionenv",3],["root",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["readwritesetstate",3]],[[],["specializedreadwritesetstate",3]],[[]],[[]],[[]],[[["functionenv",3]],["readwritesetstatedisplay",3]],[[["readwritesetstate",3]],["bool",15]],[[["specializedreadwritesetstate",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["functiontarget",3],["codeoffset",6]],[["string",3],["option",4,["string"]]]],[[]],[[]],[[]],[[]],[[["globalenv",3],["functiontargetsholder",3]]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["joinresult",4]],[[],["accesspathtrie",3]],[[],["string",3]],[[["readwritesetstate",3]],["bool",15]],[[["specializedreadwritesetstate",3]],["bool",15]],[[],["box",3]],[[["globalenv",3]],["readwriteset",3]],[[["readwritesetstate",3]],[["option",4,["ordering"]],["ordering",4]]],[[["specializedreadwritesetstate",3]],[["option",4,["ordering"]],["ordering",4]]],[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]],[[["moduleid",3],["tempindex",6],["functionenv",3],["structid",3]]],[[["access",4],["accesspathtrie",3,["access"]],["functionenv",3],["accesspathmap",8]],[["access",4],["accesspathtrie",3,["access"]]]],[[["functionenv",3],["accesspathmap",8],["globalenv",3]],["specializedreadwritesetstate",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[["functionenv",3],["tempindex",6]]],null,[[]],[[]],[[["formatter",3],["globalenv",3],["functiontargetsholder",3]],["result",6]],[[]],[[["globalenv",3],["functiontargetsholder",3]]],[[]],[[],["string",3]],[[],["box",3]],[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["vec",3,["label"]],["label",3]]],[[],["bool",15]],[[],["label",3]],[[],["attrid",3]],[[],["specblockid",3]],[[],["assignkind",4]],[[],["havockind",4]],[[],["constant",4]],[[],["operation",4]],[[],["borrownode",4]],[[],["borrowedge",4]],[[],["propkind",4]],[[],["abortaction",3]],[[],["bytecode",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["label",3]],["ordering",4]],[[["attrid",3]],["ordering",4]],[[["specblockid",3]],["ordering",4]],[[["assignkind",4]],["ordering",4]],[[["havockind",4]],["ordering",4]],[[["constant",4]],["ordering",4]],[[["borrownode",4]],["ordering",4]],[[["borrowedge",4]],["ordering",4]],[[["propkind",4]],["ordering",4]],[[["functiontarget",3]],["operationdisplay",3]],[[["functiontarget",3]],["borrownodedisplay",3]],[[["globalenv",3]],["borrowedgedisplay",3]],[[["functiontarget",3],["btreemap",3]],["bytecodedisplay",3]],[[["label",3]],["bool",15]],[[["attrid",3]],["bool",15]],[[["specblockid",3]],["bool",15]],[[["assignkind",4]],["bool",15]],[[["havockind",4]],["bool",15]],[[["constant",4]],["bool",15]],[[["operation",4]],["bool",15]],[[["borrownode",4]],["bool",15]],[[["borrowedge",4]],["bool",15]],[[["propkind",4]],["bool",15]],[[["abortaction",3]],["bool",15]],[[["bytecode",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["vec",3,["borrowedge"]],["borrowedge",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["attrid",3]],[[],[["vec",3,["codeoffset"]],["codeoffset",6]]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],[["tempindex",6],["option",4,["tempindex"]]]],[[["btreemap",3],["codeoffset",6]],[["vec",3,["codeoffset"]],["codeoffset",6]]],[[]],[[]],[[]],[[]],[[]],[[["globalenv",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["codeoffset",6],["label",3],["btreemap",3,["label","codeoffset"]]]],[[["functiontarget",3]]],[[["label",3]],["bool",15]],[[["attrid",3]],["bool",15]],[[["specblockid",3]],["bool",15]],[[["constant",4]],["bool",15]],[[["operation",4]],["bool",15]],[[["borrownode",4]],["bool",15]],[[["borrowedge",4]],["bool",15]],[[["abortaction",3]],["bool",15]],[[["bytecode",4]],["bool",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["label",3]],[["option",4,["ordering"]],["ordering",4]]],[[["attrid",3]],[["option",4,["ordering"]],["ordering",4]]],[[["specblockid",3]],[["option",4,["ordering"]],["ordering",4]]],[[["assignkind",4]],[["option",4,["ordering"]],["ordering",4]]],[[["havockind",4]],[["option",4,["ordering"]],["ordering",4]]],[[["constant",4]],[["option",4,["ordering"]],["ordering",4]]],[[["borrownode",4]],[["option",4,["ordering"]],["ordering",4]]],[[["borrowedge",4]],[["option",4,["ordering"]],["ordering",4]]],[[["propkind",4]],[["option",4,["ordering"]],["ordering",4]]],[[["functiontarget",3]]],[[["functiontarget",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[["codeoffset",6],["btreemap",3],["movebytecode",4]]],[[],["functiondata",3]],[[]],[[["functionenv",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,[[],[["blockid",6],["vec",3,["blockid"]]]],[[]],[[]],[[]],[[]],[[],["blockcontent",4]],[[]],[[["blockid",6]],["blockcontent",4]],[[]],[[],["blockid",6]],[[],["blockid",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["functiontarget",3]],["string",3]],[[["blockid",6]],[["box",3,["doubleendediterator"]],["option",4,["box"]]]],[[]],[[]],[[["blockid",6]],["bool",15]],[[["bool",15]]],[[]],[[],["u16",15]],[[["blockid",6]],["vec",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["usagestate",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["memoryusage",3]],[[],["usagestate",3]],[[]],[[]],[[],["memoryusage",3]],[[],["usagestate",3]],null,[[["globalenv",3],["formatter",3],["functiontargetsholder",3]],["result",6]],[[]],[[]],[[]],[[],[["btreeset",3,["qualifiedinstid"]],["qualifiedinstid",3,["structid"]]]],[[],[["qualifiedid",3,["structid"]],["btreeset",3,["qualifiedid"]]]],[[],[["btreeset",3,["qualifiedinstid"]],["qualifiedinstid",3,["structid"]]]],[[],[["qualifiedid",3,["structid"]],["btreeset",3,["qualifiedid"]]]],[[["functiontarget",3]],["usagestate",3]],[[],[["btreeset",3,["qualifiedinstid"]],["qualifiedinstid",3,["structid"]]]],[[],[["qualifiedid",3,["structid"]],["btreeset",3,["qualifiedid"]]]],[[]],[[]],[[]],[[],["joinresult",4]],[[],["joinresult",4]],null,[[],["string",3]],[[],["box",3]],[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["verificationinfo",3]],[[]],[[],["verificationinfo",3]],null,null,[[["globalenv",3],["formatter",3],["functiontargetsholder",3]],["result",6]],[[]],[[]],[[]],[[]],null,null,null,[[["functiontarget",3]],["verificationinfo",3]],[[["globalenv",3],["functiontargetsholder",3]]],null,[[]],[[]],[[]],[[]],[[["functionenv",3]],["bool",15]],[[["functionenv",3]],["bool",15]],[[["globalenv",3],["globalid",3]],["bool",15]],null,[[],["string",3]],[[],["box",3]],[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["verificationinfov2",3]],[[]],[[["globalenv",3],["btreeset",3],["str",15]]],[[],["verificationinfov2",3]],null,null,null,null,[[]],[[]],[[]],null,null,null,[[["functiontarget",3]],["verificationinfov2",3]],[[["globalenv",3],["functiontargetsholder",3]]],null,[[]],[[]],[[]],null,[[],["string",3]],[[],["box",3]],null,[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[],["string",3]],[[],["box",3]],[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[6,"AbsAddr"],[4,"Addr"],[4,"Offset"],[4,"Root"],[3,"AccessPath"],[3,"GlobalKey"],[3,"AbsStructTypeDisplay"],[3,"AddrDisplay"],[3,"AbsAddrDisplay"],[3,"GlobalKeyDisplay"],[3,"RootDisplay"],[3,"OffsetDisplay"],[3,"AccessPathDisplay"],[3,"AbsStructType"],[8,"AccessPathMap"],[8,"FootprintDomain"],[13,"Constant"],[13,"Footprint"],[13,"Field"],[13,"Global"],[13,"Global"],[13,"Formal"],[13,"Local"],[13,"Return"],[3,"AccessPathTrie"],[3,"AccessPathTrieDisplay"],[3,"TrieNode"],[3,"Annotations"],[3,"BorrowInfoAtCodeOffset"],[3,"BorrowAnalysisProcessor"],[3,"BorrowInfo"],[3,"BorrowAnnotation"],[3,"CleanAndOptimizeProcessor"],[3,"SummaryCache"],[8,"CompositionalAnalysis"],[3,"DataInvariantInstrumentationProcessor"],[8,"TransferFunctions"],[8,"DataflowAnalysis"],[3,"BlockState"],[4,"JoinResult"],[3,"SetDomain"],[3,"MapDomain"],[8,"AbstractDomain"],[3,"DebugInstrumenter"],[3,"EliminateImmRefsProcessor"],[3,"EliminateImmRefs"],[4,"AbsValue"],[3,"EscapeAnalysisProcessor"],[3,"FunctionDataBuilder"],[3,"FunctionDataBuilderOptions"],[3,"FunctionData"],[3,"FunctionTarget"],[4,"FunctionVariant"],[4,"VerificationFlavor"],[3,"FunctionTargetPipeline"],[3,"FunctionTargetsHolder"],[3,"ProcessorResultDisplay"],[8,"FunctionTargetProcessor"],[13,"Verification"],[13,"Instantiated"],[13,"Inconsistency"],[3,"GlobalInvariantAnalysisProcessor"],[3,"PerBytecodeRelevance"],[3,"PerFunctionRelevance"],[3,"GlobalInvariantInstrumentationProcessor"],[3,"GlobalInvariantInstrumentationProcessorV2"],[3,"NaturalLoop"],[3,"Graph"],[3,"InconsistencyCheckInstrumenter"],[3,"LiveVarInfoAtCodeOffset"],[3,"LiveVarAnalysisProcessor"],[3,"LiveVarAnnotation"],[3,"FatLoop"],[3,"LoopAnalysisProcessor"],[3,"LoopAnnotation"],[3,"MemoryInstrumentationProcessor"],[3,"MonoInfo"],[3,"MonoAnalysisProcessor"],[4,"Type"],[3,"FunctionEnv"],[3,"Loc"],[3,"MutRefInstrumenter"],[13,"Primitive"],[13,"Tuple"],[13,"Vector"],[13,"Struct"],[13,"TypeParameter"],[13,"Reference"],[13,"Fun"],[13,"TypeDomain"],[13,"ResourceDomain"],[13,"Var"],[3,"MutationManager"],[3,"MutationTester"],[4,"AutoTraceLevel"],[3,"ProverOptions"],[3,"PackedTypesProcessor"],[4,"Def"],[3,"ReachingDefProcessor"],[3,"ReachingDefAnnotation"],[13,"Alias"],[3,"ReadWriteSetState"],[3,"ReadWriteSetProcessor"],[3,"ReadWriteSetStateDisplay"],[3,"SpecializedReadWriteSetState"],[3,"SpecInstrumentationProcessor"],[3,"AbortAction"],[4,"Bytecode"],[4,"Operation"],[4,"Constant"],[4,"PropKind"],[4,"AssignKind"],[4,"BorrowEdge"],[4,"BorrowNode"],[4,"HavocKind"],[3,"Label"],[3,"AttrId"],[3,"SpecBlockId"],[3,"BytecodeDisplay"],[3,"OperationDisplay"],[3,"BorrowNodeDisplay"],[3,"BorrowEdgeDisplay"],[13,"Field"],[13,"Hyper"],[13,"GlobalRoot"],[13,"LocalRoot"],[13,"Reference"],[13,"ReturnPlaceholder"],[13,"Assign"],[13,"Call"],[13,"Ret"],[13,"Load"],[13,"Branch"],[13,"Jump"],[13,"Label"],[13,"Abort"],[13,"Nop"],[13,"SaveMem"],[13,"SaveSpecVar"],[13,"Prop"],[13,"Bool"],[13,"U8"],[13,"U64"],[13,"U128"],[13,"Address"],[13,"ByteArray"],[13,"Function"],[13,"OpaqueCallBegin"],[13,"OpaqueCallEnd"],[13,"Pack"],[13,"Unpack"],[13,"MoveTo"],[13,"MoveFrom"],[13,"Exists"],[13,"BorrowField"],[13,"BorrowGlobal"],[13,"GetField"],[13,"GetGlobal"],[13,"Havoc"],[13,"IsParent"],[13,"WriteBack"],[13,"TraceLocal"],[13,"TraceReturn"],[13,"TraceExp"],[3,"StacklessBytecodeGenerator"],[4,"BlockContent"],[3,"StacklessControlFlowGraph"],[13,"Basic"],[3,"UsageState"],[3,"MemoryUsage"],[3,"UsageProcessor"],[3,"InvariantRelevance"],[3,"InvariantAnalysisData"],[3,"VerificationAnalysisProcessor"],[3,"VerificationInfo"],[3,"InvariantAnalysisData"],[3,"VerificationAnalysisProcessorV2"],[3,"VerificationInfoV2"],[3,"WellFormedInstrumentationProcessor"]]},\
"bytecode_interpreter":{"doc":"","t":[3,3,12,11,11,11,11,11,0,12,12,11,11,11,11,11,5,11,11,11,12,11,0,12,11,11,11,11,12,11,11,12,11,11,0,0,0,0,0,0,0,6,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,3,13,13,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,6,3,11,11,5,11,11,11,11,11,11,11,11,11,3,11,11,5,5,5,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,12,11,11,11,11,12,11,12,12,11,13,13,4,13,6,13,4,13,13,4,3,3,13,13,4,13,13,13,13,3,3,4,6,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,13,13,4,13,3,13,3,13,13,3,13,4,13,13,13,13,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,5,5,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,5],"n":["InterpreterOptions","StacklessBytecodeInterpreter","args","borrow","borrow","borrow_mut","borrow_mut","clap","concrete","entrypoint","env","from","from","from_clap","interpret","interpret_with_bcs_arguments","interpret_with_options","into","into","new","no_expr_check","report_property_checking_results","shared","signers","try_from","try_from","try_into","try_into","ty_args","type_id","type_id","verbose","vzip","vzip","evaluator","local_state","player","runtime","settings","ty","value","EvalResult","Evaluator","ExpState","add_lambda","add_var","borrow","borrow","borrow_mut","borrow_mut","check_assert","check_assume","clone","clone_into","default","eq","equivalent","fmt","from","from","get_lambda","get_var","into","into","ne","new","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Abort","AbortInfo","Internal","LocalState","None","PostAbort","Return","TerminationStatus","User","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","collect_pointers","del_value","fmt","fmt","from","from","from","get_pc","get_status_code","get_type","get_value","has_value","into","into","into","into_err","into_termination_status","is_post_abort","is_terminated","load_destroyed_arg","new","num_slots","put_value","put_value_override","ready_pc_for_next_instruction","save_destroyed_arg","set_pc","terminate_with_abort","terminate_with_return","to_owned","transit_to_post_abort","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0","1","1","0","0","0","ExecResult","FunctionContext","borrow","borrow_mut","entrypoint","exec_user_function","from","get_settings","into","new","try_from","try_into","type_id","vzip","Runtime","borrow","borrow_mut","convert_move_struct_tag","convert_move_type_tag","convert_move_value","execute","from","into","new","try_from","try_into","type_id","vzip","InterpreterSettings","borrow","borrow_mut","clone","clone_into","default","from","into","no_expr_check","to_owned","try_from","try_into","type_id","verbose_bytecode","verbose_default","verbose_expression","verbose_stepwise","vzip","Address","Base","BaseType","Bool","CodeOffset","Int","IntType","Num","Parameter","PartialBaseType","PartialStructField","PartialStructInstantiation","Primitive","Primitive","PrimitiveType","Reference","Signer","Struct","Struct","StructField","StructInstantiation","Type","TypeParameterIndex","U128","U64","U8","Vector","Vector","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","convert_model_base_type","convert_model_local_type","convert_model_partial_base_type","convert_model_partial_struct_type","convert_model_struct_type","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fields","fields","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_base_type","get_ref_struct_inst","get_ref_type","get_ref_vector_elem","get_struct_inst","get_struct_inst","get_vector_elem","get_vector_elem","ident","ident","insts","insts","into","into","into","into","into","into","into","into","into","into_base_type","into_ref_struct_inst","into_ref_type","into_ref_type","into_ref_vector_elem","into_struct_inst","into_struct_inst","into_vector_elem","into_vector_elem","is_address","is_address","is_base","is_base_of","is_bool","is_bool","is_compatible_for_abort_code","is_compatible_for_arithmetic","is_compatible_for_arithmetic","is_compatible_for_assign","is_compatible_for_assign","is_compatible_for_bitshift","is_compatible_for_bitshift","is_compatible_for_bitwise","is_compatible_for_bitwise","is_compatible_for_comparison","is_compatible_for_comparison","is_compatible_for_constant","is_compatible_for_constant","is_compatible_for_equality","is_compatible_for_equality","is_int","is_int","is_num","is_num","is_ref","is_ref_address","is_ref_bool","is_ref_int","is_ref_num","is_ref_of","is_ref_signer","is_ref_struct","is_ref_struct_of","is_ref_u128","is_ref_u64","is_ref_u8","is_ref_vector","is_ref_vector_of","is_signer","is_signer","is_struct","is_struct","is_struct_of","is_struct_of","is_u128","is_u128","is_u64","is_u64","is_u8","is_u8","is_vector","is_vector","is_vector_of","is_vector_of","mk_address","mk_address","mk_address","mk_bool","mk_bool","mk_bool","mk_num","mk_num","mk_num","mk_parameter","mk_ref_address","mk_ref_bool","mk_ref_num","mk_ref_signer","mk_ref_struct","mk_ref_u128","mk_ref_u64","mk_ref_u8","mk_ref_vector","mk_signer","mk_signer","mk_signer","mk_struct","mk_struct","mk_struct","mk_u128","mk_u128","mk_u128","mk_u64","mk_u64","mk_u64","mk_u8","mk_u8","mk_u8","mk_vector","mk_vector","mk_vector","name","name","ne","ne","ne","ne","ne","ne","ne","ne","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","to_move_struct_layout","to_move_struct_tag","to_move_type_layout","to_move_type_tag","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","1","Address","ArgRef","BaseValue","Bool","EvalState","Global","GlobalState","Int","Local","LocalSlot","None","Pointer","RefElement","RefField","RetRef","Signer","Struct","TypedValue","Vector","all_addresses","all_resources_by_ident","all_resources_by_inst","assign_cast","borrow","borrow","borrow","borrow","borrow","borrow","borrow_local","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_ref_struct_field","borrow_ref_vector_element","box_into_mut_ref_arg","box_into_mut_ref_ret","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","decompose","default","default","del_resource","del_value","delta","emit_event","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","freeze_ref","from","from","from","from","from","from","fuse_base","get_content","get_ptr","get_resource","get_ty","get_type","get_val","get_value","get_vector_element","has_resource","has_value","into","into","into","into","into","into","into_address","into_address","into_bcs_bytes","into_bool","into_bool","into_int","into_int","into_num","into_num","into_ref_address","into_ref_bool","into_ref_num","into_ref_signer","into_ref_struct","into_ref_u128","into_ref_u64","into_ref_u8","into_ref_vector","into_signer","into_signer","into_struct","into_struct","into_u128","into_u128","into_u64","into_u64","into_u8","into_u8","into_vector","into_vector","load_memory","mk_address","mk_address","mk_bool","mk_bool","mk_num","mk_num","mk_ref_address","mk_ref_bool","mk_ref_num","mk_ref_signer","mk_ref_struct","mk_ref_u128","mk_ref_u64","mk_ref_u8","mk_ref_vector","mk_signer","mk_signer","mk_struct","mk_struct","mk_u128","mk_u128","mk_u64","mk_u64","mk_u8","mk_u8","mk_vector","mk_vector","ne","ne","ne","ne","ne","ne","new_arg","new_tmp","partial_cmp","partial_cmp","partial_cmp","put_resource","put_value","put_value_override","read_ref","register_memory","save_memory","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unbox_from_mut_ref_arg","unbox_from_mut_ref_ret","unpack_ref_struct_field","unpack_struct","unpack_struct_field","update_ref_struct_field","update_ref_vector_element","update_ref_vector_pop_back","update_ref_vector_push_back","update_ref_vector_swap","vzip","vzip","vzip","vzip","vzip","vzip","write_ref","0","0","0","0","0","0","0","0","0","0","0","0","1","1","1","bridge","ident","variant","adapt_move_vm_change_set","adapt_move_vm_result","FunctionIdent","ModuleIdent","StructIdent","address","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","into","into","into","module","module","name","name","name","ne","ne","ne","new","new","new","partial_cmp","partial_cmp","partial_cmp","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","variant","vzip","vzip","vzip","choose_variant"],"q":["bytecode_interpreter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bytecode_interpreter::concrete","","","","","","","bytecode_interpreter::concrete::evaluator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bytecode_interpreter::concrete::local_state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bytecode_interpreter::concrete::local_state::AbortInfo","","","","bytecode_interpreter::concrete::local_state::TerminationStatus","","","bytecode_interpreter::concrete::player","","","","","","","","","","","","","","bytecode_interpreter::concrete::runtime","","","","","","","","","","","","","","bytecode_interpreter::concrete::settings","","","","","","","","","","","","","","","","","","bytecode_interpreter::concrete::tybytecode_interpreter::concrete::ty::BaseType","","","bytecode_interpreter::concrete::ty::PartialBaseType","","","","bytecode_interpreter::concrete::ty::PrimitiveType","bytecode_interpreter::concrete::ty::Type","","","bytecode_interpreter::concrete::valuebytecode_interpreter::concrete::value::BaseValue","","","","","","bytecode_interpreter::concrete::value::Pointer","","","","","","","","","bytecode_interpreter::shared","","","bytecode_interpreter::shared::bridge","","bytecode_interpreter::shared::ident","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bytecode_interpreter::shared::variant"],"d":["Options passed into the interpreter generator.","","Possibly-empty list of arguments passed to the transaction","","","","","","","The function to be executed, specified in the format of …","","","","","","","","","","","Skip checking of expressions","","","Possibly-empty list of signers for the execution","","","","","Possibly-empty list of type arguments passed to the …","","","Level of verbosity","","","This file implements the expression evaluation part of the …","This file implements the information needed in the local …","This file implements the statement interpretation part of …","This file implements the orchestration part of the …","","The type system in move-model is a fat type system that is …","This file implements several value representations to …","","","","","","","","","","Check whether an assert expression holds","Check whether an assume expression holds, unless the …","","","","","","","","","","","","","","","","","","","","","","","","The function terminated with an abort","","Internal abort (e.g., integer overflow or resource does …","","This function has not terminated, it is running normally","An abort has been triggered and the function is in …","The function terminated successfully with a list of return …","","User-specific abort","","","","","","","","","Collect the pointers of the underlying values in the local …","Delete the value held in local slot <code>index</code>. Panics if the …","","","","","","Get the current PC location (i.e., which bytecode to be …","Retrieve the status code as a u64","Get the type of the local slot at <code>index</code>","Get the value held in local slot <code>index</code>. Panics if the slot …","Check whether the local slot at <code>index</code> holds a value","","","","Convert the AbortInfo into a VMError","Consume and reduce the state into termination status","Check whether we are executing in a post-abort status","Check whether execution of the current function is …","Load a mutable argument that is destroyed","","Get the number of slots available in this state","Put the value held in local slot <code>index</code>. Panics if the slot …","Put the value held in local slot <code>index</code>. Override if the …","Decide the PC location for next bytecode instruction","Save a mutable argument that is destroyed","Set the PC location to jump to on next execution","Mark that the current function terminated with an abort","Mark that the current function terminated with return …","","Mark that an abort is raised and we will be executing the …","","","","","","","","","","","","","","","","","","","","","","","","Entrypoint of the interpretation logic","Execute a user function with value arguments.","","Retrieve the <code>InterpreterSettings</code> from the global …","","","","","","","A stackless bytecode runtime in charge of pre- and …","","","","","","Execute a function (identified by <code>fun_id</code>) with given type …","","","Construct a runtime with all information pre-loaded.","","","","","","","","","","","","","skip expression checking","","","","","dump bytecode trace","","dump expression trace","dump stepwise bytecodeeturn all addresses in the state","Return all resources with identity matching","Return all resources with instantiation matching","Cast this value into a compatible type. Cast <code>ty</code> must be …","","","","","","","Create a reference to the base value","","","","","","","Borrow one specific field from a struct reference","Borrow an element from a vector at the given index. Return …","Wrap the pointer in the mutable reference to mark that …","Wrap the pointer in the mutable reference to mark that …","","","","","","","","","","","","","","","","","","","Remove a resource from the address, return the old …","Delete the value held in this local slot. Panics if the …","Calculate the delta (i.e., a ChangeSet) against the old …","Emit an event to the event store","","","","","","","","","","","","","","","","","","","Convert the mutable reference into immutable","","","","","","","","Get the content of the slot, if any, return None of the …","","Get a reference to a resource from the address, return …","","Get the type of this local slot","","Get the value held in this local slot. Panics if the slot …","Retrieve an element from a vector at the given index. …","Check whether the address has a resource","Check whether this local slot holds a value","","","","","","","","","Into BCS-serialized bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","Load a resource with given instantiation type from the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a local slot that holds a function argument","Create a local slot that holds a function temporary","","","","Put a resource into the address, return the old resource …","Put the value held in this local slot. Panics if the slot …","Put the value held in this local slot. Override if the …","Read the reference and create a base value","Populate a global state with the resources saved by the …","Collect resources of the (partial) instantiation type from …","","","","","","","","","","","","","","","","","","","","","","","","","Unwrap the pointer from the mutable reference to its …","Unwrap the pointer from the mutable reference to its …","Unpack one specific field from a struct reference","Unpack a struct value","Unpack one specific field from a struct value","update one specific field from a struct reference, create …","Update an element in the vector, creates a new vector that …","Pop an element from the back of the vector","Push an element back to a vector","Swap two elements in the vector","","","","","","","Create a mutable reference to this base value","","","","","","","","","","","","","","","","","","","The change-set produced by the stackless VM guarantees …","The result returned by the stackless VM does not contain …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,2,1,2,1,1,0,1,2,2,1,1,2,2,0,2,1,2,1,2,0,1,2,1,2,1,1,2,1,1,2,1,0,0,0,0,0,0,0,0,0,0,3,3,4,3,4,3,4,4,3,3,3,3,3,3,4,3,3,3,4,3,3,4,3,4,3,4,3,4,3,4,3,5,0,6,0,5,5,5,0,6,7,6,5,7,6,5,6,6,7,7,6,5,7,6,5,7,6,7,7,7,7,6,5,6,7,7,7,7,7,7,7,7,7,7,7,7,7,6,7,7,6,5,7,6,5,7,6,5,7,6,5,8,9,8,9,10,11,12,0,0,13,13,0,13,13,13,13,13,13,13,13,13,0,14,14,0,0,0,14,14,14,14,14,14,14,14,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,16,17,0,16,0,16,0,18,19,0,0,0,20,19,0,17,16,20,19,0,0,0,0,18,18,18,20,19,18,16,21,22,20,17,19,23,24,18,16,21,22,20,17,19,23,24,18,16,21,22,20,17,19,23,24,18,16,21,22,20,17,19,23,24,18,16,21,22,20,17,19,23,24,0,0,0,0,0,18,16,21,22,20,17,19,23,24,18,16,21,22,20,17,19,23,24,22,24,18,18,16,16,21,22,22,20,20,17,17,19,19,23,24,24,18,16,21,22,20,17,19,23,24,17,17,17,17,20,17,20,17,22,24,22,24,18,16,21,22,20,17,19,23,24,17,17,20,17,17,20,17,20,17,20,17,17,17,20,17,17,20,17,20,17,20,17,20,17,20,17,20,17,20,17,20,17,20,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,20,17,20,17,20,17,20,17,20,17,20,17,20,17,20,17,20,17,19,20,17,19,20,17,19,19,17,17,17,17,17,17,17,17,17,20,17,19,20,17,19,20,17,19,20,17,19,20,17,19,20,17,19,21,23,16,21,22,20,17,19,23,24,18,16,21,22,20,17,19,23,24,22,22,20,20,18,16,21,22,20,17,19,23,24,18,16,22,20,17,19,24,18,16,21,22,20,17,19,23,24,18,16,21,22,20,17,19,23,24,21,23,18,16,21,22,20,17,19,23,24,18,16,21,22,20,17,19,23,24,25,26,27,28,29,30,31,32,33,34,34,35,36,0,35,0,36,0,35,36,0,36,0,36,36,36,35,35,0,35,37,37,37,38,35,36,38,39,40,37,38,35,36,38,39,40,37,38,38,38,38,35,36,38,39,40,37,35,36,38,39,40,37,35,36,38,38,40,37,40,39,40,40,35,36,38,39,40,37,35,36,38,39,40,37,35,36,38,39,40,37,38,35,36,38,39,40,37,38,39,38,40,38,39,38,39,38,40,39,35,36,38,39,40,37,35,38,38,35,38,35,38,35,38,38,38,38,38,38,38,38,38,38,35,38,35,38,35,38,35,38,35,38,35,38,37,35,38,35,38,35,38,38,38,38,38,38,38,38,38,38,35,38,35,38,35,38,35,38,35,38,35,38,35,36,38,39,40,37,39,39,35,36,38,40,39,39,38,37,37,35,36,38,39,40,37,35,36,38,39,40,37,35,36,38,39,40,37,35,36,38,39,40,37,38,38,38,38,38,38,38,38,38,38,35,36,38,39,40,37,38,41,42,43,44,45,46,47,48,49,50,51,52,49,50,51,0,0,0,0,0,0,0,0,53,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,53,54,54,55,55,53,54,55,53,54,55,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,54,53,54,55,0],"f":[null,null,null,[[]],[[]],[[]],[[]],[[],["app",3]],null,null,null,[[]],[[]],[[["argmatches",3]]],[[["identstr",3],["moduleid",3],["globalstate",3]]],[[["identstr",3],["moduleid",3],["option",4],["globalstate",3]]],[[["globalenv",3],["interpreteroptions",3]]],[[]],[[]],[[["interpretersettings",3],["option",4,["proveroptions"]],["globalenv",3],["proveroptions",3]]],null,[[],[["option",4,["string"]],["string",3]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],null,null,null,null,null,null,null,null,null,null,[[["localvardecl",3],["vec",3,["localvardecl"]],["exp",3],["string",3]]],[[["string",3],["basevalue",4]]],[[]],[[]],[[]],[[]],[[["exp",3]]],[[["exp",3]],["option",4]],[[],["expstate",3]],[[]],[[],["expstate",3]],[[["expstate",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[["str",15]]],[[["str",15]],["basevalue",4]],[[]],[[]],[[["expstate",3]],["bool",15]],[[["functiontarget",3],["functiontargetsholder",3],["evalstate",3],["usize",15],["expstate",3],["localstate",3],["globalstate",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["abortinfo",4]],[[]],[[],[["btreemap",3,["tempindex","pointer"]],["pointer",4],["tempindex",6]]],[[["tempindex",6]],["typedvalue",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["codeoffset",6]],[[],["u64",15]],[[["tempindex",6]],["type",4]],[[["tempindex",6]],["typedvalue",3]],[[["tempindex",6]],["bool",15]],[[]],[[]],[[]],[[],["vmerror",3]],[[],["terminationstatus",4]],[[],["bool",15]],[[],["bool",15]],[[["tempindex",6]],["typedvalue",3]],[[["localslot",3],["vec",3,["localslot"]]]],[[],["usize",15]],[[["typedvalue",3],["tempindex",6]]],[[["typedvalue",3],["tempindex",6]]],[[]],[[["typedvalue",3],["tempindex",6]]],[[["codeoffset",6]]],[[["abortinfo",4]]],[[["vec",3,["typedvalue"]],["typedvalue",3]]],[[]],[[["abortinfo",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[["functiontargetsholder",3],["usize",15],["vec",3,["typedvalue"]],["bool",15],["functiontarget",3],["globalstate",3],["typedvalue",3]],[["vec",3,["typedvalue"]],["execresult",6,["vec"]]]],[[["vec",3,["typedvalue"]],["globalstate",3],["evalstate",3],["typedvalue",3]],[["localstate",3],["execresult",6,["localstate"]]]],[[]],[[],[["rc",3,["interpretersettings"]],["interpretersettings",3]]],[[]],[[["usize",15],["functiontarget",3],["functiontargetsholder",3],["basetype",4],["vec",3,["basetype"]],["bool",15]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[["globalenv",3],["structtag",3]],[["partialvmresult",6,["structinstantiation"]],["structinstantiation",3]]],[[["typetag",4],["globalenv",3]],[["basetype",4],["partialvmresult",6,["basetype"]]]],[[["movevalue",4],["basetype",4],["globalenv",3]],[["partialvmresult",6,["typedvalue"]],["typedvalue",3]]],[[["functionenv",3],["globalstate",3]],[["vec",3,["typedvalue"]],["vmresult",6,["vec"]]]],[[]],[[]],[[["functiontargetsholder",3],["globalenv",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[],["interpretersettings",3]],[[]],[[],["interpretersettings",3]],[[]],[[]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["inttype",4]],[[],["primitivetype",4]],[[],["structfield",3]],[[],["structinstantiation",3]],[[],["basetype",4]],[[],["type",4]],[[],["partialbasetype",4]],[[],["partialstructfield",3]],[[],["partialstructinstantiation",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["inttype",4]],["ordering",4]],[[["primitivetype",4]],["ordering",4]],[[["structfield",3]],["ordering",4]],[[["structinstantiation",3]],["ordering",4]],[[["basetype",4]],["ordering",4]],[[["type",4]],["ordering",4]],[[["partialbasetype",4]],["ordering",4]],[[["partialstructfield",3]],["ordering",4]],[[["partialstructinstantiation",3]],["ordering",4]],[[["type",4],["globalenv",3]],["basetype",4]],[[["type",4],["globalenv",3]],["type",4]],[[["type",4],["globalenv",3]],["partialbasetype",4]],[[["structid",3],["moduleid",3],["globalenv",3]],["partialstructinstantiation",3]],[[["structid",3],["moduleid",3],["globalenv",3]],["structinstantiation",3]],[[["inttype",4]],["bool",15]],[[["primitivetype",4]],["bool",15]],[[["structfield",3]],["bool",15]],[[["structinstantiation",3]],["bool",15]],[[["basetype",4]],["bool",15]],[[["type",4]],["bool",15]],[[["partialbasetype",4]],["bool",15]],[[["partialstructfield",3]],["bool",15]],[[["partialstructinstantiation",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["basetype",4]],[[["option",4,["bool"]],["bool",15]],["structinstantiation",3]],[[]],[[["option",4,["bool"]],["bool",15]],["basetype",4]],[[],["structinstantiation",3]],[[],["structinstantiation",3]],[[],["basetype",4]],[[],["basetype",4]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["basetype",4]],[[["option",4,["bool"]],["bool",15]],["structinstantiation",3]],[[["bool",15]],["type",4]],[[]],[[["option",4,["bool"]],["bool",15]],["basetype",4]],[[],["structinstantiation",3]],[[],["structinstantiation",3]],[[],["basetype",4]],[[],["basetype",4]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["basetype",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["basetype",4]],["bool",15]],[[["type",4]],["bool",15]],[[["basetype",4]],["bool",15]],[[["type",4]],["bool",15]],[[["basetype",4]],["bool",15]],[[["type",4]],["bool",15]],[[["basetype",4]],["bool",15]],[[["type",4]],["bool",15]],[[["basetype",4]],["bool",15]],[[["type",4]],["bool",15]],[[["constant",4]],["bool",15]],[[["constant",4]],["bool",15]],[[["basetype",4]],["bool",15]],[[["type",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["option",4,["bool"]],["bool",15]],["bool",15]],[[["option",4,["bool"]],["bool",15]],["bool",15]],[[["option",4,["bool"]],["bool",15]],["bool",15]],[[["option",4,["bool"]],["bool",15]],["bool",15]],[[["option",4,["bool"]],["bool",15]],["bool",15]],[[["option",4,["bool"]],["basetype",4],["bool",15]],["bool",15]],[[["option",4,["bool"]],["bool",15]],["bool",15]],[[["option",4,["bool"]],["bool",15]],["bool",15]],[[["option",4,["bool"]],["structinstantiation",3],["bool",15]],["bool",15]],[[["option",4,["bool"]],["bool",15]],["bool",15]],[[["option",4,["bool"]],["bool",15]],["bool",15]],[[["option",4,["bool"]],["bool",15]],["bool",15]],[[["option",4,["bool"]],["bool",15]],["bool",15]],[[["option",4,["bool"]],["basetype",4],["bool",15]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["structinstantiation",3]],["bool",15]],[[["structinstantiation",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["basetype",4]],["bool",15]],[[["basetype",4]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["typeparameterindex",6]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15],["structinstantiation",3]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["basetype",4],["bool",15]]],[[]],[[]],[[]],[[["structinstantiation",3]]],[[["structinstantiation",3]]],[[["partialstructinstantiation",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["basetype",4]]],[[["basetype",4]]],[[]],null,null,[[["primitivetype",4]],["bool",15]],[[["structfield",3]],["bool",15]],[[["structinstantiation",3]],["bool",15]],[[["basetype",4]],["bool",15]],[[["type",4]],["bool",15]],[[["partialbasetype",4]],["bool",15]],[[["partialstructfield",3]],["bool",15]],[[["partialstructinstantiation",3]],["bool",15]],[[["inttype",4]],[["option",4,["ordering"]],["ordering",4]]],[[["primitivetype",4]],[["option",4,["ordering"]],["ordering",4]]],[[["structfield",3]],[["option",4,["ordering"]],["ordering",4]]],[[["structinstantiation",3]],[["option",4,["ordering"]],["ordering",4]]],[[["basetype",4]],[["option",4,["ordering"]],["ordering",4]]],[[["type",4]],[["option",4,["ordering"]],["ordering",4]]],[[["partialbasetype",4]],[["option",4,["ordering"]],["ordering",4]]],[[["partialstructfield",3]],[["option",4,["ordering"]],["ordering",4]]],[[["partialstructinstantiation",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["movestructlayout",4]],[[],["structtag",3]],[[],["movetypelayout",4]],[[],["typetag",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["btreeset",3,["accountaddress"]],["accountaddress",3]]],[[["structident",3]],[["basevalue",4],["vec",3,["basevalue"]]]],[[["structinstantiation",3]],[["basevalue",4],["vec",3,["basevalue"]]]],[[["type",4]],["typedvalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["tempindex",6],["bool",15]],["typedvalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15],["tempindex",6],["bool",15]],["typedvalue",3]],[[["usize",15],["tempindex",6],["bool",15]],[["option",4,["typedvalue"]],["typedvalue",3]]],[[["tempindex",6]],["typedvalue",3]],[[["btreemap",3]],["typedvalue",3]],[[],["basevalue",4]],[[],["pointer",4]],[[],["typedvalue",3]],[[],["localslot",3]],[[],["globalstate",3]],[[],["evalstate",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["basevalue",4]],["ordering",4]],[[["pointer",4]],["ordering",4]],[[["typedvalue",3]],["ordering",4]],[[]],[[],["globalstate",3]],[[],["evalstate",3]],[[["accountaddress",3],["structinstantiation",3]],[["option",4,["typedvalue"]],["typedvalue",3]]],[[],["typedvalue",3]],[[["globalstate",3]],["changeset",3]],[[["u64",15],["u8",15],["vec",3,["u8"]],["typedvalue",3]]],[[["basevalue",4]],["bool",15]],[[["pointer",4]],["bool",15]],[[["typedvalue",3]],["bool",15]],[[["localslot",3]],["bool",15]],[[["globalstate",3]],["bool",15]],[[["evalstate",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["typedvalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["basetype",4],["basevalue",4]]],[[],["option",4]],[[],["pointer",4]],[[["structinstantiation",3],["accountaddress",3],["bool",15],["option",4,["bool"]]],[["option",4,["typedvalue"]],["typedvalue",3]]],[[],["type",4]],[[],["type",4]],[[],["basevalue",4]],[[],["typedvalue",3]],[[["usize",15]],[["option",4,["typedvalue"]],["typedvalue",3]]],[[["structinstantiation",3],["accountaddress",3]],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["accountaddress",3]],[[],["accountaddress",3]],[[],[["option",4,["vec"]],["vec",3,["u8"]]]],[[],["bool",15]],[[],["bool",15]],[[],["bigint",3]],[[],["bigint",3]],[[],["bigint",3]],[[],["bigint",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["accountaddress",3]],[[],["accountaddress",3]],[[],[["basevalue",4],["vec",3,["basevalue"]]]],[[],[["basevalue",4],["vec",3,["basevalue"]]]],[[],["u128",15]],[[],["u128",15]],[[],["u64",15]],[[],["u64",15]],[[],["u8",15]],[[],["u8",15]],[[],[["basevalue",4],["vec",3,["basevalue"]]]],[[],[["basevalue",4],["vec",3,["basevalue"]]]],[[["structinstantiation",3],["accountaddress",3],["memorylabel",6]],[["basevalue",4],["option",4,["basevalue"]]]],[[["accountaddress",3]]],[[["accountaddress",3]]],[[["bool",15]]],[[["bool",15]]],[[["bigint",3]]],[[["bigint",3]]],[[["pointer",4],["accountaddress",3],["bool",15]]],[[["pointer",4],["bool",15]]],[[["bigint",3],["pointer",4],["bool",15]]],[[["pointer",4],["accountaddress",3],["bool",15]]],[[["structinstantiation",3],["vec",3,["typedvalue"]],["pointer",4],["bool",15],["typedvalue",3]]],[[["pointer",4],["u128",15],["bool",15]]],[[["u64",15],["pointer",4],["bool",15]]],[[["u8",15],["pointer",4],["bool",15]]],[[["vec",3,["typedvalue"]],["pointer",4],["bool",15],["basetype",4],["typedvalue",3]]],[[["accountaddress",3]]],[[["accountaddress",3]]],[[["vec",3,["basevalue"]],["basevalue",4]]],[[["typedvalue",3],["vec",3,["typedvalue"]],["structinstantiation",3]]],[[["u128",15]]],[[["u128",15]]],[[["u64",15]]],[[["u64",15]]],[[["u8",15]]],[[["u8",15]]],[[["vec",3,["basevalue"]],["basevalue",4]]],[[["basetype",4],["vec",3,["typedvalue"]],["typedvalue",3]]],[[["basevalue",4]],["bool",15]],[[["pointer",4]],["bool",15]],[[["typedvalue",3]],["bool",15]],[[["localslot",3]],["bool",15]],[[["globalstate",3]],["bool",15]],[[["evalstate",3]],["bool",15]],[[["string",3],["typedvalue",3]]],[[["type",4],["string",3]]],[[["basevalue",4]],[["option",4,["ordering"]],["ordering",4]]],[[["pointer",4]],[["option",4,["ordering"]],["ordering",4]]],[[["typedvalue",3]],[["option",4,["ordering"]],["ordering",4]]],[[["typedvalue",3],["accountaddress",3],["structinstantiation",3]],[["option",4,["typedvalue"]],["typedvalue",3]]],[[["typedvalue",3]]],[[["typedvalue",3]]],[[],["typedvalue",3]],[[["globalstate",3],["memorylabel",6]]],[[["partialstructinstantiation",3],["globalstate",3],["memorylabel",6]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typedvalue",3]],[[],["typedvalue",3]],[[["usize",15],["option",4,["bool"]],["bool",15]],["typedvalue",3]],[[],[["vec",3,["typedvalue"]],["typedvalue",3]]],[[["usize",15]],["typedvalue",3]],[[["usize",15],["typedvalue",3]],["typedvalue",3]],[[["usize",15],["typedvalue",3]],["typedvalue",3]],[[],["option",4]],[[["typedvalue",3]],["typedvalue",3]],[[["usize",15]],[["option",4,["typedvalue"]],["typedvalue",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["pointer",4]],["typedvalue",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["changeset",3],["vmresult",6,["changeset"]]],[["changeset",3],["vmresult",6,["changeset"]]]],[[["vmresult",6]],["vmresult",6]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["moduleident",3]],[[],["functionident",3]],[[],["structident",3]],[[]],[[]],[[]],[[["moduleident",3]],["ordering",4]],[[["functionident",3]],["ordering",4]],[[["structident",3]],["ordering",4]],[[["moduleident",3]],["bool",15]],[[["functionident",3]],["bool",15]],[[["structident",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[["moduleident",3]],["bool",15]],[[["functionident",3]],["bool",15]],[[["structident",3]],["bool",15]],[[["moduleenv",3]]],[[["functiontarget",3]]],[[["structenv",3]]],[[["moduleident",3]],[["option",4,["ordering"]],["ordering",4]]],[[["functionident",3]],[["option",4,["ordering"]],["ordering",4]]],[[["structident",3]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[["functiontargetsholder",3],["functionenv",3]],["functiontarget",3]]],"p":[[3,"InterpreterOptions"],[3,"StacklessBytecodeInterpreter"],[3,"ExpState"],[3,"Evaluator"],[4,"TerminationStatus"],[4,"AbortInfo"],[3,"LocalState"],[13,"User"],[13,"Internal"],[13,"PostAbort"],[13,"Return"],[13,"Abort"],[3,"FunctionContext"],[3,"Runtime"],[3,"InterpreterSettings"],[4,"PrimitiveType"],[4,"Type"],[4,"IntType"],[4,"PartialBaseType"],[4,"BaseType"],[3,"StructField"],[3,"StructInstantiation"],[3,"PartialStructField"],[3,"PartialStructInstantiation"],[13,"Primitive"],[13,"Vector"],[13,"Struct"],[13,"Primitive"],[13,"Parameter"],[13,"Vector"],[13,"Struct"],[13,"Int"],[13,"Base"],[13,"Reference"],[4,"BaseValue"],[4,"Pointer"],[3,"EvalState"],[3,"TypedValue"],[3,"LocalSlot"],[3,"GlobalState"],[13,"Bool"],[13,"Int"],[13,"Address"],[13,"Signer"],[13,"Vector"],[13,"Struct"],[13,"Global"],[13,"Local"],[13,"RefField"],[13,"RefElement"],[13,"ArgRef"],[13,"RetRef"],[3,"ModuleIdent"],[3,"FunctionIdent"],[3,"StructIdent"]]},\
"bytecode_interpreter_crypto":{"doc":"This file duplicates the code in the diem-crypto crate to …","t":[5,5,5,5,5],"n":["ed25519_deserialize_public_key","ed25519_deserialize_signature","ed25519_verify_signature","sha2_256_of","sha3_256_of"],"q":["bytecode_interpreter_crypto","","","",""],"d":["","","","",""],"i":[0,0,0,0,0],"f":[[[],[["result",6,["ed25519publickey"]],["ed25519publickey",3]]],[[],[["result",6,["ed25519signature"]],["ed25519signature",3]]],[[["ed25519publickey",3],["ed25519signature",3]],["result",6]],[[],[["vec",3,["u8"]],["u8",15]]],[[],[["vec",3,["u8"]],["u8",15]]]],"p":[]},\
"bytecode_source_map":{"doc":"","t":[0,0,0,0,3,11,11,12,11,11,11,12,11,11,12,12,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,3,3,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,6,6,5],"n":["mapping","marking","source_map","utils","SourceMapping","borrow","borrow_mut","bytecode","fmt","from","into","marks","new","new_from_view","source_code","source_map","try_from","try_into","type_id","vzip","with_marks","with_source_code","FunctionMarking","MarkedSourceMapping","StructMarking","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","code_offset","code_offsets","default","default","default","field","fields","fmt","fmt","fmt","from","from","from","into","into","into","mark_code_offset","mark_function_type_param","mark_struct_field","mark_struct_type_param","new","new","new","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_param","type_param","type_param_offsets","type_param_offsets","vzip","vzip","vzip","FunctionSourceMap","SourceMap","SourceName","StructSourceMap","add_code_mapping","add_code_mapping","add_const_mapping","add_field_location","add_function_type_parameter_mapping","add_local_mapping","add_local_mapping","add_nop_mapping","add_nop_mapping","add_parameter_mapping","add_parameter_mapping","add_struct_field_mapping","add_struct_type_parameter_mapping","add_top_level_function_mapping","add_top_level_struct_mapping","add_type_parameter","add_type_parameter","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check","clone","clone","clone","clone_into","clone_into","clone_into","code_map","constant_map","definition_location","definition_location","definition_location","deserialize","deserialize","deserialize","dummy_from_view","dummy_function_map","dummy_struct_map","fields","fmt","fmt","fmt","from","from","from","get_code_location","get_code_location","get_field_location","get_function_source_map","get_function_type_parameter_name","get_parameter_or_local_name","get_parameter_or_local_name","get_struct_field_name","get_struct_source_map","get_struct_type_parameter_name","get_type_parameter_name","get_type_parameter_name","into","into","into","is_native","locals","make_local_name_to_index_map","module_name_opt","new","new","new","nops","parameters","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_parameters","type_parameters","vzip","vzip","vzip","Error","Errors","source_map_from_file"],"q":["bytecode_source_map","","","","bytecode_source_map::mapping","","","","","","","","","","","","","","","","","","bytecode_source_map::marking","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bytecode_source_map::source_map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bytecode_source_map::utils","",""],"d":["","","","","An object that associates source code with compiled …","","","","","","","","","","","","","","","","","","A data structure used to track any markings or extra …","A data structure that contains markings for both functions …","A data structure used to track any markings or extra …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A single source-level instruction may possibly map to a …","","","","","","","Record the code offset for an Nop label","","","","","","","","","","","","","","","","","","","","","","","The source location map for the function body.","","The source declaration location of the struct","The source location for the definition of this entire …","The source location for the definition of the module or …","","","","Create a ‘dummy’ source map for a compiled module or …","","","Note that fields to a struct source map need to be added …","","","","","","","Recall that we are using a segment tree. We therefore …","Given a function definition and a code offset within that …","","","","","","","","","","","","","","Whether this function is a native function or not.","The index into the vector is the locals index. The …","","The name &lt;address.module_name&gt; for module that this source …","","","","A map to the code offset for a corresponding nop. Nop’s …","","","","","","","","","","","","","","","","","Important: type parameters need to be added in the order …","Note that type parameters need to be added in the order of …","","","","","",""],"i":[0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,2,3,4,2,3,4,2,2,2,3,4,3,3,2,3,4,2,3,4,2,3,4,4,4,4,4,2,3,4,2,3,4,2,3,4,2,3,4,2,3,2,3,2,3,4,0,0,0,0,5,6,6,7,6,5,6,5,6,5,6,6,6,6,6,7,5,7,5,6,7,5,6,6,7,5,6,7,5,6,5,6,7,5,6,7,5,6,6,5,7,7,7,5,6,7,5,6,5,6,7,6,6,5,6,6,6,6,7,5,7,5,6,5,5,5,6,7,5,6,5,5,7,5,6,7,5,6,7,5,6,7,5,6,7,5,6,7,5,7,5,6,0,0,0],"f":[null,null,null,null,null,[[]],[[]],null,[[["formatter",3]],["result",6]],[[]],[[]],null,[[["sourcemap",3],["binaryindexedview",4]]],[[["binaryindexedview",4],["loc",3]],["result",6]],null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["markedsourcemapping",3]]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["string",3],["codeoffset",6]]],null,[[],["functionmarking",3]],[[],["structmarking",3]],[[],["markedsourcemapping",3]],[[["membercount",6],["string",3]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["functiondefinitionindex",3],["string",3],["codeoffset",6]]],[[["functiondefinitionindex",3],["usize",15],["string",3]]],[[["membercount",6],["structdefinitionindex",3],["string",3]]],[[["usize",15],["structdefinitionindex",3],["string",3]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["usize",15],["string",3]]],[[["usize",15],["string",3]]],null,null,[[]],[[]],[[]],null,null,null,null,[[["loc",3],["codeoffset",6]]],[[["functiondefinitionindex",3],["loc",3],["codeoffset",6]],["result",6]],[[["constantpoolindex",3],["constantname",3]],["result",6]],[[["loc",3]]],[[["functiondefinitionindex",3],["sourcename",6]],["result",6]],[[["sourcename",6]]],[[["functiondefinitionindex",3],["sourcename",6]],["result",6]],[[["codeoffset",6],["noplabel",3]]],[[["functiondefinitionindex",3],["codeoffset",6],["noplabel",3]],["result",6]],[[["sourcename",6]]],[[["functiondefinitionindex",3],["sourcename",6]],["result",6]],[[["structdefinitionindex",3],["loc",3]],["result",6]],[[["structdefinitionindex",3],["sourcename",6]],["result",6]],[[["functiondefinitionindex",3],["loc",3],["bool",15]],["result",6]],[[["structdefinitionindex",3],["loc",3]],["result",6]],[[["sourcename",6]]],[[["sourcename",6]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["bool",15]],[[],["structsourcemap",3]],[[],["functionsourcemap",3]],[[],["sourcemap",3]],[[]],[[]],[[]],null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["binaryindexedview",4],["loc",3]],["result",6]],[[["binaryindexedview",4],["functiondefinition",3],["loc",3]],["result",6]],[[["binaryindexedview",4],["structdefinition",3],["loc",3]],["result",6]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["codeoffset",6]],[["loc",3],["option",4,["loc"]]]],[[["functiondefinitionindex",3],["codeoffset",6]],[["result",6,["loc"]],["loc",3]]],[[["membercount",6]],[["loc",3],["option",4,["loc"]]]],[[["functiondefinitionindex",3]],[["result",6,["functionsourcemap"]],["functionsourcemap",3]]],[[["functiondefinitionindex",3],["usize",15]],[["sourcename",6],["result",6,["sourcename"]]]],[[["u64",15]],[["option",4,["sourcename"]],["sourcename",6]]],[[["functiondefinitionindex",3],["u64",15]],[["sourcename",6],["result",6,["sourcename"]]]],[[["membercount",6],["structdefinitionindex",3]],[["loc",3],["option",4,["loc"]]]],[[["structdefinitionindex",3]],[["structsourcemap",3],["result",6,["structsourcemap"]]]],[[["usize",15],["structdefinitionindex",3]],[["sourcename",6],["result",6,["sourcename"]]]],[[["usize",15]],[["option",4,["sourcename"]],["sourcename",6]]],[[["usize",15]],[["option",4,["sourcename"]],["sourcename",6]]],[[]],[[]],[[]],null,null,[[],[["string",3],["localindex",6],["btreemap",3,["string","localindex"]]]],null,[[["loc",3]]],[[["loc",3],["bool",15]]],[[["option",4,["moduleident"]],["moduleident",3],["loc",3]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[]],null,null,[[["path",3]],[["result",6,["sourcemap"]],["sourcemap",3]]]],"p":[[3,"SourceMapping"],[3,"FunctionMarking"],[3,"StructMarking"],[3,"MarkedSourceMapping"],[3,"FunctionSourceMap"],[3,"SourceMap"],[3,"StructSourceMap"]]},\
"bytecode_verifier":{"doc":"Verifies bytecode sanity.","t":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,3,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,3,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,5,5,3,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,5,5],"n":["ability_field_requirements","check_duplication","code_unit_verifier","constants","control_flow","cyclic_dependencies","dependencies","friends","instantiation_loops","instruction_consistency","script_signature","signature","struct_defs","verifier","verify_module","DuplicationChecker","borrow","borrow_mut","from","into","try_from","try_into","type_id","verify_module","verify_script","vzip","CodeUnitVerifier","borrow","borrow_mut","from","into","try_from","try_into","type_id","verify_module","verify_script","vzip","verify_module","verify_script","verify","verify_module","verify_module","verify_script","verify_script_impl","verify_module","InstantiationLoopChecker","borrow","borrow_mut","from","into","try_from","try_into","type_id","verify_module","vzip","InstructionConsistency","borrow","borrow_mut","from","into","try_from","try_into","type_id","verify_module","verify_script","verify_script_impl","vzip","verify_module_script_function","verify_script","SignatureChecker","borrow","borrow_mut","from","into","try_from","try_into","type_id","verify_module","verify_script","vzip","RecursiveStructDefChecker","borrow","borrow_mut","from","into","try_from","try_into","type_id","verify_module","vzip","verify_module","verify_script"],"q":["bytecode_verifier","","","","","","","","","","","","","","bytecode_verifier::ability_field_requirements","bytecode_verifier::check_duplication","","","","","","","","","","","bytecode_verifier::code_unit_verifier","","","","","","","","","","","bytecode_verifier::constants","","bytecode_verifier::control_flow","bytecode_verifier::cyclic_dependencies","bytecode_verifier::dependencies","","","bytecode_verifier::friends","bytecode_verifier::instantiation_loops","","","","","","","","","","bytecode_verifier::instruction_consistency","","","","","","","","","","","","bytecode_verifier::script_signature","","bytecode_verifier::signature","","","","","","","","","","","bytecode_verifier::struct_defs","","","","","","","","","","bytecode_verifier::verifier",""],"d":["This module implements a checker for verifying that all of …","This module implements a checker for verifying that each …","This module implements the checker for verifying …","This module implements a checker for verifying that","This module implements a checker for verifies control …","This module contains verification of usage of dependencies …","This module contains verification of usage of dependencies …","This module contains verification of usage of dependencies …","This implements an algorithm that detects loops during the …","This module defines the transfer functions for verifying …","This module implements a checker for verifying that a …","This module implements a checker for verifying signature …","This module provides a checker for verifying that struct …","This module contains the public APIs supported by the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This function checks the extra requirements on the …","This function checks the extra requirements on the …","","","","","","","","","","","","","","","","","","","","","","Helper for a “canonical” verification of a module.","Helper for a “canonical” verification of a script."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,0,4,4,4,4,4,4,4,4,4,4,4,0,0,0,5,5,5,5,5,5,5,5,5,5,0,6,6,6,6,6,6,6,6,6,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["compiledmodule",3]],["vmresult",6]],null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["compiledmodule",3]],["vmresult",6]],[[["compiledscript",3]],["vmresult",6]],[[]],null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["compiledmodule",3]],["vmresult",6]],[[["compiledscript",3]],["vmresult",6]],[[]],[[["compiledmodule",3]],["vmresult",6]],[[["compiledscript",3]],["vmresult",6]],[[["codeunit",3],["functiondefinitionindex",3],["option",4,["functiondefinitionindex"]]],["partialvmresult",6]],[[["compiledmodule",3]],["vmresult",6]],[[["compiledmodule",3]],["vmresult",6]],[[["compiledscript",3]],["vmresult",6]],[[["compiledscript",3]],["partialvmresult",6]],[[["compiledmodule",3]],["vmresult",6]],null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["compiledmodule",3]],["vmresult",6]],[[]],null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["compiledmodule",3]],["vmresult",6]],[[["compiledscript",3]],["vmresult",6]],[[["compiledscript",3]],["partialvmresult",6]],[[]],[[["identstr",3],["compiledmodule",3]],["vmresult",6]],[[["compiledscript",3]],["vmresult",6]],null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["compiledmodule",3]],["vmresult",6]],[[["compiledscript",3]],["vmresult",6]],[[]],null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["compiledmodule",3]],["vmresult",6]],[[]],[[["compiledmodule",3]],["vmresult",6]],[[["compiledscript",3]],["vmresult",6]]],"p":[[3,"DuplicationChecker"],[3,"CodeUnitVerifier"],[3,"InstantiationLoopChecker"],[3,"InstructionConsistency"],[3,"SignatureChecker"],[3,"RecursiveStructDefChecker"]]},\
"bytecode_verifier_tests":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"bytecode_verifier_transactional_tests":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"channel":{"doc":"Provides an mpsc (multi-producer single-consumer) channel …","t":[3,3,11,11,11,11,11,11,0,11,11,11,11,11,0,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,13,13,4,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Receiver","Sender","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","diem_channel","from","from","into","into","is_terminated","message_queues","new","new_test","poll_close","poll_flush","poll_next","poll_ready","start_send","to_owned","try_from","try_from","try_into","try_into","try_poll_next","try_send","type_id","type_id","Config","Dequeued","Dropped","ElementStatus","Receiver","Sender","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clear","clone","clone","clone_into","clone_into","counters","counters","drop","drop","eq","fmt","fmt","fmt","from","from","from","from","into","into","into","into","is_terminated","max_capacity","new","new","poll_next","push","push_with_feedback","queue_style","queue_style","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","type_id","0","FIFO","KLAST","LIFO","QueueStyle","borrow","borrow_mut","clone","clone_into","default","fmt","from","into","to_owned","try_from","try_into","type_id"],"q":["channel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","channel::diem_channel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","channel::diem_channel::ElementStatus","channel::message_queues","","","","","","","","","","","","","","",""],"d":["An <code>mpsc::Receiver</code> with an <code>IntGauge</code> counting the number of …","An <code>mpsc::Sender</code> with an <code>IntGauge</code> counting the number of …","","","","","","","diem_channel provides an mpsc channel which has two ends …","","","","","","","Similar to <code>mpsc::channel</code>, <code>new</code> creates a pair of <code>Sender</code> and …","","","","","","","","","","","","","","","","Configuration for a new diem_channel queue.","","","The status of an element inserted into a diem_channel. If …","The receiving end of the diem_channel.","The sending end of the diem_channel.","","","","","","","","","","Removes all the previously sent transactions that have not …","","","","","Optional prometheus counters for this queue, which keep …","","","","","","","","","","","","","","","","","","Create a new Diem Channel and returns the two ends of the …","The diem_channel has a “sub-queue” per key. The …","poll_next checks whether there is something ready for …","This adds the message into the internal queue data …","Same as <code>push</code>, but this function also accepts a …","The queue’s push/pop and eviction behavior. Defaults to …","","","","","","","","","","","","","","","","","","","","","QueueStyle is an enum which can be used as a configuration …","","","","","","","","","","","",""],"i":[0,0,1,2,1,2,1,1,0,1,2,1,2,2,0,0,0,1,1,2,1,1,1,1,2,1,2,2,1,1,2,0,3,3,0,0,0,3,4,5,6,3,4,5,6,6,5,4,6,4,6,6,6,4,5,3,3,4,5,3,4,5,6,3,4,5,6,5,6,0,6,5,4,4,6,6,4,6,3,4,5,6,3,4,5,6,5,3,4,5,6,7,8,8,8,0,8,8,8,8,8,8,8,8,8,8,8,8],"f":[null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[],["bool",15]],null,[[["usize",15],["intgauge",6]]],[[["usize",15]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3]],["result",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[],[["result",4,["senderror"]],["senderror",3]]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["config",3]],[[]],[[]],[[["intcountervec",6]]],null,[[]],[[]],[[["elementstatus",4]],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],null,[[["usize",15],["intcountervec",6],["option",4,["intcountervec"]],["queuestyle",4]]],[[["usize",15]]],[[["pin",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[],["result",6]],[[["option",4,["sender"]],["sender",3,["elementstatus"]]],["result",6]],[[["queuestyle",4]]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,[[]],[[]],[[],["queuestyle",4]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"Sender"],[3,"Receiver"],[4,"ElementStatus"],[3,"Sender"],[3,"Receiver"],[3,"Config"],[13,"Dropped"],[4,"QueueStyle"]]},\
"cli":{"doc":"Diem Client","t":[3,4,13,13,13,12,12,11,11,11,11,0,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,4,13,3,3,13,3,12,12,11,12,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,12,12,8,5,5,10,10,5,10,11,5,5,5,5,5,5],"n":["AccountData","AccountStatus","Local","Persisted","Unknown","address","authentication_key","borrow","borrow","borrow_mut","borrow_mut","client_proxy","clone","clone_into","commands","deserialize","deserialize","eq","eq","erased_serialize","erased_serialize","fmt","fmt","from","from","into","into","key_pair","keypair_as_string","ne","sequence_number","serialize","serialize","status","test_only_hash","test_only_hash","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AccountEntry","Address","AddressAndIndex","ClientProxy","Index","IndexAndSequence","account_index","accounts","add_currency","address","association_transaction_with_local_diem_root_account","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_id","change_diem_version","client","compile_program","convert_to_on_chain_representation","convert_to_scaled_representation","create_next_account","diem_root_account","enable_custom_script","execute_script","fmt","fmt","from","from","from","from","get_account","get_account_address_from_parameter","get_balances","get_committed_txn_by_acc_seq","get_committed_txn_by_range","get_events_by_account_and_type","get_latest_account","get_latest_account_resources","get_latest_version","get_sequence_number","index","insert_account_data","into","into","into","into","latest_epoch_change_li","mint_coins","new","prepare_transfer_coins","print_all_accounts","publish_module","quiet_wait","recover_accounts_in_wallet","recover_wallet_accounts","sequence_number","set_accounts","streaming_client","submit_and_wait","submit_signed_transaction","submit_writeset","tc_account","test_trusted_connection","test_validator_connection","testnet_designated_dealer_account","to_string","transfer_coins","transfer_coins_int","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upgrade_stdlib","url","vzip","vzip","vzip","vzip","wait_for_signed_transaction","wait_for_transaction","wallet","write_recovery","0","0","Command","blocking_cmd","debug_format_cmd","execute","get_aliases","get_commands","get_description","get_params_help","is_address","is_authentication_key","parse_cmd","print_subcommand_help","report_error","subcommand_execute"],"q":["cli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cli::client_proxy","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cli::client_proxy::AccountEntry","","cli::commands","","","","","","","","","","","","",""],"d":["Struct used to store data for each created account.  We …","Enum used to represent account status.","Account exists only in local cache, it is not persisted on …","Account is persisted on chain.","Not able to check account status, probably because client …","Address of the account.","Authentication key of the account.","","","","","Main instance of client holding corresponding information, …","","","Command struct to interact with client.","","","","","","","","","","","","","(private_key, public_key) pair if the account is not …","Serialize account keypair if exists.","","Latest sequence number maintained by client, it can be …","","","Whether the account is initialized on chain, cached local …","","","","","","","","","","","","Account is represented either as an entry into accounts …","Address of the account","Account data is stored in a map and referenced by an index.","Proxy handling CLI commands/inputs.","Index into client.accounts","Used to return the sequence and sender account index …","Index/key of the account in TestClient::accounts vector.","Created accounts.","Adds a currency to the sending account. Fails if that …","Address of the account.","Send a transaction signed by the local diem_root credential","","","","","","","","","chain ID of the Diem network this client is interacting …","Modify the stored DiemVersion on chain.","client for admission control interface.","Compile Move program","convert number of coins (main unit) given as string to its …","Scale the number in <code>input</code> based on <code>scaling_factor</code> and …","Returns the account index that should be used by user to …","Account used for Diem Root operations (e.g., adding a new …","Allow executing arbitrary script in the network.","Execute custom script","","","","","","","Gets account data for the indexed address","Get account address and (if applicable) authentication key …","Get balance from validator for the account specified.","Get committed txn by account and sequence number.","Get committed txn by account and sequence number","Get events by account and event type with start sequence …","Get the latest account information from validator.","Get the latest annotated account resources from validator.","Get the latest version","Get the latest sequence number from validator for the …","The account_ref_id of this account in client.","Insert the account data to Client::accounts and return its …","","","","","Returns the ledger info corresonding to the latest epoch …","Mints coins for the receiver specified.","Construct a new TestClient.","Prepare a transfer transaction: return the unsigned raw …","Print index and address of all accounts.","Publish Move module","do not print ‘.’ when waiting for signed transaction","Recover accounts in wallets and sync state if …","Recover wallet accounts from command ‘recover ’ and …","Sequence number of the account.","Set the account of this client instance.","Gets a websocket client for the same node <code>DiemClient</code> …","Submit transaction and waits for the transaction executed","Submit a transaction to the network given the unsigned raw …","Submit a writeset transaction signed by local diem root …","Account used for Treasury Compliance operations","Test client’s connection to validator with proof.","Test JSON RPC client connection with validator.","Account used for “minting” operations","","Transfers coins from sender to receiver.","Transfer num_coins from sender account to receiver. If …","","","","","","","","","","","","","Only allow executing predefined script in the Move …","Host of the node that client connects to","","","","","Waits for the transaction","Wait for transaction, this function is not safe for …","Wallet library managing user accounts.","Write mnemonic recover to the file specified.","","","Trait to perform client operations.","Check whether a command is blocking.","Check whether a command is debugging command.","code to execute.","all commands and aliases this command support.","Returns all the commands available, as well as the reverse …","string that describes what the command does.","string that describes params.","Check whether the input string is a valid diem address.","Check whether the input string is a valid diem …","Parse a cmd string, the first element in the returned …","Print the help message for all sub commands.","Print the error and bump up error counter.","Execute sub command."],"i":[0,0,1,1,1,2,2,2,1,2,1,0,1,1,0,2,1,2,1,2,1,2,1,2,1,2,1,2,2,2,2,2,1,2,2,1,1,2,1,2,1,2,1,2,1,0,3,0,0,3,0,4,5,5,6,5,3,4,5,6,3,4,5,6,5,5,5,5,5,5,5,5,5,5,3,6,3,4,5,6,5,5,5,5,5,5,5,5,5,5,6,5,3,4,5,6,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,3,5,5,3,4,5,6,3,4,5,6,3,4,5,6,5,5,3,4,5,6,5,5,5,5,7,8,0,0,0,9,9,0,9,9,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,[[],["accountstatus",4]],[[]],null,[[],["result",4]],[[],["result",4]],[[["accountdata",3]],["bool",15]],[[["accountstatus",4]],["bool",15]],[[["serializer",8]],[["ok",3],["error",3],["result",4,["ok","error"]]]],[[["serializer",8]],[["ok",3],["error",3],["result",4,["ok","error"]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,[[],["option",4]],[[["accountdata",3]],["bool",15]],null,[[],["result",4]],[[],["result",4]],null,[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,[[["bool",15]],["result",6]],null,[[["transactionpayload",4],["bool",15]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["bool",15]],["result",6]],null,[[],[["vec",3,["string"]],["result",6,["vec"]]]],[[["str",15]],[["u64",15],["result",6,["u64"]]]],[[["str",15],["i64",15]],[["u64",15],["result",6,["u64"]]]],[[["bool",15]],[["addressandindex",3],["result",6,["addressandindex"]]]],null,[[["bool",15]],["result",6]],[[],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["usize",15]],[["option",4,["accountdata"]],["accountdata",3]]],[[["str",15]],["result",6]],[[],[["vec",3,["string"]],["result",6,["vec"]]]],[[],[["option",4,["transactionview"]],["result",6,["option"]]]],[[],[["result",6,["vec"]],["vec",3,["transactionview"]]]],[[],["result",6]],[[],[["result",6,["option"]],["option",4,["accountview"]]]],[[],["result",6]],[[],["version",6]],[[],[["u64",15],["result",6,["u64"]]]],null,[[["accountdata",3]],["addressandindex",3]],[[]],[[]],[[]],[[]],[[],[["option",4,["ledgerinfowithsignatures"]],["ledgerinfowithsignatures",4]]],[[["bool",15]],["result",6]],[[["string",3],["waypoint",3],["bool",15],["option",4,["string"]],["str",15],["chainid",3]],["result",6]],[[["u64",15],["string",3],["option",4,["u64"]],["accountaddress",3],["option",4,["string"]]],[["rawtransaction",3],["result",6,["rawtransaction"]]]],[[]],[[],["result",6]],null,[[],[["result",6,["vec"]],["vec",3,["addressandindex"]]]],[[],[["result",6,["vec"]],["vec",3,["addressandindex"]]]],null,[[["accountdata",3],["vec",3,["accountdata"]]],[["addressandindex",3],["vec",3,["addressandindex"]]]],[[["option",4,["streamingclientconfig"]],["streamingclientconfig",3]]],[[["bool",15],["signedtransaction",3]],["result",6]],[[["ed25519signature",3],["rawtransaction",3],["ed25519publickey",3]],["result",6]],[[],["result",6]],null,[[],["result",6]],[[],[["metadataview",3],["result",6,["metadataview"]]]],null,[[],["string",3]],[[["bool",15]],[["result",6,["indexandsequence"]],["indexandsequence",3]]],[[["u64",15],["string",3],["option",4,["u64"]],["accountaddress",3],["option",4,["string"]],["bool",15]],[["result",6,["indexandsequence"]],["indexandsequence",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["bool",15]],["result",6]],null,[[]],[[]],[[]],[[]],[[["signedtransaction",3]],[["result",6,["transactionview"]],["transactionview",3]]],[[["accountaddress",3],["u64",15]],["result",6]],null,[[],["result",6]],null,null,null,[[["str",15]],["bool",15]],[[["str",15]],["bool",15]],[[["clientproxy",3]]],[[],[["vec",3,["str"]],["str",15]]],[[["bool",15]]],[[],["str",15]],[[],["str",15]],[[["str",15]],["bool",15]],[[["str",15]],["bool",15]],[[["str",15]],[["vec",3,["str"]],["str",15]]],[[["str",15]]],[[["error",3],["str",15]]],[[["box",3,["command"]],["clientproxy",3],["str",15],["vec",3,["box"]]]]],"p":[[4,"AccountStatus"],[3,"AccountData"],[4,"AccountEntry"],[3,"IndexAndSequence"],[3,"ClientProxy"],[3,"AddressAndIndex"],[13,"Index"],[13,"Address"],[8,"Command"]]},\
"cluster_test":{"doc":"","t":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,3,11,11,11,12,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,8,10,0,10,10,10,10,17,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,10,5,10,5,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,16,8,8,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,12,12,12,12,12,12,10,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,13,3,13,3,4,3,8,3,3,3,3,3,13,4,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,4,13,3,3,3,13,3,13,3,3,13,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,12,12,12,12,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,5,12,12,12,12,12,12,5,11,11,11,11,11,11,11,11,11,12,12,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,12,11,11,11,11,11,11,11,11,13,13,3,3,3,4,13,7,13,7,13,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,5],"n":["aws","cluster","cluster_builder","cluster_swarm","effects","experiments","genesis_helper","github","health","instance","prometheus","report","stats","suite","tx_emitter","util","set_asg_size","Cluster","all_instances","borrow","borrow_mut","chain_id","clone","clone_into","deref","deref_mut","drop","dummy_key_pair","find_instance_by_pod","from","from_host_port","fullnode_instances","get_validator_instance","init","instances_for_group","into","into_fullnode_instances","into_lsr_instances","into_validator_instances","into_vault_instances","lsr_instances","lsr_instances_for_validators","mint_key_pair","new","random_fullnode_instance","random_validator_instance","split_n_fullnodes_random","split_n_validators_random","to_owned","try_from","try_into","type_id","validator_and_fullnode_instances","validator_instances","validator_sub_cluster","vault_instances","vault_instances_for_validators","vzip","ClusterBuilder","ClusterBuilderParams","borrow","borrow","borrow_mut","borrow_mut","clap","clone","clone_into","cluster_swarm","current_tag","deref","deref","deref_mut","deref_mut","drop","drop","enable_lsr","enable_lsr","fmt","from","from","from_clap","fullnodes_per_validator","init","init","into","into","lsr_backend","move_modules_dir","new","num_validators","setup_cluster","spawn_validator_and_fullnode_set","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ClusterSwarm","clean_data","cluster_swarm_kube","get_grafana_baseurl","get_node_name","put_file","spawn_new_instance","CFG_SEED","ClusterSwarmKube","KubeNode","allocate_node","borrow","borrow","borrow_mut","borrow_mut","clean_data","cleanup","clone","clone","clone_into","clone_into","delete","delete_all","delete_node","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","get_grafana_baseurl","get_node_name","get_workspace","init","init","internal_ip","into","into","kill_job","name","new","node_map","provider_id","put_file","run","spawn_job","spawn_new_instance","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","type_id","type_id","upsert_node","util_cmd","vzip","vzip","Effect","activate","activate_all","deactivate","deactivate_all","network_delay","packet_loss","stop_validator","NetworkDelay","activate","borrow","borrow_mut","deactivate","deref","deref_mut","drop","fmt","from","init","into","new","three_region_simulation_effects","to_string","try_from","try_into","type_id","vzip","PacketLoss","activate","borrow","borrow_mut","deactivate","deref","deref_mut","drop","fmt","from","init","into","new","to_string","try_from","try_into","type_id","vzip","StopValidator","activate","borrow","borrow_mut","deactivate","deref","deref_mut","drop","fmt","from","init","into","new","to_string","try_from","try_into","type_id","vzip","CompatibilityTest","CompatiblityTestParams","Context","CpuFlamegraph","CpuFlamegraphParams","E","Experiment","ExperimentParam","LoadTestParams","PacketLossRandomValidators","PacketLossRandomValidatorsParams","PerformanceBenchmark","PerformanceBenchmarkParams","PerformanceBenchmarkThreeRegionSimulation","PerformanceBenchmarkThreeRegionSimulationParams","RebootCluster","RebootClusterParams","RebootRandomValidators","RebootRandomValidatorsParams","Reconfiguration","ReconfigurationParams","RecoveryTime","RecoveryTimeParams","StateSyncPerformance","StateSyncPerformanceParams","TwinValidators","TwinValidatorsParams","ValidatorVersioning","ValidatorVersioningParams","affected_validators","affected_validators","affected_validators","affected_validators","affected_validators","affected_validators","affected_validators","affected_validators","affected_validators","affected_validators","affected_validators","backup","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","build","build","build","build","clap","clap","clap","clap","clap","clap","clap","clap","clap","clap","clap","clap","clap","cluster","cluster_builder","cluster_builder_params","cluster_swarm","count","count","count","current_tag","deadline","deadline","deadline","deadline","deadline","deadline","deadline","deadline","deadline","deadline","deadline","deadline","deadline","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","duration","duration","duration_secs","emit_to_validator","emit_txn","emit_txn","enable_db_backup","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","gas_price","get_experiment","global_emit_job_request","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","invalid_tx","mempool","mix_invalid_tx","new","new","new","new_fixed_tps","new_nodes_down","non_zero_gas_price","num_accounts_to_mint","num_stubbed","pair","percent_nodes_down","periodic_stats","prometheus","report","run","run","run","run","run","run","run","run","run","run","run","run","run","state_sync","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","tps","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx_emitter","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","updated_image_tag","updated_image_tag","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","GenesisHelper","borrow","borrow_mut","create_and_insert_waypoint","create_waypoint","deref","deref_mut","diem_root_key","drop","extract_private_key","from","genesis","init","into","new","operator_key","owner_key","set_layout","set_move_modules","set_operator","treasury_compliance_key","try_from","try_into","type_id","validator_config","vzip","Author","CommitInfo","GitCommitInfo","GitHub","author","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","commit","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","email","fmt","fmt","fmt","from","from","from","from","get_commits","init","init","init","init","into","into","into","into","message","name","new","sha","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","All","Commit","Commit","CommitHistoryHealthCheck","ConsensusStarted","DebugPortLogWorker","Event","FullNodeHealthCheck","HealthCheck","HealthCheckContext","HealthCheckError","HealthCheckRunner","LivenessHealthCheck","LogTail","None","PrintFailures","UnexpectedOnly","ValidatorEvent","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","epoch_and_round","event_receiver","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","invalidate","invalidate","invalidate","message","name","name","name","name","new","new","new","new","new","new_all","now","on_event","on_event","on_event","pending_messages","recv_all","recv_all_until_deadline","report_failure","run","run","spawn_new","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validator","verify","verify","verify","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","ApplicationConfig","Fullnode","FullnodeConfig","Instance","InstanceConfig","LSR","LSRConfig","Validator","ValidatorConfig","ValidatorGroup","Vault","VaultConfig","ac_port","application_config","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clean_data","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmd","counter","debug_interface_client","debug_interface_port","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","enable_lsr","eq","exec","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","fullnode_index","fullnode_pod_name","image_tag","image_tag","image_tag","index","index_only","init","init","init","init","init","init","init","init","instance_config","instancelist_to_set","into","into","into","into","into","into","into","into","ip","json_rpc_client","json_rpc_url","lsr_backend","lsr_pod_name","make_twin","ne","needs_config","needs_fluentbit","needs_genesis","new","new_for_index","new_k8s","peer_name","pod_name","replace_tag","safety_rules_addr","seed_peer_ip","spawn_job","start","stop","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_json_rpc","twin_index","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","util_cmd","validator_group","validator_group","validator_pod_name","vault_addr","vault_addr","vault_addr","vault_namespace","vault_namespace","vault_namespace","vault_pod_name","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_json_rpc","0","0","0","0","MatrixResponse","Prometheus","TimeSeries","avg","avg","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","get","init","init","init","into","into","into","link_to_dashboard","new","query_range_avg","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ReportedMetric","SuiteReport","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","drop","drop","erased_serialize","erased_serialize","experiment","fmt","fmt","fmt","from","from","init","init","into","into","metric","new","report_metric","report_text","report_text_same_line","report_txn_stats","serialize","serialize","test_only_hash","test_only_hash","to_string","try_from","try_from","try_into","try_into","type_id","type_id","value","vzip","vzip","PrometheusRangeView","avg_backup_bytes_per_second","avg_txns_per_block","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","new","try_from","try_into","type_id","vzip","ExperimentSuite","borrow","borrow_mut","deref","deref_mut","drop","experiments","from","init","into","new_by_name","try_from","try_into","type_id","vzip","ChainId","Duplication","EmitJob","EmitJobRequest","EmitThreadParams","InvalidTxType","MaxValue","REUSE_ACC","Receiver","SCRIPT_FN","Sender","TxEmitter","TxStats","TxStatsRate","accounts_per_client","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","committed","committed","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","emit_txn_for","emit_txn_for_with_stats","execute_and_wait_transactions","expired","expired","fixed_tps","fixed_tps_params","fmt","fmt","fmt","fmt","fmt","for_instances","from","from","from","from","from","from","from","gas_price","gen_transfer_txn_request","get_money_source","get_seed_accounts","init","init","init","init","init","init","init","instances","into","into","into","into","into","into","into","invalid_tx","latency","latency","latency_buckets","load_dd_account","load_diem_root_account","load_faucet_account","load_tc_account","load_vasp_account","mint_accounts","new","p99_latency","peek_job_stats","periodic_stat","query_sequence_numbers","rate","start_job","stop_job","submit_single_transaction","submitted","submitted","take_account","thread_params","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_committed","wait_millis","workers_per_ac","human_readable_bytes_per_sec"],"q":["cluster_test","","","","","","","","","","","","","","","","cluster_test::aws","cluster_test::cluster","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cluster_test::cluster_builder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cluster_test::cluster_swarm","","","","","","","cluster_test::cluster_swarm::cluster_swarm_kube","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cluster_test::effects","","","","","","","","cluster_test::effects::network_delay","","","","","","","","","","","","","","","","","","","cluster_test::effects::packet_loss","","","","","","","","","","","","","","","","","","cluster_test::effects::stop_validator","","","","","","","","","","","","","","","","","","cluster_test::experimentscluster_test::genesis_helper","","","","","","","","","","","","","","","","","","","","","","","","","","cluster_test::github","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cluster_test::healthcluster_test::health::Event","cluster_test::instancecluster_test::instance::ApplicationConfig","","","","cluster_test::prometheus","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cluster_test::report","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cluster_test::stats","","","","","","","","","","","","","","","","cluster_test::suite","","","","","","","","","","","","","","","cluster_test::tx_emitter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cluster_test::util"],"d":["","","","","","","","","","","","","","","","","set_asg_size sets the size of the given autoscaling group","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Splits this cluster into two","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a set of validators and fullnodes with the given …","","","","","","","","","","","If deleting /opt/diem/data/* is required, call clean_date …","","","","","Spawns a new instance.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Runs command on the provided host in separate utility …","","","","","","","","","","","","","","","","","","","","","","","","three_region_simulation_effects returns the list of …urrent docker image tag used by this run","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Given an experiment name and its flags, it constructs an …repo in format owner/repo_name sha can be long or short …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verifies that commit history produced by validators is ‘…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clean is invoked when cluster is wiped This means that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Optionally marks validator as failed, requiring waiting …","","","","","","","","","","","","","","","Verify specific event","","","","","","Takes a list of affected_validators. If there are …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Periodic verification (happens even if when no events …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If deleting /opt/diem/data/* is required, call …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unlike util_cmd, exec runs command inside the container","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Node must be stopped first","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Runs command on the same host in separate utility …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","invalid tx with wrong chain id","duplicate an exist tx","","","","","Last element of enum, please add new case above","","invalid tx with receiver not on chain","","invalid tx with sender not on chain","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,2,3,2,3,3,3,3,2,2,2,3,2,3,2,3,3,3,3,2,3,3,3,2,3,2,3,3,3,2,3,2,2,3,2,3,2,3,2,3,2,3,0,4,0,4,4,4,4,0,0,0,5,5,6,5,6,5,5,5,6,5,6,5,5,5,5,6,5,6,5,6,6,5,6,5,5,5,5,6,6,5,6,5,6,5,5,6,5,5,5,5,5,6,5,6,6,5,6,5,6,5,5,5,6,0,7,0,7,0,0,0,0,0,8,8,8,8,8,8,8,8,8,8,8,8,0,8,8,8,8,8,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,13,14,15,16,17,18,19,20,21,22,23,12,13,24,14,25,15,16,17,18,19,20,21,26,27,28,29,30,23,31,32,33,34,35,36,37,38,12,13,24,14,25,15,16,17,18,19,20,21,26,27,28,29,30,23,31,32,33,34,35,36,37,38,11,27,28,29,30,23,31,32,33,34,35,36,37,38,27,28,29,30,23,31,32,33,34,35,36,37,38,26,26,26,26,27,34,38,26,22,12,13,24,14,25,15,16,17,18,19,20,21,12,13,24,14,25,15,16,17,18,19,20,21,26,27,28,29,30,23,31,32,33,34,35,36,37,38,12,13,24,14,25,15,16,17,18,19,20,21,26,27,28,29,30,23,31,32,33,34,35,36,37,38,12,13,24,14,25,15,16,17,18,19,20,21,26,27,28,29,30,23,31,32,33,34,35,36,37,38,29,23,28,26,29,34,23,12,13,24,14,25,15,16,17,18,19,20,21,27,28,29,30,23,31,32,33,34,35,36,37,38,12,13,24,14,25,15,16,17,18,19,20,21,26,27,28,29,30,23,31,32,33,34,35,36,37,38,27,28,29,30,23,31,32,33,34,35,36,37,38,23,0,26,12,13,24,14,25,15,16,17,18,19,20,21,26,27,28,29,30,23,31,32,33,34,35,36,37,38,12,13,24,14,25,15,16,17,18,19,20,21,26,27,28,29,30,23,31,32,33,34,35,36,37,38,23,29,23,26,33,36,23,23,23,35,29,37,23,23,26,26,22,12,13,24,14,25,15,16,17,18,19,20,21,29,12,13,24,14,25,15,16,17,18,19,20,21,23,12,13,24,14,25,15,16,17,18,19,20,21,26,27,28,29,30,23,31,32,33,34,35,36,37,38,12,13,24,14,25,15,16,17,18,19,20,21,26,27,28,29,30,23,31,32,33,34,35,36,37,38,26,12,13,24,14,25,15,16,17,18,19,20,21,26,27,28,29,30,23,31,32,33,34,35,36,37,38,27,38,12,13,24,14,25,15,16,17,18,19,20,21,26,27,28,29,30,23,31,32,33,34,35,36,37,38,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,0,0,40,41,42,40,43,41,42,40,43,42,41,41,42,40,43,41,42,40,43,42,40,43,41,42,40,43,43,42,40,43,41,42,40,43,41,41,42,40,43,41,42,40,43,40,43,41,42,41,42,40,43,41,42,40,43,41,42,40,43,41,42,40,43,44,0,45,0,45,0,0,0,0,0,0,0,0,0,44,0,44,0,46,47,48,49,50,44,51,52,53,45,54,55,46,47,48,49,50,44,51,52,53,45,54,55,50,52,56,53,45,54,53,45,54,51,52,46,47,48,49,50,44,51,52,53,45,54,55,46,47,48,49,50,44,51,52,53,45,54,55,46,47,48,49,50,44,51,52,53,45,54,55,53,49,53,45,54,55,46,47,48,49,50,44,51,52,53,45,54,55,46,47,48,49,50,44,51,52,53,45,54,55,46,47,48,49,50,44,51,52,53,45,54,55,48,50,56,55,56,47,48,52,47,48,50,51,52,50,51,48,52,56,49,49,49,51,46,50,46,53,45,54,46,47,48,49,50,44,51,52,53,45,54,55,46,47,48,49,50,44,51,52,53,45,54,55,46,47,48,49,50,44,51,52,53,45,54,55,55,56,47,48,52,46,47,48,49,50,44,51,52,53,45,54,55,57,0,58,0,0,0,58,0,58,0,0,58,0,59,60,61,60,58,62,63,64,65,59,61,60,58,62,63,64,65,59,59,61,60,58,62,63,64,65,59,61,60,58,62,63,64,65,59,59,59,59,59,61,60,58,62,63,64,65,59,61,60,58,62,63,64,65,59,61,60,58,62,63,64,65,59,64,61,59,61,60,58,62,63,64,65,59,59,61,60,58,62,63,64,65,59,65,0,63,64,65,61,61,61,60,58,62,63,64,65,59,59,0,61,60,58,62,63,64,65,59,59,59,59,63,0,60,61,58,58,58,59,61,59,59,60,60,64,65,59,59,59,61,60,58,62,63,64,65,59,59,61,60,58,62,63,64,65,59,61,60,58,62,63,64,65,59,59,61,61,60,58,62,63,64,65,59,59,59,60,0,63,64,65,63,64,65,0,61,60,58,62,63,64,65,59,59,66,67,68,69,0,0,0,70,71,70,71,72,70,71,72,72,72,70,71,72,70,71,72,70,71,72,70,71,72,71,70,71,72,70,71,72,72,72,72,72,70,71,72,70,71,72,70,71,72,70,71,72,0,0,73,74,73,74,73,73,74,73,74,73,74,73,74,74,73,73,74,73,74,73,74,73,74,74,73,73,73,73,73,73,74,73,74,73,73,74,73,74,73,74,74,73,74,0,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,0,76,76,76,76,76,76,76,76,76,76,76,76,76,76,77,77,0,0,0,0,77,0,77,0,77,0,0,0,78,79,80,77,81,82,83,78,79,80,77,81,82,83,78,79,83,78,83,78,81,82,81,82,83,79,80,77,81,82,83,78,79,80,77,81,82,83,78,79,80,77,81,82,83,78,79,79,0,81,82,78,78,77,81,81,82,82,78,79,80,77,81,82,83,78,78,0,79,79,79,80,77,81,82,83,78,78,79,80,77,81,82,83,78,78,81,82,81,79,79,79,79,79,79,79,82,79,79,79,81,79,79,79,81,82,79,78,83,78,81,82,79,80,77,81,82,83,78,79,80,77,81,82,83,78,79,80,77,81,82,83,78,79,80,77,81,82,83,78,83,83,78,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["i64",15],["bool",15],["str",15],["f64",15]]],null,[[]],[[]],[[]],null,[[],["cluster",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],[["ed25519privatekey",3],["ed25519publickey",3],["keypair",3,["ed25519privatekey","ed25519publickey"]]]],[[["str",15]],[["instance",3],["option",4,["instance"]]]],[[]],[[["chainid",3],["vec",3],["bool",15],["str",15]]],[[]],[[["str",15]],[["instance",3],["option",4,["instance"]]]],[[],["usize",15]],[[["validatorgroup",3]]],[[]],[[],[["instance",3],["vec",3,["instance"]]]],[[],[["instance",3],["vec",3,["instance"]]]],[[],[["instance",3],["vec",3,["instance"]]]],[[],[["instance",3],["vec",3,["instance"]]]],[[]],[[],[["instance",3],["vec",3,["instance"]]]],[[],["keypair",3]],[[["waypoint",3],["vec",3,["instance"]],["instance",3],["option",4,["waypoint"]]]],[[],["instance",3]],[[],["instance",3]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[["string",3],["vec",3,["string"]]],["cluster",3]],[[]],[[],[["instance",3],["vec",3,["instance"]]]],[[]],null,null,[[]],[[]],[[]],[[]],[[],["app",3]],[[],["clusterbuilderparams",3]],[[]],null,null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["bool",15]],null,[[["formatter",3]],["result",6]],[[]],[[]],[[["argmatches",3]]],null,[[],["usize",15]],[[],["usize",15]],[[]],[[]],null,null,[[["string",3],["clusterswarmkube",3]]],null,[[["bool",15],["clusterbuilderparams",3]]],[[["u32",15],["bool",15],["str",15]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[["str",15]],[["box",3,["future"]],["pin",3,["box"]]]],null,[[],[["pin",3,["box"]],["box",3,["future"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future"]]]],[[["str",15],["str",15],["str",15]],[["box",3,["future"]],["pin",3,["box"]]]],[[["instanceconfig",3]],[["pin",3,["box"]],["box",3,["future"]]]],null,null,null,[[["str",15]]],[[]],[[]],[[]],[[]],[[["str",15]],[["box",3,["future"]],["pin",3,["box"]]]],[[]],[[],["clusterswarmkube",3]],[[],["kubenode",3]],[[]],[[]],[[]],[[]],[[["instanceconfig",3]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[]],[[],[["pin",3,["box"]],["box",3,["future"]]]],[[["str",15]],[["pin",3,["box"]],["box",3,["future"]]]],[[]],[[],["usize",15]],[[],["usize",15]],null,[[]],[[]],[[["str",15]]],null,[[]],null,null,[[["str",15],["str",15],["str",15]],[["box",3,["future"]],["pin",3,["box"]]]],[[["str",15]]],[[["str",15]]],[[["instanceconfig",3]],[["pin",3,["box"]],["box",3,["future"]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["node",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["instanceconfig",3]]],[[["str",15],["asref",8,["str"]],["str",15]]],[[]],[[]],null,[[],[["box",3,["future"]],["pin",3,["box"]]]],[[["vec",3]]],[[],[["box",3,["future"]],["pin",3,["box"]]]],[[["vec",3]]],null,null,null,null,[[],[["box",3,["future"]],["pin",3,["box"]]]],[[]],[[]],[[],[["box",3,["future"]],["pin",3,["box"]]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[["instance",3],["vec",3]]],[[],[["networkdelay",3],["vec",3,["networkdelay"]]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[],[["box",3,["future"]],["pin",3,["box"]]]],[[]],[[]],[[],[["box",3,["future"]],["pin",3,["box"]]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[["instance",3],["f32",15]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[],[["box",3,["future"]],["pin",3,["box"]]]],[[]],[[]],[[],[["box",3,["future"]],["pin",3,["box"]]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[["instance",3]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["string",3],["hashset",3,["string"]]]],[[],[["string",3],["hashset",3,["string"]]]],[[],[["string",3],["hashset",3,["string"]]]],[[],[["string",3],["hashset",3,["string"]]]],[[],[["string",3],["hashset",3,["string"]]]],[[],[["string",3],["hashset",3,["string"]]]],[[],[["string",3],["hashset",3,["string"]]]],[[],[["string",3],["hashset",3,["string"]]]],[[],[["string",3],["hashset",3,["string"]]]],[[],[["string",3],["hashset",3,["string"]]]],[[],[["string",3],["hashset",3,["string"]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["cluster",3]]],[[["cluster",3]]],[[["cluster",3]]],[[["cluster",3]]],[[["cluster",3]]],[[["cluster",3]]],[[["cluster",3]]],[[["cluster",3]]],[[["cluster",3]]],[[["cluster",3]]],[[["cluster",3]]],[[["cluster",3]]],[[["cluster",3]]],[[["cluster",3]]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],null,null,null,null,null,null,null,null,[[],["duration",3]],[[],["duration",3]],[[],["duration",3]],[[],["duration",3]],[[],["duration",3]],[[],["duration",3]],[[],["duration",3]],[[],["duration",3]],[[],["duration",3]],[[],["duration",3]],[[],["duration",3]],[[],["duration",3]],[[],["duration",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,null,null,null,null,null,[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",6,["error"]],["error",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",6,["error"]],["error",3]]],[[["formatter",3]],[["result",6,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],null,[[["str",15],["cluster",3]],[["experiment",8],["box",3,["experiment"]]]],null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["usize",15],["u64",15]]],[[["option",4],["txemitter",3],["str",15],["suitereport",3],["prometheus",3],["clusterbuilder",3],["clusterbuilderparams",3],["bool",15],["cluster",3],["clusterswarmkube",3]]],[[["usize",15]]],[[["u64",15]]],[[["usize",15],["u64",15]]],[[["usize",15]]],[[["usize",15],["u64",15]]],null,null,null,null,null,null,null,[[["context",3]],[["box",3,["future"]],["pin",3,["box"]]]],[[["context",3]],[["box",3,["future"]],["pin",3,["box"]]]],[[["context",3]],[["box",3,["future"]],["pin",3,["box"]]]],[[["context",3]],[["box",3,["future"]],["pin",3,["box"]]]],[[["context",3]],[["box",3,["future"]],["pin",3,["box"]]]],[[["context",3]],[["box",3,["future"]],["pin",3,["box"]]]],[[["context",3]],[["box",3,["future"]],["pin",3,["box"]]]],[[["context",3]],[["box",3,["future"]],["pin",3,["box"]]]],[[["context",3]],[["box",3,["future"]],["pin",3,["box"]]]],[[["context",3]],[["box",3,["future"]],["pin",3,["box"]]]],[[["context",3]],[["box",3,["future"]],["pin",3,["box"]]]],[[["context",3]],[["box",3,["future"]],["pin",3,["box"]]]],[[["context",3]],[["box",3,["future"]],["pin",3,["box"]]]],null,[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[["chainid",3],["str",15]]],[[["chainid",3]]],[[["usize",15]]],[[["usize",15]]],[[["str",15]]],[[["usize",15]]],[[["str",15]]],[[]],[[["chainid",3],["path",3]]],[[],["usize",15]],[[]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["chainid",3],["networkaddress",3],["str",15]]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["str",15]],[["result",6,["vec"]],["vec",3,["commitinfo"]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],null,null,[[],["github",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["commit",3]],[[],["event",4]],[[],["validatorevent",3]],[[]],[[]],[[]],[[]],[[],["commithistoryhealthcheck",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]]],[[["str",15]]],[[["str",15]]],null,[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[["cluster",3]],["fullnodehealthcheck",3]],[[["cluster",3]]],[[["cluster",3],["box",3,["healthcheck"]],["vec",3,["box"]]]],[[]],[[]],[[["cluster",3]]],[[],["duration",3]],[[["validatorevent",3],["healthcheckcontext",3]]],[[["validatorevent",3],["healthcheckcontext",3]]],[[["validatorevent",3],["healthcheckcontext",3]]],null,[[],[["validatorevent",3],["vec",3,["validatorevent"]]]],[[["instant",3]],[["validatorevent",3],["vec",3,["validatorevent"]]]],[[["string",3]]],[[]],[[["hashset",3],["printfailures",4]]],[[["cluster",3]],["logtail",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[["healthcheckcontext",3]],[["pin",3,["box"]],["box",3,["future"]]]],[[["healthcheckcontext",3]],[["pin",3,["box"]],["box",3,["future"]]]],[[["healthcheckcontext",3]],[["pin",3,["box"]],["box",3,["future"]]]],[[["healthcheckcontext",3]],[["pin",3,["box"]],["box",3,["future"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["u32",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["validatorgroup",3]],[[],["instanceconfig",3]],[[],["applicationconfig",4]],[[],["vaultconfig",3]],[[],["lsrconfig",3]],[[],["validatorconfig",3]],[[],["fullnodeconfig",3]],[[],["instance",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15],["asref",8,["str"]],["str",15]]],[[["str",15]],[["f64",15],["result",6,["f64"]]]],[[],["asyncnodedebugclient",3]],[[],[["option",4,["u32"]],["u32",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[["validatorgroup",3]],["bool",15]],[[["str",15],["bool",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["u32",15]],["string",3]],null,null,null,null,[[],["u32",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["instanceconfig",3]],[[],[["string",3],["hashset",3,["string"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["jsonrpcclient",3]],[[],["url",3]],null,[[["u32",15]],["string",3]],[[["u32",15]]],[[["validatorgroup",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["option",4,["u32"]],["u32",15],["string",3],["client",3]],["instance",3]],[[["u32",15]],["validatorgroup",3]],[[["clusterswarmkube",3],["u32",15],["string",3],["instanceconfig",3],["client",3]],["instance",3]],[[],["string",3]],[[],["string",3]],[[["string",3]],["result",6]],null,null,[[["str",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["asref",8,["str"]],["str",15],["str",15]]],[[],["validatorgroup",3]],null,[[["u32",15]],["string",3]],null,null,null,null,null,null,[[["u32",15]],["string",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["instant",3]]],null,null,null,null,null,null,null,[[],[["option",4,["f64"]],["f64",15]]],[[],[["option",4,["f64"]],["f64",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["prometheus",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[["duration",3]],["string",3]],[[["str",15],["string",3]]],[[["u64",15],["string",3],["duration",3]],[["f64",15],["result",6,["f64"]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[],["suitereport",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],null,[[]],[[["tostring",8],["f64",15]]],[[["string",3]]],[[["string",3]]],[[["txstats",3],["string",3],["str",15],["duration",3]]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],null,[[],[["option",4,["f64"]],["f64",15]]],[[],[["option",4,["f64"]],["f64",15]]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[["prometheus",3],["duration",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[]],[[],["usize",15]],[[]],[[["str",15],["cluster",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["emitthreadparams",3]],[[],["emitjobrequest",3]],[[]],[[]],null,null,[[],["txstats",3]],[[],["txstatsrate",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["emitjobrequest",3],["duration",3]]],[[["u64",15],["emitjobrequest",3],["duration",3]]],[[["signedtransaction",3],["jsonrpcclient",3],["localaccount",3],["vec",3,["signedtransaction"]]]],null,null,[[["u64",15],["vec",3,["instance"]],["instance",3]]],[[["usize",15],["u64",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["u64",15],["option",4],["vec",3,["instance"]],["instance",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["u64",15],["accountaddress",3],["localaccount",3],["transactionfactory",3]],["signedtransaction",3]],[[["u64",15]]],[[["usize",15]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[["jsonrpcclient",3]]],[[["jsonrpcclient",3]]],[[["jsonrpcclient",3]]],[[["jsonrpcclient",3]]],[[["usize",15],["jsonrpcclient",3]]],[[["usize",15],["emitjobrequest",3]]],[[["bool",15],["cluster",3]]],null,[[["emitjob",3]],["txstats",3]],[[["emitjob",3],["u64",15],["duration",3]]],[[["instance",3],["accountaddress",3]]],[[["duration",3]],["txstatsrate",3]],[[["emitjobrequest",3]]],[[["emitjob",3]]],[[["instance",3],["u64",15],["accountaddress",3],["localaccount",3]]],null,null,[[],["localaccount",3]],null,[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["f64",15]],["string",3]]],"p":[[3,"Cluster"],[3,"ClusterBuilder"],[3,"ClusterBuilderParams"],[8,"ClusterSwarm"],[3,"ClusterSwarmKube"],[3,"KubeNode"],[8,"Effect"],[3,"NetworkDelay"],[3,"PacketLoss"],[3,"StopValidator"],[8,"ExperimentParam"],[3,"CompatibilityTest"],[3,"CpuFlamegraph"],[3,"PerformanceBenchmark"],[3,"RebootCluster"],[3,"RebootRandomValidators"],[3,"Reconfiguration"],[3,"RecoveryTime"],[3,"StateSyncPerformance"],[3,"TwinValidators"],[3,"ValidatorVersioning"],[8,"Experiment"],[3,"PerformanceBenchmarkParams"],[3,"PacketLossRandomValidators"],[3,"PerformanceBenchmarkThreeRegionSimulation"],[3,"Context"],[3,"CompatiblityTestParams"],[3,"CpuFlamegraphParams"],[3,"LoadTestParams"],[3,"PacketLossRandomValidatorsParams"],[3,"PerformanceBenchmarkThreeRegionSimulationParams"],[3,"RebootClusterParams"],[3,"RebootRandomValidatorsParams"],[3,"ReconfigurationParams"],[3,"RecoveryTimeParams"],[3,"StateSyncPerformanceParams"],[3,"TwinValidatorsParams"],[3,"ValidatorVersioningParams"],[3,"GenesisHelper"],[3,"GitCommitInfo"],[3,"GitHub"],[3,"CommitInfo"],[3,"Author"],[4,"PrintFailures"],[4,"Event"],[3,"DebugPortLogWorker"],[3,"FullNodeHealthCheck"],[3,"LivenessHealthCheck"],[3,"LogTail"],[3,"HealthCheckRunner"],[3,"HealthCheckContext"],[3,"CommitHistoryHealthCheck"],[3,"Commit"],[3,"ValidatorEvent"],[3,"HealthCheckError"],[8,"HealthCheck"],[13,"Commit"],[4,"ApplicationConfig"],[3,"Instance"],[3,"InstanceConfig"],[3,"ValidatorGroup"],[3,"VaultConfig"],[3,"LSRConfig"],[3,"ValidatorConfig"],[3,"FullnodeConfig"],[13,"Validator"],[13,"Fullnode"],[13,"LSR"],[13,"Vault"],[3,"MatrixResponse"],[3,"TimeSeries"],[3,"Prometheus"],[3,"SuiteReport"],[3,"ReportedMetric"],[3,"PrometheusRangeView"],[3,"ExperimentSuite"],[4,"InvalidTxType"],[3,"EmitJobRequest"],[3,"TxEmitter"],[3,"EmitJob"],[3,"TxStats"],[3,"TxStatsRate"],[3,"EmitThreadParams"]]},\
"compiler":{"doc":"","t":[3,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,0,11,5,5],"n":["Compiler","borrow","borrow_mut","clone","clone_into","deps","fmt","from","into","into_compiled_module","into_compiled_script_and_source_map","into_module_blob","into_script_blob","new","to_owned","try_from","try_into","type_id","util","vzip","do_compile_module","do_compile_script"],"q":["compiler","","","","","","","","","","","","","","","","","","","","compiler::util",""],"d":["An API for the compiler. Supports setting custom options.","","","","","Extra dependencies to compile with.","","","","Compiles the module.","Compiles into a <code>CompiledScript</code> where the bytecode hasn’t …","Compiles the module into a serialized form.","Compiles the script into a serialized form.","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0],"f":[null,[[]],[[]],[[],["compiler",3]],[[]],null,[[["formatter",3]],["result",6]],[[]],[[]],[[["str",15]],[["compiledmodule",3],["result",6,["compiledmodule"]]]],[[["str",15]],["result",6]],[[["str",15]],[["result",6,["vec"]],["vec",3,["u8"]]]],[[["str",15]],[["result",6,["vec"]],["vec",3,["u8"]]]],[[["vec",3,["compiledmodule"]],["compiledmodule",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[["path",3]]],[[["path",3]]]],"p":[[3,"Compiler"]]},\
"consensus":{"doc":"Consensus for the Diem Core blockchain","t":[0,0,0,5,13,13,13,13,4,6,3,17,13,13,13,17,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,5,5],"n":["consensus_provider","network_interface","round_manager_fuzzing","start_consensus","BlockRetrievalRequest","BlockRetrievalResponse","CommitDecisionMsg","CommitVoteMsg","ConsensusMsg","ConsensusNetworkEvents","ConsensusNetworkSender","DIRECT_SEND","EpochChangeProof","EpochRetrievalRequest","ProposalMsg","RPC","SyncInfo","VoteMsg","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","erased_serialize","fmt","from","from","init","init","initialize","into","into","network_endpoint_config","new","send_rpc","send_to","send_to_many","serialize","test_only_hash","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","0","0","0","0","0","0","0","fuzz_proposal","generate_corpus_proposal"],"q":["consensus","","","consensus::consensus_provider","consensus::network_interface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","consensus::network_interface::ConsensusMsg","","","","","","","","","consensus::round_manager_fuzzing",""],"d":["DiemBFT implementation","DiemNet interface. Interface between Consensus and Network …","","Helper function to start consensus based on configuration …","RPC to get a chain of block of the given length starting …","Carries the returned blocks and the retrieval status.","CommitDecision is the struct that is sent by the validator …","CommitProposal is the struct that is sent by the validator …","Network type for consensus","The interface from Network to Consensus layer.","The interface from Consensus to Networking layer.","Supported protocols in preferred order (from highest …","A vector of LedgerInfo with contiguous increasing epoch …","Request to get a EpochChangeProof from current_epoch to …","ProposalMsg contains the required information for the …","Supported protocols in preferred order (from highest …","This struct describes basic synchronization metadata.","VoteMsg is the struct that is ultimately sent by the voter …","","","","","","","","","","","","","","","","","","","","","","Initialize a shared hashmap about connections metadata …","","","Configuration for the network endpoints to support …","Returns a Sender that only sends for the …","Send a RPC to the destination peer using the …","Send a single message to the destination peer using …","Send a single message to the destination peers using …","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,0,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,1,2,1,1,1,2,1,2,2,1,2,0,2,2,2,2,1,1,1,2,1,2,1,2,1,2,1,2,3,4,5,6,7,8,9,10,11,0,0],"f":[null,null,null,[[["box",3,["consensusnotificationsender"]],["consensusnotificationsender",8],["sender",3,["consensusrequest"]],["arc",3,["peermetadatastorage"]],["nodeconfig",3],["consensusnetworkevents",6],["consensusnetworksender",3],["consensusrequest",4],["dbreaderwriter",6],["reconfignotificationlistener",6],["peermetadatastorage",3]],["runtime",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["consensusmsg",4]],[[],["consensusnetworksender",3]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["serializer",8]],[["error",3],["result",4,["ok","error"]],["ok",3]]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["peermetadatastorage",3],["arc",3,["peermetadatastorage"]]]],[[]],[[]],[[],["appconfig",3]],[[["peermanagerrequestsender",3],["connectionrequestsender",3]]],[[["duration",3],["peerid",3],["consensusmsg",4]],[["pin",3,["box"]],["box",3,["future"]]]],[[["peerid",3],["consensusmsg",4]],[["result",4,["networkerror"]],["networkerror",3]]],[[["consensusmsg",4]],[["result",4,["networkerror"]],["networkerror",3]]],[[],["result",4]],[[],["hashvalue",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[],[["vec",3,["u8"]],["u8",15]]]],"p":[[4,"ConsensusMsg"],[3,"ConsensusNetworkSender"],[13,"BlockRetrievalRequest"],[13,"BlockRetrievalResponse"],[13,"EpochRetrievalRequest"],[13,"ProposalMsg"],[13,"SyncInfo"],[13,"EpochChangeProof"],[13,"VoteMsg"],[13,"CommitVoteMsg"],[13,"CommitDecisionMsg"]]},\
"consensus_notifications":{"doc":"","t":[3,4,3,3,8,3,3,4,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,10,11,11,12,11,11,12,11,10,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12],"n":["ConsensusCommitNotification","ConsensusNotification","ConsensusNotificationListener","ConsensusNotificationResponse","ConsensusNotificationSender","ConsensusNotifier","ConsensusSyncNotification","Error","NotificationError","NotifyCommit","SyncToTarget","TimeoutWaitingForStateSync","UnexpectedErrorEncountered","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deserialize","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into","into","is_terminated","ne","new","new","new_consensus_notifier_listener_pair","notify_new_commit","notify_new_commit","poll_next","reconfiguration_events","respond_to_commit_notification","respond_to_sync_notification","result","serialize","sync_to_target","sync_to_target","target","test_only_hash","to_owned","to_string","transactions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0"],"q":["consensus_notifications","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","consensus_notifications::ConsensusNotification","","consensus_notifications::Error",""],"d":["A commit notification to notify state sync of new commits.","","The state sync component responsible for handling …","The result returned by state sync for a consensus …","The interface between state sync and consensus, allowing …","The consensus component responsible for sending …","A commit notification to notify state sync to sync to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This method returns a (ConsensusNotifier, …","Notify state sync of newly committed transactions and …","","","","Respond to the commit notification previously sent by …","Respond to the sync notification previously sent by …","","","Notify state sync to synchronize storage to the specified …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,1,2,2,1,1,1,3,4,2,5,6,7,1,3,4,2,5,6,7,1,1,1,1,1,1,3,4,2,5,6,7,1,3,4,2,5,6,7,1,3,4,2,5,6,7,4,1,5,7,0,8,3,4,5,4,4,6,1,8,3,7,1,1,1,5,1,3,4,2,5,6,7,1,3,4,2,5,6,7,1,3,4,2,5,6,7,1,3,4,2,5,6,7,9,10,11,12],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["error",4]],[[]],[[],["result",4]],[[["error",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["error",4]],["bool",15]],[[["vec",3,["transaction"]],["vec",3,["contractevent"]],["transaction",4],["contractevent",4]]],[[["ledgerinfowithsignatures",4]]],[[["u64",15]]],[[["vec",3,["transaction"]],["vec",3,["contractevent"]],["transaction",4],["contractevent",4]],[["pin",3,["box"]],["box",3,["future"]]]],[[["vec",3,["transaction"]],["vec",3,["contractevent"]],["transaction",4],["contractevent",4]],[["pin",3,["box"]],["box",3,["future"]]]],[[["pin",3],["context",3]],[["option",4],["poll",4,["option"]]]],null,[[["error",4],["consensuscommitnotification",3],["result",4,["error"]]]],[[["error",4],["result",4,["error"]],["consensussyncnotification",3]]],null,[[],["result",4]],[[["ledgerinfowithsignatures",4]],[["pin",3,["box"]],["box",3,["future"]]]],[[["ledgerinfowithsignatures",4]],[["pin",3,["box"]],["box",3,["future"]]]],null,[[],["hashvalue",3]],[[]],[[],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null],"p":[[4,"Error"],[4,"ConsensusNotification"],[3,"ConsensusNotifier"],[3,"ConsensusNotificationListener"],[3,"ConsensusCommitNotification"],[3,"ConsensusNotificationResponse"],[3,"ConsensusSyncNotification"],[8,"ConsensusNotificationSender"],[13,"NotifyCommit"],[13,"SyncToTarget"],[13,"NotificationError"],[13,"UnexpectedErrorEncountered"]]},\
"consensus_types":{"doc":"","t":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,3,3,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,4,13,17,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,6,6,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,12,12,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11],"n":["block","block_data","block_retrieval","common","epoch_retrieval","executed_block","experimental","proposal_msg","quorum_cert","safety_data","sync_info","timeout","timeout_2chain","timeout_certificate","vote","vote_data","vote_msg","vote_proposal","Block","author","block_data","block_test_utils","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","epoch","eq","equivalent","erased_serialize","fmt","fmt","from","gen_block_info","id","init","into","is_genesis_block","is_nil_block","make_genesis_block","make_genesis_block_from_ledger_info","ne","new_for_testing","new_nil","new_proposal","new_proposal_from_block_data","new_proposal_from_block_data_and_signature","parent_id","payload","quorum_cert","round","serialize","signature","test_only_hash","timestamp_usecs","to_owned","to_string","transactions_to_execute","try_from","try_into","type_id","validate_signature","verify_well_formed","vzip","block_forest_and_its_keys","certificate_for_genesis","fake_id","gen_test_certificate","genesis_strategy","leaf_strategy","new_proposal","placeholder_certificate_for_block","placeholder_ledger_info","random_payload","some_round","unmoored_block","BlockData","BlockDataHasher","BlockType","Genesis","NilBlock","Proposal","author","block_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","epoch","eq","eq","equivalent","equivalent","erased_serialize","erased_serialize","finish","flush","fmt","fmt","from","from","from","hash","init","init","init","into","into","into","is_genesis_block","is_nil_block","is_reconfiguration_suffix","ne","ne","new_for_testing","new_genesis","new_genesis_from_ledger_info","new_nil","new_proposal","parent_id","payload","quorum_cert","round","seed","serialize","serialize","test_only_hash","test_only_hash","timestamp_usecs","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update","vzip","vzip","vzip","write","author","payload","BlockRetrievalRequest","BlockRetrievalResponse","BlockRetrievalStatus","IdNotFound","MAX_BLOCKS_PER_REQUEST","NotEnoughBlocks","Succeeded","SucceededWithTarget","block_id","blocks","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","match_target_id","ne","ne","new","new","new_with_target_block_id","num_blocks","serialize","serialize","serialize","status","target_block_id","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verify","vzip","vzip","vzip","Author","Payload","Round","EpochRetrievalRequest","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","end_epoch","erased_serialize","fmt","fmt","from","init","into","serialize","start_epoch","test_only_hash","to_owned","to_string","try_from","try_into","type_id","vzip","ExecutedBlock","block","block_info","borrow","borrow_mut","clone","clone_into","compute_result","deref","deref_mut","drop","epoch","eq","equivalent","fmt","fmt","from","id","init","into","is_reconfiguration_suffix","maybe_signed_vote_proposal","ne","new","parent_id","payload","quorum_cert","reconfig_event","round","timestamp_usecs","to_owned","to_string","transactions_to_commit","try_from","try_into","type_id","vzip","commit_decision","commit_vote","CommitDecision","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","epoch","eq","equivalent","erased_serialize","fmt","fmt","from","init","into","ledger_info","ne","new","round","serialize","test_only_hash","to_owned","to_string","try_from","try_into","type_id","verify","vzip","CommitVote","author","borrow","borrow_mut","clone","clone_into","commit_info","deref","deref_mut","deserialize","drop","epoch","eq","equivalent","erased_serialize","fmt","fmt","from","init","into","ledger_info","ne","new","new_with_signature","round","serialize","signature","test_only_hash","to_owned","to_string","try_from","try_into","type_id","verify","vzip","ProposalMsg","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","epoch","eq","equivalent","erased_serialize","fmt","fmt","from","init","into","ne","new","proposal","proposer","serialize","sync_info","take_proposal","test_only_hash","to_owned","to_string","try_from","try_into","type_id","verify","verify_well_formed","vzip","QuorumCert","borrow","borrow_mut","certificate_for_genesis_from_ledger_info","certified_block","clone","clone_into","commit_info","deref","deref_mut","deserialize","drop","ends_epoch","eq","equivalent","erased_serialize","fmt","fmt","from","init","into","ledger_info","ne","new","parent_block","serialize","test_only_hash","to_owned","to_string","try_from","try_into","type_id","verify","vote_data","vzip","SafetyData","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize","drop","epoch","eq","equivalent","erased_serialize","fmt","fmt","from","init","into","last_vote","last_voted_round","ne","new","one_chain_round","preferred_round","serialize","test_only_hash","to_owned","to_string","try_from","try_into","type_id","vzip","SyncInfo","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","epoch","eq","equivalent","erased_serialize","fmt","fmt","from","has_newer_certificates","highest_2chain_timeout_cert","highest_certified_round","highest_ledger_info","highest_ledger_info_round","highest_ordered_cert","highest_ordered_round","highest_quorum_cert","highest_round","highest_timeout_certificate","highest_timeout_round","init","into","ne","new","new_decoupled","serialize","test_only_hash","to_owned","to_string","try_from","try_into","type_id","verify","vzip","Timeout","TimeoutHasher","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","epoch","eq","equivalent","erased_serialize","finish","flush","fmt","fmt","from","from","hash","init","init","into","into","ne","new","round","seed","serialize","sign","test_only_hash","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update","vzip","vzip","write","TimeoutSigningRepr","TimeoutSigningReprHasher","TwoChainTimeout","TwoChainTimeoutCertificate","add","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","epoch","epoch","epoch","eq","eq","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","finish","flush","fmt","fmt","fmt","fmt","from","from","from","from","hash","highest_hqc_round","hqc_round","hqc_round","init","init","init","init","into","into","into","into","ne","ne","new","new","quorum_cert","round","round","round","seed","serialize","serialize","serialize","sign","signers","signing_format","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update","verify","vzip","vzip","vzip","vzip","write","TimeoutCertificate","add_signature","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","epoch","eq","equivalent","erased_serialize","fmt","fmt","from","init","into","ne","new","remove_signature","round","serialize","signatures","test_only_hash","to_owned","to_string","try_from","try_into","type_id","verify","vzip","Vote","add_2chain_timeout","add_timeout_signature","author","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","epoch","eq","equivalent","erased_serialize","fmt","fmt","from","generate_2chain_timeout","generate_timeout","init","into","is_timeout","ledger_info","ne","new","new_with_signature","serialize","signature","test_only_hash","timeout_signature","to_owned","to_string","try_from","try_into","two_chain_timeout","type_id","verify","vote_data","vzip","VoteData","VoteDataHasher","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","erased_serialize","finish","flush","fmt","fmt","from","from","hash","init","init","into","into","ne","new","parent","proposed","seed","serialize","test_only_hash","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update","verify","vzip","vzip","write","VoteMsg","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","epoch","eq","equivalent","erased_serialize","fmt","fmt","from","init","into","ne","new","proposed_block_id","serialize","sync_info","test_only_hash","to_owned","to_string","try_from","try_into","type_id","verify","vote","vzip","MaybeSignedVoteProposal","VoteProposal","VoteProposalHasher","accumulator_extension_proof","block","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","erased_serialize","erased_serialize","finish","flush","fmt","fmt","fmt","from","from","from","gen_vote_data","hash","init","init","init","into","into","into","new","next_epoch_state","seed","serialize","serialize","signature","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update","vote_proposal","vzip","vzip","vzip","write"],"q":["consensus_types","","","","","","","","","","","","","","","","","","consensus_types::block","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","consensus_types::block::block_test_utils","","","","","","","","","","","","consensus_types::block_data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","consensus_types::block_data::BlockType","","consensus_types::block_retrieval","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","consensus_types::common","","","consensus_types::epoch_retrieval","","","","","","","","","","","","","","","","","","","","","","","","","consensus_types::executed_block","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","consensus_types::experimental","","consensus_types::experimental::commit_decision","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","consensus_types::experimental::commit_vote","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","consensus_types::proposal_msg","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","consensus_types::quorum_cert","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","consensus_types::safety_data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","consensus_types::sync_info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","consensus_types::timeout","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","consensus_types::timeout_2chain","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","consensus_types::timeout_certificate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","consensus_types::vote","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","consensus_types::vote_data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","consensus_types::vote_msg","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","consensus_types::vote_proposal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","Block has the core data of a consensus block that should …","","","","","","","","","","","","","","","","","","","","","","","","","","Construct new genesis block for next epoch …","","","The NIL blocks are special: they’re not carrying any …","","","","","","","","","","","","","","","","","","Verifies that the proposal and the QC are correctly signed.","Makes sure that the proposal makes sense, independently of …","","This returns keys and a block forest created from them","","This produces a block with an invalid id (and therefore …","","This produces the genesis block","Offers the genesis block.","This strategy is a swiss-army tool to produce a low-level …","","","","This produces a round that is often higher than the …","This produces an unmoored block, with arbitrary parent &amp; …","Block has the core data of a consensus block that should …","Cryptographic hasher for an BCS-serializable #item","","A genesis block is the first committed block in any epoch …","NIL blocks don’t have authors or signatures: they’re …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","It’s a reconfiguration suffix block if the parent block…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Author of the block that can be validated by the author’…","T of the block (e.g. one or more transaction(s)","RPC to get a chain of block of the given length starting …","Carries the returned blocks and the retrieval status.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Author refers to the author’s account address","The payload in block.","The round of a block is a consensus-internal counter, …","Request to get a EpochChangeProof from current_epoch to …","","","","","","","","","","","","","","","","","","","","","","","","","ExecutedBlocks are managed in a speculative tree, the …","","","","","","","","","","","","","","","","","","","","The block is suffix of a reconfiguration block if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the LedgerInfo associated with this commit proposal","","Generates a new CommitDecision","","","","","","","","","Verifies that the signatures carried in the message forms …","","","Return the author of the commit proposal","","","","","","","","","","","","","","","","","","","Return the LedgerInfo associated with this commit proposal","","Generates a new CommitProposal","Generates a new CommitProposal using a signature over the …","","","Return the signature of the vote","","","","","","","Verifies that the consensus data hash of LedgerInfo …","","ProposalMsg contains the required information for the …","","","","","","","","","","","","","","","","","","","Creates a new proposal.","","","","","","","","","","","","","Verifies that the ProposalMsg is well-formed.","","","","","QuorumCert for the genesis block deterministically …","","","","","","","","","If the QC commits reconfiguration and starts a new epoch","","","","","","","","","","","","","","","","","","","","","","","Data structure for safety rules to ensure consensus safety.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This struct describes basic synchronization metadata.","","","","","","","","","","","","","","","","","Highest 2-chain timeout certificate","","Highest ledger info","","Highest ordered certificate","","Highest quorum certificate","The highest round the SyncInfo carries.","Highest timeout certificate if available","","","","","","","","","","","","","","","","This structure contains all the information necessary to …","Cryptographic hasher for an BCS-serializable #item","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Validators sign this structure that allows the …","Cryptographic hasher for an BCS-serializable #item","This structure contains all the information necessary to …","TimeoutCertificate is a proof that 2f+1 participants in …","Add a new timeout message from author, the timeout should …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The epoch of the timeout.","","","","","","","","","","","","","","","","","","","","The highest hqc round of the 2f+1 participants","","","","","","","","","","","","","","Creates new TimeoutCertificate","","","The round of the timeout.","","","","","","","Returns the signatures certifying the round","","","","","","","","","","","","","","","","","","","","","","","Verifies the signatures for each validator, the signature …","","","","","","TimeoutCertificate is a proof that 2f+1 participants in …","","","","","","","","","","Returns the epoch of the timeout certificate","","","","","","","","","","Creates new TimeoutCertificate","","Returns the round of the timeout certificate","","Returns the signatures certifying the round","","","","","","","Verifies the signatures for the round","","Vote is the struct that is ultimately sent by the voter in …","Add the 2-chain timeout and signature in the vote.","Generates a round signature, which can then be used for …","Return the author of the vote","","","","","","","","","Return the epoch of the vote","","","","","","","Returns the 2-chain timeout.","Returns the hash of the data represent by a timeout …","","","The vote message is considered a timeout vote message if …","Return the LedgerInfo associated with this vote","","Generates a new Vote corresponding to the “fast-vote” …","Generates a new Vote using a signature over the specified …","","Return the signature of the vote","","Returns the signature for the …","","","","","Return the two chain timeout vote and signature.","","Verifies that the consensus data hash of LedgerInfo …","","","VoteData keeps the information about the block, and its …","Cryptographic hasher for an BCS-serializable #item","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructs a new VoteData from the block information of a …","Returns block information associated to the block being …","Returns block information associated to the block being …","","","","","","","","","","","","","","Well-formedness checks that are independent of the current …","","","","VoteMsg is the struct that is ultimately sent by the voter …","","","","","","","","","","","","","","","","","","","","","","SyncInfo of the given vote message","","","","","","","","Container for actual voting material","","Wraps a vote_proposal and its signature.","This structure contains all the information needed by …","Cryptographic hasher for an BCS-serializable #item","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generate vote data depends on the config.","","","","","","","","","","","","","The signature of this proposal’s hash from Diem …","","","","","","","","","","","","","","","","","The vote proposal to be signed.","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,3,3,2,3,4,2,3,4,2,3,4,2,3,4,4,2,3,4,2,3,4,2,3,2,3,4,3,2,3,2,3,2,3,4,4,2,3,2,3,4,3,2,3,4,2,3,4,3,3,3,2,3,3,3,3,3,3,3,3,3,3,4,2,3,2,3,3,2,3,4,2,3,4,2,3,4,2,3,4,4,2,3,4,4,5,5,0,0,0,6,0,6,6,6,7,8,7,6,8,7,6,8,7,6,8,7,6,8,7,6,8,7,6,8,7,6,8,7,6,8,7,6,8,7,6,8,7,6,8,7,7,6,8,8,7,6,8,7,6,8,7,6,8,7,7,8,7,8,7,7,7,6,8,8,7,7,6,8,7,6,8,7,8,7,6,8,7,6,8,7,6,8,8,7,6,8,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,17,18,17,18,17,18,17,18,18,17,18,17,18,17,17,18,17,17,17,17,18,18,17,17,17,18,17,17,18,17,18,17,17,17,18,17,17,17,17,18,17,17,18,17,18,17,18,18,17,18,18,0,0,0,0,19,20,21,22,19,20,21,22,19,20,22,19,20,22,19,22,20,21,22,19,20,21,22,19,20,21,19,20,21,22,19,20,19,21,20,19,20,19,20,21,19,22,22,20,20,19,19,20,21,22,19,21,19,20,21,20,21,22,19,20,21,22,19,20,19,20,19,20,20,19,21,22,20,21,19,20,19,20,20,21,19,20,22,19,20,19,20,21,22,19,20,21,22,19,20,21,22,19,22,19,20,21,22,19,22,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,0,25,26,25,26,25,26,25,26,26,25,26,25,26,25,25,26,25,25,25,26,26,25,25,25,26,25,25,26,25,26,25,25,25,25,26,25,25,25,26,25,25,26,25,26,25,26,26,25,25,26,26,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,0,0,28,28,28,29,30,28,29,30,28,29,30,28,29,30,29,28,29,30,30,28,29,30,28,30,28,29,30,28,30,29,29,28,28,30,28,29,30,28,28,28,29,30,28,29,30,28,28,29,28,30,30,28,30,28,29,30,28,28,29,30,28,29,30,28,29,30,29,30,28,29,30,29],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["option",4,["author"]],["author",6]]],[[],["blockdata",3]],null,[[]],[[]],[[],["block",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],[[],["u64",15]],[[["block",3]],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["version",6],["hashvalue",3],["epochstate",3],["option",4,["epochstate"]]],["blockinfo",3]],[[],["hashvalue",3]],[[],["usize",15]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[["ledgerinfo",3]]],[[["block",3]],["bool",15]],[[["option",4,["ed25519signature"]],["ed25519signature",3],["hashvalue",3],["blockdata",3]]],[[["round",6],["quorumcert",3]]],[[["payload",6],["u64",15],["quorumcert",3],["validatorsigner",3],["round",6]]],[[["validatorsigner",3],["blockdata",3]]],[[["ed25519signature",3],["blockdata",3]]],[[],["hashvalue",3]],[[],[["option",4,["payload"]],["payload",6]]],[[],["quorumcert",3]],[[],["round",6]],[[],["result",4]],[[],[["ed25519signature",3],["option",4,["ed25519signature"]]]],[[],["hashvalue",3]],[[],["u64",15]],[[]],[[],["string",3]],[[],[["vec",3,["transaction"]],["transaction",4]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["validatorverifier",3]],["result",6]],[[],["result",6]],[[]],[[["usize",15],["u32",15]]],[[],["quorumcert",3]],[[]],[[["option",4,["blockinfo"]],["validatorsigner",3],["blockinfo",3],["vec",3,["validatorsigner"]]],["quorumcert",3]],[[]],[[]],[[["hashvalue",3],["quorumcert",3]]],[[["u64",15],["validatorsigner",3],["hashvalue",3],["vec",3,["validatorsigner"]]],["quorumcert",3]],[[],["ledgerinfo",3]],[[["usize",15]],["payload",6]],[[["round",6]]],[[]],null,null,null,null,null,null,[[],[["option",4,["author"]],["author",6]]],[[],["blocktype",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["blocktype",4]],[[],["blockdata",3]],[[],["blockdatahasher",3]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["u64",15]],[[["blocktype",4]],["bool",15]],[[["blockdata",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[],["hashvalue",3]],[[],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["hashvalue",3]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["blocktype",4]],["bool",15]],[[["blockdata",3]],["bool",15]],[[["u64",15],["quorumcert",3],["round",6],["blocktype",4]]],[[["u64",15],["quorumcert",3]]],[[["ledgerinfo",3]]],[[["round",6],["quorumcert",3]]],[[["payload",6],["author",6],["u64",15],["quorumcert",3],["round",6]]],[[],["hashvalue",3]],[[],[["option",4,["payload"]],["payload",6]]],[[],["quorumcert",3]],[[],["round",6]],[[]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["u64",15]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],[["usize",15],["result",6,["usize"]]]],null,null,null,null,null,null,null,null,null,null,[[],["hashvalue",3]],[[],["vec",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["blockretrievalrequest",3]],[[],["blockretrievalstatus",4]],[[],["blockretrievalresponse",3]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["blockretrievalrequest",3]],["bool",15]],[[["blockretrievalstatus",4]],["bool",15]],[[["blockretrievalresponse",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[["hashvalue",3]],["bool",15]],[[["blockretrievalrequest",3]],["bool",15]],[[["blockretrievalresponse",3]],["bool",15]],[[["hashvalue",3],["u64",15]]],[[["blockretrievalstatus",4],["vec",3,["block"]],["block",3]]],[[["hashvalue",3],["u64",15]]],[[],["u64",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["blockretrievalstatus",4]],[[],[["hashvalue",3],["option",4,["hashvalue"]]]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["blockretrievalrequest",3],["validatorverifier",3]],["result",6]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[],["epochretrievalrequest",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],null,[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[],["result",4]],null,[[],["hashvalue",3]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[],["block",3]],[[],["blockinfo",3]],[[]],[[]],[[],["executedblock",3]],[[]],[[],["statecomputeresult",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["u64",15]],[[["executedblock",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[],["hashvalue",3]],[[],["usize",15]],[[]],[[],["bool",15]],[[["bool",15]],["maybesignedvoteproposal",3]],[[["executedblock",3]],["bool",15]],[[["statecomputeresult",3],["block",3]]],[[],["hashvalue",3]],[[],[["option",4,["payload"]],["payload",6]]],[[],["quorumcert",3]],[[],[["contractevent",4],["vec",3,["contractevent"]]]],[[],["round",6]],[[],["u64",15]],[[]],[[],["string",3]],[[],[["vec",3,["transaction"]],["transaction",4]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,[[]],[[]],[[],["commitdecision",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],[[],["u64",15]],[[["commitdecision",3]],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[],["ledgerinfowithsignatures",4]],[[["commitdecision",3]],["bool",15]],[[["ledgerinfowithsignatures",4]]],[[],["round",6]],[[],["result",4]],[[],["hashvalue",3]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["validatorverifier",3]],["result",6]],[[]],null,[[],["author",6]],[[]],[[]],[[],["commitvote",3]],[[]],[[],["blockinfo",3]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],[[],["u64",15]],[[["commitvote",3]],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[],["ledgerinfo",3]],[[["commitvote",3]],["bool",15]],[[["ledgerinfo",3],["author",6],["validatorsigner",3]]],[[["ledgerinfo",3],["author",6],["ed25519signature",3]]],[[],["round",6]],[[],["result",4]],[[],["ed25519signature",3]],[[],["hashvalue",3]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["validatorverifier",3]],["result",6]],[[]],null,[[]],[[]],[[],["proposalmsg",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],[[],["u64",15]],[[["proposalmsg",3]],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[["proposalmsg",3]],["bool",15]],[[["syncinfo",3],["block",3]]],[[],["block",3]],[[],["author",6]],[[],["result",4]],[[],["syncinfo",3]],[[],["block",3]],[[],["hashvalue",3]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["validatorverifier",3]],["result",6]],[[],["result",6]],[[]],null,[[]],[[]],[[["hashvalue",3],["ledgerinfo",3]],["quorumcert",3]],[[],["blockinfo",3]],[[],["quorumcert",3]],[[]],[[],["blockinfo",3]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],[[],["bool",15]],[[["quorumcert",3]],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[],["ledgerinfowithsignatures",4]],[[["quorumcert",3]],["bool",15]],[[["votedata",3],["ledgerinfowithsignatures",4]]],[[],["blockinfo",3]],[[],["result",4]],[[],["hashvalue",3]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["validatorverifier",3]],["result",6]],[[],["votedata",3]],[[]],null,[[]],[[]],[[],["safetydata",3]],[[]],[[],["safetydata",3]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],null,[[["safetydata",3]],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],null,null,[[["safetydata",3]],["bool",15]],[[["u64",15],["vote",3],["option",4,["vote"]]]],null,null,[[],["result",4]],[[],["hashvalue",3]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[],["syncinfo",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],[[],["u64",15]],[[["syncinfo",3]],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["syncinfo",3]],["bool",15]],[[],[["twochaintimeoutcertificate",3],["option",4,["twochaintimeoutcertificate"]]]],[[],["round",6]],[[],["ledgerinfowithsignatures",4]],[[],["round",6]],[[],["quorumcert",3]],[[],["round",6]],[[],["quorumcert",3]],[[],["round",6]],[[],[["timeoutcertificate",3],["option",4,["timeoutcertificate"]]]],[[],["round",6]],[[],["usize",15]],[[]],[[["syncinfo",3]],["bool",15]],[[["option",4,["twochaintimeoutcertificate"]],["twochaintimeoutcertificate",3],["timeoutcertificate",3],["quorumcert",3],["option",4,["timeoutcertificate"]]]],[[["option",4,["twochaintimeoutcertificate"]],["option",4,["ledgerinfowithsignatures"]],["timeoutcertificate",3],["ledgerinfowithsignatures",4],["quorumcert",3],["twochaintimeoutcertificate",3],["option",4,["timeoutcertificate"]]]],[[],["result",4]],[[],["hashvalue",3]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["validatorverifier",3]],["result",6]],[[]],null,null,[[]],[[]],[[]],[[]],[[],["timeout",3]],[[],["timeouthasher",3]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[],["u64",15]],[[["timeout",3]],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[],["hashvalue",3]],[[],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["hashvalue",3]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["timeout",3]],["bool",15]],[[["u64",15],["round",6]]],[[],["round",6]],[[]],[[],["result",4]],[[["validatorsigner",3]],["ed25519signature",3]],[[],["hashvalue",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[],[["usize",15],["result",6,["usize"]]]],null,null,null,null,[[["twochaintimeout",3],["author",6],["ed25519signature",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["twochaintimeout",3]],[[],["timeoutsigningreprhasher",3]],[[],["twochaintimeoutcertificate",3]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["u64",15]],[[],["u64",15]],null,[[["twochaintimeout",3]],["bool",15]],[[["twochaintimeoutcertificate",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[],["hashvalue",3]],[[],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["hashvalue",3]],[[],["round",6]],[[],["round",6]],null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[["twochaintimeout",3]],["bool",15]],[[["twochaintimeoutcertificate",3]],["bool",15]],[[["u64",15],["round",6],["quorumcert",3]]],[[["twochaintimeout",3]]],[[],["quorumcert",3]],[[],["round",6]],[[],["round",6]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["validatorsigner",3]],["ed25519signature",3]],[[]],[[],["timeoutsigningrepr",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[["validatorverifier",3]],["result",6]],[[]],[[]],[[]],[[]],[[],[["usize",15],["result",6,["usize"]]]],null,[[["author",6],["ed25519signature",3]]],[[]],[[]],[[],["timeoutcertificate",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],[[],["u64",15]],[[["timeoutcertificate",3]],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[["timeoutcertificate",3]],["bool",15]],[[["timeout",3]]],[[["author",6]]],[[],["round",6]],[[],["result",4]],[[],["btreemap",3]],[[],["hashvalue",3]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["validatorverifier",3]],["result",6]],[[]],null,[[["twochaintimeout",3],["ed25519signature",3]]],[[["ed25519signature",3]]],[[],["author",6]],[[]],[[]],[[],["vote",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],[[],["u64",15]],[[["vote",3]],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["quorumcert",3]],["twochaintimeout",3]],[[],["timeout",3]],[[],["usize",15]],[[]],[[],["bool",15]],[[],["ledgerinfo",3]],[[["vote",3]],["bool",15]],[[["ledgerinfo",3],["author",6],["validatorsigner",3],["votedata",3]]],[[["ledgerinfo",3],["author",6],["ed25519signature",3],["votedata",3]]],[[],["result",4]],[[],["ed25519signature",3]],[[],["hashvalue",3]],[[],[["ed25519signature",3],["option",4,["ed25519signature"]]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["option",4]],[[],["typeid",3]],[[["validatorverifier",3]],["result",6]],[[],["votedata",3]],[[]],null,null,[[]],[[]],[[]],[[]],[[],["votedata",3]],[[],["votedatahasher",3]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["votedata",3]],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[],["hashvalue",3]],[[],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["hashvalue",3]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["votedata",3]],["bool",15]],[[["blockinfo",3]]],[[],["blockinfo",3]],[[],["blockinfo",3]],[[]],[[],["result",4]],[[],["hashvalue",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[],["result",6]],[[]],[[]],[[],[["usize",15],["result",6,["usize"]]]],null,[[]],[[]],[[],["votemsg",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],[[],["u64",15]],[[["votemsg",3]],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[["votemsg",3]],["bool",15]],[[["vote",3],["syncinfo",3]]],[[],["hashvalue",3]],[[],["result",4]],[[],["syncinfo",3]],[[],["hashvalue",3]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["validatorverifier",3]],["result",6]],[[],["vote",3]],[[]],null,null,null,[[],["accumulatorextensionproof",3]],[[],["block",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["voteproposal",3]],[[],["voteproposalhasher",3]],[[],["maybesignedvoteproposal",3]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["voteproposal",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[],["hashvalue",3]],[[],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],[["votedata",3],["result",6,["votedata"]]]],[[],["hashvalue",3]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[["option",4,["epochstate"]],["transactionaccumulatorhasher",3],["accumulatorextensionproof",3,["transactionaccumulatorhasher"]],["epochstate",3],["bool",15],["block",3]]],[[],[["epochstate",3],["option",4,["epochstate"]]]],[[]],[[],["result",4]],[[],["result",4]],null,[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,[[]],[[]],[[]],[[],[["usize",15],["result",6,["usize"]]]]],"p":[[3,"Block"],[4,"BlockType"],[3,"BlockData"],[3,"BlockDataHasher"],[13,"Proposal"],[4,"BlockRetrievalStatus"],[3,"BlockRetrievalRequest"],[3,"BlockRetrievalResponse"],[3,"EpochRetrievalRequest"],[3,"ExecutedBlock"],[3,"CommitDecision"],[3,"CommitVote"],[3,"ProposalMsg"],[3,"QuorumCert"],[3,"SafetyData"],[3,"SyncInfo"],[3,"Timeout"],[3,"TimeoutHasher"],[3,"TwoChainTimeoutCertificate"],[3,"TwoChainTimeout"],[3,"TimeoutSigningRepr"],[3,"TimeoutSigningReprHasher"],[3,"TimeoutCertificate"],[3,"Vote"],[3,"VoteData"],[3,"VoteDataHasher"],[3,"VoteMsg"],[3,"VoteProposal"],[3,"VoteProposalHasher"],[3,"MaybeSignedVoteProposal"]]},\
"crash_handler":{"doc":"","t":[3,11,11,11,11,11,11,11,5,11,11,11],"n":["CrashInfo","borrow","borrow_mut","erased_serialize","fmt","from","into","serialize","setup_panic_handler","try_from","try_into","type_id"],"q":["crash_handler","","","","","","","","","","",""],"d":["","","","","","","","","Invoke to ensure process exits on a thread panic.","","",""],"i":[0,1,1,1,1,1,1,1,0,1,1,1],"f":[null,[[]],[[]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["result",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"CrashInfo"]]},\
"data_streaming_service":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"debug_interface":{"doc":"","t":[3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11],"n":["AsyncNodeDebugClient","NodeDebugClient","borrow","borrow","borrow_mut","borrow_mut","from","from","from_url","get_events","get_events","get_node_metric","get_node_metric","get_node_metric_with_name","get_node_metrics","get_node_metrics","into","into","new","new","node_debug_service","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","NodeDebugService","borrow","borrow_mut","fmt","from","into","new","runtime","try_from","try_into","type_id","vzip"],"q":["debug_interface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debug_interface::node_debug_service","","","","","","","","","","",""],"d":["Implement default utility client for …","Implement default utility client for NodeDebugInterface","","","","","","","","","","Retrieves the individual node metric.  Requires all sub …","","Retrieves all node metrics for a given metric name.  …","","","","","Create NodeDebugInterfaceClient from a valid socket …","Create AsyncNodeDebugInterface from a valid socket address.","Debug interface to access information in a specific node.","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,2,1,2,1,2,1,1,2,1,2,1,1,2,1,2,1,2,0,1,2,1,2,1,2,1,2,0,3,3,3,3,3,3,3,3,3,3,3],"f":[null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["url",3]]],[[],[["vec",3,["jsonlogentry"]],["result",6,["vec"]]]],[[]],[[["asref",8,["str"]],["str",15]],[["option",4,["i64"]],["result",6,["option"]]]],[[["asref",8,["str"]],["str",15]]],[[["str",15]],[["option",4,["hashmap"]],["result",6,["option"]]]],[[],[["hashmap",3,["string","i64"]],["result",6,["hashmap"]]]],[[]],[[]],[[]],[[["asref",8,["str"]],["str",15],["u16",15]]],[[["str",15],["client",3],["asref",8,["str"]],["u16",15]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[["option",4,["arc"]],["socketaddr",4],["arc",3,["logger"]],["nodeconfig",3]]],[[],["runtime",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"NodeDebugClient"],[3,"AsyncNodeDebugClient"],[3,"NodeDebugService"]]},\
"diem_api":{"doc":"","t":[0,5],"n":["runtime","bootstrap"],"q":["diem_api","diem_api::runtime"],"d":["","Creates HTTP server (warp-based) serves for both REST and …"],"i":[0,0],"f":[null,[[["chainid",3],["arc",3,["movedbreader"]],["movedbreader",8],["nodeconfig",3],["mempoolclientsender",6]],[["runtime",3],["result",6,["runtime"]]]]],"p":[]},\
"diem_api_types":{"doc":"","t":[3,13,13,3,13,13,13,8,13,13,13,3,13,3,3,3,13,3,13,13,3,3,3,13,3,3,3,3,3,3,3,3,3,4,4,13,13,3,13,13,3,3,3,13,3,13,3,13,13,13,13,4,4,4,3,3,4,3,3,13,13,3,13,13,13,13,3,13,3,13,13,13,13,13,4,4,3,13,17,17,17,12,12,12,12,12,10,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,12,12,12,12,12,12,12,12,10,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,0,12,12,10,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,12,11,10,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,17,17],"n":["Address","Address","Address","BlockMetadataTransaction","BlockMetadataTransaction","Bool","Bool","Bytecode","Bytes","DeleteModule","DeleteResource","DirectWriteSet","DirectWriteSet","Error","Event","EventKey","GenericTypeParam","GenesisTransaction","GenesisTransaction","Hash","HashValue","HexEncodedBytes","LedgerInfo","ModulePayload","MoveConverter","MoveFunction","MoveModule","MoveModuleBytecode","MoveModuleId","MoveResource","MoveScriptBytecode","MoveStructTag","MoveStructValue","MoveType","MoveValue","OnChain","Pending","PendingTransaction","PendingTransaction","Reference","Response","ScriptFunctionId","ScriptFunctionPayload","ScriptFunctionPayload","ScriptPayload","ScriptPayload","ScriptWriteSet","ScriptWriteSet","Signer","Struct","Struct","Transaction","TransactionData","TransactionId","TransactionInfo","TransactionOnChainData","TransactionPayload","TransactionSigningMessage","U128","U128","U128","U64","U64","U64","U8","U8","UserTransaction","UserTransaction","UserTransactionRequest","Vector","Vector","Version","WriteModule","WriteResource","WriteSet","WriteSetChange","WriteSetPayload","WriteSetPayload","X_DIEM_CHAIN_ID","X_DIEM_LEDGER_TIMESTAMP","X_DIEM_LEDGER_VERSION","abi","abi","address","address","address","address_identifier_at","arguments","arguments","bad_request","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytecode","bytecode","chain_id","changes","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","code","data","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diem_ledger_version","diem_ledger_version","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","event_root_hash","events","events","events","events","execute_as","expiration_timestamp_secs","exposed_functions","find_script_function","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","friends","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_anyhow_error","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","function","function_handle_at","gas_currency_code","gas_unit_price","gas_used","generic_type_params","generic_type_params","hash","hash","id","identifier_at","info","info","info","info","inner","inner","inner","inner","internal","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_response","into_transaction_info","invalid_param","invalid_request_body","is_signer","json","json","key","ledger_info","ledger_timestamp","ledger_version","max_gas_amount","message","message","mime_types","module","module","module_handle_at","move_struct_fields","name","name","name","name","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","new","new","new_move_function","new_move_function","new_move_struct","new_move_struct","new_move_struct_field","new_move_struct_field","new_move_struct_tag","new_move_struct_tag","new_move_type","new_move_type","not_found","params","payload","payload","previous_block_votes","proposer","request","request","return_","round","script","sender","sequence_number","sequence_number","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signature","signature_at","state_root_hash","status_code","struct_handle_at","structs","success","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","timestamp","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","transaction","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_diem_core_transaction_payload","try_into_events","try_into_move_value","try_into_move_value_vector","try_into_move_values","try_into_onchain_transaction","try_into_pending_transaction","try_into_raw_transaction","try_into_resource","try_into_resources","try_into_signed_transaction","try_into_transaction","try_into_transaction_payload","try_into_write_set_change","try_into_write_set_payload","try_parse_abi","try_parse_abi","typ","typ","type_arguments","type_arguments","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","version","version","version","visibility","vm_status","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_set","0","index","items","mutable","to","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","address","address","address","address","data","data","module","resource","BCS_SIGNED_TRANSACTION","JSON"],"q":["diem_api_typesdiem_api_types::MoveType","","","","","diem_api_types::MoveValue","","","","","","","","diem_api_types::Transaction","","","","diem_api_types::TransactionData","","diem_api_types::TransactionId","","diem_api_types::TransactionPayload","","","","diem_api_types::WriteSet","","diem_api_types::WriteSetChange","","","","","","","","diem_api_types::mime_types",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","There are 2 types transaction ids from HTTP request inputsiem blockchain latest onchain ledger versioni":[0,1,2,0,3,1,2,0,1,4,4,0,5,0,0,0,2,0,3,6,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,8,8,0,3,2,0,0,0,7,0,7,0,5,2,1,2,0,0,0,0,0,0,0,0,1,2,0,1,2,1,2,0,3,0,1,2,6,4,4,0,0,0,7,0,0,0,9,10,11,12,13,14,15,16,17,18,19,18,20,17,21,22,23,24,25,26,27,28,1,11,2,12,13,29,9,10,30,8,31,3,32,33,34,35,36,37,38,7,15,16,39,5,40,41,4,6,42,19,18,20,17,21,22,23,24,25,26,27,28,1,11,2,12,13,29,9,10,30,8,31,3,32,33,34,35,36,37,38,7,15,16,39,5,40,41,4,6,42,9,10,23,41,20,17,21,22,23,24,25,26,27,28,1,11,2,12,13,29,9,10,30,8,31,3,32,33,34,35,36,37,38,7,15,16,39,5,40,41,4,6,42,20,17,21,22,23,24,25,26,27,28,1,11,2,12,13,29,9,10,30,8,31,3,32,33,34,35,36,37,38,7,15,16,39,5,40,41,4,6,42,17,16,38,20,17,21,22,23,24,25,26,27,28,11,2,12,13,29,9,10,30,35,38,7,15,16,39,5,40,41,4,42,17,17,20,17,21,22,23,24,25,26,27,28,1,11,2,12,13,29,9,10,30,31,3,32,33,34,35,36,37,38,7,15,16,39,5,40,41,4,42,31,32,31,34,36,41,40,35,12,14,20,20,17,17,21,21,22,22,23,24,25,25,26,27,28,1,11,11,2,2,12,13,13,29,9,10,30,30,8,31,3,32,33,34,35,36,37,38,7,15,16,39,5,40,41,4,6,6,42,12,19,18,20,20,17,17,17,21,21,22,22,23,24,25,25,26,26,27,27,28,1,1,11,11,2,2,12,12,13,13,29,29,9,9,10,30,8,8,8,31,31,31,3,3,3,3,3,32,33,34,35,35,36,37,38,38,7,15,16,39,5,40,41,4,6,42,17,20,21,22,27,11,2,13,30,6,15,14,35,35,32,11,29,32,33,37,14,31,34,36,37,20,25,26,27,17,19,18,20,17,21,22,23,24,25,26,27,28,1,11,2,12,13,29,9,10,30,8,31,3,32,33,34,35,36,37,38,7,15,16,39,5,40,41,4,6,42,18,19,17,17,2,27,1,38,18,23,23,35,17,42,0,11,30,14,19,11,12,13,29,30,20,17,21,22,23,24,25,26,27,28,1,11,2,12,13,29,9,10,30,31,3,32,33,34,35,36,37,38,7,15,16,39,5,40,41,4,42,19,18,17,23,11,9,10,42,14,14,14,14,14,14,14,14,14,14,17,29,35,36,37,37,33,34,29,37,40,35,35,38,20,17,21,22,23,24,25,26,27,28,1,11,2,12,13,29,9,10,30,3,32,33,34,35,36,37,38,7,15,16,39,5,40,41,4,42,35,14,32,17,14,12,32,20,17,21,22,23,24,25,26,27,28,1,11,2,12,13,29,9,10,30,3,32,33,34,35,36,37,38,7,15,16,39,5,40,41,4,42,23,37,20,17,21,22,23,24,25,26,27,28,1,11,2,12,13,29,9,10,30,8,31,3,32,33,34,35,36,37,38,7,15,16,39,5,40,41,4,6,42,20,17,21,22,25,11,2,13,30,6,31,19,18,20,17,21,22,23,24,24,25,26,27,28,28,1,1,11,2,12,13,29,9,10,30,8,31,3,32,33,34,35,36,37,38,7,15,16,16,39,5,40,41,4,6,42,19,18,20,17,21,22,23,24,25,26,27,28,1,11,2,12,13,29,9,10,30,8,31,3,32,33,34,35,36,37,38,7,15,16,39,5,40,41,4,6,42,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,9,10,24,38,15,16,19,18,20,17,21,22,23,24,25,26,27,28,1,11,2,12,13,29,9,10,30,8,31,3,32,33,34,35,36,37,38,7,15,16,39,5,40,41,4,6,42,24,23,31,32,29,32,19,18,20,17,21,22,23,24,25,26,27,28,1,11,2,12,13,29,9,10,30,8,31,3,32,33,34,35,36,37,38,7,15,16,39,5,40,41,4,6,42,39,43,44,45,46,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,71,72,69,70,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["addressidentifierindex",3]],["accountaddress",3]],null,null,[[["display",8]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[],["address",3]],[[],["error",3]],[[],["eventkey",3]],[[],["hashvalue",3]],[[],["ledgerinfo",3]],[[],["moveresource",3]],[[],["u64",3]],[[],["u128",3]],[[],["hexencodedbytes",3]],[[],["movestructvalue",3]],[[],["movevalue",4]],[[],["movestructtag",3]],[[],["movetype",4]],[[],["movemodule",3]],[[],["movemoduleid",3]],[[],["movefunction",3]],[[],["movemodulebytecode",3]],[[],["movescriptbytecode",3]],[[],["scriptfunctionid",3]],[[],["transactiondata",4]],[[],["transactiononchaindata",3]],[[],["transaction",4]],[[],["transactioninfo",3]],[[],["pendingtransaction",3]],[[],["usertransaction",3]],[[],["usertransactionrequest",3]],[[],["genesistransaction",3]],[[],["blockmetadatatransaction",3]],[[],["event",3]],[[],["transactionpayload",4]],[[],["scriptfunctionpayload",3]],[[],["scriptpayload",3]],[[],["writesetpayload",3]],[[],["writeset",4]],[[],["scriptwriteset",3]],[[],["directwriteset",3]],[[],["writesetchange",4]],[[],["transactionid",4]],[[],["transactionsigningmessage",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u64",15]]],null,[[["address",3]],["bool",15]],[[["error",3]],["bool",15]],[[["eventkey",3]],["bool",15]],[[["hashvalue",3]],["bool",15]],[[["ledgerinfo",3]],["bool",15]],[[["moveresource",3]],["bool",15]],[[["u64",3]],["bool",15]],[[["u128",3]],["bool",15]],[[["hexencodedbytes",3]],["bool",15]],[[["movestructvalue",3]],["bool",15]],[[["movevalue",4]],["bool",15]],[[["movestructtag",3]],["bool",15]],[[["movetype",4]],["bool",15]],[[["movemodule",3]],["bool",15]],[[["movemoduleid",3]],["bool",15]],[[["movefunction",3]],["bool",15]],[[["movemodulebytecode",3]],["bool",15]],[[["movescriptbytecode",3]],["bool",15]],[[["scriptfunctionid",3]],["bool",15]],[[["transactiononchaindata",3]],["bool",15]],[[["transaction",4]],["bool",15]],[[["transactioninfo",3]],["bool",15]],[[["pendingtransaction",3]],["bool",15]],[[["usertransaction",3]],["bool",15]],[[["usertransactionrequest",3]],["bool",15]],[[["genesistransaction",3]],["bool",15]],[[["blockmetadatatransaction",3]],["bool",15]],[[["event",3]],["bool",15]],[[["transactionpayload",4]],["bool",15]],[[["scriptfunctionpayload",3]],["bool",15]],[[["scriptpayload",3]],["bool",15]],[[["writesetpayload",3]],["bool",15]],[[["writeset",4]],["bool",15]],[[["scriptwriteset",3]],["bool",15]],[[["directwriteset",3]],["bool",15]],[[["writesetchange",4]],["bool",15]],[[["transactionsigningmessage",3]],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,null,null,[[["identstr",3]],[["option",4,["movefunction"]],["movefunction",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[]],[[]],[[["accountaddress",3]]],[[]],[[["error",3]]],[[]],[[["error",3]]],[[]],[[["eventkey",3]]],[[["hashvalue",3]]],[[]],[[]],[[]],[[["u64",15]]],[[]],[[["u128",15]]],[[]],[[]],[[["vec",3,["u8"]],["u8",15]]],[[]],[[["transactionargument",4]]],[[]],[[["structtag",3]]],[[]],[[]],[[["typetag",4]]],[[["compiledmodule",3]]],[[]],[[["moduleid",3]]],[[]],[[]],[[["compiledscript",3]]],[[["module",3]]],[[]],[[]],[[]],[[["transactiononchaindata",3]]],[[["signedtransaction",3]]],[[]],[[]],[[["transactionwithproof",6]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["error",3],["statuscode",3]]],[[["str",15]],[["error",3],["result",6,["error"]]]],[[["str",15]],[["error",3],["result",6,["error"]]]],[[["str",15]],[["error",3],["result",6,["error"]]]],[[["str",15]],[["error",3],["result",6,["error"]]]],[[["str",15]],[["error",3],["result",6,["error"]]]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],[["error",3],["result",4,["error"]]]],null,[[["functionhandleindex",3]],["functionhandle",3]],null,null,null,null,null,null,null,null,[[["identifierindex",3]],["identstr",3]],null,null,null,null,[[],["accountaddress",3]],[[],["u64",15]],[[],["u128",15]],[[]],[[["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["response",6]],[[["u64",15]],["transactioninfo",3]],[[["display",8],["str",15]]],[[["display",8]]],[[],["bool",15]],[[],[["result",6,["value"]],["value",4]]],[[],[["result",6,["value"]],["value",4]]],null,null,null,null,null,null,null,null,null,null,[[["modulehandleindex",3]],["modulehandle",3]],[[["structtag",3]],[["result",6,["vec"]],["vec",3]]],null,null,null,null,null,[[["address",3]],["bool",15]],[[["error",3]],["bool",15]],[[["eventkey",3]],["bool",15]],[[["hashvalue",3]],["bool",15]],[[["ledgerinfo",3]],["bool",15]],[[["moveresource",3]],["bool",15]],[[["u64",3]],["bool",15]],[[["u128",3]],["bool",15]],[[["hexencodedbytes",3]],["bool",15]],[[["movestructvalue",3]],["bool",15]],[[["movevalue",4]],["bool",15]],[[["movestructtag",3]],["bool",15]],[[["movetype",4]],["bool",15]],[[["movemodule",3]],["bool",15]],[[["movemoduleid",3]],["bool",15]],[[["movefunction",3]],["bool",15]],[[["movemodulebytecode",3]],["bool",15]],[[["movescriptbytecode",3]],["bool",15]],[[["scriptfunctionid",3]],["bool",15]],[[["transactiononchaindata",3]],["bool",15]],[[["transaction",4]],["bool",15]],[[["transactioninfo",3]],["bool",15]],[[["pendingtransaction",3]],["bool",15]],[[["usertransaction",3]],["bool",15]],[[["usertransactionrequest",3]],["bool",15]],[[["genesistransaction",3]],["bool",15]],[[["blockmetadatatransaction",3]],["bool",15]],[[["event",3]],["bool",15]],[[["transactionpayload",4]],["bool",15]],[[["scriptfunctionpayload",3]],["bool",15]],[[["scriptpayload",3]],["bool",15]],[[["writesetpayload",3]],["bool",15]],[[["writeset",4]],["bool",15]],[[["scriptwriteset",3]],["bool",15]],[[["directwriteset",3]],["bool",15]],[[["writesetchange",4]],["bool",15]],[[["transactionsigningmessage",3]],["bool",15]],[[]],[[["ledgerinfo",3]],[["result",6,["error"]],["error",3]]],[[["statuscode",3],["string",3]]],[[["chainid",3],["ledgerinfowithsignatures",4]]],[[["address",3],["identifier",3],["movetype",4],["vec",3,["movetype"]]]],[[["vec",3,["u8"]],["u8",15]]],[[["vec",3,["u8"]],["u8",15]]],[[["vec",3,["u8"]],["u8",15]]],[[["functiondefinition",3]],["movefunction",3]],[[["functiondefinition",3]],["movefunction",3]],[[["structdefinition",3]],["movestruct",3]],[[["structdefinition",3]],["movestruct",3]],[[["fielddefinition",3]],["movestructfield",3]],[[["fielddefinition",3]],["movestructfield",3]],[[["structhandleindex",3]],["movestructtag",3]],[[["structhandleindex",3]],["movestructtag",3]],[[["signaturetoken",4]],["movetype",4]],[[["signaturetoken",4]],["movetype",4]],[[["display",8],["str",15],["u64",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["serializer",8]],["result",4]],[[],["result",4]],[[["serializer",8]],["result",4]],[[["serializer",8]],["result",4]],[[],["result",4]],[[],["result",4]],[[["serializer",8]],["result",4]],[[["serializer",8]],["result",4]],[[["serializer",8]],["result",4]],[[],["result",4]],[[["serializer",8]],["result",4]],[[["serializer",8]],["result",4]],[[["serializer",8]],["result",4]],[[],["result",4]],[[["serializer",8]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["serializer",8]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["signatureindex",3]],["signature",3]],null,[[],["statuscode",3]],[[["structhandleindex",3]],["structhandle",3]],null,null,[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["u64",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["annotatedmovestruct",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["annotatedmovestruct",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[["annotatedmovevalue",4]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["script",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["transactionpayload",4]],[["transactionpayload",4],["result",6,["transactionpayload"]]]],[[],[["result",6,["vec"]],["vec",3,["event"]]]],[[["movetype",4],["value",4]],[["movevalue",4],["result",6,["movevalue"]]]],[[["movetype",4],["value",4]],[["movevalue",4],["result",6,["movevalue"]]]],[[["vec",3,["value"]],["movefunction",3],["value",4]],[["result",6,["vec"]],["vec",3,["movevalue"]]]],[[["transactiononchaindata",3],["transactioninfotrait",8]],[["transaction",4],["result",6,["transaction"]]]],[[["signedtransaction",3]],[["transaction",4],["result",6,["transaction"]]]],[[["chainid",3],["usertransactionrequest",3]],[["rawtransaction",3],["result",6,["rawtransaction"]]]],[[["structtag",3]],[["result",6,["moveresource"]],["moveresource",3]]],[[],[["result",6,["vec"]],["vec",3,["moveresource"]]]],[[["chainid",3],["usertransactionrequest",3]],[["signedtransaction",3],["result",6,["signedtransaction"]]]],[[["transactiondata",4],["transactioninfotrait",8]],[["transaction",4],["result",6,["transaction"]]]],[[["transactionpayload",4]],[["transactionpayload",4],["result",6,["transactionpayload"]]]],[[["accesspath",3],["writeop",4]],[["result",6,["writesetchange"]],["writesetchange",4]]],[[["writesetpayload",4]],[["result",6,["writesetpayload"]],["writesetpayload",3]]],[[],["result",6]],[[]],null,null,null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[],["u64",15]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"MoveValue"],[4,"MoveType"],[4,"Transaction"],[4,"WriteSetChange"],[4,"WriteSet"],[4,"TransactionId"],[4,"TransactionPayload"],[4,"TransactionData"],[3,"MoveModuleBytecode"],[3,"MoveScriptBytecode"],[3,"MoveStructTag"],[3,"MoveModule"],[3,"MoveModuleId"],[8,"Bytecode"],[3,"ScriptFunctionPayload"],[3,"ScriptPayload"],[3,"Error"],[3,"Response"],[3,"MoveConverter"],[3,"Address"],[3,"EventKey"],[3,"HashValue"],[3,"LedgerInfo"],[3,"MoveResource"],[3,"U64"],[3,"U128"],[3,"HexEncodedBytes"],[3,"MoveStructValue"],[3,"MoveFunction"],[3,"ScriptFunctionId"],[3,"TransactionOnChainData"],[3,"TransactionInfo"],[3,"PendingTransaction"],[3,"UserTransaction"],[3,"UserTransactionRequest"],[3,"GenesisTransaction"],[3,"BlockMetadataTransaction"],[3,"Event"],[3,"WriteSetPayload"],[3,"ScriptWriteSet"],[3,"DirectWriteSet"],[3,"TransactionSigningMessage"],[13,"Struct"],[13,"GenericTypeParam"],[13,"Vector"],[13,"Reference"],[13,"U8"],[13,"U64"],[13,"U128"],[13,"Bool"],[13,"Address"],[13,"Vector"],[13,"Bytes"],[13,"Struct"],[13,"PendingTransaction"],[13,"UserTransaction"],[13,"GenesisTransaction"],[13,"BlockMetadataTransaction"],[13,"OnChain"],[13,"Pending"],[13,"Hash"],[13,"Version"],[13,"ScriptFunctionPayload"],[13,"ScriptPayload"],[13,"ModulePayload"],[13,"WriteSetPayload"],[13,"ScriptWriteSet"],[13,"DirectWriteSet"],[13,"DeleteModule"],[13,"DeleteResource"],[13,"WriteModule"],[13,"WriteResource"]]},\
"diem_assets_proof":{"doc":"A CLI tool for collecting and aggregating a VASPs current …","t":[3,3,3,3,8,13,3,4,3,13,3,13,4,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12],"n":["Args","AssetsProof","BalancesView","ChildVASPView","Client","Collect","CollectOptions","Command","CommonOptions","Error","ParentVASPView","Result","ResultWrapper","SimpleCurrencyView","SimpleMetadataView","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clap","clap","clap","clap","clone","clone_into","empty","exec","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_clap","from_clap","from_clap","from_clap","get_account_by_version","get_currencies","get_last_version_before_timestamp","get_metadata","get_metadata_by_version","into","into","into","into","into","into","into","into","into","into","into","is_error","merge","new","new","pretty_print","serialize","serialize","serialize","serialize","serialize","serialize","serialize","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0"],"q":["diem_assets_proof","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_assets_proof::Command","diem_assets_proof::ResultWrapper",""],"d":["","A receipt containing the aggregate balance of a VASP and …","A set of balances by currency.","A simplified view of a single child VASP account. …","A small trait abstracting over the Diem json-rpc client so …","Collect a Proof-of-Assets receipt for a Diem VASP’s …","","","","","A simplified view of the parent VASP account, ignoring …","","A helper type for serializing <code>Result&lt;T&gt;</code> with serde-json.","A simplified view of the current on-chain currency …","Truncated view of the <code>MetadataView</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","For pretty printing outputs in JSON","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,1,0,0,0,2,0,2,0,0,0,3,1,4,5,6,7,8,9,10,2,11,3,1,4,5,6,7,8,9,10,2,11,3,1,4,5,9,9,9,3,3,1,4,5,6,7,8,9,10,2,11,3,1,4,5,6,7,8,9,10,10,2,11,3,1,4,5,12,12,12,12,12,3,1,4,5,6,7,8,9,10,2,11,2,9,9,2,0,6,7,8,9,10,2,11,6,7,8,9,10,2,11,9,3,1,4,5,6,6,7,7,8,8,9,10,2,11,3,1,4,5,6,7,8,9,10,2,11,3,1,4,5,6,7,8,9,10,2,11,3,1,4,5,6,7,8,9,10,2,11,13,14,15],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["balancesview",3]],[[]],[[]],[[],[["string",3],["result",6,["string"]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["metadataview",3]]],[[]],[[]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["version",6],["accountaddress",3]],[["result",6,["response"]],["response",3,["option"]]]],[[],[["result",6,["response"]],["response",3,["vec"]]]],[[["u64",15],["version",6]],[["result",6,["version"]],["version",6]]],[[],[["result",6,["response"]],["response",3,["metadataview"]]]],[[["version",6]],[["result",6,["response"]],["response",3,["metadataview"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["balancesview",3]]],[[["amountview",3],["vec",3,["amountview"]]]],[[["result",6]],["resultwrapper",4]],[[["result",6],["serialize",8]],[["string",3],["result",6,["string"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["accountview",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[["accountview",3]],["result",6]],[[["currencyinfoview",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null],"p":[[4,"Command"],[4,"ResultWrapper"],[3,"Args"],[3,"CommonOptions"],[3,"CollectOptions"],[3,"ParentVASPView"],[3,"ChildVASPView"],[3,"SimpleCurrencyView"],[3,"BalancesView"],[3,"SimpleMetadataView"],[3,"AssetsProof"],[8,"Client"],[13,"Collect"],[13,"Result"],[13,"Error"]]},\
"diem_bitvec":{"doc":"This library defines a BitVec struct that represents a bit …","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BitVec","all_zeros","arbitrary_with","borrow","borrow_mut","clone","clone_into","count_ones","default","deserialize","eq","fmt","from","from_iter","into","is_set","iter_ones","last_set_bit","ne","serialize","set","to_owned","try_from","try_into","type_id","vzip"],"q":["diem_bitvec","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["BitVec represents a bit vector that supports 4 operations:","Return true if the BitVec is all zeros.","","","","","","Returns the number of set bits.","","","","","","","","Checks if the bit at position @pos is set.","Return an <code>Iterator</code> over all ‘1’ bit indexes.","Returns the index of the last set bit.","","","Sets the bit at position @pos.","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[],["bool",15]],[[]],[[]],[[]],[[],["bitvec",3]],[[]],[[],["u32",15]],[[],["bitvec",3]],[[],["result",4]],[[["bitvec",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[["intoiterator",8]]],[[]],[[["u8",15]],["bool",15]],[[]],[[],[["option",4,["u8"]],["u8",15]]],[[["bitvec",3]],["bool",15]],[[],["result",4]],[[["u8",15]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"BitVec"]]},\
"diem_client":{"doc":"","t":[3,3,3,3,3,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,18,4,4,4,3,6,3,3,3,3,6,13,13,13,13,13,13,13,4,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,4,7,13,13,13,4,3,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,4,4,13,13,3,13,13,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,13,3,4,3,13,4,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,12,12,12,4,3,3,3,3,3,13,3,13,13,13,3,13,13,13,13,3,13,13,3,4,3,3,13,13,3,13,13,13,3,13,13,13,13,13,3,3,13,13,13,3,13,3,13,4,3,3,3,3,13,13,13,13,13,13,13,13,4,13,13,12,12,12,12,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["AccountAddress","BlockingClient","Client","Error","Event","FaucetClient","GetAccount","GetAccount","GetAccount","GetAccountStateWithProof","GetAccountStateWithProof","GetAccountStateWithProof","GetAccountTransaction","GetAccountTransaction","GetAccountTransaction","GetAccountTransactions","GetAccountTransactions","GetAccountTransactions","GetAccountTransactionsWithProofs","GetAccountTransactionsWithProofs","GetAccountTransactionsWithProofs","GetAccumulatorConsistencyProof","GetAccumulatorConsistencyProof","GetAccumulatorConsistencyProof","GetCurrencies","GetCurrencies","GetCurrencies","GetEventByVersionWithProof","GetEventByVersionWithProof","GetEventByVersionWithProof","GetEvents","GetEvents","GetEvents","GetEventsWithProofs","GetEventsWithProofs","GetEventsWithProofs","GetMetadata","GetMetadata","GetMetadata","GetNetworkStatus","GetNetworkStatus","GetNetworkStatus","GetStateProof","GetStateProof","GetStateProof","GetTransactionError","GetTransactions","GetTransactions","GetTransactions","GetTransactionsWithProofs","GetTransactionsWithProofs","GetTransactionsWithProofs","JsonRpcRequest","LENGTH","Method","MethodRequest","MethodResponse","Response","Result","Retry","SignedTransaction","State","StreamError","StreamResult","Submit","Submit","Submit","Timeout","TransactionExecutionFailed","TransactionExpired","TransactionHashMismatchError","WaitForTransactionError","ZERO","and_then","arbitrary_with","arbitrary_with","as_ref","authenticator","batch","batch","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_id","chain_id","check_signature","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","committed_hash","contains_duplicate_signers","create_account","data","default","delay","deref","deserialize","deserialize","deserialize","deserialize","deserialize","encode_hex","encode_hex_upper","eq","eq","eq","eq","equivalent","equivalent","equivalent","errors","event","expiration_timestamp_secs","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format_for_client","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_hex","from_hex_literal","from_json","from_response","from_str","fund","gas_currency_code","gas_unit_price","get_account","get_account","get_account","get_account_by_version","get_account_by_version","get_account_by_version","get_account_state_with_proof","get_account_state_with_proof","get_account_state_with_proof","get_account_transaction","get_account_transaction","get_account_transaction","get_account_transactions","get_account_transactions","get_account_transactions","get_account_transactions_with_proofs","get_account_transactions_with_proofs","get_account_transactions_with_proofs","get_accumulator_consistency_proof","get_accumulator_consistency_proof","get_accumulator_consistency_proof","get_currencies","get_currencies","get_currencies","get_deserialized_events","get_deserialized_events","get_deserialized_resource","get_deserialized_resource","get_event_by_version_with_proof","get_event_by_version_with_proof","get_event_by_version_with_proof","get_events","get_events","get_events","get_events_with_proofs","get_events_with_proofs","get_events_with_proofs","get_metadata","get_metadata","get_metadata","get_metadata_by_version","get_metadata_by_version","get_metadata_by_version","get_network_status","get_network_status","get_network_status","get_state_proof","get_state_proof","get_state_proof","get_transactions","get_transactions","get_transactions","get_transactions_with_proofs","get_transactions_with_proofs","get_transactions_with_proofs","hash","hash","hash","id","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_bytes","into_inner","into_parts","into_raw_transaction","is_multi_agent","is_need_sync","is_retriable","json_rpc_error","json_rpc_error","last_known_state","last_known_state","max_gas_amount","max_retries","method","method","method","mint","ne","ne","ne","ne","new","new","new","new","new","new","new","new","new_multi_agent","new_multisig","new_with_authenticator","new_with_retry","none","partial_cmp","partial_cmp","payload","random","raw_txn_bytes_len","request","request","sender","sequence_number","serialize","serialize","serialize","serialize","serialize","short_str_lossless","source","source","source","state","stream","submit","submit","submit","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","timestamp_usecs","to_hex","to_hex_literal","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_vec","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_get_account","try_into_get_account_state_with_proof","try_into_get_account_transaction","try_into_get_account_transactions","try_into_get_accumulator_consistency_proof","try_into_get_currencies","try_into_get_event_by_version_with_proof","try_into_get_events","try_into_get_metadata","try_into_get_network_status","try_into_get_state_proof","try_into_get_transactions","try_into_submit","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap_get_account","version","views","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_for_signed_transaction","wait_for_signed_transaction","wait_for_transaction","wait_for_transaction","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","1","1","1","1","1","1","1","1","1","2","2","2","2","2","2","2","2","3","3","4","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","DefaultServerError","ErrorData","INTERNAL_ERRORS","InvalidFormat","InvalidParams","InvalidRequest","InvalidRequestCode","JsonRpcError","MempoolInvalidSeqNumber","MempoolInvalidUpdate","MempoolIsFull","MempoolTooManyTransactions","MempoolUnknownError","MempoolVmError","MethodNotFound","ParseError","ServerCode","StatusCode","VmDeserializationError","VmExecutionError","VmInvariantViolationError","VmUnknownError","VmValidationError","VmVerificationError","as_status_code","as_str","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","code","code_as_str","data","deserialize","deserialize","fmt","fmt","fmt","from","from","from","from","from","from","from","from_i64","from_u64","internal_error","into","into","into","into","invalid_format","invalid_param","invalid_params","invalid_params_size","invalid_request","invalid_request_with_data","invalid_request_with_msg","is_internal_error","mempool_error","message","method_not_found","serialize","serialize","serialize","test_only_hash","test_only_hash","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vm_status","vzip","vzip","vzip","vzip","0","StreamingClient","StreamingClientConfig","SubscriptionStream","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","channel_size","clone","clone_into","default","drop","from","from","from","id","into","into","into","new","ok_timeout_millis","poll_next","request","response","send_subscription","subscribe_events","subscribe_transactions","subscription_count","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","vzip","vzip","vzip","wait_for_msg","StreamJsonRpcRequest","StreamMethod","StreamMethodRequest","SubscribeToEvents","SubscribeToEvents","SubscribeToEventsParams","SubscribeToTransactions","SubscribeToTransactions","SubscribeToTransactionsParams","Unsubscribe","Unsubscribe","as_str","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","deserialize","eq","equivalent","event_key","event_seq_num","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","from_value","hash","id","include_events","into","into","into","into","into","method","method_name","method_name","method_request","new","serialize","serialize","serialize","serialize","serialize","starting_version","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","0","0","Event","OK","StreamJsonRpcResponse","StreamJsonRpcResponseView","SubscribeResult","SubscribeResult","SubscriptionResult","Transaction","UnsubscribeResult","UnsubscribeResult","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","error","error","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","id","into","into","into","into","into","jsonrpc","ne","ne","ne","ok","ok","parse_result","result","result","serialize","serialize","serialize","serialize","serialize","status","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_owned","transaction_version","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unsubscribe","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","AccountRoleView","AccountStateProofView","AccountStateWithProofView","AccountTransactionsWithProofView","AccountView","AccumulatorConsistencyProofView","AdminTransaction","AmountView","BaseUrlRotation","BlockMetadata","Burn","BytesView","CancelBurn","ChildVASP","ComplianceKeyRotation","CreateAccount","CurrencyInfoView","DeserializationError","DesignatedDealer","EventByVersionWithProofView","EventDataView","EventView","EventWithProofView","Executed","ExecutionFailure","MetadataView","Mint","MiscellaneousError","MoveAbort","MoveAbortExplanationView","NewBlock","NewEpoch","OutOfGas","ParentVASP","Preburn","PreburnQueueView","PreburnWithMetadataView","PublishingFailure","ReceivedMint","ReceivedPayment","ScriptView","SentPayment","StateProofView","ToXDXExchangeRateUpdate","TransactionDataView","TransactionListView","TransactionView","TransactionsProofsView","TransactionsWithProofsView","TreasuryCompliance","Unknown","Unknown","Unknown","UnknownToClient","UnknownTransaction","UserTransaction","VASPDomain","VMStatusView","VerificationError","WriteSet","accumulator_root_hash","address","amount","amount","arguments","arguments_bcs","as_ref","authentication_key","balances","blob","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","burn_events_key","bytes","cancel_burn_events_key","category","category_description","chain_id","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","code","currency","currency","currency","data","default","delegated_key_rotation_capability","delegated_withdrawal_capability","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diem_version","dual_attestation_limit","empty","encode_hex","encode_hex_upper","epoch_change_proof","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","event_with_proof","events","exchange_rate_update_events_key","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fractional_part","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","function_name","gas_used","hash","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","is_executed","is_frozen","key","ledger_consistency_proof","ledger_consistency_proof","ledger_info_to_transaction_info_proof","ledger_info_to_transaction_infos_proof","ledger_info_with_signatures","lower_bound_incl","metadata","metadata","metadata_signature","mint_events_key","module_address","module_name","module_publishing_allowed","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","preburn","preburn_events_key","preburns","proof","proofs","reason","reason_description","received_events_key","receiver","role","scaling_factor","script_hash_allow_list","sent_events_key","sequence_number","sequence_number","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialized_events","serialized_transactions","serialized_txns_with_proofs","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_xdx_exchange_rate","transaction","transaction_info","transaction_info_to_account_proof","transaction_infos","transaction_version","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_account_state","try_from_tx_and_events","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_txn_list_with_proof","type","type_arguments","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unknown","upper_bound_excl","version","version","version","version","vm_status","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_diem_root","base_url","base_url","base_url_rotation_events_key","base_url_rotation_events_key","compliance_key","compliance_key","compliance_key_rotation_events_key","compliance_key_rotation_events_key","expiration_time","expiration_time","human_name","human_name","num_children","parent_vasp_address","preburn_balances","preburn_queues","received_mint_events_key","vasp_domain_events_key","vasp_domains","address","amount","amount","amount","amount","amount","amount","amount","bytes","committed_timestamp_secs","created_address","currency_code","destination_address","domain","epoch","metadata","metadata","new_base_url","new_compliance_public_key","new_to_xdx_exchange_rate","preburn_address","preburn_address","preburn_address","proposed_time","proposer","receiver","receiver","removed","role_id","round","sender","sender","time_rotated_seconds","time_rotated_seconds","chain_id","expiration_timestamp_secs","gas_currency","gas_unit_price","max_gas_amount","public_key","script","script_bytes","script_hash","secondary_public_keys","secondary_signature_schemes","secondary_signatures","secondary_signers","sender","sequence_number","signature","signature_scheme","timestamp_usecs","abort_code","code_offset","explanation","function_index","location","location"],"q":["diem_clientdiem_client::MethodRequest","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_client::MethodResponse","","","","","","","","","","","","","","","diem_client::WaitForTransactionError","","","diem_client::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_client::errors::ErrorData","diem_client::stream","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_client::stream::request","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_client::stream::request::StreamMethodRequest","","diem_client::stream::response","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_client::stream::response::StreamJsonRpcResponseView","","","","diem_client::viewsdiem_client::views::AccountRoleView","","","","","","","","","","","","","","","","","","","diem_client::views::EventDataView","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_client::views::TransactionDataView","","","","","","","","","","","","","","","","","","diem_client::views::VMStatusView","","","","",""],"d":["A struct that represents an account address.","","","","Wrapper for a deserialized Move event and its containing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The number of bytes in an address.","","","","","","","A transaction that has been signed.","","","","","","","","","","","","Hex address: 0x0","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks that the signature of given transaction. Returns …","","","","","","","","","","","","","","","","","","","","","Returns the hash when the transaction is commited onchain.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the events of type <code>T</code> that have been emitted to …","Return the events of type <code>T</code> that have been emitted to …","Deserialize and return the resource value of type <code>T</code> stored …","Deserialize and return the resource value of type <code>T</code> stored …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to convert the provided byte buffer into Address.","Tries to convert the provided byte array into Address.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","list of server internal errors","","","","JSON RPC server error codes for invalid request","","","","","","","","","","Custom JSON RPC server error codes Ranges from -32000 to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This API is experimental and subject to change …","Configuration options for the <code>Streaming Client</code>","","","","","","","","The buffer of incoming messages per subscription","","","","","","","","","","","","","How long to wait for an incoming message before …he Unknown variant is deserialized by the client if it …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,4,1,2,3,1,2,3,0,5,0,0,0,0,0,0,0,0,0,0,1,2,3,4,4,4,4,0,5,6,7,5,5,7,8,9,10,11,4,8,9,12,1,13,6,2,14,15,16,3,7,5,10,11,4,8,9,12,1,13,6,2,14,15,16,3,7,5,7,15,7,8,9,1,2,14,15,16,7,5,8,9,1,2,14,15,16,7,5,15,5,7,7,12,14,16,16,5,1,13,3,7,5,5,5,2,15,7,5,15,7,5,0,14,7,10,10,11,11,4,4,8,9,1,13,6,2,14,15,16,3,7,5,5,5,5,7,10,10,11,11,4,8,9,12,1,13,6,2,14,15,16,3,7,5,5,5,5,5,2,15,5,12,7,7,8,9,1,8,9,1,8,9,1,8,9,1,8,9,1,8,9,1,8,9,1,8,9,1,8,9,8,9,8,9,1,8,9,1,8,9,1,8,9,1,8,9,1,8,9,1,8,9,1,8,9,1,8,9,1,7,5,5,13,6,10,11,4,8,9,12,1,13,6,2,14,15,16,3,7,5,5,6,6,7,7,10,10,10,11,8,9,7,16,1,13,2,12,2,15,7,5,8,9,12,13,6,16,7,5,7,7,7,9,16,15,5,7,5,7,8,9,7,7,1,13,3,7,5,5,10,11,4,6,0,8,9,1,1,13,3,7,5,15,5,5,8,9,1,2,14,15,16,7,5,10,11,4,5,5,10,11,4,8,9,12,1,13,6,2,14,15,16,3,7,7,5,5,5,5,10,11,4,8,9,12,1,13,6,2,14,15,16,3,7,5,2,2,2,2,2,2,2,2,2,2,2,2,2,10,11,4,8,9,12,1,13,6,2,14,15,16,3,7,5,2,15,0,10,11,4,8,9,12,1,13,6,2,14,15,16,3,7,5,8,9,8,9,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,19,20,21,22,23,27,28,29,30,31,32,20,21,22,23,28,29,30,31,22,30,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,0,0,52,52,52,0,0,51,51,51,51,51,51,52,52,0,53,51,51,51,51,51,51,54,52,51,52,53,54,51,52,53,54,53,54,53,54,54,54,54,53,54,53,54,54,51,52,53,54,54,54,54,52,52,54,51,52,53,54,54,54,54,54,54,54,54,0,54,54,54,53,54,54,53,54,53,54,54,51,52,53,54,51,52,53,54,51,52,53,54,54,51,52,53,54,55,0,0,0,56,57,58,56,57,58,57,58,58,57,56,56,57,58,56,56,57,58,58,57,56,0,0,58,58,58,58,58,56,57,58,56,57,58,56,56,57,58,56,57,58,56,0,0,0,59,60,0,59,60,0,59,60,60,61,59,60,62,63,61,59,60,62,63,61,59,60,62,63,61,59,60,62,63,61,59,60,62,63,60,60,62,62,61,59,60,62,63,61,59,60,62,63,61,59,60,61,63,61,59,60,62,63,59,61,59,61,61,61,59,60,62,63,63,61,59,60,62,63,61,59,60,62,63,61,59,60,62,63,61,59,60,62,63,61,59,60,62,63,61,59,60,62,63,64,65,66,67,0,0,0,66,0,66,0,66,66,68,67,69,70,66,68,67,69,70,66,68,67,69,70,66,68,67,69,70,66,68,67,69,70,66,67,69,70,68,68,66,68,67,69,70,66,68,67,69,70,68,68,66,68,67,69,70,68,66,69,70,69,70,68,68,68,66,68,67,69,70,70,66,68,67,69,70,66,68,67,69,70,70,66,68,67,69,70,66,68,67,69,70,66,68,67,69,70,69,66,68,67,69,70,71,72,73,74,75,0,0,0,0,0,0,76,0,76,77,76,0,76,78,76,76,0,79,78,0,0,0,0,79,79,0,76,79,79,0,76,76,79,78,76,0,0,79,76,76,0,76,0,76,0,0,0,0,0,78,78,76,79,76,77,77,76,0,79,77,80,81,82,83,83,83,84,81,81,85,82,78,81,86,87,88,89,90,76,80,84,91,79,92,75,93,94,95,77,83,96,97,98,85,99,82,78,81,86,87,88,89,90,76,80,84,91,79,92,75,93,94,95,77,83,96,97,98,85,99,96,92,96,91,91,80,82,78,81,86,87,88,89,90,76,80,84,91,79,92,75,93,94,95,77,83,96,97,98,85,99,82,78,81,86,87,88,89,90,76,80,84,91,79,92,75,93,94,95,77,83,96,97,98,85,99,83,96,82,86,83,88,83,81,81,84,82,78,81,86,87,88,89,90,76,80,84,91,79,92,75,93,94,95,77,83,96,97,98,85,99,80,80,75,84,84,97,82,78,81,86,87,88,89,90,76,80,84,91,79,92,75,93,94,95,77,83,96,97,98,85,99,89,92,96,82,78,81,86,87,88,89,90,76,80,84,84,91,91,79,79,92,75,93,94,95,77,83,96,97,98,85,99,96,82,78,78,81,86,87,88,89,90,76,80,84,84,84,91,79,79,92,75,93,94,95,77,77,83,83,83,96,96,97,98,85,99,83,92,92,84,82,78,81,86,87,88,89,90,76,80,84,91,79,92,75,93,94,95,77,83,96,97,98,85,99,84,79,81,88,97,98,99,94,97,90,87,83,83,96,83,83,80,82,78,81,86,87,88,89,90,76,80,84,91,79,92,75,93,94,95,77,83,96,97,98,85,99,81,86,80,84,87,96,86,85,93,91,91,81,83,81,96,80,81,81,88,82,78,81,86,87,88,89,90,76,80,84,91,79,92,75,93,94,95,77,83,96,97,98,85,99,93,93,95,82,78,81,86,87,88,89,90,76,80,84,91,79,92,75,93,94,95,77,83,96,97,98,85,99,80,82,78,81,86,87,88,89,90,76,80,84,91,79,92,75,93,94,95,77,83,96,97,98,85,99,84,91,79,96,92,99,99,94,88,82,78,81,86,87,88,88,89,89,90,90,76,76,80,84,91,79,92,75,75,75,93,93,94,94,95,95,77,83,96,97,97,98,98,85,85,99,99,81,92,82,78,81,86,87,88,89,90,76,80,84,91,79,92,75,93,94,95,77,83,96,97,98,85,99,93,83,83,82,78,81,86,87,88,89,90,76,80,84,91,79,92,75,93,94,95,77,83,96,97,98,85,99,83,90,81,80,92,85,92,82,78,81,86,87,88,89,90,76,80,84,91,79,92,75,93,94,95,77,83,96,97,98,85,99,80,100,101,100,101,100,101,100,101,100,101,100,101,100,102,101,101,101,103,100,104,105,106,107,108,109,110,111,112,113,114,115,111,104,116,109,110,117,118,115,105,106,108,119,119,109,110,104,114,119,109,110,118,117,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,121,122,123,122,123,122,123],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["result",4,["response"]],["response",3]]],[[]],[[]],[[]],[[],["transactionauthenticator",4]],[[["vec",3,["methodrequest"]],["methodrequest",4]],[["result",6,["vec"]],["vec",3,["result"]]]],[[["vec",3,["methodrequest"]],["methodrequest",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["chainid",3]],null,[[],[["result",4,["signaturecheckedtransaction","error"]],["signaturecheckedtransaction",3],["error",3]]],[[],["blockingclient",3]],[[],["client",3]],[[],["methodrequest",4]],[[],["methodresponse",4]],[[],["event",3]],[[],["state",3]],[[],["retry",3]],[[],["signedtransaction",3]],[[],["accountaddress",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["state",3]],["ordering",4]],[[["accountaddress",3]],["ordering",4]],[[],["hashvalue",3]],[[],["bool",15]],[[["authenticationkey",3]],["result",6]],[[]],[[]],[[],["duration",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["signedtransaction"]],["signedtransaction",3]]],[[],[["result",4,["accountaddress"]],["accountaddress",3]]],[[]],[[]],[[["methodresponse",4]],["bool",15]],[[["state",3]],["bool",15]],[[["signedtransaction",3]],["bool",15]],[[["accountaddress",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[],["contractevent",4]],[[],["u64",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[],["string",3]],[[["error",3]]],[[]],[[["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["accountaddress",3]],[[]],[[],[["accountaddress",3],["accountaddressparseerror",3],["result",4,["accountaddress","accountaddressparseerror"]]]],[[],[["accountaddress",3],["accountaddressparseerror",3],["result",4,["accountaddress","accountaddressparseerror"]]]],[[["str",15]],[["accountaddress",3],["accountaddressparseerror",3],["result",4,["accountaddress","accountaddressparseerror"]]]],[[["method",4],["value",4]],[["result",4,["error"]],["error",3]]],[[["jsonrpcresponse",3]]],[[["str",15]],[["accountaddress",3],["accountaddressparseerror",3],["result",4,["accountaddress","accountaddressparseerror"]]]],[[["u64",15],["str",15],["accountaddress",3]],["result",6]],[[],["str",15]],[[],["u64",15]],[[["accountaddress",3]],[["result",6,["response"]],["response",3,["option"]]]],[[["accountaddress",3]]],[[["accountaddress",3]]],[[["u64",15],["accountaddress",3]],[["result",6,["response"]],["response",3,["option"]]]],[[["u64",15],["accountaddress",3]]],[[["u64",15],["accountaddress",3]]],[[["u64",15],["option",4,["u64"]],["accountaddress",3]],[["result",6,["response"]],["response",3,["accountstatewithproofview"]]]],[[["u64",15],["option",4,["u64"]],["accountaddress",3]]],[[["u64",15],["option",4,["u64"]],["accountaddress",3]]],[[["u64",15],["bool",15],["accountaddress",3]],[["result",6,["response"]],["response",3,["option"]]]],[[["u64",15],["bool",15],["accountaddress",3]]],[[["u64",15],["bool",15],["accountaddress",3]]],[[["u64",15],["bool",15],["accountaddress",3]],[["response",3,["vec"]],["result",6,["response"]]]],[[["u64",15],["bool",15],["accountaddress",3]]],[[["u64",15],["bool",15],["accountaddress",3]]],[[["u64",15],["option",4,["u64"]],["bool",15],["accountaddress",3]],[["response",3,["accounttransactionswithproofview"]],["result",6,["response"]]]],[[["u64",15],["option",4,["u64"]],["bool",15],["accountaddress",3]]],[[["u64",15],["option",4,["u64"]],["bool",15],["accountaddress",3]]],[[["u64",15],["option",4,["u64"]]],[["response",3,["accumulatorconsistencyproofview"]],["result",6,["response"]]]],[[["u64",15],["option",4,["u64"]]]],[[["u64",15],["option",4,["u64"]]]],[[],[["result",6,["response"]],["response",3,["vec"]]]],[[]],[[]],[[["eventkey",3],["u64",15]],[["result",6,["response"]],["response",3,["vec"]]]],[[["eventkey",3],["u64",15]]],[[["accountaddress",3]],[["response",3,["option"]],["result",6,["response"]]]],[[["accountaddress",3]]],[[["u64",15],["eventkey",3],["option",4,["u64"]]],[["response",3,["eventbyversionwithproofview"]],["result",6,["response"]]]],[[["u64",15],["eventkey",3],["option",4,["u64"]]]],[[["u64",15],["eventkey",3],["option",4,["u64"]]]],[[["u64",15],["eventkey",3]],[["result",6,["response"]],["response",3,["vec"]]]],[[["u64",15],["eventkey",3]]],[[["u64",15],["eventkey",3]]],[[["u64",15],["eventkey",3]],[["result",6,["response"]],["response",3,["vec"]]]],[[["u64",15],["eventkey",3]]],[[["u64",15],["eventkey",3]]],[[],[["response",3,["metadataview"]],["result",6,["response"]]]],[[]],[[]],[[["u64",15]],[["response",3,["metadataview"]],["result",6,["response"]]]],[[["u64",15]]],[[["u64",15]]],[[],[["result",6,["response"]],["response",3,["u64"]]]],[[]],[[]],[[["u64",15]],[["response",3,["stateproofview"]],["result",6,["response"]]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15],["bool",15]],[["response",3,["vec"]],["result",6,["response"]]]],[[["u64",15],["bool",15]]],[[["u64",15],["bool",15]]],[[["u64",15],["bool",15]],[["response",3,["option"]],["result",6,["response"]]]],[[["u64",15],["bool",15]]],[[["u64",15],["bool",15]]],[[]],[[],["hashvalue",3]],[[]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["rawtransaction",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["option",4,["jsonrpcerror"]],["jsonrpcerror",3]]],[[],[["option",4,["jsonrpcerror"]],["jsonrpcerror",3]]],[[],[["state",3],["option",4,["state"]]]],[[],[["state",3],["option",4,["state"]]]],[[],["u64",15]],[[],["u32",15]],[[],["method",4]],[[],["method",4]],[[],["method",4]],[[["u64",15],["str",15],["authenticationkey",3]],["result",6]],[[["methodresponse",4]],["bool",15]],[[["state",3]],["bool",15]],[[["signedtransaction",3]],["bool",15]],[[["accountaddress",3]],["bool",15]],[[["string",3],["into",8,["string"]]]],[[["string",3],["into",8,["string"]]]],[[["string",3]]],[[["methodrequest",4]]],[[["state",3]]],[[["u32",15],["duration",3]]],[[["rawtransaction",3],["ed25519signature",3],["ed25519publickey",3]],["signedtransaction",3]],[[],["accountaddress",3]],[[["rawtransaction",3],["accountauthenticator",4],["vec",3,["accountauthenticator","global"]],["vec",3,["accountaddress","global"]],["global",3],["accountaddress",3]],["signedtransaction",3]],[[["rawtransaction",3],["multied25519signature",3],["multied25519publickey",3]],["signedtransaction",3]],[[["rawtransaction",3],["transactionauthenticator",4]],["signedtransaction",3]],[[["string",3],["retry",3],["into",8,["string"]]]],[[]],[[["state",3]],[["option",4,["ordering"]],["ordering",4]]],[[["accountaddress",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["transactionpayload",4]],[[],["accountaddress",3]],[[],["usize",15]],[[["methodrequest",4]],[["result",6,["response"]],["response",3,["methodresponse"]]]],[[["methodrequest",4]]],[[],["accountaddress",3]],[[],["u64",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["string",3]],[[],[["option",4,["error"]],["error",8]]],[[],[["option",4,["error"]],["error",8]]],[[],[["option",4,["error"]],["error",8]]],[[],["state",3]],null,[[["signedtransaction",3]],[["result",6,["response"]],["response",3]]],[[["signedtransaction",3]]],[[["signedtransaction",3]],[["result",4,["error"]],["error",4]]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],null,[[],["string",3]],[[],["string",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["transaction",4]],[["signedtransaction",3],["error",3],["result",4,["signedtransaction","error"]]]],[[["vec",3,["u8","global"]],["u8",15],["global",3]],[["accountaddress",3],["accountaddressparseerror",3],["result",4,["accountaddress","accountaddressparseerror"]]]],[[],[["accountaddress",3],["accountaddressparseerror",3],["result",4,["accountaddress","accountaddressparseerror"]]]],[[["string",3]],[["accountaddress",3],["accountaddressparseerror",3],["result",4,["accountaddress","accountaddressparseerror"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["option",4,["accountview"]],["error",3],["result",4,["option","error"]]]],[[],[["result",4,["accountstatewithproofview","error"]],["error",3],["accountstatewithproofview",3]]],[[],[["option",4,["transactionview"]],["error",3],["result",4,["option","error"]]]],[[],[["vec",3,["transactionview"]],["error",3],["result",4,["vec","error"]]]],[[],[["accumulatorconsistencyproofview",3],["result",4,["accumulatorconsistencyproofview","error"]],["error",3]]],[[],[["vec",3,["currencyinfoview"]],["error",3],["result",4,["vec","error"]]]],[[],[["result",4,["eventbyversionwithproofview","error"]],["error",3],["eventbyversionwithproofview",3]]],[[],[["vec",3,["eventview"]],["error",3],["result",4,["vec","error"]]]],[[],[["result",4,["metadataview","error"]],["metadataview",3],["error",3]]],[[],[["u64",15],["error",3],["result",4,["u64","error"]]]],[[],[["error",3],["result",4,["stateproofview","error"]],["stateproofview",3]]],[[],[["vec",3,["transactionview"]],["error",3],["result",4,["vec","error"]]]],[[],[["result",4,["error"]],["error",3]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["accountview",3],["option",4,["accountview"]]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["signedtransaction",3],["option",4,["duration"]],["duration",3]],[["waitfortransactionerror",4],["result",6,["response","waitfortransactionerror"]],["response",3,["transactionview"]]]],[[["signedtransaction",3],["option",4,["duration"]],["duration",3]]],[[["u64",15],["duration",3],["hashvalue",3],["option",4,["duration"]],["accountaddress",3]],[["waitfortransactionerror",4],["result",6,["response","waitfortransactionerror"]],["response",3,["transactionview"]]]],[[["u64",15],["duration",3],["hashvalue",3],["option",4,["duration"]],["accountaddress",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["statuscode",4],["option",4,["statuscode"]]]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["errordata",4]],[[],["jsonrpcerror",3]],[[]],[[]],null,[[],["str",15]],null,[[],[["result",4,["errordata"]],["errordata",4]]],[[],[["result",4,["jsonrpcerror"]],["jsonrpcerror",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[["error",4]],["jsonrpcerror",3]],[[["error",3]],["jsonrpcerror",3]],[[["error",3]],["jsonrpcerror",3]],[[]],[[["i64",15]],[["invalidrequestcode",4],["option",4,["invalidrequestcode"]]]],[[["u64",15]],[["invalidrequestcode",4],["option",4,["invalidrequestcode"]]]],[[["string",3]],["jsonrpcerror",3]],[[]],[[]],[[]],[[]],[[],["jsonrpcerror",3]],[[["str",15]],["jsonrpcerror",3]],[[["str",15]],["jsonrpcerror",3]],[[["string",3]],["jsonrpcerror",3]],[[],["jsonrpcerror",3]],[[["option",4,["errordata"]],["errordata",4]],["jsonrpcerror",3]],[[["string",3]],["jsonrpcerror",3]],[[["i16",15]],["bool",15]],[[["mempoolstatus",3]],[["error",3],["result",4,["jsonrpcerror","error"]],["jsonrpcerror",3]]],null,[[],["jsonrpcerror",3]],[[],["result",4]],[[],["result",4]],[[],["value",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["statuscode",4]],["jsonrpcerror",3]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["streamingclient",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["id",4]],[[]],[[]],[[]],[[["websocketconfig",3],["into",8,["string"]],["string",3],["streamingclientconfig",3],["option",4,["websocketconfig"]]]],null,[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],null,null,[[["streammethodrequest",4]]],[[["u64",15],["eventkey",3]]],[[["u64",15],["option",4,["bool"]],["bool",15]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["context",3],["pin",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["streamjsonrpcrequest",3]],[[],["streammethodrequest",4]],[[],["streammethod",4]],[[],["subscribetoeventsparams",3]],[[],["subscribetotransactionsparams",3]],[[]],[[]],[[]],[[]],[[]],[[],[["streamjsonrpcrequest",3],["result",4,["streamjsonrpcrequest"]]]],[[],[["result",4,["streammethodrequest"]],["streammethodrequest",4]]],[[],[["result",4,["streammethod"]],["streammethod",4]]],[[],[["subscribetoeventsparams",3],["result",4,["subscribetoeventsparams"]]]],[[],[["result",4,["subscribetotransactionsparams"]],["subscribetotransactionsparams",3]]],[[["streammethod",4]],["bool",15]],[[],["bool",15]],null,null,[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],[["streamjsonrpcrequest",3],["result",4,["streamjsonrpcrequest"]]]],[[["streammethod",4],["value",4]],[["result",4,["streammethodrequest","error"]],["error",3],["streammethodrequest",4]]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[],["streammethod",4]],[[],["str",15]],[[],["str",15]],null,[[["id",4],["streammethodrequest",4]],["streamjsonrpcrequest",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["streamjsonrpcresponseview",4]],[[],["streamjsonrpcresponse",3]],[[],["subscriptionresult",4]],[[],["unsubscriberesult",3]],[[],["subscriberesult",3]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4,["streamjsonrpcresponseview"]],["streamjsonrpcresponseview",4]]],[[],[["result",4,["streamjsonrpcresponse"]],["streamjsonrpcresponse",3]]],[[],[["result",4,["subscriptionresult"]],["subscriptionresult",4]]],[[],[["unsubscriberesult",3],["result",4,["unsubscriberesult"]]]],[[],[["result",4,["subscriberesult"]],["subscriberesult",3]]],[[["streamjsonrpcresponseview",4]],["bool",15]],[[["subscriptionresult",4]],["bool",15]],[[["unsubscriberesult",3]],["bool",15]],[[["subscriberesult",3]],["bool",15]],[[["id",4],["option",4,["id"]],["jsonrpcerror",3]],["streamjsonrpcresponse",3]],null,[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],[["streamjsonrpcresponse",3],["error",3],["result",4,["streamjsonrpcresponse","error"]]]],null,[[]],[[]],[[]],[[]],[[]],null,[[["streamjsonrpcresponseview",4]],["bool",15]],[[["unsubscriberesult",3]],["bool",15]],[[["subscriberesult",3]],["bool",15]],[[],["unsubscriberesult",3]],[[["u64",15]],["subscriberesult",3]],[[["streammethod",4]],[["error",3],["result",4,["option","error"]],["option",4,["streamjsonrpcresponseview"]]]],[[["value",4],["id",4],["option",4,["id"]],["option",4,["value"]]],["streamjsonrpcresponse",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[],["amountview",3]],[[],["accountroleview",4]],[[],["accountview",3]],[[],["preburnqueueview",3]],[[],["preburnwithmetadataview",3]],[[],["eventview",3]],[[],["eventwithproofview",3]],[[],["eventbyversionwithproofview",3]],[[],["eventdataview",4]],[[],["metadataview",3]],[[],["bytesview",3]],[[],["moveabortexplanationview",3]],[[],["vmstatusview",4]],[[],["transactionview",3]],[[],["transactionlistview",3]],[[],["transactionswithproofsview",3]],[[],["transactionsproofsview",3]],[[],["accounttransactionswithproofview",3]],[[],["transactiondataview",4]],[[],["scriptview",3]],[[],["currencyinfoview",3]],[[],["stateproofview",3]],[[],["accumulatorconsistencyproofview",3]],[[],["accountstatewithproofview",3]],[[],["accountstateproofview",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[],["scriptview",3]],null,null,[[]],[[],[["amountview",3],["result",4,["amountview"]]]],[[],[["accountroleview",4],["result",4,["accountroleview"]]]],[[],[["result",4,["accountview"]],["accountview",3]]],[[],[["result",4,["preburnqueueview"]],["preburnqueueview",3]]],[[],[["preburnwithmetadataview",3],["result",4,["preburnwithmetadataview"]]]],[[],[["result",4,["eventview"]],["eventview",3]]],[[],[["eventwithproofview",3],["result",4,["eventwithproofview"]]]],[[],[["result",4,["eventbyversionwithproofview"]],["eventbyversionwithproofview",3]]],[[],[["eventdataview",4],["result",4,["eventdataview"]]]],[[],[["result",4,["metadataview"]],["metadataview",3]]],[[],[["result",4,["bytesview"]],["bytesview",3]]],[[],[["result",4,["moveabortexplanationview"]],["moveabortexplanationview",3]]],[[],[["result",4,["vmstatusview"]],["vmstatusview",4]]],[[],[["transactionview",3],["result",4,["transactionview"]]]],[[],[["transactionlistview",3],["result",4,["transactionlistview"]]]],[[],[["result",4,["transactionswithproofsview"]],["transactionswithproofsview",3]]],[[],[["result",4,["transactionsproofsview"]],["transactionsproofsview",3]]],[[],[["accounttransactionswithproofview",3],["result",4,["accounttransactionswithproofview"]]]],[[],[["result",4,["transactiondataview"]],["transactiondataview",4]]],[[],[["scriptview",3],["result",4,["scriptview"]]]],[[],[["result",4,["currencyinfoview"]],["currencyinfoview",3]]],[[],[["stateproofview",3],["result",4,["stateproofview"]]]],[[],[["accumulatorconsistencyproofview",3],["result",4,["accumulatorconsistencyproofview"]]]],[[],[["result",4,["accountstatewithproofview"]],["accountstatewithproofview",3]]],[[],[["result",4,["accountstateproofview"]],["accountstateproofview",3]]],null,null,[[],["transactionlistview",3]],[[]],[[]],null,[[["amountview",3]],["bool",15]],[[["accountroleview",4]],["bool",15]],[[["accountview",3]],["bool",15]],[[["preburnqueueview",3]],["bool",15]],[[["preburnwithmetadataview",3]],["bool",15]],[[["eventview",3]],["bool",15]],[[["eventwithproofview",3]],["bool",15]],[[["eventbyversionwithproofview",3]],["bool",15]],[[["eventdataview",4]],["bool",15]],[[["metadataview",3]],["bool",15]],[[["bytesview",3]],["bool",15]],[[["moveabortexplanationview",3]],["bool",15]],[[["vmstatusview",4]],["bool",15]],[[["transactionview",3]],["bool",15]],[[["transactionlistview",3]],["bool",15]],[[["transactionswithproofsview",3]],["bool",15]],[[["transactionsproofsview",3]],["bool",15]],[[["accounttransactionswithproofview",3]],["bool",15]],[[["transactiondataview",4]],["bool",15]],[[["scriptview",3]],["bool",15]],[[["currencyinfoview",3]],["bool",15]],[[["stateproofview",3]],["bool",15]],[[["accumulatorconsistencyproofview",3]],["bool",15]],[[["accountstatewithproofview",3]],["bool",15]],[[["accountstateproofview",3]],["bool",15]],null,null,null,[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],null,[[]],[[["accountrole",4]],["accountroleview",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bytesview",3]],[[["vec",3,["u8","global"]],["u8",15],["global",3]],["bytesview",3]],[[]],[[]],[[]],[[["keptvmstatus",4]],["vmstatusview",4]],[[]],[[]],[[]],[[]],[[]],[[["transaction",4]],["transactiondataview",4]],[[]],[[]],[[["script",3]],["scriptview",3]],[[["scriptfunction",3]],["scriptview",3]],[[["currencyinforesource",3]],["currencyinfoview",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["global",3],["box",3,["global"]]]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["amountview",3]],["bool",15]],[[["accountroleview",4]],["bool",15]],[[["accountview",3]],["bool",15]],[[["preburnqueueview",3]],["bool",15]],[[["preburnwithmetadataview",3]],["bool",15]],[[["eventview",3]],["bool",15]],[[["eventwithproofview",3]],["bool",15]],[[["eventbyversionwithproofview",3]],["bool",15]],[[["eventdataview",4]],["bool",15]],[[["metadataview",3]],["bool",15]],[[["bytesview",3]],["bool",15]],[[["moveabortexplanationview",3]],["bool",15]],[[["vmstatusview",4]],["bool",15]],[[["transactionview",3]],["bool",15]],[[["transactionlistview",3]],["bool",15]],[[["transactionswithproofsview",3]],["bool",15]],[[["transactionsproofsview",3]],["bool",15]],[[["accounttransactionswithproofview",3]],["bool",15]],[[["transactiondataview",4]],["bool",15]],[[["scriptview",3]],["bool",15]],[[["currencyinfoview",3]],["bool",15]],[[["stateproofview",3]],["bool",15]],[[["accumulatorconsistencyproofview",3]],["bool",15]],[[["accountstatewithproofview",3]],["bool",15]],[[["accountstateproofview",3]],["bool",15]],[[["balanceresource",3],["btreemap",3,["identifier","balanceresource"]],["u64",15],["accountrole",4],["identifier",3],["accountaddress",3],["accountresource",3],["freezingbit",3]],["accountview",3]],[[["preburnwithmetadataview",3],["vec",3,["preburnwithmetadataview","global"]],["global",3],["string",3]],["preburnqueueview",3]],[[["u64",15],["u8",15],["hashvalue",3]],["metadataview",3]],[[],["bytesview",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["error",3],["eventview",3],["result",4,["eventview","error"]]]],[[],["result",4]],[[["eventwithproof",3]],[["error",3],["eventwithproofview",3],["result",4,["eventwithproofview","error"]]]],[[["eventbyversionwithproof",3]],[["result",4,["eventbyversionwithproofview"]],["eventbyversionwithproofview",3]]],[[],["result",4]],[[],["result",4]],[[["contractevent",4]],[["result",4,["eventdataview","error"]],["eventdataview",4],["error",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["transactionlistwithproof",3,["transactioninfo"]],["transactioninfo",3]],[["transactionlistview",3],["result",4,["transactionlistview"]]]],[[["accounttransactionswithproof",3,["transactioninfo"]],["transactioninfo",3]],[["transactionlistview",3],["result",4,["transactionlistview"]]]],[[],["result",4]],[[["transactionlistwithproof",3]],[["result",4,["transactionswithproofsview"]],["transactionswithproofsview",3]]],[[["transactioninfolistwithproof",3]],[["transactionsproofsview",3],["result",4,["transactionsproofsview"]]]],[[],["result",4]],[[],["result",4]],[[["accounttransactionswithproof",3]],[["result",4,["accounttransactionswithproofview"]],["accounttransactionswithproofview",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["stateproof",3]],[["stateproofview",3],["result",4,["stateproofview"]]]],[[],["result",4]],[[["accumulatorconsistencyproof",3]],[["result",4,["accumulatorconsistencyproofview"]],["accumulatorconsistencyproofview",3]]],[[],["result",4]],[[],["result",4]],[[["accountstatewithproof",3,["transactioninfo"]],["transactioninfo",3]],[["accountstatewithproofview",3],["error",3],["result",4,["accountstatewithproofview","error"]]]],[[],["result",4]],[[["accountstateproof",3,["transactioninfo"]],["transactioninfo",3]],[["result",4,["accountstateproofview","error"]],["accountstateproofview",3],["error",3]]],[[["accountstate",3],["u64",15],["accountaddress",3]],[["error",3],["accountview",3],["result",4,["accountview","error"]]]],[[["u64",15],["vec",3,["contractevent","global"]],["contractevent",4],["transaction",4],["global",3]],[["result",4,["transactionview","error"]],["transactionview",3],["error",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u64",15]],[["result",4,["transactionlistwithproof","error"]],["transactionlistwithproof",3,["transactioninfo"]],["error",3]]],null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["scriptview",3]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["accountstate",3]],[["result",4,["error"]],["error",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"MethodRequest"],[4,"MethodResponse"],[4,"Method"],[4,"WaitForTransactionError"],[3,"AccountAddress"],[3,"Response"],[3,"SignedTransaction"],[3,"BlockingClient"],[3,"Client"],[3,"Error"],[3,"StreamError"],[3,"FaucetClient"],[3,"JsonRpcRequest"],[3,"Event"],[3,"State"],[3,"Retry"],[13,"Submit"],[13,"GetMetadata"],[13,"GetAccount"],[13,"GetTransactions"],[13,"GetAccountTransaction"],[13,"GetAccountTransactions"],[13,"GetEvents"],[13,"GetCurrencies"],[13,"GetNetworkStatus"],[13,"GetStateProof"],[13,"GetAccumulatorConsistencyProof"],[13,"GetAccountStateWithProof"],[13,"GetTransactionsWithProofs"],[13,"GetAccountTransactionsWithProofs"],[13,"GetEventsWithProofs"],[13,"GetEventByVersionWithProof"],[13,"GetMetadata"],[13,"GetAccount"],[13,"GetTransactions"],[13,"GetAccountTransaction"],[13,"GetAccountTransactions"],[13,"GetEvents"],[13,"GetCurrencies"],[13,"GetNetworkStatus"],[13,"GetStateProof"],[13,"GetAccumulatorConsistencyProof"],[13,"GetAccountStateWithProof"],[13,"GetTransactionsWithProofs"],[13,"GetAccountTransactionsWithProofs"],[13,"GetEventsWithProofs"],[13,"GetEventByVersionWithProof"],[13,"GetTransactionError"],[13,"TransactionHashMismatchError"],[13,"TransactionExecutionFailed"],[4,"ServerCode"],[4,"InvalidRequestCode"],[4,"ErrorData"],[3,"JsonRpcError"],[13,"StatusCode"],[3,"SubscriptionStream"],[3,"StreamingClientConfig"],[3,"StreamingClient"],[4,"StreamMethodRequest"],[4,"StreamMethod"],[3,"StreamJsonRpcRequest"],[3,"SubscribeToEventsParams"],[3,"SubscribeToTransactionsParams"],[13,"SubscribeToTransactions"],[13,"SubscribeToEvents"],[4,"StreamJsonRpcResponseView"],[4,"SubscriptionResult"],[3,"StreamJsonRpcResponse"],[3,"UnsubscribeResult"],[3,"SubscribeResult"],[13,"Transaction"],[13,"Event"],[13,"SubscribeResult"],[13,"UnsubscribeResult"],[3,"TransactionListView"],[4,"EventDataView"],[4,"TransactionDataView"],[4,"AccountRoleView"],[4,"VMStatusView"],[3,"MetadataView"],[3,"AccountView"],[3,"AmountView"],[3,"ScriptView"],[3,"BytesView"],[3,"AccountStateWithProofView"],[3,"PreburnQueueView"],[3,"PreburnWithMetadataView"],[3,"EventView"],[3,"EventWithProofView"],[3,"EventByVersionWithProofView"],[3,"MoveAbortExplanationView"],[3,"TransactionView"],[3,"TransactionsWithProofsView"],[3,"TransactionsProofsView"],[3,"AccountTransactionsWithProofView"],[3,"CurrencyInfoView"],[3,"StateProofView"],[3,"AccumulatorConsistencyProofView"],[3,"AccountStateProofView"],[13,"ParentVASP"],[13,"DesignatedDealer"],[13,"ChildVASP"],[13,"TreasuryCompliance"],[13,"VASPDomain"],[13,"Burn"],[13,"CancelBurn"],[13,"Mint"],[13,"Preburn"],[13,"ReceivedPayment"],[13,"SentPayment"],[13,"ReceivedMint"],[13,"Unknown"],[13,"AdminTransaction"],[13,"CreateAccount"],[13,"ToXDXExchangeRateUpdate"],[13,"NewEpoch"],[13,"BaseUrlRotation"],[13,"ComplianceKeyRotation"],[13,"NewBlock"],[13,"UserTransaction"],[13,"BlockMetadata"],[13,"MoveAbort"],[13,"ExecutionFailure"]]},\
"diem_config":{"doc":"","t":[0,0,0,0,0,3,13,3,17,17,3,4,17,17,17,17,17,17,17,17,17,17,17,3,3,4,13,4,3,4,13,13,13,13,13,13,13,13,13,13,13,3,17,13,17,17,4,3,3,13,13,3,3,13,13,3,13,13,3,17,17,17,17,17,3,13,17,3,3,13,13,13,13,3,13,17,17,17,3,3,4,6,8,13,13,13,3,3,3,3,4,3,13,13,3,4,3,4,13,13,3,3,3,3,13,13,4,3,3,13,13,13,13,13,13,3,4,13,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,12,11,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,11,12,12,12,12,12,12,12,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,12,12,11,12,12,11,11,11,12,11,11,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,11,11,5,11,11,12,11,11,11,5,5,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,4,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5],"n":["config","generator","keys","network_id","utils","ApiConfig","BCS","BaseConfig","CONNECTION_BACKOFF_BASE","CONNECTIVITY_CHECK_INTERVAL_MS","ConsensusConfig","ConsensusProposerType","DEFAULT_ADDRESS","DEFAULT_BATCH_SIZE_LIMIT","DEFAULT_CONTENT_LENGTH_LIMIT","DEFAULT_JSON_RPC_ADDRESS","DEFAULT_JSON_RPC_PORT","DEFAULT_PAGE_SIZE_LIMIT","DEFAULT_PORT","DEFAULT_STREAM_RPC_MAX_POLL_INTERVAL_MS","DEFAULT_STREAM_RPC_POLL_INTERVAL_MS","DEFAULT_STREAM_RPC_SEND_QUEUE_SIZE","DEFAULT_STREAM_RPC_SUBSCRIPTION_FETCH_SIZE","DebugInterfaceConfig","DeprecatedConfig","DiscoveryMethod","Downstream","Error","ExecutionConfig","ExecutionCorrectnessService","File","FixedProposer","FromConfig","FromConfig","FromConfig","FromDisk","FromFile","FromStorage","FromStorage","FullNode","GitHub","GitHubConfig","HANDSHAKE_VERSION","IO","IP_BYTE_BUCKET_RATE","IP_BYTE_BUCKET_SIZE","Identity","IdentityFromConfig","IdentityFromStorage","InMemoryStorage","InvariantViolation","JsonRpcConfig","KeyManagerConfig","Known","LeaderReputation","LeaderReputationConfig","Local","Local","LoggerConfig","MAX_CONCURRENT_NETWORK_REQS","MAX_CONNECTION_DELAY_MS","MAX_FRAME_SIZE","MAX_FULLNODE_OUTBOUND_CONNECTIONS","MAX_INBOUND_CONNECTIONS","MempoolConfig","Missing","NETWORK_CHANNEL_SIZE","NetworkConfig","NodeConfig","None","None","None","OnDiskStorage","OnDiskStorageConfig","Onchain","PING_FAILURES_TOLERATED","PING_INTERVAL_MS","PING_TIMEOUT_MS","ParseRoleError","Peer","PeerRole","PeerSet","PersistableConfig","PreferredUpstream","Process","Process","RateLimitConfig","RemoteExecutionService","RemoteService","RocksdbConfig","RoleType","RootPath","RotatingProposer","RoundProposer","SafetyRulesConfig","SafetyRulesService","SafetyRulesTestConfig","SecureBackend","Serializer","Serializer","StateSyncConfig","StorageConfig","StreamConfig","TestConfig","Thread","Thread","Token","TokenFromConfig","TokenFromDisk","Unknown","Upstream","Validator","Validator","ValidatorFullNode","Vault","VaultConfig","WaypointConfig","Yaml","account_count_migration","active_weights","address","address","address","address","addresses","admission_control_node_debug_port","api","as_str","auth_key","author","back_pressure_limit","backend","backend","backend","backup_service_address","base","batch_size_limit","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branch","ca_certificate","ca_certificate","capacity","capacity_per_user","chain_id","chan_size","channel_size","chunk_limit","clear_namespace","client_commit_timeout_ms","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","connection_backoff_base","connection_timeout_ms","connectivity_check_interval_ms","consensus","consensus_key","consensus_key","content_length_limit","contiguous_rounds","data_dir","debug_interface","decoupled_execution","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_failovers","default_for_public_full_node","default_for_validator","default_for_validator_full_node","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dir","dir","disable_cas","discovery_method","discovery_methods","discovery_methods","enable_cached_safety_data","enable_proxy_protocol","enabled","enabled","enabled","encryptor","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","execution","execution_key","execution_key","execution_key","execution_key","export_consensus_key","extend","failpoints","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_addrs","from_config","from_storage","from_str","full_node_networks","full_path","genesis","genesis_file_location","genesis_waypoint","grpc_max_receive_len","hash","identity","identity_from_storage","identity_key","inactive_weights","inbound_rate_limit_config","initial_bucket_fill_percentage","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","invariant","ip_byte_bucket_rate","ip_byte_bucket_size","is_async","is_validator","json_rpc","json_rpc_endpoint","key","key_name","keys","level","listen_address","load","load","load","load_config","load_fullnode_network","load_validator_network","logger","logger","logger","long_poll_timeout_ms","max_block_size","max_broadcasts_per_peer","max_chunk_limit","max_concurrent_network_reqs","max_connection_delay_ms","max_frame_size","max_inbound_connections","max_open_files","max_outbound_connections","max_poll_interval_ms","max_pruned_blocks_in_mem","max_timeout_ms","max_total_wal_size","mempool","mempool_commit_timeout_ms","mempool_executed_txn_timeout_ms","mempool_poll_count","mempool_snapshot_interval_secs","mempool_txn_pull_timeout_ms","metrics","metrics_server_port","multicast_timeout_ms","mutual_authentication","namespace","namespace","namespace","namespace","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","network_address_key_backend","network_channel_size","network_id","network_timeout_ms","network_timeout_ms","network_with_id","new","new","new","new_path","new_with_temp_dir","open_module","operator_key","operator_key","outbound_rate_limit_config","owner_key","owner_key","page_size_limit","parse","partial_cmp","path","path","peer_id","peer_id","peer_id","peer_id_name","ping_failures_tolerated","ping_interval_ms","ping_timeout_ms","poll_interval_ms","proposer_type","prune_window","public_metrics_server_port","publishing_option","random","random","random_account_key","random_consensus_key","random_execution_key","random_execution_key","random_with_peer_id","random_with_template","randomize_ports","randomize_ports","randomize_ports","randomize_ports","randomize_ports","read_token","renew_ttl_secs","repository","repository_owner","response_timeout_ms","rocksdb_config","role","role","rotation_period_secs","round_initial_timeout_ms","safety_rules","save","save","save","save_config","secure_backend","seed_addrs","seeds","send_queue_size","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","server","server_address","server_address","server_address","service","service","set_data_dir","set_data_dir","set_data_dir","set_data_dir","set_data_dir","set_data_dir","set_data_dir","shared_mempool_ack_timeout_ms","shared_mempool_backoff_interval_ms","shared_mempool_batch_size","shared_mempool_max_concurrent_inbound_syncs","shared_mempool_tick_interval_ms","sign_vote_proposal","sleep_period_secs","source","state_sync","storage","stream_rpc","subscription_fetch_size","sync_only","sync_request_timeout_ms","system_transaction_gc_interval_ms","system_transaction_timeout_secs","temp_dir","test","test","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","tick_interval_ms","timeout_ms","tls_cert_path","tls_cert_path","tls_key_path","tls_key_path","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","token","token","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","txn_expiration_secs","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validator_network","verify_seeds","verify_vote_proposal_signature","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","waypoint","waypoint","waypoint","waypoint_from_config","0","0","0","1","0","0","0","0","0","1","1","1","0","0","0","0","0","0","0","0","0","0","0","0","ValidatorSwarm","borrow","borrow_mut","build_seed_for_network","from","into","nodes","try_from","try_into","type_id","validator_swarm","validator_swarm_for_testing","vzip","ConfigKey","borrow","borrow_mut","clone","clone_into","deserialize","eq","erased_serialize","fmt","from","into","private_key","public_key","serialize","test_only_hash","to_owned","try_from","try_into","type_id","vzip","NetworkContext","NetworkId","PeerNetworkId","Public","Validator","Vfn","as_str","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","default","deserialize","deserialize","downstream_roles","eq","eq","eq","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_str","hash","hash","into","into","into","is_validator_network","is_vfn_network","mock","mock_with_peer_id","ne","ne","network_id","network_id","new","new","partial_cmp","partial_cmp","peer_id","peer_id","random","random_validator","role","serialize","serialize","serialize","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upstream_roles","vzip","vzip","vzip","default_validator_owner_auth_key_from_name","get_available_port","get_available_port_in_multiaddr","get_genesis_txn","get_local_ip","validator_owner_account_from_name"],"q":["diem_config","","","","","diem_config::configdiem_config::config::ConsensusProposerType","","diem_config::config::DiscoveryMethod","","diem_config::config::Error","","","","","","","","diem_config::config::ExecutionCorrectnessService","diem_config::config::Identity","","diem_config::config::SafetyRulesService","diem_config::config::SecureBackend","","","diem_config::config::Token","","diem_config::config::WaypointConfig","","","diem_config::generator","","","","","","","","","","","","","diem_config::keys","","","","","","","","","","","","","","","","","","","","diem_config::network_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_config::utils","","","","",""],"d":["","Convenience structs and functions for generating a random …","This file implements a KeyPair data structure.","","","","","","","","","","","","","","","","","","","","","","Represents a deprecated config that provides no field …","","","","","Defines how execution correctness should be run","","","","","","This is an absolute path and not relative to data_dir","","","","","","","Current supported protocol negotiation handshake version. …","","","","","The identity is stored within the config.","This represents an identity in a secure-storage as defined …","","","","","","","","This runs execution correctness in the same thread as …","This runs safety rules in the same thread as event …","","","","","","","","","","","Config pulls in configuration information from the config …","","","","","","","","","","","Represents a single seed configuration for a seed peer","Represents the Role that a peer plays in the network …","","","","This is the production, separate service approach","This is the production, separate service approach","","","","Port selected RocksDB options for tuning underlying …","","","","","","Defines how safety rules should be executed","","","This runs safety rules in the same thread as event …","This runs safety rules in the same thread as event …","","","This API is experimental and subject to change …","","This creates a separate thread to run execution …","This creates a separate thread to run safety rules, it is …","Tokens can either be directly within this config or stored …","","","","","","","","","","","","If enabled, leaf counts of the children of a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The branch containing storage, defaults to master","","Optional SSL Certificate for the vault host, this is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Timeout for new vault socket connections, in milliseconds.","","","","","","","","","","","","","","","","","","Default to least trusted","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Disable check-and-set when writing secrets to Vault","","","","","","Allow for disabling the throttles","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Combines two <code>Peer</code>.  Note: Does not merge duplicate …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This adds a full path when loading / storing if one is not …","","","","","","","","","","","Initial amount of tokens initially in the bucket","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Maximum number of bytes/s for an IP","Maximum burst of bytes for an IP","","","","","","","","","","","Reads the key manager config file from the given …","Reads the config file and returns the configuration object …","","","Per convenience, so that NetworkId isn’t needed to be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A namespace is an optional portion of the path to a key …","A namespace is an optional portion of the path to a key …","A namespace is an optional portion of the path to a key …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Combines <code>Vec&lt;NetworkAddress&gt;</code> keys with the <code>HashSet</code> given","","","This function assumes that the path is already a directory","","","","","","","","","","","","","","","","","","","","","","None disables pruning. The windows is in number of …","","","","","","","","","","","","","","","","","Vault leverages leases on many tokens, specify this to …","The repository where storage will mount","The owner or account that hosts a repository","Timeout for generic vault operations (e.g., reads and …","Rocksdb-specific configurations","","","","","","","Saves the key manager config file to the given output_path.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Vault’s URL, note: only HTTP is currently supported.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Read, Write, Connect timeout for network operations in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The authorization token for accessing the repository","The authorization token for accessing secretsonvenience function that builds a <code>PeerSet</code> containing a …","","","","","","","","","","ConfigKey places a clonable wrapper around PrivateKeys for …","","","","","","","","","","","","","","","","","","","","A grouping of common information between all networking …","A representation of the network being used in …","Identifier of a node, represented as (network_id, peer_id)","","","","","","","","","","","","","","","","","","","","","","Roles for a prioritization of relative downstreams","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Roles for a prioritization of relative upstreams","","","","","Return an ephemeral, available port. On unix systems, the …","","","Extracts one local non-loopback IP address, if one exists. …",""],"i":[0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,3,4,5,6,7,6,7,5,7,8,9,0,0,1,0,0,0,0,0,9,1,0,0,2,4,0,10,11,0,0,0,0,0,0,0,1,0,0,0,3,5,7,9,0,3,0,0,0,0,0,0,0,0,2,10,11,0,0,0,0,0,0,4,4,0,0,0,0,10,11,0,0,0,0,10,11,0,0,0,2,2,2,8,2,9,0,0,1,12,13,14,15,12,16,17,14,18,8,19,20,21,22,23,24,12,18,15,21,4,13,14,1,22,10,25,26,27,28,29,3,5,30,23,31,2,17,15,32,9,33,34,35,6,36,37,38,39,12,24,11,40,20,19,16,41,18,42,7,8,43,44,21,4,13,14,1,22,10,25,26,27,28,29,3,5,30,23,31,2,17,15,32,9,33,34,35,6,36,37,38,39,12,24,11,40,20,19,16,41,18,42,7,8,43,44,33,34,34,28,28,26,27,21,38,9,38,21,4,13,14,22,10,25,26,27,28,29,3,5,30,23,31,2,17,15,32,9,33,34,35,6,36,37,38,39,12,24,11,40,20,19,16,41,18,42,7,8,21,4,13,14,22,10,25,26,27,28,29,3,5,30,23,31,2,17,15,32,9,33,34,35,6,36,37,38,39,12,24,11,40,20,19,16,41,18,42,7,8,2,29,34,29,18,20,20,15,21,18,18,21,21,14,22,26,27,28,29,31,2,17,15,32,35,38,39,12,24,19,16,41,18,42,28,18,18,18,21,4,13,14,22,10,25,26,27,28,29,3,5,30,23,31,2,17,15,32,9,33,34,35,6,36,37,38,39,12,24,11,40,20,19,16,41,18,42,7,8,12,12,34,29,29,29,24,29,31,32,16,29,21,4,13,14,22,10,25,26,27,28,29,3,5,30,23,31,2,17,15,32,9,33,34,35,6,36,37,38,39,12,24,11,40,20,19,16,41,18,42,7,8,4,13,3,31,2,8,21,4,13,14,22,10,25,26,27,28,29,3,5,30,23,31,2,17,15,32,9,33,34,35,6,36,37,38,39,12,24,11,40,20,19,16,41,18,42,7,8,18,20,19,20,19,24,17,18,21,4,13,14,1,1,22,10,25,26,27,28,29,3,5,30,23,31,2,17,15,32,9,33,34,35,6,36,37,38,39,12,24,11,40,20,19,16,41,18,42,7,8,8,43,43,44,21,4,13,14,1,22,10,25,26,27,28,29,3,5,30,23,31,2,17,15,32,9,33,34,35,6,36,37,38,39,12,24,11,40,20,19,16,41,18,42,7,8,43,44,17,5,5,8,18,44,22,22,7,12,2,29,29,29,13,29,31,21,4,13,14,1,22,10,25,26,27,28,29,3,5,30,23,31,2,17,15,32,9,33,34,35,6,36,37,38,39,12,24,11,40,20,19,16,41,18,42,7,8,43,44,0,31,31,27,8,18,26,30,23,17,27,29,22,26,18,45,29,29,26,24,18,38,21,28,38,29,29,29,29,39,29,32,21,38,39,18,38,21,21,28,21,18,14,38,29,9,33,34,35,21,4,13,14,22,10,25,26,27,28,29,3,5,30,23,31,17,15,32,9,33,34,35,6,36,37,38,39,12,24,11,40,20,16,18,42,7,29,29,29,22,24,29,17,20,44,44,19,19,19,19,29,19,19,15,45,2,35,35,29,18,30,23,29,29,29,32,21,12,14,19,29,18,19,20,20,19,29,18,14,15,12,16,18,6,34,33,33,34,12,17,42,26,21,21,22,26,18,45,26,29,29,32,21,4,13,14,22,10,25,26,27,28,29,3,5,30,23,31,2,17,15,32,9,33,34,35,6,36,37,38,39,12,24,11,40,20,19,16,41,18,42,7,8,34,40,25,40,22,24,21,22,26,35,12,24,18,28,28,28,28,28,22,26,1,18,18,15,32,21,38,28,28,19,24,18,21,4,13,14,22,10,25,26,27,28,29,3,5,30,23,31,2,17,15,32,9,33,34,35,6,36,37,38,39,12,24,11,40,20,19,16,41,18,42,7,8,38,12,15,16,15,16,21,4,13,14,22,10,25,26,27,28,29,3,5,30,23,31,2,17,15,32,9,33,34,35,6,36,37,38,39,12,24,11,40,20,19,16,41,18,42,7,8,1,8,43,33,34,21,4,13,14,1,22,10,25,26,27,28,29,3,5,30,23,31,2,17,15,32,9,33,34,35,6,36,37,38,39,12,24,11,40,20,19,16,41,18,42,7,8,43,44,21,4,13,14,1,22,10,25,26,27,28,29,3,5,30,23,31,2,17,15,32,9,33,34,35,6,36,37,38,39,12,24,11,40,20,19,16,41,18,42,7,8,43,44,26,21,4,13,14,1,22,10,25,26,27,28,29,3,5,30,23,31,2,17,15,32,9,33,34,35,6,36,37,38,39,12,24,11,40,20,19,16,41,18,42,7,8,43,44,18,29,24,21,4,13,14,1,22,10,25,26,27,28,29,3,5,30,23,31,2,17,15,32,9,33,34,35,6,36,37,38,39,12,24,11,40,20,19,16,41,18,42,7,8,43,44,7,20,42,7,46,47,48,48,49,50,51,52,53,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,0,66,66,0,66,66,66,66,66,66,0,0,66,0,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,0,0,0,68,68,68,68,69,68,70,69,68,70,69,68,70,69,68,70,68,70,68,68,70,68,69,68,70,69,68,70,69,68,70,69,69,68,68,70,70,69,68,70,68,68,70,69,68,70,68,68,69,69,69,70,69,70,69,70,68,70,69,70,70,70,69,69,68,70,69,68,70,69,68,70,69,68,70,69,68,70,69,68,70,69,68,70,68,69,68,70,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["str",15]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],[["string",3],["result",4,["string","error"]],["error",4]]],null,null,null,null,null,null,null,[[]],null,[[],["consensusconfig",3]],[[],["consensusproposertype",4]],[[],["leaderreputationconfig",3]],[[],["debuginterfaceconfig",3]],[[],["executionconfig",3]],[[],["executioncorrectnessservice",4]],[[],["remoteexecutionservice",3]],[[],["keymanagerconfig",3]],[[],["loggerconfig",3]],[[],["mempoolconfig",3]],[[],["networkconfig",3]],[[],["discoverymethod",4]],[[],["identity",4]],[[],["identityfromconfig",3]],[[],["identityfromstorage",3]],[[],["ratelimitconfig",3]],[[],["peerrole",4]],[[],["peer",3]],[[],["jsonrpcconfig",3]],[[],["streamconfig",3]],[[],["securebackend",4]],[[],["githubconfig",3]],[[],["vaultconfig",3]],[[],["ondiskstorageconfig",3]],[[],["token",4]],[[],["tokenfromconfig",3]],[[],["tokenfromdisk",3]],[[],["statesyncconfig",3]],[[],["rocksdbconfig",3]],[[],["storageconfig",3]],[[],["safetyrulesconfig",3]],[[],["safetyrulesservice",4]],[[],["remoteservice",3]],[[],["safetyrulestestconfig",3]],[[]],[[],["apiconfig",3]],[[],["deprecatedconfig",3]],[[],["nodeconfig",3]],[[],["baseconfig",3]],[[],["waypointconfig",4]],[[],["roletype",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["peerrole",4]],["ordering",4]],null,null,null,null,[[["ed25519privatekey",3]]],null,null,null,[[],["path",3]],null,null,[[],["consensusconfig",3]],[[],["debuginterfaceconfig",3]],[[],["executionconfig",3]],[[],["keymanagerconfig",3]],[[],["loggerconfig",3]],[[],["mempoolconfig",3]],[[]],[[]],[[]],[[],["peer",3]],[[],["jsonrpcconfig",3]],[[],["streamconfig",3]],[[]],[[]],[[]],[[],["storageconfig",3]],[[]],[[],["testconfig",3]],[[],["apiconfig",3]],[[],["deprecatedconfig",3]],[[],["nodeconfig",3]],[[],["baseconfig",3]],null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["pathbuf",3]],null,null,null,[[],[["vec",3,["discoverymethod"]],["discoverymethod",4]]],null,null,null,null,null,null,[[],[["encryptor",3,["storage"]],["storage",4]]],[[["consensusconfig",3]],["bool",15]],[[["consensusproposertype",4]],["bool",15]],[[["leaderreputationconfig",3]],["bool",15]],[[["debuginterfaceconfig",3]],["bool",15]],[[["executionconfig",3]],["bool",15]],[[["executioncorrectnessservice",4]],["bool",15]],[[["remoteexecutionservice",3]],["bool",15]],[[["keymanagerconfig",3]],["bool",15]],[[["loggerconfig",3]],["bool",15]],[[["mempoolconfig",3]],["bool",15]],[[["networkconfig",3]],["bool",15]],[[["discoverymethod",4]],["bool",15]],[[["identity",4]],["bool",15]],[[["identityfromconfig",3]],["bool",15]],[[["identityfromstorage",3]],["bool",15]],[[["ratelimitconfig",3]],["bool",15]],[[["peerrole",4]],["bool",15]],[[["peer",3]],["bool",15]],[[["jsonrpcconfig",3]],["bool",15]],[[["streamconfig",3]],["bool",15]],[[["securebackend",4]],["bool",15]],[[["githubconfig",3]],["bool",15]],[[["vaultconfig",3]],["bool",15]],[[["ondiskstorageconfig",3]],["bool",15]],[[["token",4]],["bool",15]],[[["tokenfromconfig",3]],["bool",15]],[[["tokenfromdisk",3]],["bool",15]],[[["statesyncconfig",3]],["bool",15]],[[["rocksdbconfig",3]],["bool",15]],[[["storageconfig",3]],["bool",15]],[[["safetyrulesconfig",3]],["bool",15]],[[["safetyrulesservice",4]],["bool",15]],[[["remoteservice",3]],["bool",15]],[[["safetyrulestestconfig",3]],["bool",15]],[[],["bool",15]],[[["apiconfig",3]],["bool",15]],[[["deprecatedconfig",3]],["bool",15]],[[["nodeconfig",3]],["bool",15]],[[["baseconfig",3]],["bool",15]],[[["waypointconfig",4]],["bool",15]],[[["roletype",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],null,[[["ed25519privatekey",3]]],[[["ed25519privatekey",3]]],null,null,null,[[["peer",3]],[["result",4,["error"]],["error",4]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["vec",3,["networkaddress"]],["peerrole",4],["networkaddress",3]],["peer",3]],[[["privatekey",3],["peerid",3]]],[[["string",3],["securebackend",4]]],[[["str",15]],["result",4]],null,[[["path",3]],["pathbuf",3]],null,null,[[],["waypoint",3]],null,[[]],null,[[],["identityfromstorage",3]],[[],["privatekey",3]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["string",3],["bool",15]],[["result",4,["error"]],["error",4]]],null,null,null,[[],["bool",15]],null,null,null,null,null,null,null,[[["rootpath",3]],[["result",4,["error"]],["error",4]]],[[["asref",8,["path"]],["path",3]],[["result",4,["error"]],["error",4]]],[[["asref",8,["path"]],["path",3]],[["result",4,["error"]],["error",4]]],[[["asref",8,["path"]],["path",3]],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["str",15],["option",4,["str"]]]],null,null,null,[[["consensusconfig",3]],["bool",15]],[[["consensusproposertype",4]],["bool",15]],[[["leaderreputationconfig",3]],["bool",15]],[[["debuginterfaceconfig",3]],["bool",15]],[[["executionconfig",3]],["bool",15]],[[["executioncorrectnessservice",4]],["bool",15]],[[["remoteexecutionservice",3]],["bool",15]],[[["keymanagerconfig",3]],["bool",15]],[[["loggerconfig",3]],["bool",15]],[[["mempoolconfig",3]],["bool",15]],[[["networkconfig",3]],["bool",15]],[[["discoverymethod",4]],["bool",15]],[[["identity",4]],["bool",15]],[[["identityfromconfig",3]],["bool",15]],[[["identityfromstorage",3]],["bool",15]],[[["ratelimitconfig",3]],["bool",15]],[[["peer",3]],["bool",15]],[[["jsonrpcconfig",3]],["bool",15]],[[["streamconfig",3]],["bool",15]],[[["securebackend",4]],["bool",15]],[[["githubconfig",3]],["bool",15]],[[["vaultconfig",3]],["bool",15]],[[["ondiskstorageconfig",3]],["bool",15]],[[["token",4]],["bool",15]],[[["tokenfromconfig",3]],["bool",15]],[[["tokenfromdisk",3]],["bool",15]],[[["statesyncconfig",3]],["bool",15]],[[["rocksdbconfig",3]],["bool",15]],[[["storageconfig",3]],["bool",15]],[[["safetyrulesconfig",3]],["bool",15]],[[["safetyrulesservice",4]],["bool",15]],[[["remoteservice",3]],["bool",15]],[[["safetyrulestestconfig",3]],["bool",15]],[[["apiconfig",3]],["bool",15]],[[["nodeconfig",3]],["bool",15]],[[["baseconfig",3]],["bool",15]],[[["waypointconfig",4]],["bool",15]],null,null,null,null,null,[[["networkid",4]],["networkconfig",3]],[[["peerrole",4],["hashset",3,["publickey"]],["vec",3,["networkaddress"]],["publickey",3],["networkaddress",3]],["peer",3]],[[["peerid",3]]],[[["asref",8,["path"]],["path",3]]],[[["asref",8,["path"]],["path",3]]],[[["temppath",3],["option",4,["temppath"]]]],[[]],[[["ed25519privatekey",3]]],null,null,[[["ed25519privatekey",3]]],null,null,[[["str",15]],[["result",4,["error"]],["error",4]]],[[["peerrole",4]],[["option",4,["ordering"]],["ordering",4]]],[[],["pathbuf",3]],null,[[],["peerid",3]],[[],[["peerid",3],["option",4,["peerid"]]]],null,null,null,null,null,null,null,null,null,null,[[["stdrng",3]]],[[]],[[["stdrng",3]]],[[["stdrng",3]]],[[["stdrng",3]]],[[["stdrng",3]]],[[["option",4,["peerid"]],["stdrng",3],["peerid",3]]],[[["u32",15],["stdrng",3]]],[[]],[[]],[[]],[[]],[[]],[[],[["string",3],["result",4,["string","error"]],["error",4]]],null,null,null,null,null,null,null,null,null,null,[[["rootpath",3]],[["result",4,["error"]],["error",4]]],[[["asref",8,["path"]],["path",3]],[["result",4,["error"]],["error",4]]],[[["asref",8,["path"]],["path",3]],[["result",4,["error"]],["error",4]]],[[["asref",8,["path"]],["path",3]],[["result",4,["error"]],["error",4]]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["socketaddr",4]],null,null,null,null,[[["pathbuf",3]]],[[["pathbuf",3]]],[[["pathbuf",3]]],[[["pathbuf",3]]],[[["pathbuf",3]]],[[["pathbuf",3]]],[[["pathbuf",3]]],null,null,null,null,null,null,null,[[],[["option",4,["error"]],["error",8]]],null,null,null,null,null,null,null,null,[[],[["option",4,["path"]],["path",3]]],null,null,[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[],[["result",4,["error"]],["error",4]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["waypoint",3]],null,null,[[],[["option",4,["waypoint"]],["waypoint",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["networkconfig",3],["peerrole",4]],["peerset",6]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["usize",15],["nodeconfig",3],["bool",15]],["validatorswarm",3]],[[["usize",15]],["validatorswarm",3]],[[]],null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["bool",15]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["hashvalue",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["networkcontext",3]],[[],["networkid",4]],[[],["peernetworkid",3]],[[]],[[]],[[]],[[["networkid",4]],["ordering",4]],[[["peernetworkid",3]],["ordering",4]],[[],["networkid",4]],[[],["result",4]],[[],["result",4]],[[["roletype",4]]],[[["networkcontext",3]],["bool",15]],[[["networkid",4]],["bool",15]],[[["peernetworkid",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["serializer",8]],[["ok",3],["result",4,["ok","error"]],["error",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["str",15]],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[["peerid",3]]],[[["networkcontext",3]],["bool",15]],[[["peernetworkid",3]],["bool",15]],[[],["networkid",4]],[[],["networkid",4]],[[["peerid",3],["networkid",4],["roletype",4]],["networkcontext",3]],[[["networkid",4],["peerid",3]]],[[["networkid",4]],[["option",4,["ordering"]],["ordering",4]]],[[["peernetworkid",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["peerid",3]],[[],["peerid",3]],[[]],[[]],[[],["roletype",4]],[[],["result",4]],[[["serializer",8]],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["roletype",4]]],[[]],[[]],[[]],[[],["authenticationkey",3]],[[],["u16",15]],[[["bool",15]],["networkaddress",3]],[[["nodeconfig",3]],[["transaction",4],["option",4,["transaction"]]]],[[],[["option",4,["networkaddress"]],["networkaddress",3]]],[[],["accountaddress",3]]],"p":[[4,"Error"],[4,"PeerRole"],[4,"DiscoveryMethod"],[4,"ConsensusProposerType"],[4,"Identity"],[4,"Token"],[4,"WaypointConfig"],[4,"RoleType"],[4,"SecureBackend"],[4,"ExecutionCorrectnessService"],[4,"SafetyRulesService"],[3,"StorageConfig"],[3,"LeaderReputationConfig"],[3,"DebugInterfaceConfig"],[3,"JsonRpcConfig"],[3,"ApiConfig"],[3,"Peer"],[3,"NodeConfig"],[3,"TestConfig"],[3,"SafetyRulesTestConfig"],[3,"ConsensusConfig"],[3,"ExecutionConfig"],[3,"IdentityFromStorage"],[3,"SafetyRulesConfig"],[3,"RemoteExecutionService"],[3,"KeyManagerConfig"],[3,"LoggerConfig"],[3,"MempoolConfig"],[3,"NetworkConfig"],[3,"IdentityFromConfig"],[3,"RateLimitConfig"],[3,"StreamConfig"],[3,"GitHubConfig"],[3,"VaultConfig"],[3,"OnDiskStorageConfig"],[3,"TokenFromConfig"],[3,"TokenFromDisk"],[3,"StateSyncConfig"],[3,"RocksdbConfig"],[3,"RemoteService"],[3,"DeprecatedConfig"],[3,"BaseConfig"],[3,"ParseRoleError"],[3,"RootPath"],[8,"PersistableConfig"],[13,"LeaderReputation"],[13,"RoundProposer"],[13,"File"],[13,"InvariantViolation"],[13,"IO"],[13,"BCS"],[13,"Yaml"],[13,"Missing"],[13,"Process"],[13,"FromConfig"],[13,"FromStorage"],[13,"Process"],[13,"GitHub"],[13,"Vault"],[13,"OnDiskStorage"],[13,"FromConfig"],[13,"FromDisk"],[13,"FromConfig"],[13,"FromFile"],[13,"FromStorage"],[3,"ValidatorSwarm"],[3,"ConfigKey"],[4,"NetworkId"],[3,"NetworkContext"],[3,"PeerNetworkId"]]},\
"diem_crypto":{"doc":"This feature gets turned on only if diem-crypto is …","t":[0,0,0,0,0,0,0,0,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,3,3,3,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,7,8,8,3,7,3,3,3,16,18,18,7,7,3,8,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,13,13,13,3,17,13,3,4,3,13,13,13,3,13,13,13,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,17,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,13,13,4,13,8,8,13,8,16,8,16,13,8,16,16,8,16,16,13,8,8,8,13,8,16,16,13,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,10,11,11,10,10,5,10,10,11,11,11,11,11,11,10,10,11,11,11,12,16,3,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,10,11,11,11,17,17,3,3,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["compat","ed25519","error","hash","hkdf","multi_ed25519","noise","test_utils","traits","validatable","x25519","Sha3_256","borrow","borrow_mut","box_clone","chain","clone","clone_into","default","digest","finalize","finalize","finalize_into","finalize_into_reset","finalize_reset","finalize_reset","from","into","new","output_size","output_size","reset","reset","reset","to_owned","try_from","try_into","type_id","update","update","update","vzip","ED25519_PRIVATE_KEY_LENGTH","ED25519_PUBLIC_KEY_LENGTH","ED25519_SIGNATURE_LENGTH","Ed25519PrivateKey","Ed25519PublicKey","Ed25519Signature","LENGTH","LENGTH","arbitrary_with","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_malleability","clone","clone","clone","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","dummy_signature","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","generate","genesis","hash","hash","into","into","into","keypair_strategy","length","length","length","serialize","serialize","serialize","sign","sign_arbitrary_message","test_only_hash","test_only_hash","test_only_hash","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_unvalidated","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate","verify","verify_arbitrary_msg","vzip","vzip","vzip","Error","as_ref","as_ref","backtrace","bail","borrow","borrow_mut","chain","context","deref","deref_mut","downcast","downcast_mut","downcast_ref","drop","fmt","fmt","from","from","from","into","is","msg","new","root_cause","to_string","try_from","try_into","type_id","vzip","ACCUMULATOR_PLACEHOLDER_HASH","CryptoHash","CryptoHasher","EventAccumulatorHasher","GENESIS_BLOCK_ID","HashValue","HashValueBitIterator","HashValueParseError","Hasher","LENGTH","LENGTH_IN_BITS","PRE_GENESIS_BLOCK_ID","SPARSE_MERKLE_PLACEHOLDER_HASH","SparseMerkleInternalHasher","TestOnlyHash","TestOnlyHasher","TransactionAccumulatorHasher","VoteProposalHasher","arbitrary_with","as_ref","bit","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","common_prefix_bits_len","default","default","default","default","default","default","deref","deserialize","eq","finish","finish","finish","finish","finish","finish","flush","flush","flush","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bit_iter","from_hex","from_slice","from_str","from_u64","hash","hash","hash_all","index","into","into","into","into","into","into","into","into","into_iter","iter_bits","ne","new","next","next_back","nibble","partial_cmp","random","random_with_rng","seed","seed","seed","seed","seed","seed","serialize","sha3_256_of","size_hint","test_only_hash","test_only_hash","to_hex","to_hex_literal","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_vec","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","update","update","update","update","update","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write","write","write","write","write","zero","Hkdf","HkdfError","InvalidOutputLengthError","InvalidSeedLengthError","MACKeyError","WrongPseudorandomKeyError","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","expand","extract","extract_then_expand","extract_then_expand_no_ikm","fmt","fmt","fmt","from","from","into","into","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","MultiEd25519PrivateKey","MultiEd25519PublicKey","MultiEd25519Signature","bitmap","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","deserialize","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","generate","genesis","hash","hash","into","into","into","length","length","length","ne","ne","ne","new","new","new","new_with_signatures_and_bitmap","public_keys","serialize","serialize","serialize","sign","sign_arbitrary_message","signatures","test_only_hash","test_only_hash","test_only_hash","threshold","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verify","verify_arbitrary_msg","vzip","vzip","vzip","AES_GCM_TAGLEN","Decrypt","Encrypt","Hkdf","InitiatorHandshakeState","MAX_SIZE_NOISE_MSG","MsgTooShort","NoiseConfig","NoiseError","NoiseSession","NonceOverflow","PayloadTooLarge","ReceivedMsgTooLarge","ResponderHandshakeState","ResponseBufferTooSmall","SessionClosed","WrongPublicKeyReceived","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","decrypted_len","encrypted_len","finalize_connection","fmt","fmt","fmt","fmt","from","from","from","from","from","get_remote_static","handshake_init_msg_len","handshake_resp_msg_len","initiate_connection","into","into","into","into","into","new","new_for_testing","parse_client_init_message","public_key","read_message_in_place","respond_to_client","respond_to_client_and_finalize","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","write_message_in_place","0","KeyPair","TEST_SEED","TestDiemCrypto","TestDiemCryptoHasher","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deserialize","deserialize","eq","finish","flush","fmt","fmt","from","from","from","from","from","generate","hash","into","into","into","ne","private_key","public_key","random_serializable_struct","seed","serialize","serialize","test_only_hash","test_only_hash","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","uniform_keypair_strategy","uniform_keypair_strategy_with_perturbation","update","vzip","vzip","vzip","write","BitVecError","CanonicalRepresentationError","CryptoMaterialError","DeserializationError","Genesis","Length","PointNotOnCurveError","PrivateKey","PrivateKeyMaterial","PublicKey","PublicKeyMaterial","SerializationError","Signature","SignatureMaterial","SignatureMaterial","SigningKey","SigningKeyMaterial","SigningKeyMaterial","SmallSubgroupError","Uniform","ValidCryptoMaterial","ValidCryptoMaterialStringExt","ValidationError","VerifyingKey","VerifyingKeyMaterial","VerifyingKeyMaterial","WrongLengthError","batch_verify","batch_verify","borrow","borrow_mut","clone","clone_into","eq","fmt","fmt","from","from_encoded_string","generate","generate_for_testing","genesis","into","length","ne","public_key","sign","sign_arbitrary_message","signing_message","to_bytes","to_bytes","to_encoded_string","to_owned","to_string","try_from","try_into","type_id","verify","verify_arbitrary_msg","verify_struct_signature","verifying_key","vzip","0","Unvalidated","UnvalidatedEd25519PublicKey","Validatable","Validate","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","fmt","fmt","from","from","hash","hash","into","into","new_unvalidated","new_valid","serialize","serialize","test_only_hash","test_only_hash","to_bytes","to_owned","to_owned","to_unvalidated","try_from","try_from","try_into","try_into","type_id","type_id","unvalidated","valid","validate","validate","vzip","vzip","PRIVATE_KEY_SIZE","PUBLIC_KEY_SIZE","PrivateKey","PublicKey","SHARED_SECRET_SIZE","arbitrary_with","arbitrary_with","as_slice","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","default","deserialize","deserialize","diffie_hellman","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from_ed25519_private_bytes","from_ed25519_public_bytes","generate","hash","into","into","keypair_strategy","ne","partial_cmp","public_key","serialize","serialize","test_only_hash","test_only_hash","to_bytes","to_bytes","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["diem_crypto","","","","","","","","","","","diem_crypto::compat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_crypto::ed25519","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_crypto::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_crypto::hash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_crypto::hkdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_crypto::multi_ed25519","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_crypto::noise","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_crypto::test_utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_crypto::traits","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_crypto::traits::CryptoMaterialError","diem_crypto::validatable","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_crypto::x25519","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Wrapper structs for types that need RustCrypto traits …","This module provides an API for the PureEdDSA signature …","Rexport the error types needed for the various crypto …","This module defines traits and implementations of …","An implementation of HKDF, the HMAC-based …","This module provides an API for the accountable threshold …","Noise is a protocol framework which we use in Diem to …","Internal module containing convenience utility functions …","This module provides a generic set of traits for dealing …","This module provides the <code>Validate</code> trait and <code>Validatable</code> …","An abstraction of x25519 elliptic curve keys required for …","A wrapper for <code>tiny_keccak::Sha3::v256</code> that implements …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The length of the Ed25519PrivateKey","The length of the Ed25519PublicKey","The length of the Ed25519Signature","An Ed25519 private key","An Ed25519 public key","An Ed25519 signature","The length of the Ed25519PrivateKey","The length of the Ed25519Signature","","","","","","","","Check for correct size and third-party based signature …","","","","","","","","","","return an all-zero signature (for test only)","","","","","","","","","","","","","","","","","","","","","Produces a uniformly random ed25519 keypair from a seed","","","","","","","","","","","","","Serialize an Ed25519PrivateKey.","Serialize an Ed25519PublicKey.","","Serialize an Ed25519Signature.","","","","","","","","","","Deserialize an Ed25519PrivateKey. This method will also …","","","Deserialize an Ed25519PublicKey. This method will also …","","","","","","","","","","Verifies that the provided signature is valid for the …","Checks that <code>self</code> is valid for an arbitrary &amp;u8 <code>message</code> …","","","","The <code>Error</code> type, a wrapper around a dynamic error type.","","","Get the backtrace for this Error.","Return early with an error.","","","An iterator of the chain of source errors contained by …","Wrap the error value with additional context.","","","Attempt to downcast the error object to a concrete type.","Downcast this error object by mutable reference.","Downcast this error object by reference.","","","","","","","","Returns true if <code>E</code> is the type held by this error object.","Create a new error object from a printable error message.","Create a new error object from any error type.","The lowest level cause of this error — this error’s …","","","","","","Placeholder hash of <code>Accumulator</code>.","A type that can be cryptographically hashed to produce a …","A trait for representing the state of a cryptographic …","The hasher used to compute the hash of an internal node in …","Genesis block id is used as a parent of the very first …","Output value of our hash function. Intentionally opaque …","An iterator over <code>HashValue</code> that generates one bit for each …","Parse error when attempting to construct a HashValue","The associated <code>Hasher</code> type which comes with a unique salt …","The length of the hash in bytes.","The length of the hash in bits.","Block id reserved as the id of parent block of the genesis …","Placeholder hash of <code>SparseMerkleTree</code>.","The hasher used to compute the hash of an internal node in …","Provides a test_only_hash() method that can be used in …","The hasher used only for testing. It doesn’t have a salt.","The hasher used to compute the hash of an internal node in …","The hasher used to compute the hash of an internal node in …","","","Returns the <code>index</code>-th bit in the bytes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the length of common prefix of <code>self</code> and <code>other</code> in …","","","","","","","","","","Finish constructing the <code>HashValue</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructs a <code>HashValue</code> from an iterator of bits.","Parse a given hex string to a hash value.","Create from a slice (e.g. retrieved from storage).","","Create a hash value whose contents are just the given …","Hashes the object and produces a <code>HashValue</code>.","","Convenience method to compute the hash of a complete byte …","","","","","","","","","","","Returns a <code>HashValueBitIterator</code> over all the bits that …","","Create a new <code>HashValue</code> from a byte array.","","","Returns the <code>index</code>-th nibble in the bytes.","","Create a cryptographically random instance.","Creates a random instance with given rng. Useful in unit …","the seed used to initialize hashing <code>Self</code> before the …","","","","","","","Convenience function that computes a <code>HashValue</code> internally …","","Generates a hash used only for tests.","","Full hex representation of a given hash value.","Full hex representation of a given hash value with <code>0x</code> …","","","","","","","","","","Dumps into a vector.","","","","","","","","","","","","","","","","","","","","","","","","","Write bytes into the hasher.","","","","","","","","","","","","","","","","","","","Creates a zero-initialized instance.","Structure representing the HKDF, capable of HKDF-Extract …","An error type for HKDF key derivation issues.","HKDF expand output exceeds the maximum allowed or is zero.","HKDF extract input seed should not be less than the …","HMAC key related error; unlikely to happen because every …","PRK on HKDF-Expand should not be less than the underlying …","","","","","","","","","","The RFC5869 HKDF-Expand operation.","The RFC5869 HKDF-Extract operation.","HKDF Extract then Expand operation as a single step.","CAUTION: This is not recommended because it does not take …","","","","","","","","","","","","","","","","","","","Vector of private keys in the multi-key Ed25519 structure …","Vector of public keys in the multi-key Ed25519 structure …","Vector of the multi-key signatures along with a 32bit [u8; …","Getter bitmap.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a new MultiEd25519PrivateKey.","Construct a new MultiEd25519PublicKey. — Rules — a) …","This method will also sort signatures based on index.","Creates a new MultiEd25519signature by given signatures …","Getter public_keys","","","","","","Getter signatures.","","","","Getter threshold","","Serialize a MultiEd25519PrivateKey.","","Serialize a MultiEd25519PublicKey.","","","Serialize a MultiEd25519Signature in the form of …","","","","","","Deserialize an Ed25519PrivateKey. This method will also …","","Deserialize a MultiEd25519PublicKey. This method will also …","","","Deserialize a MultiEd25519Signature. This method will also …","","","","","","","","Checks that <code>self</code> is valid for an arbitrary &amp;u8 <code>message</code> …","","","","The authentication tag length of AES-GCM.","could not decrypt the received data (most likely the data …","encryption has failed (in practice there is no reason for …","HKDF has failed (in practice there is no reason for HKDF …","Refer to the Noise protocol framework specification in …","A noise message cannot be larger than 65535 bytes as per …","the received message is too short to contain the expected …","A key holder structure used for both initiators and …","A NoiseError enum represents the different types of error …","A NoiseSession is produced after a successful Noise …","the nonce exceeds the maximum u64 value (in practice this …","the payload that we are trying to send is too large","the message we received is too large","Refer to the Noise protocol framework specification in …","the response buffer passed as argument is too small","session was closed due to decrypt error","the public key received is of the wrong format","","","","","","","","","","","A handy const fn to get the size of a plaintext from a …","A handy const fn to get the expanded size of a plaintext …","A client can call this to finalize a connection, after …","","","","","","","","","","obtain remote static public key","A handy const fn to get the size of the first handshake …","A handy const fn to get the size of the second handshake …","An initiator can use this function to initiate a handshake …","","","","","","A peer must create a NoiseConfig through this function …","create a dummy session with 0 keys","A responder can accept a connection by first parsing an …","Handy getter to access the configuration’s public key","decrypts a message from the other peer (post-handshake) …","A responder can respond to an initiator by calling this …","This function is a one-call that replaces calling the two …","","","","","","","","","","","","","","","","","","","","","","encrypts a message for the other peers (post-handshake) …","","A keypair consisting of a private and public key","A deterministic seed for PRNGs related to keys","This struct provides a means of testing signing and …","Cryptographic hasher for an BCS-serializable #item","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the private key component","the public key component","Produces a random TestDiemCrypto signable / verifiable …","","","","","","","","","","","","","","","","","Produces a uniformly random keypair from a seed","Produces a uniformly random keypair from a seed and the …","","","","","","BitVec errors in accountable multi-sig schemes.","Part of the signature or key is not canonical resulting to …","An error type for key and signature validation issues, see …","Key or signature material does not deserialize correctly.","A type family with a by-convention notion of genesis …","The serialized length of the data that enables macro …","A curve point (i.e., a public key) does not satisfy the …","A type family for key material that should remain secret …","We require public / private types to be coupled, i.e. their","A type for key material that can be publicly shared, and …","We require public / private types to be coupled, i.e. their","Struct to be signed does not serialize correctly.","A type family for signature material that knows which …","The associated signature type for this signing key.","The associated signature type for this verifying key.","A type family of valid keys that know how to sign.","The associated signing key type for this verifying key.","The associated signing key type for this signature","A curve point (i.e., a public key) lies on a small group.","A type family for schemes which know how to generate key …","Key or more generally crypto material with a notion of …","An extension to to/from Strings for <code>ValidCryptoMaterial</code>.","Key or signature material deserializes, but is otherwise …","A type family of public keys that are used for signing.","The associated verifying key type for this signing key.","The associated verifying key type for this signature.","Key, threshold or signature material does not have the …","We provide the implementation which dispatches to the …","The implementer can override a batch verification …","","","","","","","","","When trying to convert from bytes, we simply decode the …","Generate key material from an RNG. This should generally …","Generate a random key using the shared TEST_SEED","Produces the genesis private key.","","The serialized length of the data","","Returns the associated public key","Signs an object that has an distinct domain-separation …","Signs a non-hash input message. For testing only.","Returns the signing message for the given message. It is …","Convert the valid crypto material to bytes.","Convert the signature into a byte representation.","A function to encode into hex-string after serializing.","","","","","","Verification for a struct we unabmiguously know how to …","Native verification function.","We provide the striaghtfoward implementation which …","Returns the associated verifying key","","","The unvalidated form of some type <code>V</code>","An unvalidated <code>Ed25519PublicKey</code>","Used in connection with the <code>Validate</code> trait to be able to …","The <code>Validate</code> trait is used in tandem with the <code>Validatable</code> …","","","","","","","","","","","","","","","","","","","","","Create a new <code>Validatable</code> from an unvalidated type","Create a new <code>Validatable</code> from a valid type","","","","","Return key as bytes","","","Return the unvalidated form of type <code>V</code>","","","","","","","Return a reference to the unvalidated form <code>V::Unvalidated</code>","Try to validate the unvalidated form returning <code>Some(&amp;V)</code> on …","Attempt to validate a <code>V::Unvalidated</code> and returning a …","Attempt to validate <code>V::Unvalidated</code> and return a reference …","","","Size of a X25519 private key","Size of a X25519 public key","This type should be used to deserialize a received private …","This type should be used to deserialize a received public …","Size of a X25519 shared secret","","","Obtain a slice reference to the underlying bytearray","","","","","","","","","","","","","To perform a key exchange with another public key","","","","","","","","","","","","Deserialize an X25119 PrivateKey given the sha512 …","Deserialize an X25119 PublicKey from its representation as …","","","","","Produces a uniformly random ed25519 keypair from a seed","","","Obtain the public key part of a private key","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,2,3,4,2,4,3,2,4,3,3,2,4,3,2,4,3,2,4,3,3,2,4,3,2,2,4,4,3,3,2,4,4,3,2,2,4,3,2,4,3,0,2,4,3,2,4,3,2,2,2,4,3,2,2,4,4,3,3,3,2,4,3,2,4,3,4,2,2,4,4,3,3,2,4,3,2,4,3,4,3,3,2,4,3,0,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,6,7,7,0,0,0,0,0,0,0,7,7,7,8,7,9,10,11,12,13,14,8,7,9,10,11,12,13,14,7,9,10,11,12,13,14,7,9,10,11,12,13,14,7,7,7,10,11,12,13,14,7,7,7,15,10,11,12,13,14,10,11,12,13,14,7,7,7,7,9,9,10,11,12,13,14,8,7,9,10,11,12,13,14,7,7,7,7,7,6,7,15,7,8,7,9,10,11,12,13,14,8,7,7,7,8,8,7,7,7,7,15,10,11,12,13,14,7,7,8,16,7,7,7,7,9,10,11,12,13,14,7,9,7,8,7,9,10,11,12,13,14,8,7,9,10,11,12,13,14,8,7,9,10,11,12,13,14,15,10,11,12,13,14,8,7,9,10,11,12,13,14,10,11,12,13,14,7,0,0,17,17,17,17,18,17,18,17,18,17,18,17,17,18,18,18,18,18,17,17,18,17,18,17,18,17,17,18,17,18,17,18,17,18,17,0,0,0,19,20,21,19,20,21,19,21,19,21,19,20,21,19,20,21,19,20,20,21,21,19,19,20,20,21,21,21,19,19,20,20,21,19,20,21,19,20,21,19,20,21,19,20,21,19,19,21,20,21,19,20,20,19,20,21,19,21,20,20,21,21,19,19,19,21,19,20,21,19,20,20,21,21,19,19,20,21,19,20,21,19,19,19,20,21,19,0,22,22,22,0,0,22,0,0,0,22,22,22,0,22,22,22,23,24,25,22,26,23,24,25,22,26,0,0,26,25,22,22,26,23,24,25,22,26,25,0,0,26,23,24,25,22,26,26,25,26,26,25,26,26,22,23,24,25,22,26,23,24,25,22,26,23,24,25,22,26,23,24,25,22,26,25,27,0,0,0,0,28,29,27,28,29,27,28,29,28,29,28,29,27,29,28,28,29,27,28,29,29,29,27,29,27,28,29,27,29,29,29,0,28,29,27,29,27,28,29,28,29,27,28,29,27,28,29,27,0,0,28,28,29,27,28,30,30,0,30,0,0,30,0,31,0,32,30,0,33,34,0,34,35,30,0,0,0,30,0,33,35,30,34,35,30,30,30,30,30,30,30,30,36,37,37,38,30,39,30,32,33,33,0,40,35,36,30,30,30,30,30,35,35,34,33,30,41,42,0,0,0,43,44,43,44,43,44,43,44,43,44,43,44,43,44,43,44,43,44,43,44,43,43,43,44,43,44,44,43,44,42,43,44,43,44,43,44,43,43,42,43,43,44,0,0,0,0,0,45,46,46,45,46,45,46,45,46,45,46,46,46,45,46,45,45,46,45,45,46,46,45,45,46,46,46,45,46,45,46,45,46,0,46,46,45,45,46,45,46,45,46,45,46,45,46,45,45,46,46,45,46,45,46,45,46],"f":[null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],[["dyndigest",8],["global",3],["box",3,["dyndigest","global"]]]],[[]],[[],["sha3_256",3]],[[]],[[]],[[],[["u8",15],["genericarray",3,["u8"]]]],[[],[["u8",15],["genericarray",3,["u8"]]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["global"]]]],[[["genericarray",3]]],[[["genericarray",3]]],[[],[["global",3],["box",3,["global"]]]],[[],[["u8",15],["genericarray",3,["u8"]]]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["cryptomaterialerror",4],["result",4,["cryptomaterialerror"]]]],[[]],[[],["ed25519publickey",3]],[[],["ed25519signature",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[],["bool",15]],[[["ed25519publickey",3]],["bool",15]],[[["ed25519signature",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["ed25519privatekey",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["ed25519signature",3]],[[],["ed25519signature",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],[["vec",3,["u8"]],["u8",15]]],[[]],[[]],[[],[["vec",3,["u8"]],["u8",15]]],[[]],[[],[["vec",3,["u8"]],["u8",15]]],[[],[["vec",3,["u8"]],["u8",15]]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[]],[[],[["cryptomaterialerror",4],["result",4,["ed25519privatekey","cryptomaterialerror"]],["ed25519privatekey",3]]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["ed25519publickey","cryptomaterialerror"]],["ed25519publickey",3],["cryptomaterialerror",4]]],[[],["result",4]],[[],[["result",4,["ed25519signature","cryptomaterialerror"]],["cryptomaterialerror",4],["ed25519signature",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",6]],[[["ed25519publickey",3]],["result",6]],[[["ed25519publickey",3]],["result",6]],[[]],[[]],[[]],null,[[],["error",8]],[[],["error",8]],[[],["backtrace",3]],null,[[]],[[]],[[],["chain",3]],[[],["error",3]],[[]],[[]],[[],[["result",4,["error"]],["error",3]]],[[],["option",4]],[[],["option",4]],[[]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[],["error",3]],[[]],[[],["bool",15]],[[],["error",3]],[[],["error",3]],[[],["error",8]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["usize",15]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["hashvalue",3]],[[],["hashvalueparseerror",3]],[[],["transactionaccumulatorhasher",3]],[[],["eventaccumulatorhasher",3]],[[],["sparsemerkleinternalhasher",3]],[[],["voteproposalhasher",3]],[[],["testonlyhasher",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["hashvalue",3]],["ordering",4]],[[["hashvalue",3]],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[["hashvalue",3]],["bool",15]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["hashvalueparseerror",3],["result",4,["hashvalueparseerror"]]]],[[["asref",8]],[["hashvalueparseerror",3],["result",4,["hashvalueparseerror"]]]],[[["asref",8]],[["hashvalueparseerror",3],["result",4,["hashvalueparseerror"]]]],[[["str",15]],[["hashvalueparseerror",3],["result",4,["hashvalueparseerror"]]]],[[["u64",15]]],[[],["hashvalue",3]],[[]],[[],["hashvalue",3]],[[["usize",15]],["u8",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["hashvaluebititerator",3]],[[["hashvalue",3]],["bool",15]],[[]],[[],["option",4]],[[],["option",4]],[[["usize",15]],["u8",15]],[[["hashvalue",3]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["string",3]],[[],["string",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],[["vec",3,["u8"]],["u8",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["result",6,["usize"]],["usize",15]]],[[],[["result",6,["usize"]],["usize",15]]],[[],[["result",6,["usize"]],["usize",15]]],[[],[["result",6,["usize"]],["usize",15]]],[[],[["result",6,["usize"]],["usize",15]]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["hkdf",3]],[[],["hkdferror",4]],[[]],[[]],[[["hkdferror",4]],["bool",15]],[[["option",4],["usize",15]],[["vec",3,["u8"]],["result",4,["vec","hkdferror"]],["hkdferror",4]]],[[["option",4]],[["vec",3,["u8"]],["result",4,["vec","hkdferror"]],["hkdferror",4]]],[[["option",4],["usize",15]],[["vec",3,["u8"]],["result",4,["vec","hkdferror"]],["hkdferror",4]]],[[["option",4],["usize",15]],[["vec",3,["u8"]],["result",4,["vec","hkdferror"]],["hkdferror",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["multied25519publickey",3]],[[],["multied25519signature",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["multied25519privatekey",3]],["bool",15]],[[["multied25519publickey",3]],["bool",15]],[[["multied25519signature",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["ed25519privatekey",3]]],[[]],[[]],[[["multied25519privatekey",3]]],[[["ed25519publickey",3]]],[[]],[[["ed25519signature",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["multied25519privatekey",3]],["bool",15]],[[["multied25519publickey",3]],["bool",15]],[[["multied25519signature",3]],["bool",15]],[[["vec",3,["ed25519privatekey"]],["ed25519privatekey",3],["u8",15]],[["result",4,["cryptomaterialerror"]],["cryptomaterialerror",4]]],[[["ed25519publickey",3],["vec",3,["ed25519publickey"]],["u8",15]],[["result",4,["cryptomaterialerror"]],["cryptomaterialerror",4]]],[[["vec",3]],[["result",4,["cryptomaterialerror"]],["cryptomaterialerror",4]]],[[["ed25519signature",3],["vec",3,["ed25519signature"]]]],[[],["vec",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["multied25519signature",3]],[[],["multied25519signature",3]],[[],["vec",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["u8",15]],[[],[["vec",3,["u8"]],["u8",15]]],[[],[["vec",3,["u8"]],["u8",15]]],[[],[["vec",3,["u8"]],["u8",15]]],[[],[["vec",3,["u8"]],["u8",15]]],[[],[["vec",3,["u8"]],["u8",15]]],[[],[["vec",3,["u8"]],["u8",15]]],[[],[["vec",3,["u8"]],["u8",15]]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],[["result",4,["multied25519privatekey","cryptomaterialerror"]],["multied25519privatekey",3],["cryptomaterialerror",4]]],[[],["result",4]],[[],[["multied25519publickey",3],["result",4,["multied25519publickey","cryptomaterialerror"]],["cryptomaterialerror",4]]],[[],["result",4]],[[],["result",4]],[[],[["cryptomaterialerror",4],["result",4,["multied25519signature","cryptomaterialerror"]],["multied25519signature",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["multied25519publickey",3]],["result",6]],[[["multied25519publickey",3]],["result",6]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],["usize",15]],[[["usize",15]],["usize",15]],[[["initiatorhandshakestate",3]],[["noiseerror",4],["result",4,["noiseerror"]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[],["publickey",3]],[[["usize",15]],["usize",15]],[[["usize",15]],["usize",15]],[[["option",4],["publickey",3]],[["noiseerror",4],["result",4,["initiatorhandshakestate","noiseerror"]],["initiatorhandshakestate",3]]],[[]],[[]],[[]],[[]],[[]],[[["privatekey",3]]],[[]],[[],[["result",4,["noiseerror"]],["noiseerror",4]]],[[],["publickey",3]],[[],[["noiseerror",4],["result",4,["noiseerror"]]]],[[["option",4],["responderhandshakestate",3]],[["noiseerror",4],["result",4,["noisesession","noiseerror"]],["noisesession",3]]],[[["option",4]],[["noiseerror",4],["result",4,["noiseerror"]]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],[["vec",3,["u8"]],["result",4,["vec","noiseerror"]],["noiseerror",4]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["testdiemcryptohasher",3]],[[],["keypair",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["keypair",3]],["bool",15]],[[],["hashvalue",3]],[[],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["hashvalue",3]],[[]],[[]],[[]],[[["keypair",3]],["bool",15]],null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[["u8",15]]],[[]],[[]],[[]],[[]],[[],[["result",6,["usize"]],["usize",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["vec",3]],["result",6]],[[["vec",3]],["result",6]],[[]],[[]],[[],["cryptomaterialerror",4]],[[]],[[["cryptomaterialerror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["str",15]],[["result",4,["cryptomaterialerror"]],["cryptomaterialerror",4]]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[["cryptomaterialerror",4]],["bool",15]],[[]],[[]],[[]],[[],[["vec",3,["u8"]],["u8",15]]],[[],[["vec",3,["u8"]],["u8",15]]],[[],[["vec",3,["u8"]],["u8",15]]],[[],[["result",6,["string"]],["string",3]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["validatable",3]],[[],["unvalidateded25519publickey",3]],[[]],[[]],[[],["result",6]],[[],["result",6]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",6]],[[],["result",6]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[],["option",4]],[[],["result",6]],[[],["result",6]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["privatekey",3]],[[],["publickey",3]],[[]],[[]],[[["publickey",3]],["ordering",4]],[[],["publickey",3]],[[],["result",4]],[[],["result",4]],[[["publickey",3]]],[[],["bool",15]],[[["publickey",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["privatekey",3]]],[[],[["cryptomaterialerror",4],["result",4,["cryptomaterialerror"]]]],[[],[["cryptomaterialerror",4],["result",4,["cryptomaterialerror"]]]],[[]],[[]],[[]],[[]],[[]],[[["publickey",3]],["bool",15]],[[["publickey",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["publickey",3]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],[["vec",3,["u8"]],["u8",15]]],[[],[["vec",3,["u8"]],["u8",15]]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]]],"p":[[3,"Sha3_256"],[3,"Ed25519PrivateKey"],[3,"Ed25519Signature"],[3,"Ed25519PublicKey"],[3,"Error"],[8,"CryptoHash"],[3,"HashValue"],[3,"HashValueBitIterator"],[3,"HashValueParseError"],[3,"TransactionAccumulatorHasher"],[3,"EventAccumulatorHasher"],[3,"SparseMerkleInternalHasher"],[3,"VoteProposalHasher"],[3,"TestOnlyHasher"],[8,"CryptoHasher"],[8,"TestOnlyHash"],[4,"HkdfError"],[3,"Hkdf"],[3,"MultiEd25519Signature"],[3,"MultiEd25519PrivateKey"],[3,"MultiEd25519PublicKey"],[4,"NoiseError"],[3,"InitiatorHandshakeState"],[3,"ResponderHandshakeState"],[3,"NoiseSession"],[3,"NoiseConfig"],[3,"TestDiemCrypto"],[3,"TestDiemCryptoHasher"],[3,"KeyPair"],[4,"CryptoMaterialError"],[8,"PublicKey"],[8,"PrivateKey"],[8,"SigningKey"],[8,"VerifyingKey"],[8,"Signature"],[8,"ValidCryptoMaterialStringExt"],[8,"Uniform"],[8,"Genesis"],[8,"Length"],[8,"ValidCryptoMaterial"],[13,"BitVecError"],[8,"Validate"],[3,"Validatable"],[3,"UnvalidatedEd25519PublicKey"],[3,"PrivateKey"],[3,"PublicKey"]]},\
"diem_crypto_derive":{"doc":"Derive macros for crypto operations","t":[24,24,24,24,24,24,24,24,24,24,24,24,24],"n":["BCSCryptoHash","CryptoHasher","Deref","DeserializeKey","PrivateKey","PublicKey","SerializeKey","Signature","SigningKey","SilentDebug","SilentDisplay","ValidCryptoMaterial","VerifyingKey"],"q":["diem_crypto_derive","","","","","","","","","","","",""],"d":["","","","Deserialize from a human readable format where applicable","","","Serialize into a human readable format where applicable","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[]},\
"diem_data_client":{"doc":"","t":[13,3,13,13,8,13,4,3,13,13,13,13,13,3,13,3,4,6,4,6,13,13,13,13,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,17,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AccountStatesWithProof","AdvertisedData","DataIsTooLarge","DataIsUnavailable","DiemDataClient","EpochEndingLedgerInfos","Error","GlobalDataSummary","InvalidData","InvalidPayloadDataType","InvalidRequest","InvalidResponse","NumberOfAccountStates","OptimalChunkSizes","ProofVerificationError","Response","ResponseError","ResponseId","ResponsePayload","Result","TimeoutWaitingForResponse","TransactionOutputsWithProof","TransactionsWithProof","UnexpectedErrorEncountered","account_states","account_states_chunk_size","advertised_data","and_then","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","contains_range","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","diemnet","drop","drop","drop","drop","drop","drop","drop","empty","empty","empty","epoch_chunk_size","epoch_ending_ledger_infos","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","get_account_states_with_proof","get_epoch_ending_ledger_infos","get_global_data_summary","get_number_of_account_states","get_transaction_outputs_with_proof","get_transactions_with_proof","id","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_parts","into_payload","map","ne","ne","ne","ne","ne","new","notify_bad_response","optimal_chunk_sizes","payload","serialize","serialize","synced_ledger_infos","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transaction_chunk_size","transaction_output_chunk_size","transaction_outputs","transactions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","DATA_SUMMARY_POLL_INTERVAL","DataSummaryPoller","DiemNetDataClient","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","get_account_states_with_proof","get_epoch_ending_ledger_infos","get_global_data_summary","get_number_of_account_states","get_transaction_outputs_with_proof","get_transactions_with_proof","init","init","into","into","new","notify_bad_response","start","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["diem_data_clientdiem_data_client::Error","","","","","","diem_data_client::ResponsePayload","","","","","diem_data_client::diemnet","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","A summary of all data that is currently advertised in the …","","","The API offered by the Diem Data Client.","","An error returned by the Diem Data Client for failed API …","A snapshot of the global state of data available in the …","","","","","","Holds the optimal chunk sizes that clients should use when …","","A response from the Data Client for a single API call.","A response error that users of the Diem Data Client can …","","The different data client response payloads as an enum.","","","","","","The ranges of account states advertised, e.g., if a range …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true iff all data items (<code>lowest</code> to <code>highest</code>, …","","","","","","","","","","","","","","","","","","","","","","","","","Returns an empty global data summary. This can be used on …","","","","The ranges of epoch ending ledger infos advertised, e.g., …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a single account states chunk with proof, …","Returns all epoch ending ledger infos between start and …","Returns a global summary of the data currently available …","Returns the number of account states at the specified …","Returns a transaction output list with proof object, with …","Returns a transaction list with proof object, with …","","","","","","","","","","","","","","","","","","","","","","","","","Notifies the Diem Data Client about a previously received …","","","","","The ledger infos corresponding to the highest synced …","","","","","","","","","","","","","The ranges of transaction outputs advertised, e.g., if a …","The ranges of transactions advertised, e.g., if a range is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A <code>DiemDataClient</code> that fulfills requests from remote peers…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,0,2,2,0,1,0,0,3,3,2,2,1,0,3,0,0,0,0,0,2,1,1,2,4,5,6,7,2,3,7,1,6,5,4,2,3,7,1,6,5,4,2,3,7,1,6,5,4,2,3,7,1,6,5,4,4,2,3,7,1,6,5,4,2,3,7,1,6,5,4,2,3,0,2,3,7,1,6,5,4,6,5,4,5,4,2,3,1,6,5,4,1,6,5,4,2,3,2,2,3,7,1,6,5,4,2,2,3,7,1,1,1,1,1,1,6,5,4,8,8,8,8,8,8,7,2,3,7,1,6,5,4,2,3,7,1,6,5,4,7,7,7,2,1,6,5,4,7,8,6,7,2,3,4,2,3,2,3,7,1,6,5,4,2,5,5,4,4,2,3,7,1,6,5,4,2,3,7,1,6,5,4,2,3,7,1,6,5,4,2,3,7,1,6,5,4,9,10,11,12,13,14,15,16,17,18,19,0,0,0,20,21,20,21,21,21,20,21,20,21,20,21,21,20,21,21,21,21,21,21,21,20,21,20,21,21,21,20,21,20,21,20,21,20,21,20,21],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["result",6,["response"]],["response",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["error",4]],[[],["responseerror",4]],[[],["response",3]],[[],["responsepayload",4]],[[],["globaldatasummary",3]],[[],["optimalchunksizes",3]],[[],["advertiseddata",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",15]],["bool",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],null,null,[[["error",4]],["bool",15]],[[["responseerror",4]],["bool",15]],[[["responsepayload",4]],["bool",15]],[[["globaldatasummary",3]],["bool",15]],[[["optimalchunksizes",3]],["bool",15]],[[["advertiseddata",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["unexpectedresponseerror",3]]],[[]],[[]],[[]],[[["accountstateschunkwithproof",3]]],[[["vec",3,["ledgerinfowithsignatures"]],["ledgerinfowithsignatures",4]]],[[["u64",15]]],[[["transactionoutputlistwithproof",6]]],[[["transactionlistwithproof",6]]],[[]],[[]],[[]],[[]],[[["u64",15]],[["pin",3,["box"]],["box",3,["future"]]]],[[["epoch",6]],[["box",3,["future"]],["pin",3,["box"]]]],[[],["globaldatasummary",3]],[[["version",6]],[["box",3,["future"]],["pin",3,["box"]]]],[[["version",6]],[["box",3,["future"]],["pin",3,["box"]]]],[[["version",6],["bool",15]],[["box",3,["future"]],["pin",3,["box"]]]],null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["response",3]],[[["error",4]],["bool",15]],[[["responsepayload",4]],["bool",15]],[[["globaldatasummary",3]],["bool",15]],[[["optimalchunksizes",3]],["bool",15]],[[["advertiseddata",3]],["bool",15]],[[["u64",15]]],[[["u64",15],["responseerror",4]]],null,null,[[],["result",4]],[[],["result",4]],null,[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["diemnetdataclient",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[]],[[["u64",15]],[["pin",3,["box"]],["box",3,["future"]]]],[[["epoch",6]],[["box",3,["future"]],["pin",3,["box"]]]],[[],["globaldatasummary",3]],[[["version",6]],[["box",3,["future"]],["pin",3,["box"]]]],[[["version",6]],[["box",3,["future"]],["pin",3,["box"]]]],[[["version",6],["bool",15]],[["box",3,["future"]],["pin",3,["box"]]]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["storageserviceclient",3],["timeservice",4]]],[[["u64",15],["responseerror",4]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]]],"p":[[4,"ResponsePayload"],[4,"Error"],[4,"ResponseError"],[3,"AdvertisedData"],[3,"OptimalChunkSizes"],[3,"GlobalDataSummary"],[3,"Response"],[8,"DiemDataClient"],[13,"DataIsUnavailable"],[13,"DataIsTooLarge"],[13,"InvalidRequest"],[13,"InvalidResponse"],[13,"TimeoutWaitingForResponse"],[13,"UnexpectedErrorEncountered"],[13,"AccountStatesWithProof"],[13,"EpochEndingLedgerInfos"],[13,"NumberOfAccountStates"],[13,"TransactionOutputsWithProof"],[13,"TransactionsWithProof"],[3,"DataSummaryPoller"],[3,"DiemNetDataClient"]]},\
"diem_documentation_tool":{"doc":"","t":[5,5],"n":["quote_container_definitions","update_rust_quotes"],"q":["diem_documentation_tool",""],"d":["","Replace the markdown content in <code>reader</code> and return a new …"],"i":[0,0],"f":[[[["registry",6]],[["box",3,["error"]],["btreemap",3,["string","string"]],["result",4,["btreemap","box"]]]],[[["btreemap",3]],[["string",3],["result",6,["string"]]]]],"p":[]},\
"diem_e2e_tests_replay":{"doc":"","t":[3,11,11,11,11,12,11,12,11,11,11,5,12,11,11,11,12,12,12,12,11,12,12],"n":["ReplayFlags","borrow","borrow_mut","deref","deref_mut","diem_version","drop","filters","from","init","into","replay","step_limit","try_from","try_into","type_id","verbose_trace_meta","verbose_trace_step","verbose_trace_xrun","verbose_vm","vzip","warning","xrun"],"q":["diem_e2e_tests_replay","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","Filter based on which diem version the trace was executed …","","Filters on which trace (and steps) to run","","","","","Maximum number of steps per trace to replay","","","","Print information per trace","Print information per-step in the trace","Print information per cross-VM function invocation","Enable verbose mode in the xrun VMs","","Print warnings","Cross-run and check the stackless VM"],"i":[0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],null,[[["usize",15]]],null,[[]],[[],["usize",15]],[[]],[[["asref",8,["path"]],["replayflags",3],["path",3],["stacklessbytecodeinterpreter",3]],["result",6]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,[[]],null,null],"p":[[3,"ReplayFlags"]]},\
"diem_events_fetcher":{"doc":"","t":[3,11,11,11,11,11,11,11,11,11,11,11,11],"n":["DiemEventsFetcher","borrow","borrow_mut","from","get_all_events","get_events","get_payment_event_handles","into","new","try_from","try_into","type_id","vzip"],"q":["diem_events_fetcher","","","","","","","","","","","",""],"d":["","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[]],[[]],[[]],[[["eventhandle",3]]],[[["u64",15],["eventkey",3]]],[[["accountaddress",3]]],[[]],[[["str",15]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"DiemEventsFetcher"]]},\
"diem_faucet":{"doc":"This crates provides Faucet service for creating Testnet …","t":[3,11,11,11,11,11,0,11,5,11,11,11,11,13,3,4,13,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,5,12,11,11,12,11,11,11,11,11,11,12,11,11,12,12],"n":["Service","borrow","borrow_mut","from","into","jsonrpc_endpoint","mint","new","routes","try_from","try_into","type_id","vzip","DDAccountNextSeqNum","MintParams","Response","SubmittedTxns","amount","auth_key","borrow","borrow","borrow_mut","borrow_mut","currency_code","deserialize","fmt","fmt","fmt","from","from","into","into","is_designated_dealer","is_remove_domain","mint_routes","return_txns","to_string","to_string","trade_id","try_from","try_from","try_into","try_into","type_id","type_id","vasp_domain","vzip","vzip","0","0"],"q":["diem_faucet","","","","","","","","","","","","","diem_faucet::mint","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_faucet::mint::Response",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,0,1,0,1,1,1,1,2,0,0,2,3,3,2,3,2,3,3,3,2,2,3,2,3,2,3,3,3,0,3,2,3,3,2,3,2,3,2,3,3,2,3,4,5],"f":[null,[[]],[[]],[[]],[[]],[[],["str",15]],null,[[["localaccount",3],["string",3],["chainid",3]]],[[["arc",3,["service"]],["service",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,[[],["result",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,null,[[["arc",3,["service"]],["service",3]]],null,[[],["string",3]],[[],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],null,null],"p":[[3,"Service"],[4,"Response"],[3,"MintParams"],[13,"DDAccountNextSeqNum"],[13,"SubmittedTxns"]]},\
"diem_framework":{"doc":"","t":[5,5,5,5,5,5,5,0,5,0,0,5,0,5,5,5,5,3,11,11,12,12,11,11,11,11,11,12,11,11,11,11,12,12,12,12,11,11,11,11,11,12],"n":["diem_core_modules_full_path","diem_framework_named_addresses","diem_payment_modules_full_path","diem_stdlib_files","diem_stdlib_files_no_dependencies","module_blobs","modules","natives","path_in_crate","release","account","all_natives","signature","native_create_signer","native_destroy_signer","native_ed25519_publickey_validation","native_ed25519_signature_verification","ReleaseOptions","borrow","borrow_mut","build_docs","check_layout_compatibility","clap","clone","clone_into","create_release","default","errmap","fmt","from","from_clap","into","output","package","script_abis","script_builder","to_owned","try_from","try_into","type_id","vzip","with_diagram"],"q":["diem_framework","","","","","","","","","","diem_framework::natives","","","diem_framework::natives::account","","diem_framework::natives::signature","","diem_framework::release","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","NOTE: this function will be deprecated after the Diem v3 …","","","Options to configure the generation of a release.","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[[[],["string",3]],[[],[["string",3],["btreemap",3,["string","numericaladdress"]],["numericaladdress",3]]],[[],["string",3]],[[],[["string",3],["vec",3,["string"]]]],[[],[["string",3],["vec",3,["string"]]]],[[],[["vec",3,["vec"]],["vec",3,["u8"]]]],[[],[["vec",3,["compiledmodule"]],["compiledmodule",3]]],null,[[],["pathbuf",3]],null,null,[[["accountaddress",3]],["nativefunctiontable",6]],null,[[["vecdeque",3,["value"]],["nativecontext",3],["vec",3,["type"]],["type",4],["value",3]],[["nativeresult",3],["partialvmresult",6,["nativeresult"]]]],[[["vecdeque",3,["value"]],["nativecontext",3],["vec",3,["type"]],["type",4],["value",3]],[["nativeresult",3],["partialvmresult",6,["nativeresult"]]]],[[["vecdeque",3,["value"]],["nativecontext",3],["vec",3,["type"]],["type",4],["value",3]],[["nativeresult",3],["partialvmresult",6,["nativeresult"]]]],[[["vecdeque",3,["value"]],["nativecontext",3],["vec",3,["type"]],["type",4],["value",3]],[["nativeresult",3],["partialvmresult",6,["nativeresult"]]]],null,[[]],[[]],null,null,[[],["app",3]],[[],["releaseoptions",3]],[[]],[[]],[[]],null,[[["formatter",3]],["result",6]],[[]],[[["argmatches",3]]],[[]],null,null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null],"p":[[3,"ReleaseOptions"]]},\
"diem_framework_releases":{"doc":"","t":[5,5,5,5,0,5,5,5,5,5,0,13,13,13,13,13,13,3,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["current_error_descriptions","current_module_blobs","current_modules","current_modules_with_blobs","legacy","list_all_releases","load_error_descriptions_from_release","load_modules_from_paths","load_modules_from_release","name_for_script","transaction_scripts","AddCurrencyToAccount","AddRecoveryRotationCapability","AddValidatorAndReconfigure","Burn","BurnTxnFees","CancelBurn","CompiledBytes","CreateChildVaspAccount","CreateDesignatedDealer","CreateParentVaspAccount","CreateRecoveryAddress","CreateValidatorAccount","CreateValidatorOperatorAccount","FreezeAccount","LegacyStdlibScript","PeerToPeerWithMetadata","Preburn","PublishSharedEd2551PublicKey","RegisterValidatorConfig","RemoveValidatorAndReconfigure","RotateAuthenticationKey","RotateAuthenticationKeyWithNonce","RotateAuthenticationKeyWithNonceAdmin","RotateAuthenticationKeyWithRecoveryAddress","RotateDualAttestationInfo","RotateSharedEd2551PublicKey","SetValidatorConfigAndReconfigure","SetValidatorOperator","SetValidatorOperatorWithNonceAdmin","TieredMint","UnfreezeAccount","UpdateDiemVersion","UpdateDualAttestationLimit","UpdateExchangeRate","UpdateMintingAbility","abi","all","allowlist","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compiled_bytes","eq","equivalent","fmt","from","from","hash","hash","into","into","into_vec","is","name","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["diem_framework_releases","","","","","","","","","","diem_framework_releases::legacy","diem_framework_releases::legacy::transaction_scripts","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","Return a list of all available releases.","Load the error descriptions from the specified release.","Load the serialized modules from the specified paths.","Load the serialized modules from the specified release.","","Rust representation of a Move transaction script that can …","","","","","","","Bytes produced by compiling a Move source language script …","","","","","","","","All of the Move transaction scripts that can be executed …","","","","","","","","","","","","","","","","","","","","","Return the ABI of the script (including the bytecode). NB: …","Return a vector containing all of the standard library …","Construct the allowlist of script hashes used to determine …","","","","","","","","","Return the Move bytecode that was produced by compiling …","","","","","","Return the sha3-256 hash of the compiled script bytes.","Return the sha3-256 hash of the script bytes","","","Convert this newtype wrapper into a vector of bytes","Return true if <code>code_bytes</code> is the bytecode of one of the …","Return a lowercase-underscore style name for this script","","","","Return <code>Some(&lt;script_name&gt;)</code> if  <code>code_bytes</code> is the bytecode …","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,1,1,1,1,2,1,2,1,2,2,1,1,1,2,1,1,1,2,1,2,1,2,1,2],"f":[[[]],[[]],[[]],[[]],null,[[],[["vec",3,["string"]],["result",6,["vec"]]]],[[["str",15]],[["result",6,["vec"]],["vec",3,["u8"]]]],[[],[["vec",3,["vec"]],["vec",3,["u8"]]]],[[["str",15]],[["vec",3,["vec"]],["result",6,["vec"]]]],[[],[["result",6,["string"]],["string",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["transactionscriptabi",3]],[[],["vec",3]],[[],[["hashvalue",3],["vec",3,["hashvalue"]]]],[[]],[[]],[[]],[[]],[[],["legacystdlibscript",4]],[[],["compiledbytes",3]],[[]],[[]],[[],["compiledbytes",3]],[[["legacystdlibscript",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[],[["vec",3,["u8"]],["u8",15]]],[[],["bool",15]],[[],["string",3]],[[]],[[]],[[],["string",3]],[[],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]]],"p":[[4,"LegacyStdlibScript"],[3,"CompiledBytes"]]},\
"diem_fuzzer":{"doc":"","t":[3,8,5,11,11,11,11,11,11,0,11,11,11,10,11,11,11,11,11,10,5,0,10,11,11,11,11,11,11,11,11,5,5,5],"n":["FuzzTarget","FuzzTargetImpl","__lsan_default_suppressions","all_targets","borrow","borrow_mut","by_name","clone","clone_into","commands","deref","deref","deref_mut","description","drop","fmt","from","from_env","from_str","fuzz","fuzz_data_to_value","fuzz_targets","generate","init","into","name","to_owned","try_from","try_into","type_id","vzip","fuzz_target","list_targets","make_corpus"],"q":["diem_fuzzer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_fuzzer::commands","",""],"d":["A fuzz target.","Implementation for a particular target of a fuzz operation.","Bake lsan suppressions into the binary","A list of all fuzz targets.","","","Get a fuzz target by name.","","","","","","","A description for this target.","","","","Get the current fuzz target from the environment.","","Fuzz the target with this data. The fuzzer tests for …","Helper to convert a bytearray to a value implementing the …","","Generates a new example for this target to store in the …","","","The name of the fuzz target. By default, we use the struct …","","","","","","Fuzz a target by running <code>cargo fuzz run</code>.","List all known fuzz targets.","Generates data for this fuzz target into the output …"],"i":[0,0,0,1,1,1,1,1,1,0,1,1,1,2,1,1,1,1,1,2,0,0,2,1,1,2,1,1,1,1,1,0,0,0],"f":[null,null,[[]],[[]],[[]],[[]],[[["str",15]],["option",4]],[[],["fuzztarget",3]],[[]],null,[[["usize",15]]],[[]],[[["usize",15]]],[[],["str",15]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[],["result",6]],[[["str",15]],["result",4]],[[]],[[],["debug",8]],null,[[["usize",15],["valuegenerator",3]],[["option",4,["vec"]],["vec",3,["u8"]]]],[[],["usize",15]],[[]],[[],["str",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["pathbuf",3],["vec",3,["osstring"]],["fuzztarget",3],["osstring",3]],["result",6]],[[["bool",15]]],[[["usize",15],["fuzztarget",3],["bool",15],["path",3]],[["result",6,["usize"]],["usize",15]]]],"p":[[3,"FuzzTarget"],[8,"FuzzTargetImpl"]]},\
"diem_genesis_tool":{"doc":"","t":[0,0,0,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,5,3,11,11,12,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,12,11,11,12,11,11,11,11,11,11,11,11,11,12,12,11,11,11],"n":["builder","command","config_builder","fullnode_builder","layout","validator_builder","GenesisBuilder","borrow","borrow_mut","build","deref","deref_mut","drop","from","init","into","layout","move_modules","new","operator","operator_key","owner_key","root_key","set_layout","set_move_modules","set_operator","set_operator_key","set_owner_key","set_root_key","set_treasury_compliance_key","set_validator_config","treasury_compliance_key","try_from","try_into","type_id","validator_config","validators","vzip","Command","CommandName","CreateWaypoint","CreateWaypoint","DiemRootKey","DiemRootKey","Genesis","Genesis","InsertWaypoint","InsertWaypoint","OperatorKey","OperatorKey","OwnerKey","OwnerKey","SetLayout","SetLayout","SetMoveModules","SetMoveModules","SetOperator","SetOperator","TreasuryComplianceKey","TreasuryComplianceKey","ValidatorConfig","ValidatorConfig","Verify","Verify","borrow","borrow","borrow_mut","borrow_mut","clap","create_waypoint","deref","deref","deref_mut","deref_mut","diem_root_key","drop","drop","eq","execute","fmt","fmt","fmt","from","from","from","from_clap","genesis","init","init","insert_waypoint","into","into","operator_key","owner_key","set_layout","set_move_modules","set_operator","to_string","treasury_compliance_key","try_from","try_from","try_into","try_into","type_id","type_id","validator_config","verify","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","test_config","FullnodeConfig","borrow","borrow_mut","config","config_path","deref","deref_mut","directory","drop","from","init","into","name","public_fullnode","try_from","try_into","type_id","validator_fullnode","vzip","Layout","SetLayout","borrow","borrow","borrow_mut","borrow_mut","clap","default","deref","deref","deref_mut","deref_mut","deserialize","diem_root","drop","drop","erased_serialize","execute","fmt","fmt","fmt","from","from","from_clap","from_disk","init","init","into","into","operators","owners","parse","serialize","test_only_hash","to_string","to_toml","treasury_compliance","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","RootKeys","ValidatorBuilder","ValidatorConfig","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","config","config_path","deref","deref","deref","deref_mut","deref_mut","deref_mut","directory","drop","drop","drop","from","from","from","generate","init","init","init","into","into","into","name","new","num_validators","publishing_option","randomize_first_validator_ports","root_key","storage","storage_config","template","to_owned","treasury_compliance_key","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validator_network_address_encryption_key","validator_network_address_encryption_key_version","vzip","vzip","vzip"],"q":["diem_genesis_tool","","","","","","diem_genesis_tool::builder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_genesis_tool::command","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_genesis_tool::command::Command","","","","","","","","","","","","diem_genesis_tool::config_builder","diem_genesis_tool::fullnode_builder","","","","","","","","","","","","","","","","","","","diem_genesis_tool::layout","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_genesis_tool::validator_builder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Layout defines the set of roles to identities within …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,2,2,3,2,3,2,2,3,3,2,2,3,3,2,3,3,2,2,2,3,2,2,3,2,2,2,2,2,3,2,2,3,2,3,2,3,2,2,2,3,4,5,6,7,8,9,10,11,12,13,14,15,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,17,18,17,18,18,17,17,18,17,18,17,17,17,18,17,18,17,17,18,17,18,18,17,17,18,17,18,17,17,17,17,17,17,17,17,17,18,17,18,17,18,17,18,0,0,0,19,20,21,19,20,21,21,21,21,19,19,19,20,21,19,20,21,19,19,20,21,19,20,21,20,19,20,21,19,20,21,19,21,21,21,21,20,19,19,21,21,20,19,20,21,19,20,21,19,20,21,20,20,19,20,21],"f":[null,null,null,null,null,null,null,[[]],[[]],[[["onchainconsensusconfig",4],["chainid",3],["vmpublishingoption",3],["option",4,["vmpublishingoption"]]],[["result",6,["transaction"]],["transaction",4]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[],[["layout",3],["result",6,["layout"]]]],[[],[["vec",3,["vec"]],["result",6,["vec"]]]],[[]],[[["str",15]],[["result",6,["string"]],["string",3]]],[[["str",15]],[["ed25519publickey",3],["result",6,["ed25519publickey"]]]],[[["str",15]],[["ed25519publickey",3],["result",6,["ed25519publickey"]]]],[[],[["ed25519publickey",3],["result",6,["ed25519publickey"]]]],[[["layout",3]],["result",6]],[[["vec",3,["vec"]],["vec",3,["u8"]]],["result",6]],[[["str",15]],["result",6]],[[["str",15],["ed25519publickey",3]],["result",6]],[[["str",15],["ed25519publickey",3]],["result",6]],[[["ed25519publickey",3]],["result",6]],[[["ed25519publickey",3]],["result",6]],[[["str",15],["transaction",4]],["result",6]],[[],[["ed25519publickey",3],["result",6,["ed25519publickey"]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["str",15]],[["result",6,["scriptfunction"]],["scriptfunction",3]]],[[],[["result",6,["vec"]],["vec",3,["validator"]]]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["app",3]],[[],[["waypoint",3],["error",4],["result",4,["waypoint","error"]]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],[["result",4,["ed25519publickey","error"]],["ed25519publickey",3],["error",4]]],[[["usize",15]]],[[["usize",15]]],[[["commandname",4]],["bool",15]],[[],[["error",4],["string",3],["result",4,["string","error"]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["command",4]]],[[["argmatches",3]]],[[],[["error",4],["result",4,["transaction","error"]],["transaction",4]]],[[],["usize",15]],[[],["usize",15]],[[],[["result",4,["error"]],["error",4]]],[[]],[[]],[[],[["result",4,["ed25519publickey","error"]],["ed25519publickey",3],["error",4]]],[[],[["result",4,["ed25519publickey","error"]],["ed25519publickey",3],["error",4]]],[[],[["result",4,["layout","error"]],["layout",3],["error",4]]],[[],[["vec",3,["vec"]],["result",4,["vec","error"]],["error",4]]],[[],[["error",4],["string",3],["result",4,["string","error"]]]],[[],["string",3]],[[],[["result",4,["ed25519publickey","error"]],["ed25519publickey",3],["error",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],[["error",4],["result",4,["transaction","error"]],["transaction",4]]],[[],[["error",4],["string",3],["result",4,["string","error"]]]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,[[]],[[]],null,[[],["pathbuf",3]],[[["usize",15]]],[[["usize",15]]],null,[[["usize",15]]],[[]],[[],["usize",15]],[[]],null,[[["waypoint",3],["string",3],["nodeconfig",3],["transaction",4],["path",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["waypoint",3],["string",3],["nodeconfig",3],["transaction",4],["path",3],["nodeconfig",3]],["result",6]],[[]],null,null,[[]],[[]],[[]],[[]],[[],["app",3]],[[],["layout",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],null,[[["usize",15]]],[[["usize",15]]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[],[["error",4],["layout",3],["result",4,["layout","error"]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["argmatches",3]]],[[["asref",8,["path"]],["path",3]],[["error",4],["result",4,["error"]]]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],null,null,[[["str",15]],[["error",4],["result",4,["error"]]]],[[],["result",4]],[[],["hashvalue",3]],[[],["string",3]],[[],[["error",4],["string",3],["result",4,["string","error"]]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",6]],[[],["validatorbuilder",3]],[[]],null,[[],["pathbuf",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],null,[[["asref",8,["path"]],["vec",3,["vec"]],["vec",3,["u8"]],["path",3]]],[[["nonzerousize",3]]],[[["vmpublishingoption",3]]],[[["bool",15]]],null,[[],["ondiskstorage",3]],null,[[["nodeconfig",3]]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[]]],"p":[[3,"GenesisBuilder"],[4,"Command"],[4,"CommandName"],[13,"CreateWaypoint"],[13,"Genesis"],[13,"InsertWaypoint"],[13,"DiemRootKey"],[13,"OperatorKey"],[13,"OwnerKey"],[13,"SetLayout"],[13,"SetMoveModules"],[13,"SetOperator"],[13,"TreasuryComplianceKey"],[13,"ValidatorConfig"],[13,"Verify"],[3,"FullnodeConfig"],[3,"Layout"],[3,"SetLayout"],[3,"ValidatorConfig"],[3,"RootKeys"],[3,"ValidatorBuilder"]]},\
"diem_github_client":{"doc":"","t":[3,4,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12],"n":["Client","Error","HttpError","InternalError","MissingField","NotFound","SerializationError","borrow","borrow","borrow_mut","borrow_mut","delete_directory","delete_file","eq","fmt","fmt","from","from","from","from","from","get_branches","get_directory","get_file","into","into","ne","new","put","to_string","try_from","try_from","try_into","try_into","type_id","type_id","0","0","0","0","0","1","2"],"q":["diem_github_client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_github_client::Error","","","","","",""],"d":["Client provides a client around the restful interface to …","","","","","","","","","","","Recursively delete all files, which as a by product will …","Delete a file from a GitHub repository","","","","","","","","","Retrieve a list of branches, this is effectively a status …","Retrieve the name of contents within a given directory, …","Retrieve the contents of a file.","","","","","Create or update a file.","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,1,1,2,1,2,1,2,2,1,1,1,2,1,1,1,1,2,2,2,2,1,1,2,2,1,2,1,2,1,2,1,3,4,5,6,7,3,3],"f":[null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[["str",15]],[["result",4,["error"]],["error",4]]],[[["str",15]],[["result",4,["error"]],["error",4]]],[[["error",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["error",3]]],[[["response",3]]],[[["error",3]]],[[],[["vec",3,["string"]],["error",4],["result",4,["vec","error"]]]],[[["str",15]],[["vec",3,["string"]],["error",4],["result",4,["vec","error"]]]],[[["str",15]],[["result",4,["string","error"]],["string",3],["error",4]]],[[]],[[]],[[["error",4]],["bool",15]],[[["string",3]]],[[["str",15]],[["result",4,["error"]],["error",4]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null],"p":[[4,"Error"],[3,"Client"],[13,"HttpError"],[13,"InternalError"],[13,"MissingField"],[13,"NotFound"],[13,"SerializationError"]]},\
"diem_global_constants":{"doc":"The purpose of this crate is to offer a single source of …","t":[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17],"n":["CONSENSUS_KEY","DIEM_ROOT_KEY","EXECUTION_KEY","FULLNODE_NETWORK_KEY","GENESIS_WAYPOINT","MOVE_MODULES","OPERATOR_ACCOUNT","OPERATOR_KEY","OWNER_ACCOUNT","OWNER_KEY","SAFETY_DATA","TREASURY_COMPLIANCE_KEY","VALIDATOR_NETWORK_ADDRESS_KEYS","VALIDATOR_NETWORK_KEY","WAYPOINT"],"q":["diem_global_constants","","","","","","","","","","","","","",""],"d":["Definitions of global cryptographic keys (e.g., as held in …","","","","","","","","","","Definitions of global data items (e.g., as held in secure …","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[]},\
"diem_id_generator":{"doc":"","t":[8,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11],"n":["IdGenerator","U32IdGenerator","U64IdGenerator","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","from","from","into","into","new","new","new_with_value","new_with_value","next","next","next","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["diem_id_generator","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A generic <code>IdGenerator</code> trait, it’s intentionally generic …","A generic in order <code>IdGenerator</code> using an <code>AtomicU32</code> to …","A generic in order <code>IdGenerator</code> using an <code>AtomicU64</code> to …","","","","","","","","","","","Creates a new [<code>InOrderIdGenerator</code>] initialized to <code>0</code>","Creates a new [<code>InOrderIdGenerator</code>] initialized to <code>0</code>","Creates a new [<code>InOrderIdGenerator</code>] with an <code>initial_value</code>","Creates a new [<code>InOrderIdGenerator</code>] with an <code>initial_value</code>","Retrieves a new <code>Id</code>","Retrieves the next ID, wrapping on overflow","Retrieves the next ID, wrapping on overflow","","","","","",""],"i":[0,0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,3,1,2,1,2,1,2,1,2],"f":[null,null,null,[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]]],[[["u64",15]]],[[]],[[],["u32",15]],[[],["u64",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"U32IdGenerator"],[3,"U64IdGenerator"],[8,"IdGenerator"]]},\
"diem_infallible":{"doc":"","t":[12,3,3,3,14,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["0","ArithmeticError","Mutex","MutexGuard","NonZeroUsize","RwLock","RwLockReadGuard","RwLockWriteGuard","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checked","default","deref","deref","deref","deref_mut","deref_mut","description","drop","drop","drop","duration_since_epoch","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_inner","lock","new","new","read","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","write"],"q":["diem_infallible","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","A simple wrapper around the lock() function of a …","An RAII implementation of a “scoped lock” of a mutex. …","A wrapper around <code>std::num::NonZeroUsize</code> to no longer worry …","A simple wrapper around the lock() function of a …","RAII structure used to release the shared read access of a …","RAII structure used to release the exclusive write access …","","","","","","","","","","","","","Utility macro for writing secure arithmetic operations in …","","","","","","","","","","","Gives the duration since the Unix epoch, notice the expect.","","","","","","","","","","","","","","","","","","","","","","","return the owned type consuming the lock","lock the mutex","creates mutex","creates a read-write lock","lock the rwlock in read mode","","","","","","","","","","","","","","","","","","","","","","","lock the rwlock in write mode"],"i":[1,0,0,0,0,0,0,0,1,2,3,4,5,6,1,2,3,4,5,6,0,3,4,5,6,4,6,1,4,5,6,0,1,1,2,3,4,4,5,5,6,6,1,2,3,4,5,6,1,2,3,4,5,6,3,2,2,3,3,1,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,3],"f":[null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["rwlock",3]],[[]],[[]],[[]],[[]],[[]],[[],["str",15]],[[]],[[]],[[]],[[],["duration",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["mutexguard",3]],[[]],[[]],[[],["rwlockreadguard",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["rwlockwriteguard",3]]],"p":[[3,"ArithmeticError"],[3,"Mutex"],[3,"RwLock"],[3,"MutexGuard"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"]]},\
"diem_jellyfish_merkle":{"doc":"This module implements <code>JellyfishMerkleTree</code> backed by …","t":[3,3,6,3,3,6,8,8,3,8,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,12,11,12,12,12,12,0,11,11,11,0,12,12,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,10,3,11,11,11,11,11,11,11,11,11,11,11,11,7,7,7,3,13,13,13,13,13,3,13,13,3,13,4,4,3,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,3,5,5,5,11,11,11,11,11,11,11,11,5,11,5,11,5,5,5,5,11,11,11,11,11,11,11],"n":["JellyfishMerkleTree","MissingRootError","NodeBatch","NodeStats","StaleNodeIndex","StaleNodeIndexBatch","TestValue","TreeReader","TreeUpdateBatch","TreeWriter","Value","arbitrary_with","batch_put_value_sets","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","default","default","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get_leaf_count","get_node","get_node_option","get_range_proof","get_rightmost_leaf","get_root_hash","get_root_hash_option","get_with_proof","hash","into","into","into","into","into","iterator","metrics","ne","ne","ne","new","new_leaves","new_migration","new_nodes","node_batch","node_key","node_stats","node_type","partial_cmp","put_value_set","put_value_sets","restore","stale_leaves","stale_node_index_batch","stale_nodes","stale_since_version","test_helper","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","write_node_batch","JellyfishMerkleIterator","borrow","borrow_mut","from","into","into_iter","new","new_by_index","next","try_from","try_into","type_id","vzip","DIEM_JELLYFISH_INTERNAL_ENCODED_BYTES","DIEM_JELLYFISH_LEAF_ENCODED_BYTES","DIEM_JELLYFISH_STORAGE_READS","Child","EmptyInput","ExtraLeaves","Internal","Internal","InternalLegacy","InternalNode","Leaf","Leaf","LeafNode","NoChildren","Node","NodeDecodeError","NodeKey","NodeType","Null","UnknownTag","account_key","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","child","children_sorted","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","decode","decode","deserialize","deserialize","encode","encode","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","gen_child_node_key","gen_parent_node_key","generate_bitmaps","get_child_with_siblings","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","is_leaf","is_leaf","leaf_count","leaf_count","leaf_count","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new_empty_path","new_internal","new_leaf","new_migration","new_null","nibble_path","node_type","node_type","node_type","partial_cmp","serialize","serialize","set_version","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value_hash","version","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","existing","leaves","unknown_tag","leaf_count","JellyfishMerkleRestore","add_chunk","borrow","borrow_mut","finish","from","into","new","new_overwrite","try_from","try_into","type_id","vzip","ValueBlobHasher","arb_existent_kvs_and_nonexistent_keys","arb_kv_pair_with_distinct_last_nibble","arb_tree_with_index","borrow","borrow_mut","clone","clone_into","default","finish","flush","from","init_mock_db","into","plus_one","seed","test_get_leaf_count","test_get_range_proof","test_get_with_proof","test_get_with_proof_with_distinct_last_nibble","to_owned","try_from","try_into","type_id","update","vzip","write"],"q":["diem_jellyfish_merkle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_jellyfish_merkle::iterator","","","","","","","","","","","","","diem_jellyfish_merkle::metrics","","","diem_jellyfish_merkle::node_typediem_jellyfish_merkle::node_type::Node","","diem_jellyfish_merkle::node_type::NodeDecodeError","","","diem_jellyfish_merkle::node_type::NodeType","diem_jellyfish_merkle::restore","","","","","","","","","","","","","diem_jellyfish_merkle::test_helper","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The Jellyfish Merkle tree data structure. See <code>crate</code> for …","","Node batch that will be written into db atomically with …","","Indicates a node becomes stale since <code>stale_since_version</code>.","<code>StaleNodeIndex</code> batch that will be written into db …","<code>TestValue</code> defines the types of data that can be stored in …","<code>TreeReader</code> defines the interface between …","This is a wrapper of <code>NodeBatch</code>, <code>StaleNodeIndexBatch</code> and …","","<code>Value</code> defines the types of data that can be stored in a …","","The batch version of <code>put_value_sets</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets node given a node key. Returns error if the node does …","Gets node given a node key. Returns <code>None</code> if the node does …","Gets the proof that shows a list of keys up to …","Gets the rightmost leaf. Note that this assumes we are in …","","","Returns the value (if applicable) and the corresponding …","","","","","","","This module implements <code>JellyfishMerkleIterator</code>. …","","","","","Creates a <code>JellyfishMerkleTree</code> backed by the given …","","","","","The <code>NodeKey</code> identifying the node associated with this …","","Node types of <code>JellyfishMerkleTree</code>","","This is a convenient function that calls <code>put_value_sets</code> …","Returns the new nodes and values in a batch after applying …","This module implements the functionality to restore a …","","","","The version since when the node is overwritten and becomes …","","","","","","","","","","","","","","","","","","","","","","","","","","","Writes a node batch into storage.","The <code>JellyfishMerkleIterator</code> implementation.","","","","","","Constructs a new iterator. This puts the internal state in …","Constructs a new iterator. This puts the internal state in …","","","","","","","","","Each child of <code>InternalNode</code> encapsulates a nibble forking …","Input is empty.","Extra leaf bits set","","A wrapper of <code>InternalNode</code>.","A internal node that haven’t been finished the leaf …","Represents a 4-level subtree with 16 children at the …","","A wrapper of <code>LeafNode</code>.","Represents an account.","No children found in internal node","The concrete node type of <code>JellyfishMerkleTree</code>.","Error thrown when a <code>Node</code> fails to be deserialized out of a …","The unique key of each node.","","Represents <code>null</code>.","The first byte of the input is not a known tag …","Gets the account key, the hashed account address.","","","","","","","","","","","","","","","","","","","Gets the <code>n</code>-th child.","","","","","","","","","","","","","","","Recovers from serialized bytes in physical storage.","Recovers from serialized bytes in physical storage.","","","Serializes to bytes for physical storage enforcing the …","Serializes to bytes for physical storage.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generates a child node key based on this node key.","Generates parent node key at the same version based on …","Generates <code>existence_bitmap</code> and <code>leaf_bitmap</code> as a pair of <code>u16</code>…","Gets the child and its corresponding siblings that are …","","","","Computes the hash of nodes.","The hash value of this child node.","","","","","","","","","Returns <code>true</code> if the node is a leaf node.","","","Returns leaf count if known","","","","","","","","Creates a new <code>NodeKey</code>.","","Creates a new Internal node.","Creates a new leaf node.","A shortcut to generate a node key consisting of a version …","Creates the <code>Internal</code> variant.","Creates the <code>Leaf</code> variant.","","Creates the <code>Null</code> variant.","Gets the nibble path.","","Returns <code>NodeType</code>","Indicates if the child is a leaf, or if it’s an internal …","","","","Sets the version to the given version.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the associated value itself.","Gets the associated value hash.","Gets the version.","<code>version</code>, the <code>nibble_path</code> of the [’NodeKey<code>] of this [</code>…","","","","","","","","","","","","","","","Restores a chunk of accounts. This function will verify …","","","Finishes the restoration process. This tells the code that …","","","","","","","","","Cryptographic hasher for an BCS-serializable #item","","","","","","","","","","","","Initializes a DB with a set of key-value pairs by …","","Computes the key immediately after <code>key</code>.","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,1,2,2,3,4,1,5,2,3,4,1,5,4,1,5,4,1,5,1,4,5,4,1,5,4,1,5,3,3,4,1,5,2,3,4,1,5,2,6,6,2,6,2,2,2,1,2,3,4,1,5,0,0,4,1,5,2,4,2,4,5,1,5,0,1,2,2,0,4,5,4,1,0,4,1,5,3,2,3,4,1,5,2,3,4,1,5,2,3,4,1,5,3,2,3,4,1,5,7,0,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,9,9,10,11,10,0,10,11,0,9,0,0,0,0,11,9,12,13,10,14,15,13,10,14,15,12,11,9,13,10,14,15,12,11,9,15,15,13,10,14,15,12,11,13,10,14,15,12,11,13,13,11,15,12,13,11,13,10,14,15,12,11,9,13,10,14,15,12,11,9,12,13,10,14,15,12,11,9,9,13,10,14,15,12,11,11,11,9,13,13,15,15,13,15,12,11,14,13,10,14,15,12,11,9,14,11,14,15,11,13,10,14,15,12,11,9,13,14,15,12,13,11,11,15,11,13,15,11,14,13,15,12,13,12,13,10,14,15,12,11,9,13,10,14,15,12,11,9,13,10,14,15,12,11,9,13,10,14,15,12,11,9,12,12,13,14,13,10,14,15,12,11,9,16,17,18,18,19,20,0,21,21,21,21,21,21,21,21,21,21,21,21,0,0,0,0,22,22,22,22,22,22,22,22,0,22,0,22,0,0,0,0,22,22,22,22,22,22,22],"f":[null,null,null,null,null,null,null,null,null,null,null,[[]],[[["vec",3],["vec",3,["hashmap"]],["option",4,["vec"]],["version",6],["vec",3,["vec"]]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["nodestats",3]],[[],["stalenodeindex",3]],[[],["treeupdatebatch",3]],[[]],[[]],[[]],[[["stalenodeindex",3]],["ordering",4]],[[],["nodestats",3]],[[],["treeupdatebatch",3]],[[["nodestats",3]],["bool",15]],[[["stalenodeindex",3]],["bool",15]],[[["treeupdatebatch",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["version",6]],[["option",4,["usize"]],["result",6,["option"]]]],[[["nodekey",3]],[["node",4],["result",6,["node"]]]],[[["nodekey",3]],[["result",6,["option"]],["option",4,["node"]]]],[[["version",6],["hashvalue",3]],[["sparsemerklerangeproof",3],["result",6,["sparsemerklerangeproof"]]]],[[],[["result",6,["option"]],["option",4]]],[[["version",6]],[["result",6,["hashvalue"]],["hashvalue",3]]],[[["version",6]],[["result",6,["option"]],["option",4,["hashvalue"]]]],[[["version",6],["hashvalue",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["nodestats",3]],["bool",15]],[[["stalenodeindex",3]],["bool",15]],[[["treeupdatebatch",3]],["bool",15]],[[]],null,[[["bool",15]]],null,null,null,null,null,[[["stalenodeindex",3]],[["option",4,["ordering"]],["ordering",4]]],[[["vec",3],["version",6]],["result",6]],[[["vec",3],["version",6],["vec",3,["vec"]]],["result",6]],null,null,null,null,null,null,[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],[[["nodebatch",6]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[["version",6],["arc",3],["hashvalue",3]],["result",6]],[[["usize",15],["version",6],["arc",3]],["result",6]],[[],["option",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["nibble",3]],[["child",3],["option",4,["child"]]]],[[]],[[],["nodekey",3]],[[],["nodetype",4]],[[],["child",3]],[[],["internalnode",3]],[[],["leafnode",3]],[[],["node",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[["nodekey",3]],["ordering",4]],[[],[["nodekey",3],["result",6,["nodekey"]]]],[[],[["node",4],["result",6,["node"]]]],[[["bool",15]],["result",6]],[[],["result",4]],[[],[["result",6,["vec"]],["vec",3,["u8"]]]],[[],[["result",6,["vec"]],["vec",3,["u8"]]]],[[["nodekey",3]],["bool",15]],[[["nodetype",4]],["bool",15]],[[["child",3]],["bool",15]],[[["internalnode",3]],["bool",15]],[[["leafnode",3]],["bool",15]],[[["node",4]],["bool",15]],[[["nodedecodeerror",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["error",3],["ok",3],["result",4,["ok","error"]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["internalnode",3]]],[[["leafnode",3]]],[[]],[[["nibble",3],["version",6]]],[[]],[[]],[[["nibble",3],["nodekey",3]]],[[]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],[["usize",15],["option",4,["usize"]]]],[[],[["usize",15],["option",4,["usize"]]]],[[],[["usize",15],["option",4,["usize"]]]],[[["nodekey",3]],["bool",15]],[[["nodetype",4]],["bool",15]],[[["child",3]],["bool",15]],[[["internalnode",3]],["bool",15]],[[["leafnode",3]],["bool",15]],[[["node",4]],["bool",15]],[[["nodedecodeerror",4]],["bool",15]],[[["nibblepath",3],["version",6]]],[[["version",6],["hashvalue",3],["nodetype",4]]],[[["nibble",3],["hashmap",3,["nibble","child"]],["child",3]]],[[["hashvalue",3]]],[[["version",6]]],[[["nibble",3],["hashmap",3,["nibble","child"]],["child",3]]],[[["hashvalue",3]]],[[["hashmap",3,["nibble","child"]],["child",3],["nibble",3],["bool",15]]],[[]],[[],["nibblepath",3]],[[],["nodetype",4]],[[],["nodetype",4]],null,[[["nodekey",3]],[["option",4,["ordering"]],["ordering",4]]],[[["vec",3],["bool",15]],["result",6]],[[],["result",4]],[[["version",6]]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[],["hashvalue",3]],[[],["version",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[["vec",3],["sparsemerklerangeproof",3]],["result",6]],[[]],[[]],[[],["result",6]],[[]],[[]],[[["version",6],["hashvalue",3],["bool",15],["treewriter",8],["treereader",8],["arc",3]],["result",6]],[[["version",6],["hashvalue",3],["bool",15],["treewriter",8],["arc",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[["usize",15]]],[[]],[[["usize",15]]],[[]],[[]],[[],["valueblobhasher",3]],[[]],[[]],[[],["hashvalue",3]],[[],["result",6]],[[]],[[["hashmap",3]]],[[]],[[["hashvalue",3]],["hashvalue",3]],[[]],[[["hashvalue",3],["hashset",3,["hashvalue"]]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],[["result",6,["usize"]],["usize",15]]]],"p":[[3,"StaleNodeIndex"],[3,"JellyfishMerkleTree"],[3,"MissingRootError"],[3,"NodeStats"],[3,"TreeUpdateBatch"],[8,"TreeReader"],[8,"TreeWriter"],[3,"JellyfishMerkleIterator"],[4,"NodeDecodeError"],[4,"NodeType"],[4,"Node"],[3,"LeafNode"],[3,"NodeKey"],[3,"Child"],[3,"InternalNode"],[13,"Internal"],[13,"Leaf"],[13,"ExtraLeaves"],[13,"UnknownTag"],[13,"Internal"],[3,"JellyfishMerkleRestore"],[3,"ValueBlobHasher"]]},\
"diem_json_rpc":{"doc":"JSON RPC endpoint","t":[0,0,0,14,14,0,0,0,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,13,4,7,13,13,13,4,3,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,5,5,5,3,17,17,17,11,11,11,11,11,11,11,12,12,12,11,11,12,11,11,12,11,11,12,11,12,11,11,11,11,11,11,11,5,5,5,5,5,0,5,13,13,13,13,13,13,3,4,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,4,3,3,3,3,3,13,3,13,13,13,3,13,13,13,13,3,13,13,3,4,3,3,13,13,3,13,13,13,3,13,13,13,13,13,3,3,13,13,13,3,13,3,13,4,3,3,3,3,13,13,13,13,13,13,13,13,4,13,13,12,12,12,12,12,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["data","errors","fuzzing","gen_request_params","log_response","response","runtime","stream_rpc","test_bootstrap","util","views","get_account","get_account_state","get_account_state_with_proof","get_account_transaction","get_account_transactions","get_account_transactions_with_proofs","get_accumulator_consistency_proof","get_currencies","get_event_by_version_with_proof","get_events","get_events_with_proofs","get_metadata","get_network_status","get_resources","get_state_proof","get_transactions","get_transactions_with_proofs","DefaultServerError","ErrorData","INTERNAL_ERRORS","InvalidFormat","InvalidParams","InvalidRequest","InvalidRequestCode","JsonRpcError","MempoolInvalidSeqNumber","MempoolInvalidUpdate","MempoolIsFull","MempoolTooManyTransactions","MempoolUnknownError","MempoolVmError","MethodNotFound","ParseError","ServerCode","StatusCode","VmDeserializationError","VmExecutionError","VmInvariantViolationError","VmUnknownError","VmValidationError","VmVerificationError","as_status_code","as_str","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","code","code_as_str","data","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","erased_serialize","erased_serialize","fmt","fmt","fmt","from","from","from","from","from","from","from","from_i64","from_u64","init","init","init","init","internal_error","into","into","into","into","invalid_format","invalid_param","invalid_params","invalid_params_size","invalid_request","invalid_request_with_data","invalid_request_with_msg","is_internal_error","mempool_error","message","method_not_found","serialize","serialize","serialize","test_only_hash","test_only_hash","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vm_status","vzip","vzip","vzip","vzip","0","fuzzer","generate_corpus","method_fuzzer","request_fuzzer","JsonRpcResponse","X_DIEM_CHAIN_ID","X_DIEM_TIMESTAMP_USEC_ID","X_DIEM_VERSION_ID","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","diem_chain_id","diem_ledger_timestampusec","diem_ledger_version","drop","erased_serialize","error","fmt","from","id","init","into","jsonrpc","new","result","serialize","test_only_hash","to_owned","try_from","try_into","type_id","vzip","bootstrap","bootstrap_from_config","check_latest_ledger_info_timestamp","health_check_route","jsonrpc_routes","startup","get_stream_routes","CSharp","Cpp","Go","Java","Python","Rust","SdkInfo","SdkLang","SdkVersion","Typescript","Unknown","as_str","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from_str","from_str","from_user_agent","init","init","init","into","into","into","language","major","minor","ne","ne","patch","sdk_info_from_user_agent","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","vzip","vzip","vzip","0","AccountRoleView","AccountStateProofView","AccountStateWithProofView","AccountTransactionsWithProofView","AccountView","AccumulatorConsistencyProofView","AdminTransaction","AmountView","BaseUrlRotation","BlockMetadata","Burn","BytesView","CancelBurn","ChildVASP","ComplianceKeyRotation","CreateAccount","CurrencyInfoView","DeserializationError","DesignatedDealer","EventByVersionWithProofView","EventDataView","EventView","EventWithProofView","Executed","ExecutionFailure","MetadataView","Mint","MiscellaneousError","MoveAbort","MoveAbortExplanationView","NewBlock","NewEpoch","OutOfGas","ParentVASP","Preburn","PreburnQueueView","PreburnWithMetadataView","PublishingFailure","ReceivedMint","ReceivedPayment","ScriptView","SentPayment","StateProofView","ToXDXExchangeRateUpdate","TransactionDataView","TransactionListView","TransactionView","TransactionsProofsView","TransactionsWithProofsView","TreasuryCompliance","Unknown","Unknown","Unknown","UnknownToClient","UnknownTransaction","UserTransaction","VASPDomain","VMStatusView","VerificationError","WriteSet","accumulator_root_hash","address","amount","amount","arguments","arguments_bcs","as_bits","as_ref","authentication_key","balances","blob","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","burn_events_key","bytes","cancel_burn_events_key","category","category_description","chain_id","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","code","currency","currency","currency","data","default","delegated_key_rotation_capability","delegated_withdrawal_capability","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diem_version","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dual_attestation_limit","empty","encode_hex","encode_hex_upper","epoch_change_proof","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","event_with_proof","events","exchange_rate_update_events_key","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fractional_part","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","function_name","gas_used","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","is_executed","is_frozen","key","ledger_consistency_proof","ledger_consistency_proof","ledger_info_to_transaction_info_proof","ledger_info_to_transaction_infos_proof","ledger_info_with_signatures","lower_bound_incl","metadata","metadata","metadata_signature","mint_events_key","module_address","module_name","module_publishing_allowed","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","preburn","preburn_events_key","preburns","proof","proofs","reason","reason_description","received_events_key","receiver","role","scaling_factor","script_hash_allow_list","sent_events_key","sequence_number","sequence_number","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialized_events","serialized_transactions","serialized_txns_with_proofs","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_xdx_exchange_rate","transaction","transaction_info","transaction_info_to_account_proof","transaction_infos","transaction_version","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_account_state","try_from_tx_and_events","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_txn_list_with_proof","type","type_arguments","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unknown","upper_bound_excl","version","version","version","version","vm_status","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_diem_root","base_url","base_url","base_url_rotation_events_key","base_url_rotation_events_key","compliance_key","compliance_key","compliance_key_rotation_events_key","compliance_key_rotation_events_key","expiration_time","expiration_time","human_name","human_name","num_children","parent_vasp_address","preburn_balances","preburn_queues","received_mint_events_key","vasp_domain_events_key","vasp_domains","address","amount","amount","amount","amount","amount","amount","amount","bytes","committed_timestamp_secs","created_address","currency_code","destination_address","domain","epoch","metadata","metadata","new_base_url","new_compliance_public_key","new_to_xdx_exchange_rate","preburn_address","preburn_address","preburn_address","proposed_time","proposer","receiver","receiver","removed","role_id","round","sender","sender","time_rotated_seconds","time_rotated_seconds","chain_id","expiration_timestamp_secs","gas_currency","gas_unit_price","max_gas_amount","public_key","script","script_bytes","script_hash","secondary_public_keys","secondary_signature_schemes","secondary_signatures","secondary_signers","sender","sequence_number","signature","signature_scheme","timestamp_usecs","abort_code","code_offset","explanation","function_index","location","location"],"q":["diem_json_rpc","","","","","","","","","","","diem_json_rpc::data","","","","","","","","","","","","","","","","","diem_json_rpc::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_json_rpc::errors::ErrorData","diem_json_rpc::fuzzing","","","","diem_json_rpc::response","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_json_rpc::runtime","","","","","diem_json_rpc::stream_rpc","diem_json_rpc::stream_rpc::startup","diem_json_rpc::util","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_json_rpc::viewsdiem_json_rpc::views::AccountRoleView","","","","","","","","","","","","","","","","","","","diem_json_rpc::views::EventDataView","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_json_rpc::views::TransactionDataView","","","","","","","","","","","","","","","","","","diem_json_rpc::views::VMStatusView","","","","",""],"d":["","","Fuzzer for JSON RPC service","","","","","JSON RPC endpoint","Creates JSON RPC server for a Validator node Should only …","","","Returns account state (AccountView) by given address","","Returns the account state to the client, alongside a proof …","Returns account transaction by account and sequence_number","Returns all account transactions","Return a serialized list of an account’s transactions …","Returns a proof that allows a client to extend their …","Returns meta information about supported currencies","Returns the latest event at or below the requested version …","Returns events by given access path","Returns events by given access path along with their proofs","Returns the blockchain metadata for a specified version. …","Returns the number of peers this node is connected to","Get all resources stored under <code>account_address</code> at <code>version</code>","Returns proof of new state relative to version known to …","Returns transactions by range","Returns transactions by range with proofs","","","list of server internal errors","","","","JSON RPC server error codes for invalid request","","","","","","","","","","Custom JSON RPC server error codes Ranges from -32000 to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","generate_corpus produces an arbitrary transaction to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates HTTP server (warp-based) that serves JSON RPC …","Creates JSON RPC endpoint by given node config","","","","","Gets all routes for all streaming endpoints Each transport …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The Unknown variant is deserialized by the client if it …i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,2,2,2,0,0,1,1,1,1,1,1,2,2,0,3,1,1,1,1,1,1,4,2,1,2,3,4,1,2,3,4,3,4,3,4,4,4,4,1,2,3,4,1,2,3,4,3,4,1,2,3,4,3,4,3,4,4,1,2,3,4,4,4,4,2,2,1,2,3,4,4,1,2,3,4,4,4,4,4,4,4,4,0,4,4,4,3,4,4,3,4,3,4,4,1,2,3,4,1,2,3,4,1,2,3,4,4,1,2,3,4,5,0,0,0,0,0,0,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,0,0,0,0,0,7,7,7,7,7,7,0,0,0,7,7,7,7,8,9,7,8,9,7,8,9,7,8,9,7,8,9,7,8,9,7,8,9,7,8,9,7,8,9,7,8,9,7,8,8,9,7,8,9,7,8,9,7,8,9,7,8,9,9,8,8,8,9,8,0,7,8,9,8,7,8,9,7,8,9,7,8,9,9,7,8,9,10,0,0,0,0,0,0,11,0,11,12,11,0,11,13,11,11,0,14,13,0,0,0,0,14,14,0,11,14,14,0,11,11,14,13,11,0,0,14,11,11,0,11,0,11,0,0,0,0,0,13,13,11,14,11,12,12,11,0,14,12,15,16,17,18,18,18,19,19,16,16,20,17,13,16,21,22,23,24,25,11,15,19,26,14,27,10,28,29,30,12,18,31,32,33,20,34,17,13,16,21,22,23,24,25,11,15,19,26,14,27,10,28,29,30,12,18,31,32,33,20,34,31,27,31,26,26,15,17,13,16,21,22,23,24,25,11,15,19,26,14,27,10,28,29,30,12,18,31,32,33,20,34,17,13,16,21,22,23,24,25,11,15,19,26,14,27,10,28,29,30,12,18,31,32,33,20,34,18,31,17,21,18,23,18,16,16,17,13,16,21,22,23,24,25,11,15,19,19,26,14,27,10,28,29,30,12,18,31,32,33,20,34,17,13,16,21,22,23,24,25,11,15,19,26,14,27,10,28,29,30,12,18,31,32,33,20,34,17,13,16,21,22,23,24,25,11,15,19,26,14,27,10,28,29,30,12,18,31,32,33,20,34,15,17,13,16,21,22,23,24,25,11,15,19,26,14,27,10,28,29,30,12,18,31,32,33,20,34,15,10,19,19,32,17,13,16,21,22,23,24,25,11,15,19,26,14,27,10,28,29,30,12,18,31,32,33,20,34,17,13,16,21,22,23,24,25,11,15,19,26,14,27,10,28,29,30,12,18,31,32,33,20,34,24,27,31,17,13,16,21,22,23,24,25,11,15,19,19,26,26,14,14,27,10,28,29,30,12,18,31,32,33,20,34,31,17,13,13,16,21,22,23,24,25,11,15,19,19,19,26,14,14,27,10,28,29,30,12,12,18,18,18,31,31,32,33,20,34,18,27,27,17,13,16,21,22,23,24,25,11,15,19,26,14,27,10,28,29,30,12,18,31,32,33,20,34,19,17,13,16,21,22,23,24,25,11,15,19,26,14,27,10,28,29,30,12,18,31,32,33,20,34,19,14,16,23,32,33,34,29,32,25,22,18,18,31,18,18,15,17,13,16,21,22,23,24,25,11,15,19,26,14,27,10,28,29,30,12,18,31,32,33,20,34,16,21,15,19,22,31,21,20,28,26,26,16,18,16,31,15,16,16,23,17,13,16,21,22,23,24,25,11,15,19,26,14,27,10,28,29,30,12,18,31,32,33,20,34,28,28,30,17,13,16,21,22,23,24,25,11,15,19,26,14,27,10,28,29,30,12,18,31,32,33,20,34,15,17,13,16,21,22,23,24,25,11,15,19,26,14,27,10,28,29,30,12,18,31,32,33,20,34,19,26,14,31,27,34,34,29,23,17,13,16,21,22,23,23,24,24,25,25,11,11,15,19,26,14,27,10,10,10,28,28,29,29,30,30,12,18,31,32,32,33,33,20,20,34,34,16,27,17,13,16,21,22,23,24,25,11,15,19,26,14,27,10,28,29,30,12,18,31,32,33,20,34,28,18,18,17,13,16,21,22,23,24,25,11,15,19,26,14,27,10,28,29,30,12,18,31,32,33,20,34,18,25,16,15,27,20,27,17,13,16,21,22,23,24,25,11,15,19,26,14,27,10,28,29,30,12,18,31,32,33,20,34,15,35,36,35,36,35,36,35,36,35,36,35,36,35,37,36,36,36,38,35,39,40,41,42,43,44,45,46,47,48,49,50,46,39,51,44,45,52,53,50,40,41,43,54,54,44,45,39,49,54,44,45,53,52,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,56,57,58,57,58,57,58],"f":[null,null,null,null,null,null,null,null,[[["mempoolclientsender",6],["socketaddr",4],["arc",3,["movedbreader"]],["movedbreader",8]],["runtime",3]],null,null,[[["accountaddress",3],["u64",15],["movedbreader",8]],[["result",6,["option","jsonrpcerror"]],["jsonrpcerror",3],["option",4,["accountview"]]]],[[["accountaddress",3],["u64",15],["movedbreader",8]],[["option",4,["accountstate"]],["result",6,["option"]]]],[[["u64",15],["movedbreader",8],["accountaddress",3]],[["jsonrpcerror",3],["result",6,["accountstatewithproofview","jsonrpcerror"]],["accountstatewithproofview",3]]],[[["u64",15],["movedbreader",8],["bool",15],["accountaddress",3]],[["jsonrpcerror",3],["result",6,["option","jsonrpcerror"]],["option",4,["transactionview"]]]],[[["u64",15],["movedbreader",8],["bool",15],["accountaddress",3]],[["vec",3,["transactionview"]],["result",6,["vec","jsonrpcerror"]],["jsonrpcerror",3]]],[[["u64",15],["movedbreader",8],["bool",15],["accountaddress",3]],[["jsonrpcerror",3],["accounttransactionswithproofview",3],["result",6,["accounttransactionswithproofview","jsonrpcerror"]]]],[[["u64",15],["option",4,["u64"]],["movedbreader",8]],[["accumulatorconsistencyproofview",3],["result",6,["accumulatorconsistencyproofview","jsonrpcerror"]],["jsonrpcerror",3]]],[[["u64",15],["movedbreader",8]],[["result",6,["vec","jsonrpcerror"]],["jsonrpcerror",3],["vec",3,["currencyinfoview"]]]],[[["u64",15],["eventkey",3],["movedbreader",8]],[["eventbyversionwithproofview",3],["jsonrpcerror",3],["result",6,["eventbyversionwithproofview","jsonrpcerror"]]]],[[["u64",15],["eventkey",3],["movedbreader",8]],[["jsonrpcerror",3],["vec",3,["eventview"]],["result",6,["vec","jsonrpcerror"]]]],[[["u64",15],["eventkey",3],["movedbreader",8]],[["result",6,["vec","jsonrpcerror"]],["vec",3,["eventwithproofview"]],["jsonrpcerror",3]]],[[["u64",15],["chainid",3],["movedbreader",8]],[["jsonrpcerror",3],["result",6,["metadataview","jsonrpcerror"]],["metadataview",3]]],[[["str",15]],[["u64",15],["jsonrpcerror",3],["result",6,["u64","jsonrpcerror"]]]],[[["u64",15],["movedbreader",8],["accountaddress",3]],[["jsonrpcerror",3],["btreemap",3,["string","annotatedmovestruct"]],["result",6,["btreemap","jsonrpcerror"]]]],[[["u64",15],["ledgerinfowithsignatures",4],["movedbreader",8]],[["stateproofview",3],["jsonrpcerror",3],["result",6,["stateproofview","jsonrpcerror"]]]],[[["u64",15],["bool",15],["movedbreader",8]],[["result",6,["transactionlistview","jsonrpcerror"]],["transactionlistview",3],["jsonrpcerror",3]]],[[["u64",15],["bool",15],["movedbreader",8]],[["jsonrpcerror",3],["option",4,["transactionswithproofsview"]],["result",6,["option","jsonrpcerror"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["statuscode",4],["option",4,["statuscode"]]]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["errordata",4]],[[],["jsonrpcerror",3]],[[]],[[]],null,[[],["str",15]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],[["errordata",4],["result",4,["errordata"]]]],[[],[["jsonrpcerror",3],["result",4,["jsonrpcerror"]]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[["error",3]],["jsonrpcerror",3]],[[["error",4]],["jsonrpcerror",3]],[[["error",3]],["jsonrpcerror",3]],[[["i64",15]],[["invalidrequestcode",4],["option",4,["invalidrequestcode"]]]],[[["u64",15]],[["invalidrequestcode",4],["option",4,["invalidrequestcode"]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["string",3]],["jsonrpcerror",3]],[[]],[[]],[[]],[[]],[[],["jsonrpcerror",3]],[[["str",15]],["jsonrpcerror",3]],[[["str",15]],["jsonrpcerror",3]],[[["string",3]],["jsonrpcerror",3]],[[],["jsonrpcerror",3]],[[["errordata",4],["option",4,["errordata"]]],["jsonrpcerror",3]],[[["string",3]],["jsonrpcerror",3]],[[["i16",15]],["bool",15]],[[["mempoolstatus",3]],[["error",3],["jsonrpcerror",3],["result",4,["jsonrpcerror","error"]]]],null,[[],["jsonrpcerror",3]],[[],["result",4]],[[],["result",4]],[[],["value",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["statuscode",4]],["jsonrpcerror",3]],[[]],[[]],[[]],[[]],null,[[]],[[["valuegenerator",3]],[["vec",3,["u8"]],["u8",15]]],[[["str",15]]],[[["value",4]]],null,null,null,null,[[]],[[]],[[],["jsonrpcresponse",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[],[["jsonrpcresponse",3],["result",4,["jsonrpcresponse"]]]],null,null,null,[[["usize",15]]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],null,[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],null,[[],["usize",15]],[[]],null,[[["u64",15],["chainid",3]],["jsonrpcresponse",3]],null,[[],["result",4]],[[],["hashvalue",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["mempoolclientsender",6],["roletype",4],["jsonrpcconfig",3],["arc",3,["movedbreader"]],["chainid",3],["movedbreader",8]],["runtime",3]],[[["mempoolclientsender",6],["nodeconfig",3],["chainid",3],["arc",3,["movedbreader"]],["movedbreader",8]],["runtime",3]],[[["u64",15],["systemtime",3]],["result",6]],[[["arc",3,["movedbreader"]],["movedbreader",8]]],[[["movedbreader",8],["roletype",4],["chainid",3],["arc",3,["movedbreader"]],["jsonrpcconfig",3],["mempoolclientsender",6]]],null,[[["u64",15],["movedbreader",8],["arc",3,["movedbreader"]],["streamconfig",3]],["boxedfilter",3]],null,null,null,null,null,null,null,null,null,null,null,[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["sdklang",4]],[[],["sdkversion",3]],[[],["sdkinfo",3]],[[]],[[]],[[]],[[]],[[],["sdkversion",3]],[[],["sdkinfo",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["sdklang",4]],["bool",15]],[[["sdkversion",3]],["bool",15]],[[["sdkinfo",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["str",15]],["sdklang",4]],[[["str",15]],["sdkversion",3]],[[["str",15]],["sdkinfo",3]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],null,null,null,[[["sdkversion",3]],["bool",15]],[[["sdkinfo",3]],["bool",15]],null,[[["str",15],["option",4,["str"]]],["sdkinfo",3]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bitslice",3]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[],["amountview",3]],[[],["accountroleview",4]],[[],["accountview",3]],[[],["preburnqueueview",3]],[[],["preburnwithmetadataview",3]],[[],["eventview",3]],[[],["eventwithproofview",3]],[[],["eventbyversionwithproofview",3]],[[],["eventdataview",4]],[[],["metadataview",3]],[[],["bytesview",3]],[[],["moveabortexplanationview",3]],[[],["vmstatusview",4]],[[],["transactionview",3]],[[],["transactionlistview",3]],[[],["transactionswithproofsview",3]],[[],["transactionsproofsview",3]],[[],["accounttransactionswithproofview",3]],[[],["transactiondataview",4]],[[],["scriptview",3]],[[],["currencyinfoview",3]],[[],["stateproofview",3]],[[],["accumulatorconsistencyproofview",3]],[[],["accountstatewithproofview",3]],[[],["accountstateproofview",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[],["scriptview",3]],null,null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],[["amountview",3],["result",4,["amountview"]]]],[[],[["accountroleview",4],["result",4,["accountroleview"]]]],[[],[["result",4,["accountview"]],["accountview",3]]],[[],[["result",4,["preburnqueueview"]],["preburnqueueview",3]]],[[],[["preburnwithmetadataview",3],["result",4,["preburnwithmetadataview"]]]],[[],[["result",4,["eventview"]],["eventview",3]]],[[],[["eventwithproofview",3],["result",4,["eventwithproofview"]]]],[[],[["result",4,["eventbyversionwithproofview"]],["eventbyversionwithproofview",3]]],[[],[["eventdataview",4],["result",4,["eventdataview"]]]],[[],[["metadataview",3],["result",4,["metadataview"]]]],[[],[["bytesview",3],["result",4,["bytesview"]]]],[[],[["moveabortexplanationview",3],["result",4,["moveabortexplanationview"]]]],[[],[["result",4,["vmstatusview"]],["vmstatusview",4]]],[[],[["result",4,["transactionview"]],["transactionview",3]]],[[],[["result",4,["transactionlistview"]],["transactionlistview",3]]],[[],[["transactionswithproofsview",3],["result",4,["transactionswithproofsview"]]]],[[],[["transactionsproofsview",3],["result",4,["transactionsproofsview"]]]],[[],[["result",4,["accounttransactionswithproofview"]],["accounttransactionswithproofview",3]]],[[],[["transactiondataview",4],["result",4,["transactiondataview"]]]],[[],[["result",4,["scriptview"]],["scriptview",3]]],[[],[["currencyinfoview",3],["result",4,["currencyinfoview"]]]],[[],[["stateproofview",3],["result",4,["stateproofview"]]]],[[],[["accumulatorconsistencyproofview",3],["result",4,["accumulatorconsistencyproofview"]]]],[[],[["result",4,["accountstatewithproofview"]],["accountstatewithproofview",3]]],[[],[["result",4,["accountstateproofview"]],["accountstateproofview",3]]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[],["transactionlistview",3]],[[]],[[]],null,[[["amountview",3]],["bool",15]],[[["accountroleview",4]],["bool",15]],[[["accountview",3]],["bool",15]],[[["preburnqueueview",3]],["bool",15]],[[["preburnwithmetadataview",3]],["bool",15]],[[["eventview",3]],["bool",15]],[[["eventwithproofview",3]],["bool",15]],[[["eventbyversionwithproofview",3]],["bool",15]],[[["eventdataview",4]],["bool",15]],[[["metadataview",3]],["bool",15]],[[["bytesview",3]],["bool",15]],[[["moveabortexplanationview",3]],["bool",15]],[[["vmstatusview",4]],["bool",15]],[[["transactionview",3]],["bool",15]],[[["transactionlistview",3]],["bool",15]],[[["transactionswithproofsview",3]],["bool",15]],[[["transactionsproofsview",3]],["bool",15]],[[["accounttransactionswithproofview",3]],["bool",15]],[[["transactiondataview",4]],["bool",15]],[[["scriptview",3]],["bool",15]],[[["currencyinfoview",3]],["bool",15]],[[["stateproofview",3]],["bool",15]],[[["accumulatorconsistencyproofview",3]],["bool",15]],[[["accountstatewithproofview",3]],["bool",15]],[[["accountstateproofview",3]],["bool",15]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],null,null,null,[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],null,[[]],[[["accountrole",4]],["accountroleview",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["vec",3,["u8","global"]],["u8",15],["global",3]],["bytesview",3]],[[],["bytesview",3]],[[]],[[]],[[["keptvmstatus",4]],["vmstatusview",4]],[[]],[[]],[[]],[[]],[[]],[[["transaction",4]],["transactiondataview",4]],[[]],[[["script",3]],["scriptview",3]],[[]],[[["scriptfunction",3]],["scriptview",3]],[[]],[[["currencyinforesource",3]],["currencyinfoview",3]],[[]],[[]],[[]],[[]],null,null,null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["box",3,["global"]],["global",3]]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["amountview",3]],["bool",15]],[[["accountroleview",4]],["bool",15]],[[["accountview",3]],["bool",15]],[[["preburnqueueview",3]],["bool",15]],[[["preburnwithmetadataview",3]],["bool",15]],[[["eventview",3]],["bool",15]],[[["eventwithproofview",3]],["bool",15]],[[["eventbyversionwithproofview",3]],["bool",15]],[[["eventdataview",4]],["bool",15]],[[["metadataview",3]],["bool",15]],[[["bytesview",3]],["bool",15]],[[["moveabortexplanationview",3]],["bool",15]],[[["vmstatusview",4]],["bool",15]],[[["transactionview",3]],["bool",15]],[[["transactionlistview",3]],["bool",15]],[[["transactionswithproofsview",3]],["bool",15]],[[["transactionsproofsview",3]],["bool",15]],[[["accounttransactionswithproofview",3]],["bool",15]],[[["transactiondataview",4]],["bool",15]],[[["scriptview",3]],["bool",15]],[[["currencyinfoview",3]],["bool",15]],[[["stateproofview",3]],["bool",15]],[[["accumulatorconsistencyproofview",3]],["bool",15]],[[["accountstatewithproofview",3]],["bool",15]],[[["accountstateproofview",3]],["bool",15]],[[["freezingbit",3],["identifier",3],["accountresource",3],["u64",15],["accountaddress",3],["accountrole",4],["btreemap",3,["identifier","balanceresource"]],["balanceresource",3]],["accountview",3]],[[["global",3],["vec",3,["preburnwithmetadataview","global"]],["preburnwithmetadataview",3],["string",3]],["preburnqueueview",3]],[[["u64",15],["u8",15],["hashvalue",3]],["metadataview",3]],[[],["bytesview",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["error",3],["result",4,["eventview","error"]],["eventview",3]]],[[["eventwithproof",3]],[["error",3],["result",4,["eventwithproofview","error"]],["eventwithproofview",3]]],[[],["result",4]],[[],["result",4]],[[["eventbyversionwithproof",3]],[["eventbyversionwithproofview",3],["result",4,["eventbyversionwithproofview"]]]],[[["contractevent",4]],[["eventdataview",4],["error",3],["result",4,["eventdataview","error"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["accounttransactionswithproof",3,["transactioninfo"]],["transactioninfo",3]],[["result",4,["transactionlistview"]],["transactionlistview",3]]],[[["transactioninfo",3],["transactionlistwithproof",3,["transactioninfo"]]],[["result",4,["transactionlistview"]],["transactionlistview",3]]],[[],["result",4]],[[["transactionlistwithproof",3]],[["transactionswithproofsview",3],["result",4,["transactionswithproofsview"]]]],[[],["result",4]],[[["transactioninfolistwithproof",3]],[["result",4,["transactionsproofsview"]],["transactionsproofsview",3]]],[[],["result",4]],[[["accounttransactionswithproof",3]],[["result",4,["accounttransactionswithproofview"]],["accounttransactionswithproofview",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["stateproof",3]],[["stateproofview",3],["result",4,["stateproofview"]]]],[[],["result",4]],[[["accumulatorconsistencyproof",3]],[["result",4,["accumulatorconsistencyproofview"]],["accumulatorconsistencyproofview",3]]],[[["accountstatewithproof",3,["transactioninfo"]],["transactioninfo",3]],[["error",3],["result",4,["accountstatewithproofview","error"]],["accountstatewithproofview",3]]],[[],["result",4]],[[],["result",4]],[[["accountstateproof",3,["transactioninfo"]],["transactioninfo",3]],[["error",3],["result",4,["accountstateproofview","error"]],["accountstateproofview",3]]],[[["accountaddress",3],["accountstate",3],["u64",15]],[["error",3],["result",4,["accountview","error"]],["accountview",3]]],[[["u64",15],["vec",3,["contractevent","global"]],["transaction",4],["global",3],["contractevent",4]],[["error",3],["transactionview",3],["result",4,["transactionview","error"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u64",15]],[["error",3],["result",4,["transactionlistwithproof","error"]],["transactionlistwithproof",3,["transactioninfo"]]]],null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["scriptview",3]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["accountstate",3]],[["error",3],["result",4,["error"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"ServerCode"],[4,"InvalidRequestCode"],[4,"ErrorData"],[3,"JsonRpcError"],[13,"StatusCode"],[3,"JsonRpcResponse"],[4,"SdkLang"],[3,"SdkVersion"],[3,"SdkInfo"],[3,"TransactionListView"],[4,"EventDataView"],[4,"TransactionDataView"],[4,"AccountRoleView"],[4,"VMStatusView"],[3,"MetadataView"],[3,"AccountView"],[3,"AmountView"],[3,"ScriptView"],[3,"BytesView"],[3,"AccountStateWithProofView"],[3,"PreburnQueueView"],[3,"PreburnWithMetadataView"],[3,"EventView"],[3,"EventWithProofView"],[3,"EventByVersionWithProofView"],[3,"MoveAbortExplanationView"],[3,"TransactionView"],[3,"TransactionsWithProofsView"],[3,"TransactionsProofsView"],[3,"AccountTransactionsWithProofView"],[3,"CurrencyInfoView"],[3,"StateProofView"],[3,"AccumulatorConsistencyProofView"],[3,"AccountStateProofView"],[13,"ParentVASP"],[13,"DesignatedDealer"],[13,"ChildVASP"],[13,"TreasuryCompliance"],[13,"VASPDomain"],[13,"Burn"],[13,"CancelBurn"],[13,"Mint"],[13,"Preburn"],[13,"ReceivedPayment"],[13,"SentPayment"],[13,"ReceivedMint"],[13,"Unknown"],[13,"AdminTransaction"],[13,"CreateAccount"],[13,"ToXDXExchangeRateUpdate"],[13,"NewEpoch"],[13,"BaseUrlRotation"],[13,"ComplianceKeyRotation"],[13,"NewBlock"],[13,"UserTransaction"],[13,"BlockMetadata"],[13,"MoveAbort"],[13,"ExecutionFailure"]]},\
"diem_json_rpc_client":{"doc":"","tn":["AccountAddress","BroadcastingClient","LENGTH","SignedTransaction","ZERO","arbitrary_with","arbitrary_with","as_ref","authenticator","batch","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","chain_id","check_signature","clone","clone","clone","clone_into","clone_into","clone_into","cmp","committed_hash","contains_duplicate_signers","deref","deserialize","deserialize","encode_hex","encode_hex_upper","eq","eq","equivalent","equivalent","errors","expiration_timestamp_secs","fmt","fmt","fmt","fmt","fmt","fmt","format_for_client","from","from","from","from","from_bytes","from_hex","from_hex_literal","from_str","gas_currency_code","gas_unit_price","get_account","get_account_state_with_proof","get_account_transaction","get_account_transactions","get_currencies","get_events","get_events_with_proofs","get_metadata_by_version","get_network_status","get_state_proof","get_transactions","get_transactions_with_proofs","hash","hash","hash","into","into","into","into_bytes","into_raw_transaction","is_multi_agent","max_gas_amount","ne","ne","new","new","new","new_multi_agent","new_multisig","new_with_authenticator","partial_cmp","payload","random","raw_txn_bytes_len","sender","sequence_number","serialize","serialize","short_str_lossless","submit","test_only_hash","test_only_hash","to_hex","to_hex_literal","to_owned","to_owned","to_owned","to_string","to_vec","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","views","vzip","vzip","vzip","DefaultServerError","ErrorData","INTERNAL_ERRORS","InvalidFormat","InvalidParams","InvalidRequest","InvalidRequestCode","JsonRpcError","MempoolInvalidSeqNumber","MempoolInvalidUpdate","MempoolIsFull","MempoolTooManyTransactions","MempoolUnknownError","MempoolVmError","MethodNotFound","ParseError","ServerCode","StatusCode","VmDeserializationError","VmExecutionError","VmInvariantViolationError","VmUnknownError","VmValidationError","VmVerificationError","as_status_code","as_str","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","code","code_as_str","data","deserialize","deserialize","fmt","fmt","fmt","from","from","from","from","from","from","from","from_i64","from_u64","internal_error","into","into","into","into","invalid_format","invalid_param","invalid_params","invalid_params_size","invalid_request","invalid_request_with_data","invalid_request_with_msg","is_internal_error","mempool_error","message","method_not_found","serialize","serialize","serialize","test_only_hash","test_only_hash","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vm_status","vzip","vzip","vzip","vzip","0","0","AccountRoleView","AccountStateProofView","AccountStateWithProofView","AccountTransactionsWithProofView","AccountView","AccumulatorConsistencyProofView","AdminTransaction","AmountView","BaseUrlRotation","BlockMetadata","Burn","BytesView","CancelBurn","ChildVASP","ComplianceKeyRotation","CreateAccount","CurrencyInfoView","DeserializationError","DesignatedDealer","EventByVersionWithProofView","EventDataView","EventView","EventWithProofView","Executed","ExecutionFailure","MetadataView","Mint","MiscellaneousError","MoveAbort","MoveAbortExplanationView","NewBlock","NewEpoch","OutOfGas","ParentVASP","Preburn","PreburnQueueView","PreburnWithMetadataView","PublishingFailure","ReceivedMint","ReceivedPayment","ScriptView","SentPayment","StateProofView","ToXDXExchangeRateUpdate","TransactionDataView","TransactionListView","TransactionView","TransactionsProofsView","TransactionsWithProofsView","TreasuryCompliance","Unknown","Unknown","Unknown","UnknownToClient","UnknownTransaction","UserTransaction","VASPDomain","VMStatusView","VerificationError","WriteSet","accumulator_root_hash","address","amount","amount","arguments","arguments_bcs","as_ref","authentication_key","balances","blob","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","burn_events_key","bytes","cancel_burn_events_key","category","category_description","chain_id","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","code","currency","currency","currency","data","default","delegated_key_rotation_capability","delegated_withdrawal_capability","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diem_version","dual_attestation_limit","empty","encode_hex","encode_hex_upper","epoch_change_proof","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","event_with_proof","events","exchange_rate_update_events_key","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fractional_part","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","function_name","gas_used","hash","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","is_executed","is_frozen","key","ledger_consistency_proof","ledger_consistency_proof","ledger_info_to_transaction_info_proof","ledger_info_to_transaction_infos_proof","ledger_info_with_signatures","lower_bound_incl","metadata","metadata","metadata_signature","mint_events_key","module_address","module_name","module_publishing_allowed","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","preburn","preburn_events_key","preburns","proof","proofs","reason","reason_description","received_events_key","receiver","role","scaling_factor","script_hash_allow_list","sent_events_key","sequence_number","sequence_number","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialized_events","serialized_transactions","serialized_txns_with_proofs","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_xdx_exchange_rate","transaction","transaction_info","transaction_info_to_account_proof","transaction_infos","transaction_version","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_account_state","try_from_tx_and_events","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_txn_list_with_proof","type","type_arguments","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unknown","upper_bound_excl","version","version","version","version","vm_status","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_diem_root","base_url","base_url","base_url_rotation_events_key","base_url_rotation_events_key","compliance_key","compliance_key","compliance_key_rotation_events_key","compliance_key_rotation_events_key","expiration_time","expiration_time","human_name","human_name","num_children","parent_vasp_address","preburn_balances","preburn_queues","received_mint_events_key","vasp_domain_events_key","vasp_domains","address","amount","amount","amount","amount","amount","amount","amount","bytes","committed_timestamp_secs","created_address","currency_code","destination_address","domain","epoch","metadata","metadata","new_base_url","new_compliance_public_key","new_to_xdx_exchange_rate","preburn_address","preburn_address","preburn_address","proposed_time","proposer","receiver","receiver","removed","role_id","round","sender","sender","time_rotated_seconds","time_rotated_seconds","chain_id","expiration_timestamp_secs","gas_currency","gas_unit_price","max_gas_amount","public_key","script","script_bytes","script_hash","secondary_public_keys","secondary_signature_schemes","secondary_signatures","secondary_signers","sender","sequence_number","signature","signature_scheme","timestamp_usecs","abort_code","code_offset","explanation","function_index","location","location"],"q":["diem_json_rpc_client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_json_rpc_client::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_json_rpc_client::errors::ErrorData","diem_json_rpc_client::viewsdiem_json_rpc_client::views::AccountRoleView","","","","","","","","","","","","","","","","","","","diem_json_rpc_client::views::EventDataView","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_json_rpc_client::views::TransactionDataView","","","","","","","","","","","","","","","","","","diem_json_rpc_client::views::VMStatusView","","","","",""],"d":["A struct that represents an account address.","","The number of bytes in an address.","A transaction that has been signed.","Hex address: 0x0","","","","","","","","","","","","","Checks that the signature of given transaction. Returns …","","","","","","","","Returns the hash when the transaction is commited onchain.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to convert the provided byte array into Address.","Tries to convert the provided byte buffer into Address.","","","","","","","","","","","","","","list of server internal errors","","","","JSON RPC server error codes for invalid request","","","","","","","","","","Custom JSON RPC server error codes Ranges from -32000 to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The Unknown variant is deserialized by the client if it …i":[0,0,1,0,1,2,1,1,2,3,3,2,1,3,2,1,2,2,3,2,1,3,2,1,1,2,2,1,2,1,1,1,2,1,2,1,0,2,3,2,1,1,1,1,2,3,2,1,1,1,1,1,1,2,2,3,3,3,3,3,3,3,3,3,3,3,3,2,1,1,3,2,1,1,2,2,2,2,1,3,2,1,2,2,2,1,2,1,2,2,2,2,1,1,3,2,1,1,1,3,2,1,1,1,3,2,2,1,1,1,1,3,2,1,3,2,1,0,3,2,1,4,0,0,5,5,5,0,0,4,4,4,4,4,4,5,5,0,6,4,4,4,4,4,4,7,5,4,5,6,7,4,5,6,7,6,7,6,7,7,7,7,6,7,6,7,7,4,5,6,7,7,7,7,5,5,7,4,5,6,7,7,7,7,7,7,7,7,0,7,7,7,6,7,7,6,7,6,7,7,4,5,6,7,4,5,6,7,4,5,6,7,7,4,5,6,7,8,9,0,0,0,0,0,0,10,0,10,11,10,0,10,12,10,10,0,13,12,0,0,0,0,13,13,0,10,13,13,0,10,10,13,12,10,0,0,13,10,10,0,10,0,10,0,0,0,0,0,12,12,10,13,10,11,11,10,0,13,11,14,15,16,17,17,17,18,15,15,19,16,12,15,20,21,22,23,24,10,14,18,25,13,26,9,27,28,29,11,17,30,31,32,19,33,16,12,15,20,21,22,23,24,10,14,18,25,13,26,9,27,28,29,11,17,30,31,32,19,33,30,26,30,25,25,14,16,12,15,20,21,22,23,24,10,14,18,25,13,26,9,27,28,29,11,17,30,31,32,19,33,16,12,15,20,21,22,23,24,10,14,18,25,13,26,9,27,28,29,11,17,30,31,32,19,33,17,30,16,20,17,22,17,15,15,18,16,12,15,20,21,22,23,24,10,14,18,25,13,26,9,27,28,29,11,17,30,31,32,19,33,14,14,9,18,18,31,16,12,15,20,21,22,23,24,10,14,18,25,13,26,9,27,28,29,11,17,30,31,32,19,33,23,26,30,16,12,15,20,21,22,23,24,10,14,18,18,25,25,13,13,26,9,27,28,29,11,17,30,31,32,19,33,30,16,12,12,15,20,21,22,23,24,10,14,18,18,18,25,13,13,26,9,27,28,29,11,11,17,17,17,30,30,31,32,19,33,17,26,26,18,16,12,15,20,21,22,23,24,10,14,18,25,13,26,9,27,28,29,11,17,30,31,32,19,33,18,13,15,22,31,32,33,28,31,24,21,17,17,30,17,17,14,16,12,15,20,21,22,23,24,10,14,18,25,13,26,9,27,28,29,11,17,30,31,32,19,33,15,20,14,18,21,30,20,19,27,25,25,15,17,15,30,14,15,15,22,16,12,15,20,21,22,23,24,10,14,18,25,13,26,9,27,28,29,11,17,30,31,32,19,33,27,27,29,16,12,15,20,21,22,23,24,10,14,18,25,13,26,9,27,28,29,11,17,30,31,32,19,33,14,16,12,15,20,21,22,23,24,10,14,18,25,13,26,9,27,28,29,11,17,30,31,32,19,33,18,25,13,30,26,33,33,28,22,16,12,15,20,21,22,22,23,23,24,24,10,10,14,18,25,13,26,9,9,9,27,27,28,28,29,29,11,17,30,31,31,32,32,19,19,33,33,15,26,16,12,15,20,21,22,23,24,10,14,18,25,13,26,9,27,28,29,11,17,30,31,32,19,33,27,17,17,16,12,15,20,21,22,23,24,10,14,18,25,13,26,9,27,28,29,11,17,30,31,32,19,33,17,24,15,14,26,19,26,16,12,15,20,21,22,23,24,10,14,18,25,13,26,9,27,28,29,11,17,30,31,32,19,33,14,34,35,34,35,34,35,34,35,34,35,34,35,34,36,35,35,35,37,34,38,39,40,41,42,43,44,45,46,47,48,49,45,38,50,43,44,51,52,49,39,40,42,53,53,43,44,38,48,53,43,44,52,51,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,55,56,57,56,57,56,57],"f":[null,null,null,null,null,[[]],[[]],[[]],[[],["transactionauthenticator",4]],[[["methodrequest",4],["vec",3,["methodrequest"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["chainid",3]],[[],[["result",4,["signaturecheckedtransaction","error"]],["error",3],["signaturecheckedtransaction",3]]],[[],["broadcastingclient",3]],[[],["signedtransaction",3]],[[],["accountaddress",3]],[[]],[[]],[[]],[[["accountaddress",3]],["ordering",4]],[[],["hashvalue",3]],[[],["bool",15]],[[]],[[],[["signedtransaction",3],["result",4,["signedtransaction"]]]],[[],[["result",4,["accountaddress"]],["accountaddress",3]]],[[]],[[]],[[["signedtransaction",3]],["bool",15]],[[["accountaddress",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[],["u64",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[],["string",3]],[[]],[[]],[[]],[[],["accountaddress",3]],[[],[["accountaddress",3],["accountaddressparseerror",3],["result",4,["accountaddress","accountaddressparseerror"]]]],[[],[["accountaddress",3],["accountaddressparseerror",3],["result",4,["accountaddress","accountaddressparseerror"]]]],[[["str",15]],[["accountaddress",3],["accountaddressparseerror",3],["result",4,["accountaddress","accountaddressparseerror"]]]],[[["str",15]],[["accountaddress",3],["accountaddressparseerror",3],["result",4,["accountaddress","accountaddressparseerror"]]]],[[],["str",15]],[[],["u64",15]],[[["accountaddress",3]]],[[["u64",15],["option",4,["u64"]],["accountaddress",3]]],[[["u64",15],["bool",15],["accountaddress",3]]],[[["u64",15],["bool",15],["accountaddress",3]]],[[]],[[["u64",15],["eventkey",3]]],[[["u64",15],["eventkey",3]]],[[["u64",15]]],[[]],[[["u64",15]]],[[["u64",15],["bool",15]]],[[["u64",15],["bool",15]]],[[]],[[]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[],["rawtransaction",3]],[[],["bool",15]],[[],["u64",15]],[[["signedtransaction",3]],["bool",15]],[[["accountaddress",3]],["bool",15]],[[["usize",15],["vec",3,["client"]],["client",3]],[["result",6,["string"]],["string",3]]],[[["ed25519publickey",3],["rawtransaction",3],["ed25519signature",3]],["signedtransaction",3]],[[],["accountaddress",3]],[[["vec",3,["accountauthenticator","global"]],["rawtransaction",3],["accountauthenticator",4],["accountaddress",3],["global",3],["vec",3,["accountaddress","global"]]],["signedtransaction",3]],[[["multied25519publickey",3],["rawtransaction",3],["multied25519signature",3]],["signedtransaction",3]],[[["transactionauthenticator",4],["rawtransaction",3]],["signedtransaction",3]],[[["accountaddress",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["transactionpayload",4]],[[],["accountaddress",3]],[[],["usize",15]],[[],["accountaddress",3]],[[],["u64",15]],[[],["result",4]],[[],["result",4]],[[],["string",3]],[[["signedtransaction",3]]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["string",3]],[[],["string",3]],[[]],[[]],[[]],[[],["string",3]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],["result",4]],[[["transaction",4]],[["signedtransaction",3],["error",3],["result",4,["signedtransaction","error"]]]],[[],["result",4]],[[],["result",4]],[[],[["accountaddress",3],["accountaddressparseerror",3],["result",4,["accountaddress","accountaddressparseerror"]]]],[[["vec",3,["u8","global"]],["u8",15],["global",3]],[["accountaddress",3],["accountaddressparseerror",3],["result",4,["accountaddress","accountaddressparseerror"]]]],[[["string",3]],[["accountaddress",3],["accountaddressparseerror",3],["result",4,["accountaddress","accountaddressparseerror"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["statuscode",4],["option",4,["statuscode"]]]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["errordata",4]],[[],["jsonrpcerror",3]],[[]],[[]],null,[[],["str",15]],null,[[],[["result",4,["errordata"]],["errordata",4]]],[[],[["jsonrpcerror",3],["result",4,["jsonrpcerror"]]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[["error",3]],["jsonrpcerror",3]],[[["error",4]],["jsonrpcerror",3]],[[["error",3]],["jsonrpcerror",3]],[[]],[[["i64",15]],[["option",4,["invalidrequestcode"]],["invalidrequestcode",4]]],[[["u64",15]],[["option",4,["invalidrequestcode"]],["invalidrequestcode",4]]],[[["string",3]],["jsonrpcerror",3]],[[]],[[]],[[]],[[]],[[],["jsonrpcerror",3]],[[["str",15]],["jsonrpcerror",3]],[[["str",15]],["jsonrpcerror",3]],[[["string",3]],["jsonrpcerror",3]],[[],["jsonrpcerror",3]],[[["errordata",4],["option",4,["errordata"]]],["jsonrpcerror",3]],[[["string",3]],["jsonrpcerror",3]],[[["i16",15]],["bool",15]],[[["mempoolstatus",3]],[["result",4,["jsonrpcerror","error"]],["jsonrpcerror",3],["error",3]]],null,[[],["jsonrpcerror",3]],[[],["result",4]],[[],["result",4]],[[],["value",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["statuscode",4]],["jsonrpcerror",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[],["amountview",3]],[[],["accountroleview",4]],[[],["accountview",3]],[[],["preburnqueueview",3]],[[],["preburnwithmetadataview",3]],[[],["eventview",3]],[[],["eventwithproofview",3]],[[],["eventbyversionwithproofview",3]],[[],["eventdataview",4]],[[],["metadataview",3]],[[],["bytesview",3]],[[],["moveabortexplanationview",3]],[[],["vmstatusview",4]],[[],["transactionview",3]],[[],["transactionlistview",3]],[[],["transactionswithproofsview",3]],[[],["transactionsproofsview",3]],[[],["accounttransactionswithproofview",3]],[[],["transactiondataview",4]],[[],["scriptview",3]],[[],["currencyinfoview",3]],[[],["stateproofview",3]],[[],["accumulatorconsistencyproofview",3]],[[],["accountstatewithproofview",3]],[[],["accountstateproofview",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[],["scriptview",3]],null,null,[[]],[[],[["result",4,["amountview"]],["amountview",3]]],[[],[["accountroleview",4],["result",4,["accountroleview"]]]],[[],[["accountview",3],["result",4,["accountview"]]]],[[],[["preburnqueueview",3],["result",4,["preburnqueueview"]]]],[[],[["preburnwithmetadataview",3],["result",4,["preburnwithmetadataview"]]]],[[],[["result",4,["eventview"]],["eventview",3]]],[[],[["result",4,["eventwithproofview"]],["eventwithproofview",3]]],[[],[["eventbyversionwithproofview",3],["result",4,["eventbyversionwithproofview"]]]],[[],[["result",4,["eventdataview"]],["eventdataview",4]]],[[],[["result",4,["metadataview"]],["metadataview",3]]],[[],[["result",4,["bytesview"]],["bytesview",3]]],[[],[["moveabortexplanationview",3],["result",4,["moveabortexplanationview"]]]],[[],[["result",4,["vmstatusview"]],["vmstatusview",4]]],[[],[["transactionview",3],["result",4,["transactionview"]]]],[[],[["result",4,["transactionlistview"]],["transactionlistview",3]]],[[],[["result",4,["transactionswithproofsview"]],["transactionswithproofsview",3]]],[[],[["result",4,["transactionsproofsview"]],["transactionsproofsview",3]]],[[],[["result",4,["accounttransactionswithproofview"]],["accounttransactionswithproofview",3]]],[[],[["transactiondataview",4],["result",4,["transactiondataview"]]]],[[],[["scriptview",3],["result",4,["scriptview"]]]],[[],[["currencyinfoview",3],["result",4,["currencyinfoview"]]]],[[],[["result",4,["stateproofview"]],["stateproofview",3]]],[[],[["result",4,["accumulatorconsistencyproofview"]],["accumulatorconsistencyproofview",3]]],[[],[["result",4,["accountstatewithproofview"]],["accountstatewithproofview",3]]],[[],[["accountstateproofview",3],["result",4,["accountstateproofview"]]]],null,null,[[],["transactionlistview",3]],[[]],[[]],null,[[["amountview",3]],["bool",15]],[[["accountroleview",4]],["bool",15]],[[["accountview",3]],["bool",15]],[[["preburnqueueview",3]],["bool",15]],[[["preburnwithmetadataview",3]],["bool",15]],[[["eventview",3]],["bool",15]],[[["eventwithproofview",3]],["bool",15]],[[["eventbyversionwithproofview",3]],["bool",15]],[[["eventdataview",4]],["bool",15]],[[["metadataview",3]],["bool",15]],[[["bytesview",3]],["bool",15]],[[["moveabortexplanationview",3]],["bool",15]],[[["vmstatusview",4]],["bool",15]],[[["transactionview",3]],["bool",15]],[[["transactionlistview",3]],["bool",15]],[[["transactionswithproofsview",3]],["bool",15]],[[["transactionsproofsview",3]],["bool",15]],[[["accounttransactionswithproofview",3]],["bool",15]],[[["transactiondataview",4]],["bool",15]],[[["scriptview",3]],["bool",15]],[[["currencyinfoview",3]],["bool",15]],[[["stateproofview",3]],["bool",15]],[[["accumulatorconsistencyproofview",3]],["bool",15]],[[["accountstatewithproofview",3]],["bool",15]],[[["accountstateproofview",3]],["bool",15]],null,null,null,[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],null,[[]],[[]],[[["accountrole",4]],["accountroleview",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bytesview",3]],[[["vec",3,["u8","global"]],["u8",15],["global",3]],["bytesview",3]],[[]],[[]],[[["keptvmstatus",4]],["vmstatusview",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["transaction",4]],["transactiondataview",4]],[[["scriptfunction",3]],["scriptview",3]],[[["script",3]],["scriptview",3]],[[]],[[]],[[["currencyinforesource",3]],["currencyinfoview",3]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["box",3,["global"]],["global",3]]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["amountview",3]],["bool",15]],[[["accountroleview",4]],["bool",15]],[[["accountview",3]],["bool",15]],[[["preburnqueueview",3]],["bool",15]],[[["preburnwithmetadataview",3]],["bool",15]],[[["eventview",3]],["bool",15]],[[["eventwithproofview",3]],["bool",15]],[[["eventbyversionwithproofview",3]],["bool",15]],[[["eventdataview",4]],["bool",15]],[[["metadataview",3]],["bool",15]],[[["bytesview",3]],["bool",15]],[[["moveabortexplanationview",3]],["bool",15]],[[["vmstatusview",4]],["bool",15]],[[["transactionview",3]],["bool",15]],[[["transactionlistview",3]],["bool",15]],[[["transactionswithproofsview",3]],["bool",15]],[[["transactionsproofsview",3]],["bool",15]],[[["accounttransactionswithproofview",3]],["bool",15]],[[["transactiondataview",4]],["bool",15]],[[["scriptview",3]],["bool",15]],[[["currencyinfoview",3]],["bool",15]],[[["stateproofview",3]],["bool",15]],[[["accumulatorconsistencyproofview",3]],["bool",15]],[[["accountstatewithproofview",3]],["bool",15]],[[["accountstateproofview",3]],["bool",15]],[[["btreemap",3,["identifier","balanceresource"]],["identifier",3],["balanceresource",3],["u64",15],["freezingbit",3],["accountresource",3],["accountaddress",3],["accountrole",4]],["accountview",3]],[[["string",3],["global",3],["vec",3,["preburnwithmetadataview","global"]],["preburnwithmetadataview",3]],["preburnqueueview",3]],[[["u64",15],["u8",15],["hashvalue",3]],["metadataview",3]],[[],["bytesview",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["eventview","error"]],["eventview",3],["error",3]]],[[],["result",4]],[[["eventwithproof",3]],[["result",4,["eventwithproofview","error"]],["eventwithproofview",3],["error",3]]],[[],["result",4]],[[["eventbyversionwithproof",3]],[["eventbyversionwithproofview",3],["result",4,["eventbyversionwithproofview"]]]],[[],["result",4]],[[["contractevent",4]],[["eventdataview",4],["error",3],["result",4,["eventdataview","error"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["transactioninfo",3],["accounttransactionswithproof",3,["transactioninfo"]]],[["result",4,["transactionlistview"]],["transactionlistview",3]]],[[["transactioninfo",3],["transactionlistwithproof",3,["transactioninfo"]]],[["result",4,["transactionlistview"]],["transactionlistview",3]]],[[],["result",4]],[[["transactionlistwithproof",3]],[["result",4,["transactionswithproofsview"]],["transactionswithproofsview",3]]],[[],["result",4]],[[["transactioninfolistwithproof",3]],[["result",4,["transactionsproofsview"]],["transactionsproofsview",3]]],[[["accounttransactionswithproof",3]],[["accounttransactionswithproofview",3],["result",4,["accounttransactionswithproofview"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["stateproof",3]],[["result",4,["stateproofview"]],["stateproofview",3]]],[[["accumulatorconsistencyproof",3]],[["accumulatorconsistencyproofview",3],["result",4,["accumulatorconsistencyproofview"]]]],[[],["result",4]],[[["accountstatewithproof",3,["transactioninfo"]],["transactioninfo",3]],[["result",4,["accountstatewithproofview","error"]],["error",3],["accountstatewithproofview",3]]],[[],["result",4]],[[["accountstateproof",3,["transactioninfo"]],["transactioninfo",3]],[["error",3],["result",4,["accountstateproofview","error"]],["accountstateproofview",3]]],[[],["result",4]],[[["accountaddress",3],["accountstate",3],["u64",15]],[["accountview",3],["result",4,["accountview","error"]],["error",3]]],[[["u64",15],["transaction",4],["contractevent",4],["global",3],["vec",3,["contractevent","global"]]],[["transactionview",3],["result",4,["transactionview","error"]],["error",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u64",15]],[["result",4,["transactionlistwithproof","error"]],["error",3],["transactionlistwithproof",3,["transactioninfo"]]]],null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["scriptview",3]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["accountstate",3]],[["result",4,["error"]],["error",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"AccountAddress"],[3,"SignedTransaction"],[3,"BroadcastingClient"],[4,"ServerCode"],[4,"InvalidRequestCode"],[4,"ErrorData"],[3,"JsonRpcError"],[13,"StatusCode"],[3,"TransactionListView"],[4,"EventDataView"],[4,"TransactionDataView"],[4,"AccountRoleView"],[4,"VMStatusView"],[3,"MetadataView"],[3,"AccountView"],[3,"AmountView"],[3,"ScriptView"],[3,"BytesView"],[3,"AccountStateWithProofView"],[3,"PreburnQueueView"],[3,"PreburnWithMetadataView"],[3,"EventView"],[3,"EventWithProofView"],[3,"EventByVersionWithProofView"],[3,"MoveAbortExplanationView"],[3,"TransactionView"],[3,"TransactionsWithProofsView"],[3,"TransactionsProofsView"],[3,"AccountTransactionsWithProofView"],[3,"CurrencyInfoView"],[3,"StateProofView"],[3,"AccumulatorConsistencyProofView"],[3,"AccountStateProofView"],[13,"ParentVASP"],[13,"DesignatedDealer"],[13,"ChildVASP"],[13,"TreasuryCompliance"],[13,"VASPDomain"],[13,"Burn"],[13,"CancelBurn"],[13,"Mint"],[13,"Preburn"],[13,"ReceivedPayment"],[13,"SentPayment"],[13,"ReceivedMint"],[13,"Unknown"],[13,"AdminTransaction"],[13,"CreateAccount"],[13,"ToXDXExchangeRateUpdate"],[13,"NewEpoch"],[13,"BaseUrlRotation"],[13,"ComplianceKeyRotation"],[13,"NewBlock"],[13,"UserTransaction"],[13,"BlockMetadata"],[13,"MoveAbort"],[13,"ExecutionFailure"]]},\
"diem_json_rpc_types":{"doc":"","t":[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,12,12,13,4,7,13,13,13,4,3,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,3,13,3,13,3,13,3,13,3,13,3,13,3,3,13,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,3,4,3,13,3,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,17,17,17,11,11,11,11,11,12,12,12,12,11,11,12,11,12,11,12,11,11,11,11,11,11,11,0,0,3,4,4,13,13,3,13,13,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,13,3,4,3,13,4,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,12,12,12,4,3,3,3,3,3,13,3,13,13,13,3,13,13,13,13,3,13,13,3,4,3,3,13,13,3,13,13,13,3,13,13,13,13,13,3,3,13,13,13,3,13,3,13,4,3,3,3,3,13,13,13,13,13,13,13,13,4,13,13,12,12,12,12,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["GetAccount","GetAccountStateWithProof","GetAccountTransaction","GetAccountTransactions","GetAccountTransactionsWithProofs","GetAccumulatorConsistencyProof","GetCurrencies","GetEventByVersionWithProof","GetEvents","GetEventsWithProofs","GetMetadata","GetNetworkStatus","GetResources","GetStateProof","GetTransactions","GetTransactionsWithProofs","Id","JsonRpcVersion","Method","Number","String","Submit","V2","as_str","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","errors","fmt","fmt","fmt","fmt","from","from","from","hash","hash","into","into","into","ne","partial_cmp","request","response","serialize","serialize","serialize","stream","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","views","vzip","vzip","vzip","0","0","DefaultServerError","ErrorData","INTERNAL_ERRORS","InvalidFormat","InvalidParams","InvalidRequest","InvalidRequestCode","JsonRpcError","MempoolInvalidSeqNumber","MempoolInvalidUpdate","MempoolIsFull","MempoolTooManyTransactions","MempoolUnknownError","MempoolVmError","MethodNotFound","ParseError","ServerCode","StatusCode","VmDeserializationError","VmExecutionError","VmInvariantViolationError","VmUnknownError","VmValidationError","VmVerificationError","as_status_code","as_str","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","code","code_as_str","data","deserialize","deserialize","fmt","fmt","fmt","from","from","from","from","from","from","from","from_i64","from_u64","internal_error","into","into","into","into","invalid_format","invalid_param","invalid_params","invalid_params_size","invalid_request","invalid_request_with_data","invalid_request_with_msg","is_internal_error","mempool_error","message","method_not_found","serialize","serialize","serialize","test_only_hash","test_only_hash","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vm_status","vzip","vzip","vzip","vzip","0","GetAccount","GetAccountParams","GetAccountStateWithProof","GetAccountStateWithProofParams","GetAccountTransaction","GetAccountTransactionParams","GetAccountTransactions","GetAccountTransactionsParams","GetAccountTransactionsWithProofs","GetAccountTransactionsWithProofsParams","GetAccumulatorConsistencyProof","GetAccumulatorConsistencyProofParams","GetCurrencies","GetCurrenciesParams","GetEventByVersionWithProof","GetEventByVersionWithProof","GetEvents","GetEventsParams","GetEventsWithProofs","GetEventsWithProofsParams","GetMetadata","GetMetadataParams","GetNetworkStatus","GetNetworkStatusParams","GetResources","GetResourcesParams","GetStateProof","GetStateProofParams","GetTransactions","GetTransactionsParams","GetTransactionsWithProofs","GetTransactionsWithProofsParams","JsonRpcRequest","MethodRequest","RawJsonRpcRequest","Submit","SubmitParams","account","account","account","account","account","account","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client_known_version","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_value","from_value","id","id","include_events","include_events","include_events","include_events","include_events","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","jsonrpc","key","key","key","ledger_version","ledger_version","ledger_version","limit","limit","limit","limit","limit","limit","method","method","method_request","params","sequence_number","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","start","start","start","start","start_version","start_version","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","version","version","version","version","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","JsonRpcResponse","X_DIEM_CHAIN_ID","X_DIEM_TIMESTAMP_USEC_ID","X_DIEM_VERSION_ID","borrow","borrow_mut","clone","clone_into","deserialize","diem_chain_id","diem_ledger_timestampusec","diem_ledger_version","error","fmt","from","id","into","jsonrpc","new","result","serialize","test_only_hash","to_owned","try_from","try_into","type_id","vzip","request","response","StreamJsonRpcRequest","StreamMethod","StreamMethodRequest","SubscribeToEvents","SubscribeToEvents","SubscribeToEventsParams","SubscribeToTransactions","SubscribeToTransactions","SubscribeToTransactionsParams","Unsubscribe","Unsubscribe","as_str","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","deserialize","eq","equivalent","event_key","event_seq_num","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","from_value","hash","id","include_events","into","into","into","into","into","method","method_name","method_name","method_request","new","serialize","serialize","serialize","serialize","serialize","starting_version","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","0","0","Event","OK","StreamJsonRpcResponse","StreamJsonRpcResponseView","SubscribeResult","SubscribeResult","SubscriptionResult","Transaction","UnsubscribeResult","UnsubscribeResult","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","error","error","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","id","into","into","into","into","into","jsonrpc","ne","ne","ne","ok","ok","parse_result","result","result","serialize","serialize","serialize","serialize","serialize","status","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_owned","transaction_version","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unsubscribe","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","AccountRoleView","AccountStateProofView","AccountStateWithProofView","AccountTransactionsWithProofView","AccountView","AccumulatorConsistencyProofView","AdminTransaction","AmountView","BaseUrlRotation","BlockMetadata","Burn","BytesView","CancelBurn","ChildVASP","ComplianceKeyRotation","CreateAccount","CurrencyInfoView","DeserializationError","DesignatedDealer","EventByVersionWithProofView","EventDataView","EventView","EventWithProofView","Executed","ExecutionFailure","MetadataView","Mint","MiscellaneousError","MoveAbort","MoveAbortExplanationView","NewBlock","NewEpoch","OutOfGas","ParentVASP","Preburn","PreburnQueueView","PreburnWithMetadataView","PublishingFailure","ReceivedMint","ReceivedPayment","ScriptView","SentPayment","StateProofView","ToXDXExchangeRateUpdate","TransactionDataView","TransactionListView","TransactionView","TransactionsProofsView","TransactionsWithProofsView","TreasuryCompliance","Unknown","Unknown","Unknown","UnknownToClient","UnknownTransaction","UserTransaction","VASPDomain","VMStatusView","VerificationError","WriteSet","accumulator_root_hash","address","amount","amount","arguments","arguments_bcs","as_ref","authentication_key","balances","blob","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","burn_events_key","bytes","cancel_burn_events_key","category","category_description","chain_id","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","code","currency","currency","currency","data","default","delegated_key_rotation_capability","delegated_withdrawal_capability","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diem_version","dual_attestation_limit","empty","encode_hex","encode_hex_upper","epoch_change_proof","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","event_with_proof","events","exchange_rate_update_events_key","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fractional_part","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","function_name","gas_used","hash","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","is_executed","is_frozen","key","ledger_consistency_proof","ledger_consistency_proof","ledger_info_to_transaction_info_proof","ledger_info_to_transaction_infos_proof","ledger_info_with_signatures","lower_bound_incl","metadata","metadata","metadata_signature","mint_events_key","module_address","module_name","module_publishing_allowed","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","preburn","preburn_events_key","preburns","proof","proofs","reason","reason_description","received_events_key","receiver","role","scaling_factor","script_hash_allow_list","sent_events_key","sequence_number","sequence_number","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialized_events","serialized_transactions","serialized_txns_with_proofs","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_xdx_exchange_rate","transaction","transaction_info","transaction_info_to_account_proof","transaction_infos","transaction_version","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_account_state","try_from_tx_and_events","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_txn_list_with_proof","type","type_arguments","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unknown","upper_bound_excl","version","version","version","version","vm_status","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_diem_root","base_url","base_url","base_url_rotation_events_key","base_url_rotation_events_key","compliance_key","compliance_key","compliance_key_rotation_events_key","compliance_key_rotation_events_key","expiration_time","expiration_time","human_name","human_name","num_children","parent_vasp_address","preburn_balances","preburn_queues","received_mint_events_key","vasp_domain_events_key","vasp_domains","address","amount","amount","amount","amount","amount","amount","amount","bytes","committed_timestamp_secs","created_address","currency_code","destination_address","domain","epoch","metadata","metadata","new_base_url","new_compliance_public_key","new_to_xdx_exchange_rate","preburn_address","preburn_address","preburn_address","proposed_time","proposer","receiver","receiver","removed","role_id","round","sender","sender","time_rotated_seconds","time_rotated_seconds","chain_id","expiration_timestamp_secs","gas_currency","gas_unit_price","max_gas_amount","public_key","script","script_bytes","script_hash","secondary_public_keys","secondary_signature_schemes","secondary_signatures","secondary_signers","sender","sequence_number","signature","signature_scheme","timestamp_usecs","abort_code","code_offset","explanation","function_index","location","location"],"q":["diem_json_rpc_types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_json_rpc_types::Id","","diem_json_rpc_types::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_json_rpc_types::errors::ErrorData","diem_json_rpc_types::requestdiem_json_rpc_types::request::MethodRequest","","","","","","","","","","","","","","","","","diem_json_rpc_types::response","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_json_rpc_types::stream","","diem_json_rpc_types::stream::request","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_json_rpc_types::stream::request::StreamMethodRequest","","diem_json_rpc_types::stream::response","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_json_rpc_types::stream::response::StreamJsonRpcResponseView","","","","diem_json_rpc_types::viewsdiem_json_rpc_types::views::AccountRoleView","","","","","","","","","","","","","","","","","","","diem_json_rpc_types::views::EventDataView","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_json_rpc_types::views::TransactionDataView","","","","","","","","","","","","","","","","","","diem_json_rpc_types::views::VMStatusView","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","Numeric id","String id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","list of server internal errors","","","","JSON RPC server error codes for invalid request","","","","","","","","","","Custom JSON RPC server error codes Ranges from -32000 to …he Unknown variant is deserialized by the client if it …i":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,2,2,1,3,1,3,2,1,3,2,1,3,2,1,3,2,1,2,3,2,1,3,2,1,2,1,0,3,2,2,1,3,2,1,2,1,3,2,1,2,2,0,0,3,2,1,0,3,2,1,3,2,1,2,3,2,1,3,2,1,3,2,1,0,3,2,1,4,5,6,0,0,7,7,7,0,0,6,6,6,6,6,6,7,7,0,8,6,6,6,6,6,6,9,7,6,7,8,9,6,7,8,9,8,9,8,9,9,9,9,8,9,8,9,9,6,7,8,9,9,9,9,7,7,9,6,7,8,9,9,9,9,9,9,9,9,0,9,9,9,8,9,9,8,9,8,9,9,6,7,8,9,6,7,8,9,6,7,8,9,9,6,7,8,9,10,11,0,11,0,11,0,11,0,11,0,11,0,11,0,0,11,11,0,11,0,11,0,11,0,11,0,11,0,11,0,11,0,0,0,0,11,0,12,13,14,15,16,17,18,19,11,20,21,12,22,13,14,23,24,25,15,26,27,16,28,17,29,30,18,19,11,20,21,12,22,13,14,23,24,25,15,26,27,16,28,17,29,30,27,18,11,20,21,12,22,13,14,23,24,25,15,26,27,16,28,17,29,30,18,11,20,21,12,22,13,14,23,24,25,15,26,27,16,28,17,29,30,20,18,19,11,20,21,12,22,13,14,23,24,25,15,26,27,16,28,17,29,30,18,19,11,20,21,12,22,13,14,23,24,25,15,26,27,16,28,17,29,30,18,19,11,20,21,12,22,13,14,23,24,25,15,26,27,16,28,17,29,30,18,11,18,19,22,13,14,28,17,18,19,11,20,21,12,22,13,14,23,24,25,15,26,27,16,28,17,29,30,19,23,29,30,27,16,17,22,14,23,28,17,29,11,19,18,19,13,18,19,11,20,21,12,22,13,14,23,24,25,15,26,27,16,28,17,29,30,14,23,17,29,22,28,18,19,11,20,21,12,22,13,14,23,24,25,15,26,27,16,28,17,29,30,18,11,20,21,12,22,13,14,23,24,25,15,26,27,16,28,17,29,30,18,19,11,20,21,12,22,13,14,23,24,25,15,26,27,16,28,17,29,30,18,19,11,20,21,12,22,13,14,23,24,25,15,26,27,16,28,17,29,30,18,19,11,20,21,12,22,13,14,23,24,25,15,26,27,16,28,17,29,30,21,12,15,26,16,30,18,19,11,20,21,12,22,13,14,23,24,25,15,26,27,16,28,17,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,0,0,0,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,0,0,0,0,49,50,0,49,50,0,49,50,50,51,49,50,52,53,51,49,50,52,53,51,49,50,52,53,51,49,50,52,53,51,49,50,52,53,50,50,52,52,51,49,50,52,53,51,49,50,52,53,51,49,50,51,53,51,49,50,52,53,49,51,49,51,51,51,49,50,52,53,53,51,49,50,52,53,51,49,50,52,53,51,49,50,52,53,51,49,50,52,53,51,49,50,52,53,51,49,50,52,53,54,55,56,57,0,0,0,56,0,56,0,56,56,58,57,59,60,56,58,57,59,60,56,58,57,59,60,56,58,57,59,60,56,58,57,59,60,56,57,59,60,58,58,56,58,57,59,60,56,58,57,59,60,58,58,56,58,57,59,60,58,56,59,60,59,60,58,58,58,56,58,57,59,60,60,56,58,57,59,60,56,58,57,59,60,60,56,58,57,59,60,56,58,57,59,60,56,58,57,59,60,59,56,58,57,59,60,61,62,63,64,65,0,0,0,0,0,0,66,0,66,67,66,0,66,68,66,66,0,69,68,0,0,0,0,69,69,0,66,69,69,0,66,66,69,68,66,0,0,69,66,66,0,66,0,66,0,0,0,0,0,68,68,66,69,66,67,67,66,0,69,67,70,71,72,73,73,73,74,71,71,75,72,68,71,76,77,78,79,80,66,70,74,81,69,82,65,83,84,85,67,73,86,87,88,75,89,72,68,71,76,77,78,79,80,66,70,74,81,69,82,65,83,84,85,67,73,86,87,88,75,89,86,82,86,81,81,70,72,68,71,76,77,78,79,80,66,70,74,81,69,82,65,83,84,85,67,73,86,87,88,75,89,72,68,71,76,77,78,79,80,66,70,74,81,69,82,65,83,84,85,67,73,86,87,88,75,89,73,86,72,76,73,78,73,71,71,74,72,68,71,76,77,78,79,80,66,70,74,81,69,82,65,83,84,85,67,73,86,87,88,75,89,70,70,65,74,74,87,72,68,71,76,77,78,79,80,66,70,74,81,69,82,65,83,84,85,67,73,86,87,88,75,89,79,82,86,72,68,71,76,77,78,79,80,66,70,74,74,81,81,69,69,82,65,83,84,85,67,73,86,87,88,75,89,86,72,68,68,71,76,77,78,79,80,66,70,74,74,74,81,69,69,82,65,83,84,85,67,67,73,73,73,86,86,87,88,75,89,73,82,82,74,72,68,71,76,77,78,79,80,66,70,74,81,69,82,65,83,84,85,67,73,86,87,88,75,89,74,69,71,78,87,88,89,84,87,80,77,73,73,86,73,73,70,72,68,71,76,77,78,79,80,66,70,74,81,69,82,65,83,84,85,67,73,86,87,88,75,89,71,76,70,74,77,86,76,75,83,81,81,71,73,71,86,70,71,71,78,72,68,71,76,77,78,79,80,66,70,74,81,69,82,65,83,84,85,67,73,86,87,88,75,89,83,83,85,72,68,71,76,77,78,79,80,66,70,74,81,69,82,65,83,84,85,67,73,86,87,88,75,89,70,72,68,71,76,77,78,79,80,66,70,74,81,69,82,65,83,84,85,67,73,86,87,88,75,89,74,81,69,86,82,89,89,84,78,72,68,71,76,77,78,78,79,79,80,80,66,66,70,74,81,69,82,65,65,65,83,83,84,84,85,85,67,73,86,87,87,88,88,75,75,89,89,71,82,72,68,71,76,77,78,79,80,66,70,74,81,69,82,65,83,84,85,67,73,86,87,88,75,89,83,73,73,72,68,71,76,77,78,79,80,66,70,74,81,69,82,65,83,84,85,67,73,86,87,88,75,89,73,80,71,70,82,75,82,72,68,71,76,77,78,79,80,66,70,74,81,69,82,65,83,84,85,67,73,86,87,88,75,89,70,90,91,90,91,90,91,90,91,90,91,90,91,90,92,91,91,91,93,90,94,95,96,97,98,99,100,101,102,103,104,105,101,94,106,99,100,107,108,105,95,96,98,109,109,99,100,94,104,109,99,100,108,107,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,111,112,113,112,113,112,113],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["jsonrpcversion",4]],[[],["id",4]],[[],["method",4]],[[]],[[]],[[]],[[["id",4]],["ordering",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["jsonrpcversion",4]],["bool",15]],[[["id",4]],["bool",15]],[[["method",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["id",4]],["bool",15]],[[["id",4]],[["option",4,["ordering"]],["ordering",4]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["option",4,["statuscode"]],["statuscode",4]]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["errordata",4]],[[],["jsonrpcerror",3]],[[]],[[]],null,[[],["str",15]],null,[[],["result",4]],[[],["result",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["error",4]]],[[["error",3]]],[[["error",3]]],[[["i64",15]],["option",4]],[[["u64",15]],["option",4]],[[["string",3]]],[[]],[[]],[[]],[[]],[[]],[[["str",15]]],[[["str",15]]],[[["string",3]]],[[]],[[["option",4,["errordata"]],["errordata",4]]],[[["string",3]]],[[["i16",15]],["bool",15]],[[["mempoolstatus",3]],["result",6]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["value",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["statuscode",4]]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["jsonrpcrequest",3]],[[],["methodrequest",4]],[[],["submitparams",3]],[[],["getmetadataparams",3]],[[],["getaccountparams",3]],[[],["gettransactionsparams",3]],[[],["getaccounttransactionparams",3]],[[],["getaccounttransactionsparams",3]],[[],["geteventsparams",3]],[[],["getcurrenciesparams",3]],[[],["getnetworkstatusparams",3]],[[],["getresourcesparams",3]],[[],["getstateproofparams",3]],[[],["getaccumulatorconsistencyproofparams",3]],[[],["getaccountstatewithproofparams",3]],[[],["gettransactionswithproofsparams",3]],[[],["getaccounttransactionswithproofsparams",3]],[[],["geteventswithproofsparams",3]],[[],["geteventbyversionwithproof",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["value",4]],["result",4]],[[["method",4],["value",4]],[["result",4,["error"]],["error",3]]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["method",4]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["jsonrpcresponse",3]],[[]],[[],["result",4]],null,null,null,null,[[["formatter",3]],["result",6]],[[]],null,[[]],null,[[["u64",15],["chainid",3]]],null,[[],["result",4]],[[],["hashvalue",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["streamjsonrpcrequest",3]],[[],["streammethodrequest",4]],[[],["streammethod",4]],[[],["subscribetoeventsparams",3]],[[],["subscribetotransactionsparams",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["streammethod",4]],["bool",15]],[[],["bool",15]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["result",4]],[[["streammethod",4],["value",4]],[["result",4,["error"]],["error",3]]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[],["streammethod",4]],[[],["str",15]],[[],["str",15]],null,[[["id",4],["streammethodrequest",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["streamjsonrpcresponseview",4]],[[],["streamjsonrpcresponse",3]],[[],["subscriptionresult",4]],[[],["unsubscriberesult",3]],[[],["subscriberesult",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["streamjsonrpcresponseview",4]],["bool",15]],[[["subscriptionresult",4]],["bool",15]],[[["unsubscriberesult",3]],["bool",15]],[[["subscriberesult",3]],["bool",15]],[[["id",4],["jsonrpcerror",3],["option",4,["id"]]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],[["result",4,["error"]],["error",3]]],null,[[]],[[]],[[]],[[]],[[]],null,[[["streamjsonrpcresponseview",4]],["bool",15]],[[["unsubscriberesult",3]],["bool",15]],[[["subscriberesult",3]],["bool",15]],[[]],[[["u64",15]]],[[["streammethod",4]],[["option",4,["streamjsonrpcresponseview"]],["error",3],["result",4,["option","error"]]]],[[["id",4],["option",4,["value"]],["option",4,["id"]],["value",4]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[],["amountview",3]],[[],["accountroleview",4]],[[],["accountview",3]],[[],["preburnqueueview",3]],[[],["preburnwithmetadataview",3]],[[],["eventview",3]],[[],["eventwithproofview",3]],[[],["eventbyversionwithproofview",3]],[[],["eventdataview",4]],[[],["metadataview",3]],[[],["bytesview",3]],[[],["moveabortexplanationview",3]],[[],["vmstatusview",4]],[[],["transactionview",3]],[[],["transactionlistview",3]],[[],["transactionswithproofsview",3]],[[],["transactionsproofsview",3]],[[],["accounttransactionswithproofview",3]],[[],["transactiondataview",4]],[[],["scriptview",3]],[[],["currencyinfoview",3]],[[],["stateproofview",3]],[[],["accumulatorconsistencyproofview",3]],[[],["accountstatewithproofview",3]],[[],["accountstateproofview",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[],["scriptview",3]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[]],[[]],[[]],null,[[["amountview",3]],["bool",15]],[[["accountroleview",4]],["bool",15]],[[["accountview",3]],["bool",15]],[[["preburnqueueview",3]],["bool",15]],[[["preburnwithmetadataview",3]],["bool",15]],[[["eventview",3]],["bool",15]],[[["eventwithproofview",3]],["bool",15]],[[["eventbyversionwithproofview",3]],["bool",15]],[[["eventdataview",4]],["bool",15]],[[["metadataview",3]],["bool",15]],[[["bytesview",3]],["bool",15]],[[["moveabortexplanationview",3]],["bool",15]],[[["vmstatusview",4]],["bool",15]],[[["transactionview",3]],["bool",15]],[[["transactionlistview",3]],["bool",15]],[[["transactionswithproofsview",3]],["bool",15]],[[["transactionsproofsview",3]],["bool",15]],[[["accounttransactionswithproofview",3]],["bool",15]],[[["transactiondataview",4]],["bool",15]],[[["scriptview",3]],["bool",15]],[[["currencyinfoview",3]],["bool",15]],[[["stateproofview",3]],["bool",15]],[[["accumulatorconsistencyproofview",3]],["bool",15]],[[["accountstatewithproofview",3]],["bool",15]],[[["accountstateproofview",3]],["bool",15]],null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[]],[[]],[[["accountrole",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["vec",3,["u8"]],["u8",15]]],[[]],[[]],[[["keptvmstatus",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["transaction",4]]],[[]],[[["script",3]]],[[["scriptfunction",3]]],[[]],[[["currencyinforesource",3]],["currencyinfoview",3]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["box",3]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["amountview",3]],["bool",15]],[[["accountroleview",4]],["bool",15]],[[["accountview",3]],["bool",15]],[[["preburnqueueview",3]],["bool",15]],[[["preburnwithmetadataview",3]],["bool",15]],[[["eventview",3]],["bool",15]],[[["eventwithproofview",3]],["bool",15]],[[["eventbyversionwithproofview",3]],["bool",15]],[[["eventdataview",4]],["bool",15]],[[["metadataview",3]],["bool",15]],[[["bytesview",3]],["bool",15]],[[["moveabortexplanationview",3]],["bool",15]],[[["vmstatusview",4]],["bool",15]],[[["transactionview",3]],["bool",15]],[[["transactionlistview",3]],["bool",15]],[[["transactionswithproofsview",3]],["bool",15]],[[["transactionsproofsview",3]],["bool",15]],[[["accounttransactionswithproofview",3]],["bool",15]],[[["transactiondataview",4]],["bool",15]],[[["scriptview",3]],["bool",15]],[[["currencyinfoview",3]],["bool",15]],[[["stateproofview",3]],["bool",15]],[[["accumulatorconsistencyproofview",3]],["bool",15]],[[["accountstatewithproofview",3]],["bool",15]],[[["accountstateproofview",3]],["bool",15]],[[["accountaddress",3],["accountrole",4],["accountresource",3],["u64",15],["identifier",3],["freezingbit",3],["balanceresource",3],["btreemap",3,["identifier","balanceresource"]]]],[[["preburnwithmetadataview",3],["string",3],["vec",3,["preburnwithmetadataview"]]]],[[["u64",15],["u8",15],["hashvalue",3]]],[[["into",8,["box"]],["box",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",6]],[[],["result",4]],[[["eventwithproof",6]],["result",6]],[[],["result",4]],[[["eventbyversionwithproof",6]],["result",6]],[[],["result",4]],[[["contractevent",4]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["transactionlistwithproof",6]],["result",6]],[[["accounttransactionswithproof",6]],["result",6]],[[],["result",4]],[[],["result",4]],[[["transactionlistwithproof",6]],["result",6]],[[["transactioninfolistwithproof",6]],["result",6]],[[],["result",4]],[[],["result",4]],[[["accounttransactionswithproof",6]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["stateproof",3]],["result",6]],[[],["result",4]],[[["accumulatorconsistencyproof",3]],["result",6]],[[],["result",4]],[[["accountstatewithproof",6]],[["result",6,["accountstatewithproofview","error"]],["error",3],["accountstatewithproofview",3]]],[[],["result",4]],[[["accountstateproof",6]],[["accountstateproofview",3],["error",3],["result",6,["accountstateproofview","error"]]]],[[],["result",4]],[[["accountstate",3],["u64",15],["accountaddress",3]],["result",6]],[[["u64",15],["transaction",4],["vec",3,["contractevent"]],["contractevent",4],["transactioninfotrait",8]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u64",15]],[["transactionlistwithproof",6],["result",6,["transactionlistwithproof"]]]],null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["accountstate",3]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"Method"],[4,"Id"],[4,"JsonRpcVersion"],[13,"Number"],[13,"String"],[4,"ServerCode"],[4,"InvalidRequestCode"],[4,"ErrorData"],[3,"JsonRpcError"],[13,"StatusCode"],[4,"MethodRequest"],[3,"GetAccountParams"],[3,"GetAccountTransactionParams"],[3,"GetAccountTransactionsParams"],[3,"GetResourcesParams"],[3,"GetAccountStateWithProofParams"],[3,"GetAccountTransactionsWithProofsParams"],[3,"JsonRpcRequest"],[3,"RawJsonRpcRequest"],[3,"SubmitParams"],[3,"GetMetadataParams"],[3,"GetTransactionsParams"],[3,"GetEventsParams"],[3,"GetCurrenciesParams"],[3,"GetNetworkStatusParams"],[3,"GetStateProofParams"],[3,"GetAccumulatorConsistencyProofParams"],[3,"GetTransactionsWithProofsParams"],[3,"GetEventsWithProofsParams"],[3,"GetEventByVersionWithProof"],[13,"Submit"],[13,"GetMetadata"],[13,"GetAccount"],[13,"GetTransactions"],[13,"GetAccountTransaction"],[13,"GetAccountTransactions"],[13,"GetEvents"],[13,"GetCurrencies"],[13,"GetNetworkStatus"],[13,"GetResources"],[13,"GetStateProof"],[13,"GetAccumulatorConsistencyProof"],[13,"GetAccountStateWithProof"],[13,"GetTransactionsWithProofs"],[13,"GetAccountTransactionsWithProofs"],[13,"GetEventsWithProofs"],[13,"GetEventByVersionWithProof"],[3,"JsonRpcResponse"],[4,"StreamMethodRequest"],[4,"StreamMethod"],[3,"StreamJsonRpcRequest"],[3,"SubscribeToEventsParams"],[3,"SubscribeToTransactionsParams"],[13,"SubscribeToTransactions"],[13,"SubscribeToEvents"],[4,"StreamJsonRpcResponseView"],[4,"SubscriptionResult"],[3,"StreamJsonRpcResponse"],[3,"UnsubscribeResult"],[3,"SubscribeResult"],[13,"Transaction"],[13,"Event"],[13,"SubscribeResult"],[13,"UnsubscribeResult"],[3,"TransactionListView"],[4,"EventDataView"],[4,"TransactionDataView"],[4,"AccountRoleView"],[4,"VMStatusView"],[3,"MetadataView"],[3,"AccountView"],[3,"AmountView"],[3,"ScriptView"],[3,"BytesView"],[3,"AccountStateWithProofView"],[3,"PreburnQueueView"],[3,"PreburnWithMetadataView"],[3,"EventView"],[3,"EventWithProofView"],[3,"EventByVersionWithProofView"],[3,"MoveAbortExplanationView"],[3,"TransactionView"],[3,"TransactionsWithProofsView"],[3,"TransactionsProofsView"],[3,"AccountTransactionsWithProofView"],[3,"CurrencyInfoView"],[3,"StateProofView"],[3,"AccumulatorConsistencyProofView"],[3,"AccountStateProofView"],[13,"ParentVASP"],[13,"DesignatedDealer"],[13,"ChildVASP"],[13,"TreasuryCompliance"],[13,"VASPDomain"],[13,"Burn"],[13,"CancelBurn"],[13,"Mint"],[13,"Preburn"],[13,"ReceivedPayment"],[13,"SentPayment"],[13,"ReceivedMint"],[13,"Unknown"],[13,"AdminTransaction"],[13,"CreateAccount"],[13,"ToXDXExchangeRateUpdate"],[13,"NewEpoch"],[13,"BaseUrlRotation"],[13,"ComplianceKeyRotation"],[13,"NewBlock"],[13,"UserTransaction"],[13,"BlockMetadata"],[13,"MoveAbort"],[13,"ExecutionFailure"]]},\
"diem_key_manager":{"doc":"The purpose of KeyManager is to rotate consensus key (and …","t":[4,13,13,13,4,13,3,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,5,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,17,17,17,17,17,17,17,5,5,8,3,11,11,11,11,10,11,11,11,10,11,11,10,11,10,11,10,11,10,11,10,11,11,11,11,11,11,13,13,13,13,13,13,4,4,3,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Action","ConfigInfoKeyMismatch","ConfigStorageKeyMismatch","DataDoesNotExist","Error","FullKeyRotation","KeyManager","LivenessError","MissingAccountAddress","NoAction","StorageError","SubmitKeyRotationTransaction","UnknownError","ValidatorInfoNotFound","WaitForReconfiguration","WaitForTransactionExecution","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_rotation_transaction","compare_info_to_config","compare_storage_to_config","counters","diem_interface","diem_timestamp","eq","eq","evaluate_status","execute","execute_once","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","last_reconfiguration","last_rotation","logging","ne","new","perform_action","resubmit_consensus_key_transaction","rotate_consensus_key","submit_key_rotation_transaction","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0","0","0","0","0","0","0","1","1","1","1","KEYS_STILL_FRESH","LIVENESS_ERROR_ENCOUNTERED","ROTATED_IN_STORAGE","SUBMITTED_ROTATION_TRANSACTION","UNEXPECTED_ERROR_ENCOUNTERED","WAITING_ON_RECONFIGURATION","WAITING_ON_TRANSACTION_EXECUTION","increment_metric_counter","initialize_all_metric_counters","DiemInterface","JsonRpcDiemInterface","borrow","borrow_mut","clone","clone_into","diem_timestamp","diem_timestamp","from","into","last_reconfiguration","last_reconfiguration","new","retrieve_account_state","retrieve_account_state","retrieve_sequence_number","retrieve_sequence_number","retrieve_validator_config","retrieve_validator_config","retrieve_validator_info","retrieve_validator_info","submit_transaction","submit_transaction","to_owned","try_from","try_into","type_id","vzip","CheckKeyStatus","Error","FullKeyRotation","Initialized","KeyRotatedInStorage","KeyStillFresh","LogEntry","LogEvent","LogSchema","Pending","Sleep","Success","TransactionResubmission","TransactionSubmitted","WaitForReconfiguration","WaitForTransactionExecution","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_key","erased_serialize","erased_serialize","event","from","from","from","into","into","into","json_rpc_endpoint","liveness_error","name","new","serialize","serialize","sleep_duration","test_only_hash","test_only_hash","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unexpected_error","visit","vzip","vzip","vzip"],"q":["diem_key_manager","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_key_manager::Error","","","","","","","","","","","","diem_key_manager::counters","","","","","","","","","diem_key_manager::diem_interface","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_key_manager::logging","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Defines actions that KeyManager should perform after a …","","","","","Sufficient time has passed for another key rotation (keys …","","","","There is no need to perform a rotation (keys are still …","","Storage and the blockchain are inconsistent, submit a new …","","","The validator config and the validator set are …","Storage and the blockchain are inconsistent, wait for …","","","","","","","","","","","","","","","Evaluates the current status of the key manager by …","Begins execution of the key manager by running an infinite …","Checks the current state of the validator keys and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Metric counter states.","","","","","","","Increments a metric counter state.","Initializes all metric counter states.","This defines a generic trait used to interact with the …","This implements the DiemInterface by talking directly to …","","","","","Retrieves the current time from the blockchain, this is …","","","","Retrieves the last reconfiguration time from the …","","","Fetches the AccountState associated with a specific …","","Retrieve current sequence number for the provided account.","","Retrieves the ValidatorConfig at the specified …","","Retrieves the ValidatorInfo for the specified account from …","","Submits a transaction to the block chain and returns …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,0,2,0,1,1,2,1,2,1,1,2,2,3,2,1,3,2,1,0,3,3,0,0,3,2,1,3,3,3,2,1,1,3,2,1,1,1,1,1,3,2,1,3,3,0,1,3,3,3,3,3,1,3,2,1,3,2,1,3,2,1,3,2,1,4,5,6,7,8,9,10,11,4,5,7,8,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,13,12,12,12,13,12,12,13,12,13,12,13,12,13,12,13,12,12,12,12,12,12,14,15,14,14,14,14,0,0,0,15,14,15,14,14,14,14,16,14,15,16,14,15,14,15,14,15,16,14,15,16,16,14,15,16,14,15,16,16,16,16,14,15,16,14,15,14,15,16,14,15,16,14,15,16,14,15,16,16,16,14,15],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",15],["u8",15],["vec",3,["u8"]],["accountaddress",3],["ed25519publickey",3],["chainid",3]],["rawtransaction",3]],[[],[["error",4],["result",4,["error"]]]],[[],[["error",4],["result",4,["error"]]]],null,null,[[],[["u64",15],["error",4],["result",4,["u64","error"]]]],[[["action",4]],["bool",15]],[[["error",4]],["bool",15]],[[],[["result",4,["action","error"]],["action",4],["error",4]]],[[],[["error",4],["result",4,["error"]]]],[[],[["error",4],["result",4,["error"]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["error",3]]],[[["error",3]]],[[["error",4]]],[[["error",4]]],[[]],[[]],[[]],[[],[["u64",15],["error",4],["result",4,["u64","error"]]]],[[],[["u64",15],["error",4],["result",4,["u64","error"]]]],null,[[["error",4]],["bool",15]],[[["u64",15],["timeservice",4],["chainid",3]]],[[["action",4]],[["error",4],["result",4,["error"]]]],[[],[["error",4],["result",4,["error"]]]],[[],[["result",4,["ed25519publickey","error"]],["ed25519publickey",3],["error",4]]],[[["ed25519publickey",3]],[["result",4,["ed25519publickey","error"]],["ed25519publickey",3],["error",4]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],null,null,[[]],[[]],[[],["jsonrpcdieminterface",3]],[[]],[[],[["u64",15],["error",4],["result",4,["u64","error"]]]],[[],[["u64",15],["error",4],["result",4,["u64","error"]]]],[[]],[[]],[[],[["u64",15],["error",4],["result",4,["u64","error"]]]],[[],[["u64",15],["error",4],["result",4,["u64","error"]]]],[[["string",3]]],[[["accountaddress",3]],[["result",4,["accountstate","error"]],["accountstate",3],["error",4]]],[[["accountaddress",3]],[["result",4,["accountstate","error"]],["accountstate",3],["error",4]]],[[["accountaddress",3]],[["u64",15],["error",4],["result",4,["u64","error"]]]],[[["accountaddress",3]],[["u64",15],["error",4],["result",4,["u64","error"]]]],[[["accountaddress",3]],[["error",4],["result",4,["validatorconfig","error"]],["validatorconfig",3]]],[[["accountaddress",3]],[["error",4],["result",4,["validatorconfig","error"]],["validatorconfig",3]]],[[["accountaddress",3]],[["result",4,["validatorinfo","error"]],["error",4],["validatorinfo",3]]],[[["accountaddress",3]],[["result",4,["validatorinfo","error"]],["error",4],["validatorinfo",3]]],[[["transaction",4]],[["error",4],["result",4,["error"]]]],[[["transaction",4]],[["error",4],["result",4,["error"]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["logentry",4]],[[],["logevent",4]],[[]],[[]],[[["ed25519publickey",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[["logevent",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]]],[[["error",4]]],[[["logentry",4]]],[[["logentry",4]]],[[],["result",4]],[[],["result",4]],[[["u64",15]]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["error",4]]],[[["visitor",8]]],[[]],[[]],[[]]],"p":[[4,"Error"],[4,"Action"],[3,"KeyManager"],[13,"ConfigInfoKeyMismatch"],[13,"ConfigStorageKeyMismatch"],[13,"DataDoesNotExist"],[13,"LivenessError"],[13,"MissingAccountAddress"],[13,"StorageError"],[13,"ValidatorInfoNotFound"],[13,"UnknownError"],[3,"JsonRpcDiemInterface"],[8,"DiemInterface"],[4,"LogEntry"],[4,"LogEvent"],[3,"LogSchema"]]},\
"diem_keygen":{"doc":"","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["KeyGen","borrow","borrow_mut","fmt","from","from_os_rng","from_seed","generate_credentials_for_account_creation","generate_keypair","into","try_from","try_into","type_id","vzip"],"q":["diem_keygen","","","","","","","","","","","","",""],"d":["Ed25519 key generator.","","","","","Constructs a key generator with a random seed. The random …","Constructs a key generator with a specific seed.","Same as <code>generate_keypair</code>, but returns a tuple of …","Generate an Ed25519 key pair.","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"KeyGen"]]},\
"diem_log_derive":{"doc":"","t":[24],"n":["Schema"],"q":["diem_log_derive"],"d":[""],"i":[0],"f":[null],"p":[]},\
"diem_logger":{"doc":"This crates provides an API for logging in diem.","t":[17,13,13,13,13,13,3,3,13,13,13,3,3,13,13,13,13,13,13,13,13,13,13,13,13,3,3,4,4,3,3,13,13,8,24,4,13,13,13,13,4,8,13,13,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,14,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,0,14,11,11,11,11,11,11,11,11,11,11,11,11,11,14,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,14,10,12,12,12,3,11,11,11,11,11,11,11,11,12,12,11,5,5,11,12,11,11,11,11,13,13,3,13,13,13,13,13,13,13,13,13,13,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,11,11,11,11,11,11,11,11],"n":["CHANNEL_SIZE","ConsensusEquivocatingVote","ConsensusInvalidMessage","Debug","Debug","Debug","DiemLogger","DiemLoggerBuilder","Display","Error","Error","Event","Filter","Info","Info","InvalidBlock","InvalidConsensusProposal","InvalidConsensusRound","InvalidHealthCheckerMsg","InvalidNetworkEvent","InvalidNetworkEventHC","InvalidNetworkEventMempool","InvalidRetrievedBlock","InvalidSyncInfoMsg","InvalidTransactionMempool","Key","KeyValue","Level","LevelFilter","Logger","Metadata","NoiseHandshake","Off","Schema","Schema","SecurityEvent","Serde","StateSyncInvalidChunk","Trace","Trace","Value","Visitor","Warn","Warn","Writer","address","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","builder","channel_size","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","custom_format","debug","deserialize","deserialize","dispatch","enabled","enabled","eq","eq","eq","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","error","event","file","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_debug","from_display","from_serde","from_str","from_str","hash","hash","info","init","init_for_testing","into","into","into","into","into","into","into","into","into","into","is_async","json_log","keys_and_values","level","level","line","location","log","max","message","metadata","module_path","ne","new","new","new","new","new","partial_cmp","partial_cmp","partial_cmp","prelude","printer","read_env","remote_level","sample","sample","serialize","serialize","serialize","set_filter","set_remote_filter","target","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","trace","tracing_adapter","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","visit","visit","visit_pair","warn","write","0","0","0","JsonLogEntry","borrow","borrow_mut","clone","clone_into","deserialize","erased_serialize","from","into","json","name","new","pop_last_entries","send_json_log","serialize","timestamp","to_owned","try_from","try_into","type_id","ConsensusEquivocatingVote","ConsensusInvalidMessage","FileWriter","InvalidBlock","InvalidConsensusProposal","InvalidConsensusRound","InvalidHealthCheckerMsg","InvalidNetworkEvent","InvalidNetworkEventHC","InvalidNetworkEventMempool","InvalidRetrievedBlock","InvalidSyncInfoMsg","InvalidTransactionMempool","NoiseHandshake","SecurityEvent","StateSyncInvalidChunk","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deserialize","erased_serialize","fmt","from","from","into","into","new","serialize","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","visit","write","Always","Duration","Frequency","SampleRate","Sampling","borrow","borrow","borrow_mut","borrow_mut","fmt","from","from","into","into","new","sample","try_from","try_from","try_into","try_into","type_id","type_id","0","0","TracingToDiemLoggerLayer","borrow","borrow_mut","from","into","on_event","try_from","try_into","type_id"],"q":["diem_loggerdiem_logger::Value","","","diem_logger::json_log","","","","","","","","","","","","","","","","","","","","diem_logger::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_logger::sample","","","","","","","","","","","","","","","","","","","","","","diem_logger::sample::SampleRate","","diem_logger::tracing_adapter","","","","","","","",""],"d":["Default size of log write channel, if the channel is full, …","Consensus received an equivocating vote","Consensus received an invalid message (not well-formed, …","","","The “debug” level.","","A builder for a <code>DiemLogger</code>, configures what, where, and …","","","The “error” level.","An individual structured logging event from a log line.  …","A logging filter to determine which logs to keep or remove …","","The “info” level.","A block being committed or executed is invalid","Consensus received an invalid proposal","Consensus received an invalid new round message","HealthChecker received an invalid message","Network received an invalid message from a remote peer","HealthChecker received an invalid network event","Mempool received an invalid network event","A received block is invalid","Consensus received an invalid sync info message","Mempool received a transaction from another peer with an …","The key part of a logging key value pair e.g. …","The logging key value pair e.g. <code>info!(key = value)</code>","Logging levels, used for stratifying logs, and disabling …","A definition of the most verbose <code>Level</code> allowed, or …","","Associated metadata with every log to identify what kind …","A failed noise handshake that’s either a clear bug or …","","A schema of key-value pairs.","","","","Invalid chunk of transactions received","","The “trace” level.","The value part of a logging key value pair e.g. …","A visitor for the key-value pairs in a <code>Schema</code>.","","The “warn” level.","An trait encapsulating the operations required for writing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Log at the <code>debug</code> level","","","","","","","","","","","","","","","Log at the <code>error</code> level","Writes event to event stream Example: event!(“committed…","","Flush the global <code>Logger</code>","","","","","","","","","","","","","","","","","","","","","Get a value from a debuggable type.","Get a value from a displayable type.","Get a value from a debuggable type.","","","","","Log at the <code>info</code> level","","","","","","","","","","","","","","","","","","","","Log at the given level, it’s recommended to use a …","Returns the most verbose logging level filter.","","","","","","","","","","","","","","","","","Periodic sampling for logs, metrics, and other use cases …","Samples a given function at a <code>SampleRate</code>, useful for …","","","","","","","","","","","","","","Log at the <code>trace</code> level","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Visit key-value pairs.","","Visit a key-value pair.","Log at the <code>warn</code> level","Write the log.","","","","","","","","","","","","","","","","Get up to MAX_EVENTS_IN_QUEUE last events and clears the …","Sends event to event stream.","","","","","","","Consensus received an equivocating vote","Consensus received an invalid message (not well-formed, …","A struct for writing logs to a file","A block being committed or executed is invalid","Consensus received an invalid proposal","Consensus received an invalid new round message","HealthChecker received an invalid message","Network received an invalid message from a remote peer","HealthChecker received an invalid network event","Mempool received an invalid network event","A received block is invalid","Consensus received an invalid sync info message","Mempool received a transaction from another peer with an …","A failed noise handshake that’s either a clear bug or …","","Invalid chunk of transactions received","","","","","","","","","","","","","","","","","","","","","","","","Write to file","Always Sample","Only sample a single time during a window of time. This …","Sample based on the frequency of the event. The provided …","The rate at which a <code>sample!</code> macro will run it’s given …","An internal struct that can be checked if a sample is …","","","","","","","","","","","","","","","","","","","","A layer that translates tracing events into diem-logger …","","","","","","","",""],"i":[0,1,1,2,3,4,0,0,3,2,4,0,0,2,4,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,2,0,0,0,3,1,2,4,0,0,2,4,0,5,6,5,7,8,2,9,6,3,10,11,4,5,7,8,2,9,6,3,10,11,4,5,7,9,5,2,6,3,10,11,4,2,6,3,10,11,4,2,6,4,5,0,11,4,8,9,11,2,6,4,2,6,4,6,11,4,0,0,11,0,8,2,9,6,3,10,11,4,4,5,7,8,2,2,9,6,3,10,11,4,3,3,3,2,4,6,4,0,5,7,5,7,8,2,9,6,3,10,11,4,5,0,8,5,11,11,11,0,2,8,8,11,6,5,7,6,10,11,2,6,4,0,5,5,5,0,0,6,11,4,7,7,11,2,6,3,10,11,4,4,0,0,5,7,8,2,9,6,3,10,11,4,5,7,8,2,9,6,3,10,11,4,5,7,8,2,9,6,3,10,11,4,12,10,13,0,14,15,16,17,0,18,18,18,18,18,18,18,18,18,18,18,0,0,18,18,18,18,18,18,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,19,1,19,1,1,1,1,1,1,19,1,19,1,19,1,1,19,1,19,1,19,1,1,19,20,20,20,0,0,21,20,21,20,20,21,20,21,20,21,21,21,20,21,20,21,20,22,23,0,24,24,24,24,24,24,24,24],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["string",3]]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["arc",3,["diemlogger"]],["diemlogger",3]]],[[],["diemloggerbuilder",3]],[[],["builder",3]],[[["usize",15]]],[[],["levelfilter",4]],[[],["key",3]],[[],["value",4]],[[],["keyvalue",3]],[[],["metadata",3]],[[],["level",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[["levelfilter",4]],["ordering",4]],[[["key",3]],["ordering",4]],[[["level",4]],["ordering",4]],[[]],null,[[],["result",4]],[[],["result",4]],[[["arguments",3],["metadata",3],["option",4,["arguments"]]]],[[["metadata",3]],["bool",15]],[[],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["key",3]],["bool",15]],[[["level",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["ok",3],["error",3],["result",4,["ok","error"]]]],[[["serializer",8]],[["ok",3],["error",3],["result",4,["ok","error"]]]],[[["serializer",8]],[["ok",3],["error",3],["result",4,["ok","error"]]]],null,null,[[],["str",15]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["level",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["result",4]],[[["str",15]],[["level",4],["result",4,["level"]]]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bool",15]]],null,[[]],[[["level",4]]],[[],["level",4]],[[],["u32",15]],[[],["str",15]],null,[[]],[[],[["arguments",3],["option",4,["arguments"]]]],[[],["metadata",3]],[[],["str",15]],[[["key",3]],["bool",15]],[[]],[[],["diemloggerbuilder",3]],[[["str",15]]],[[["value",4],["str",15]]],[[["u32",15],["level",4],["str",15]]],[[["levelfilter",4]],[["option",4,["ordering"]],["ordering",4]]],[[["key",3]],[["option",4,["ordering"]],["ordering",4]]],[[["level",4]],[["option",4,["ordering"]],["ordering",4]]],null,[[["box",3,["writer"]],["writer",8]]],[[]],[[["level",4]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["filter",3]]],[[["filter",3]]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["visitor",8]]],[[["visitor",8]]],[[["key",3],["value",4]]],null,[[["string",3]]],null,null,null,null,[[]],[[]],[[],["jsonlogentry",3]],[[]],[[],["result",4]],[[["serializer",8]],[["ok",3],["error",3],["result",4,["ok","error"]]]],[[]],[[]],null,null,[[["value",4],["str",15]]],[[],[["vec",3,["jsonlogentry"]],["jsonlogentry",3]]],[[["jsonlogentry",3]]],[[],["result",4]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["securityevent",4]],[[]],[[],["result",4]],[[["serializer",8]],[["ok",3],["error",3],["result",4,["ok","error"]]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["pathbuf",3]]],[[],["result",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["visitor",8]]],[[["string",3]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["samplerate",4]]],[[],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[]],[[["context",3],["event",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[4,"SecurityEvent"],[4,"LevelFilter"],[4,"Value"],[4,"Level"],[3,"DiemLoggerBuilder"],[3,"Key"],[3,"DiemLogger"],[3,"Event"],[3,"Filter"],[3,"KeyValue"],[3,"Metadata"],[8,"Schema"],[8,"Visitor"],[8,"Writer"],[13,"Debug"],[13,"Display"],[13,"Serde"],[3,"JsonLogEntry"],[3,"FileWriter"],[4,"SampleRate"],[3,"Sampling"],[13,"Duration"],[13,"Frequency"],[3,"TracingToDiemLoggerLayer"]]},\
"diem_management":{"doc":"","t":[0,0,0,14,5,0,14,0,0,0,0,3,3,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,17,17,17,17,17,17,17,17,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,17,17,17,17,3,3,17,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,5,3,11,11,11,5,12,11,11,11,11,12,11,11,11,11,11,11,11,11,5,12,11,3,11,11,11,12,11,11,11,11,11,11,11,11,11],"n":["config","constants","error","execute_command","read_key_from_file","secure_backend","secure_backend","storage","transaction","validator_config","waypoint","Config","ConfigPath","borrow","borrow","borrow_mut","borrow_mut","chain_id","clap","clone","clone","clone_into","clone_into","default","default","deserialize","eq","erased_serialize","fmt","fmt","from","from","from_clap","into","into","json_server","load","load","ne","override_chain_id","override_json_server","override_shared_backend","override_validator_backend","serialize","shared_backend","shared_backend","shared_backend_with_namespace","test_only_hash","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","validator_backend","validator_backend","vzip","vzip","COMMON_NS","GAS_CURRENCY_CODE","GAS_UNIT_PRICE","LAYOUT","MAX_GAS_AMOUNT","TXN_EXPIRATION_SECS","VALIDATOR_CONFIG","VALIDATOR_OPERATOR","BCS","BackendInvalidKeyValue","BackendMissingBackendKey","BackendParsingError","CommandArgumentError","ConfigError","Error","IO","JsonRpcReadError","JsonRpcWriteError","NetworkAddressDecodeError","StorageReadError","StorageSigningError","StorageUnavailable","StorageWriteError","Timeout","UnableToParse","UnableToParseFile","UnableToReadFile","UnexpectedCommand","UnexpectedError","borrow","borrow_mut","fmt","fmt","from","into","source","to_string","try_from","try_into","type_id","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","1","1","1","1","1","1","1","1","1","1","1","2","2","2","3","BACKEND","DISK","GITHUB","MEMORY","SecureBackend","SharedBackend","VAULT","ValidatorBackend","backend","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clap","clap","clone","clone","clone","clone_into","clone_into","clone_into","fmt","fmt","fmt","from","from","from","from_clap","from_clap","from_str","from_str","from_str","into","into","into","parameters","shared_backend","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","validator_backend","vzip","vzip","vzip","StorageWrapper","account_address","borrow","borrow_mut","ed25519_key","ed25519_private","ed25519_public_from_private","ed25519_public_from_private_previous_version","encryptor","from","into","new","rotate_key","set","sign","sign_using_version","string","to_x25519","transaction","try_from","try_into","type_id","u64","value","vzip","waypoint","x25519_key","x25519_private","x25519_public_from_private","build_raw_transaction","ValidatorConfig","borrow","borrow_mut","build_transaction","build_validator_config_transaction","chain_id","clap","clone","clone_into","config","config","fmt","from","from_clap","into","to_owned","try_from","try_into","type_id","validate_address","validator_backend","vzip","InsertWaypoint","borrow","borrow_mut","clap","config","execute","fmt","from","from_clap","into","try_from","try_into","type_id","vzip"],"q":["diem_management","","","","","","","","","","","diem_management::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_management::constants","","","","","","","","diem_management::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_management::error::Error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_management::secure_backend","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_management::storage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_management::transaction","diem_management::validator_config","","","","","","","","","","","","","","","","","","","","","","diem_management::waypoint","","","","","","","","","","","","",""],"d":["","","","","Reads a given ed25519 public key from file. Attempts to …","","","","","","","A config file for working with management tooling.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SecureBackend is a parameter that is stored as set of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A helper to handle common error handling and functionality …","","","","Retrieves the Public key, that is stored as a public key","Retrieves public key from the stored private key","Retrieves public key from the stored private key","Retrieves the previous public key from the stored private …","","","","","","","Sign a transaction","Sign a transaction with the given version","","","","","","","","","","","Retrieves the Public key that is stored as a public key","","Retrieves public key from the stored private key","Builds a <code>RawTransaction</code> to handle common transaction values","","","","","Requires that the validator storage has the following keys …","","","","","","","","","","","","","","","Validates an address to have a DNS/IP and a port, as well …","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,1,1,1,2,1,2,2,1,2,1,1,2,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,1,1,2,0,0,0,0,0,0,0,0,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,8,9,10,11,13,14,15,16,17,18,19,20,21,14,15,16,15,0,0,0,0,0,0,0,0,23,23,24,25,23,24,25,24,25,23,24,25,23,24,25,23,24,25,23,24,25,24,25,23,24,25,23,24,25,23,25,23,24,25,23,23,24,25,23,23,24,25,23,24,25,24,23,24,25,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,26,26,26,26,26,26,26,26,26,26,26,0,0,27,27,27,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,27,27,0,28,28,28,28,28,28,28,28,28,28,28,28,28],"f":[null,null,null,null,[[["path",3]],[["ed25519publickey",3],["result",4,["ed25519publickey","string"]],["string",3]]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,[[],["app",3]],[[],["config",3]],[[],["configpath",3]],[[]],[[]],[[]],[[],["configpath",3]],[[],["result",4]],[[["config",3]],["bool",15]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["argmatches",3]]],[[]],[[]],null,[[["path",3]],[["result",4,["config","error"]],["config",3],["error",4]]],[[],[["result",4,["config","error"]],["config",3],["error",4]]],[[["config",3]],["bool",15]],[[["chainid",3],["option",4,["chainid"]]]],[[["option",4]]],[[["option",4]],[["result",4,["error"]],["error",4]]],[[["option",4]],[["result",4,["error"]],["error",4]]],[[],["result",4]],[[],["storagewrapper",3]],null,[[["string",3]],["storagewrapper",3]],[[],["hashvalue",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["storagewrapper",3]],null,[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],[["error",8],["option",4,["error"]]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["app",3]],[[],["app",3]],[[],["securebackend",3]],[[],["validatorbackend",3]],[[],["sharedbackend",3]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["argmatches",3]]],[[["argmatches",3]]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[],["result",4]],[[["str",15]],[["result",4,["error"]],["error",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["error",4],["result",4,["securebackend","error"]],["securebackend",4]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],null,[[["str",15]],[["result",4,["accountaddress","error"]],["accountaddress",3],["error",4]]],[[]],[[]],[[["str",15]],[["ed25519publickey",3],["error",4],["result",4,["ed25519publickey","error"]]]],[[["str",15]],[["result",4,["ed25519privatekey","error"]],["error",4],["ed25519privatekey",3]]],[[["str",15]],[["ed25519publickey",3],["error",4],["result",4,["ed25519publickey","error"]]]],[[["str",15]],[["ed25519publickey",3],["error",4],["result",4,["ed25519publickey","error"]]]],[[],[["encryptor",3,["storage"]],["storage",4]]],[[]],[[]],[[["storage",4],["str",15]]],[[["str",15]],[["ed25519publickey",3],["error",4],["result",4,["ed25519publickey","error"]]]],[[["serialize",8],["str",15]],[["result",4,["error"]],["error",4]]],[[["rawtransaction",3],["str",15]],[["result",4,["signedtransaction","error"]],["signedtransaction",3],["error",4]]],[[["ed25519publickey",3],["rawtransaction",3],["str",15]],[["result",4,["signedtransaction","error"]],["signedtransaction",3],["error",4]]],[[["str",15]],[["string",3],["error",4],["result",4,["string","error"]]]],[[["ed25519publickey",3]],[["result",4,["publickey","error"]],["publickey",3],["error",4]]],[[["str",15]],[["result",4,["transaction","error"]],["transaction",4],["error",4]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["str",15]],[["u64",15],["error",4],["result",4,["u64","error"]]]],[[["str",15]],[["deserializeowned",8],["error",4],["result",4,["error"]]]],[[]],[[["str",15]],[["result",4,["waypoint","error"]],["waypoint",3],["error",4]]],[[["str",15]],[["result",4,["publickey","error"]],["publickey",3],["error",4]]],[[["str",15]],[["privatekey",3],["error",4],["result",4,["privatekey","error"]]]],[[["str",15]],[["result",4,["publickey","error"]],["publickey",3],["error",4]]],[[["u64",15],["scriptfunction",3],["chainid",3],["accountaddress",3]],["rawtransaction",3]],null,[[]],[[]],[[["u64",15],["bool",15],["networkaddress",3]],[["result",4,["transaction","error"]],["transaction",4],["error",4]]],[[["u64",15],["kvstorage",8],["bool",15],["networkaddress",3],["chainid",3],["cryptostorage",8]],[["transaction",4],["result",6,["transaction"]]]],null,[[],["app",3]],[[],["validatorconfig",3]],[[]],[[],[["result",4,["config","error"]],["config",3],["error",4]]],null,[[["formatter",3]],["result",6]],[[]],[[["argmatches",3]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["networkaddress",3],["str",15]],[["result",4,["error"]],["error",4]]],null,[[]],null,[[]],[[]],[[],["app",3]],null,[[],[["result",4,["error"]],["error",4]]],[[["formatter",3]],["result",6]],[[]],[[["argmatches",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"Config"],[3,"ConfigPath"],[4,"Error"],[13,"BackendInvalidKeyValue"],[13,"BackendParsingError"],[13,"CommandArgumentError"],[13,"ConfigError"],[13,"IO"],[13,"BCS"],[13,"JsonRpcReadError"],[13,"JsonRpcWriteError"],[13,"NetworkAddressDecodeError"],[13,"StorageUnavailable"],[13,"StorageReadError"],[13,"StorageSigningError"],[13,"StorageWriteError"],[13,"Timeout"],[13,"UnableToParse"],[13,"UnableToParseFile"],[13,"UnableToReadFile"],[13,"UnexpectedCommand"],[13,"UnexpectedError"],[3,"SecureBackend"],[3,"ValidatorBackend"],[3,"SharedBackend"],[3,"StorageWrapper"],[3,"ValidatorConfig"],[3,"InsertWaypoint"]]},\
"diem_mempool":{"doc":"Mempool is used to hold transactions that have been …","t":[13,4,4,13,13,13,4,6,6,13,6,13,3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,0,11,0,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,5,5,3,12,11,11,11,12,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,13,13,6,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12],"n":["CommitResponse","ConsensusRequest","ConsensusResponse","GetBlockRequest","GetBlockResponse","GetTransactionByHash","MempoolClientRequest","MempoolClientSender","MempoolEventsReceiver","RejectNotification","SubmissionStatus","SubmitTransaction","TransactionSummary","bootstrap","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","equivalent","fmt","fmt","fmt","from","from","from","from","fuzzing","init","init","init","init","into","into","into","into","mocks","ne","network","sender","sequence_number","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","0","0","1","1","2","0","0","0","1","1","mempool_incoming_transactions_strategy","test_mempool_process_incoming_transactions_impl","MockSharedMempool","ac_client","add_txns","borrow","borrow_mut","consensus_sender","deref","deref_mut","drop","from","get_txns","init","into","mempool","mempool_notifier","new","new_in_runtime","read_timeline","remove_txn","start","try_from","try_into","type_id","vzip","BroadcastTransactionsRequest","BroadcastTransactionsResponse","MempoolNetworkEvents","MempoolNetworkSender","MempoolSyncMsg","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","erased_serialize","fmt","fmt","from","from","init","init","into","into","network_endpoint_config","new","send_rpc","send_to","serialize","test_only_hash","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","backoff","request_id","request_id","retry","transactions"],"q":["diem_mempool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_mempool::ConsensusRequest","","","","","diem_mempool::ConsensusResponse","diem_mempool::MempoolClientRequest","","","","diem_mempool::fuzzing","","diem_mempool::mocks","","","","","","","","","","","","","","","","","","","","","","","","diem_mempool::network","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_mempool::network::MempoolSyncMsg","","","",""],"d":["","Message sent from consensus to mempool.","Response sent from mempool to consensus.","Request to pull block to submit to consensus.","Block to submit to consensus","","","","","Notifications about <em>rejected</em> committed txns.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Interface between Mempool and Network layers.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mock of a running instance of shared mempool.","","","","","","","","","","","","","","","Creates a mock of a running instance of shared mempool. …","Creates a mock of a running instance of shared mempool …","True if all the given txns are in mempool, else false.","","","","","","","Broadcast request issued by the sender.","Broadcast ack issued by the receiver.","The interface from Network to Mempool layer.","The interface from Mempool to Networking layer.","Container for exchanging transactions with other Mempools.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A backpressure signal from the recipient when it is …","Unique id of sync request. Can be used by sender for …","","Retry signal from recipient if there are txns in …",""],"i":[1,0,0,2,1,3,0,0,0,2,0,3,0,0,2,1,3,4,2,1,3,4,4,4,2,1,3,4,2,1,3,4,2,1,3,4,4,4,2,4,4,2,1,3,4,0,2,1,3,4,2,1,3,4,0,4,0,4,4,4,2,4,2,1,3,4,2,1,3,4,2,1,3,4,2,1,3,4,5,6,5,6,5,7,8,9,8,9,0,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,0,0,0,11,12,11,12,11,12,11,12,11,12,11,12,11,11,12,11,11,12,11,12,11,12,11,12,0,12,12,12,11,11,11,12,11,12,11,12,11,12,11,12,13,14,13,13,14],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,[[["peermetadatastorage",3],["arc",3,["dbreader"]],["mempoolnotificationlistener",3],["mempooleventsreceiver",6],["receiver",3,["consensusrequest"]],["consensusrequest",4],["nodeconfig",3],["dbreader",8],["reconfignotificationlistener",6],["arc",3,["peermetadatastorage"]],["vec",3]],["runtime",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["transactionsummary",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["transactionsummary",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],null,[[["transactionsummary",3]],["bool",15]],null,null,null,[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,[[]],[[["signedtransaction",3],["timelinestate",4],["vec",3,["signedtransaction"]]]],null,null,[[["signedtransaction",3],["vec",3,["signedtransaction"]]],["result",6]],[[]],[[]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["u64",15]],[["signedtransaction",3],["vec",3,["signedtransaction"]]]],[[],["usize",15]],[[]],null,null,[[]],[[["transactionvalidation",8],["dbreaderwriter",3]]],[[["u64",15],["usize",15]],[["signedtransaction",3],["vec",3,["signedtransaction"]]]],[[["signedtransaction",3]]],[[["transactionvalidation",8],["handle",3],["dbreaderwriter",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["mempoolsyncmsg",4]],[[],["mempoolnetworksender",3]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["usize",15]],["appconfig",3]],[[["connectionrequestsender",3],["peermanagerrequestsender",3]]],[[["duration",3],["peerid",3],["mempoolsyncmsg",4]],[["pin",3,["box"]],["box",3,["future"]]]],[[["peerid",3],["mempoolsyncmsg",4]],[["result",4,["networkerror"]],["networkerror",3]]],[[],["result",4]],[[],["hashvalue",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null],"p":[[4,"ConsensusResponse"],[4,"ConsensusRequest"],[4,"MempoolClientRequest"],[3,"TransactionSummary"],[13,"GetBlockRequest"],[13,"RejectNotification"],[13,"GetBlockResponse"],[13,"SubmitTransaction"],[13,"GetTransactionByHash"],[3,"MockSharedMempool"],[4,"MempoolSyncMsg"],[3,"MempoolNetworkSender"],[13,"BroadcastTransactionsResponse"],[13,"BroadcastTransactionsRequest"]]},\
"diem_metrics":{"doc":"Metrics","t":[3,3,3,6,6,6,6,6,7,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,11,11,11,11,11,11,11,11,0,11,11,0,14,11,11,11,11,11,11,11,11,11,11,14,14,14,14,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5],"n":["DurationHistogram","Histogram","HistogramTimer","HistogramVec","IntCounter","IntCounterVec","IntGauge","IntGaugeVec","NUM_METRICS","OpMetrics","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","collect","collect","desc","desc","drop","fmt","fmt","from","from","from","from","gather_metrics","gauge","get_all_metrics","get_sample_count","get_sample_sum","inc","inc_by","into","into","into","into","json_metrics","local","metric","metric_server","monitor","new","new","new_and_registered","observe","observe","observe_closure_duration","observe_duration","observe_duration","observe_duration","peer_gauge","register_histogram","register_histogram_vec","register_int_counter","register_int_counter_vec","register_int_gauge","register_int_gauge_vec","set","start_timer","start_timer","stop_and_discard","stop_and_record","timer","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","with_opts","get_git_rev","get_json_metrics","start_server"],"q":["diem_metrics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_metrics::json_metrics","","diem_metrics::metric_server"],"d":["A small wrapper around Histogram to handle the special case","A <code>Metric</code> counts individual observations from an event or …","Timer to measure and record the duration of an event.","A <code>Collector</code> that bundles a set of Histograms that all …","The integer version of <code>Counter</code>. Provides better …","The integer version of <code>CounterVec</code>. Provides better …","The integer version of <code>Gauge</code>. Provides better performance …","The integer version of <code>GaugeVec</code>. Provides better …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return count of all samples.","Return accumulated sum of all samples.","","","","","","","","Return a <code>LocalHistogram</code> for single thread usage.","","","Helper function to record metrics for external calls. …","","","","","Add a single observation to the <code>Histogram</code>.","Observe execution time of a closure, in second.","","","Observe and record timer duration (in seconds).","","Create a [<code>Histogram</code>] and registers to default registry.","Create a [<code>HistogramVec</code>] and registers to default registry.","Create an [<code>IntCounter</code>] and registers to default registry.","Create an [<code>IntCounterVec</code>] and registers to default …","Create an [<code>IntGauge</code>] and registers to default registry.","Create an [<code>IntGaugeVec</code>] and registers to default registry.","","","Return a <code>HistogramTimer</code> to track a duration.","Observe and return timer duration (in seconds).","Observe, record and return timer duration (in seconds).","","","","","","","","","","","","","","","","<code>with_opts</code> creates a <code>Histogram</code> with the <code>opts</code> options.","","",""],"i":[0,0,0,0,0,0,0,0,0,0,1,2,3,4,1,2,3,4,2,4,2,4,2,4,2,4,3,3,4,1,2,3,4,0,2,0,4,4,2,2,1,2,3,4,0,4,4,0,0,1,2,2,2,4,4,1,2,3,2,0,0,0,0,0,0,2,1,4,3,3,2,2,4,1,2,3,4,1,2,3,4,1,2,3,4,4,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["opmetrics",3]],[[],["histogram",3]],[[]],[[]],[[],[["vec",3,["metricfamily"]],["metricfamily",3]]],[[],[["metricfamily",3],["vec",3,["metricfamily","global"]],["global",3]]],[[],[["vec",3,["desc"]],["desc",3]]],[[],[["desc",3],["global",3],["vec",3,["desc","global"]]]],[[]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[],[["vec",3,["metricfamily"]],["metricfamily",3]]],[[["str",15]],["intgauge",6]],[[],[["string",3],["hashmap",3,["string","string"]]]],[[],["u64",15]],[[],["f64",15]],[[["str",15]]],[[["usize",15],["str",15]]],[[]],[[]],[[]],[[]],null,[[],["localhistogram",3]],[[],["metric",3]],null,null,[[["histogram",3]],["durationhistogram",3]],[[["into",8,["string"]],["string",3]],["opmetrics",3]],[[["into",8,["string"]],["string",3]],["opmetrics",3]],[[["str",15],["f64",15]]],[[["f64",15]]],[[]],[[["duration",3]]],[[["str",15],["duration",3]]],[[]],[[["str",15]],["intgauge",6]],null,null,null,null,null,null,[[["usize",15],["str",15]]],[[],["histogramtimer",3]],[[],["histogramtimer",3]],[[],["f64",15]],[[],["f64",15]],[[["str",15]],["histogramtimer",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["histogramopts",3]],[["histogram",3],["result",4,["histogram","error"]],["error",4]]],[[],["string",3]],[[],[["string",3],["hashmap",3,["string","string"]]]],[[["u16",15],["string",3],["bool",15]]]],"p":[[3,"DurationHistogram"],[3,"OpMetrics"],[3,"HistogramTimer"],[3,"Histogram"]]},\
"diem_metrics_core":{"doc":"","t":[8,3,3,6,6,6,6,6,3,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,14,14,14,14,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Encoder","Histogram","HistogramTimer","HistogramVec","IntCounter","IntCounterVec","IntGauge","IntGaugeVec","TextEncoder","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","collect","default","desc","drop","encode","encode","fmt","fmt","fmt","format_type","format_type","from","from","from","gather","get_sample_count","get_sample_sum","into","into","into","local","metric","new","observe","observe_closure_duration","observe_duration","register_histogram","register_histogram_vec","register_int_counter","register_int_counter_vec","register_int_gauge","register_int_gauge_vec","start_timer","stop_and_discard","stop_and_record","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_opts"],"q":["diem_metrics_core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An interface for encoding metric families into an …","A <code>Metric</code> counts individual observations from an event or …","Timer to measure and record the duration of an event.","A <code>Collector</code> that bundles a set of Histograms that all …","The integer version of <code>Counter</code>. Provides better …","The integer version of <code>CounterVec</code>. Provides better …","The integer version of <code>Gauge</code>. Provides better performance …","The integer version of <code>GaugeVec</code>. Provides better …","An implementation of an <code>Encoder</code> that converts a …","","","","","","","","","","","","","<code>encode</code> converts a slice of MetricFamily proto messages …","","","","","<code>format_type</code> returns target format.","","","","","Return all <code>MetricFamily</code> of <code>DEFAULT_REGISTRY</code>.","Return count of all samples.","Return accumulated sum of all samples.","","","","Return a <code>LocalHistogram</code> for single thread usage.","","Create a new text encoder.","Add a single observation to the <code>Histogram</code>.","Observe execution time of a closure, in second.","Observe and record timer duration (in seconds).","Create a [<code>Histogram</code>] and registers to default registry.","Create a [<code>HistogramVec</code>] and registers to default registry.","Create an [<code>IntCounter</code>] and registers to default registry.","Create an [<code>IntCounterVec</code>] and registers to default …","Create an [<code>IntGauge</code>] and registers to default registry.","Create an [<code>IntGaugeVec</code>] and registers to default registry.","Return a <code>HistogramTimer</code> to track a duration.","Observe and return timer duration (in seconds).","Observe, record and return timer duration (in seconds).","","","","","","","","","","","<code>with_opts</code> creates a <code>Histogram</code> with the <code>opts</code> options."],"i":[0,0,0,0,0,0,0,0,0,1,2,3,1,2,3,3,3,3,1,3,2,4,1,1,2,3,4,1,1,2,3,0,3,3,1,2,3,3,3,1,3,3,2,0,0,0,0,0,0,3,2,2,3,1,2,3,1,2,3,1,2,3,3],"f":[null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["histogram",3]],[[]],[[],[["global",3],["vec",3,["metricfamily","global"]],["metricfamily",3]]],[[],["textencoder",3]],[[],[["global",3],["desc",3],["vec",3,["desc","global"]]]],[[]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[],["str",15]],[[],["str",15]],[[]],[[]],[[]],[[],[["global",3],["vec",3,["metricfamily","global"]],["metricfamily",3]]],[[],["u64",15]],[[],["f64",15]],[[]],[[]],[[]],[[],["localhistogram",3]],[[],["metric",3]],[[],["textencoder",3]],[[["f64",15]]],[[]],[[]],null,null,null,null,null,null,[[],["histogramtimer",3]],[[],["f64",15]],[[],["f64",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["histogramopts",3]],[["histogram",3],["error",4],["result",4,["histogram","error"]]]]],"p":[[3,"TextEncoder"],[3,"HistogramTimer"],[3,"Histogram"],[8,"Encoder"]]},\
"diem_network_address_encryption":{"doc":"","t":[13,13,13,3,4,13,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12],"n":["AddressDeserialization","BCSError","DecryptionError","Encryptor","Error","ParseError","StorageError","ValidatorKeys","VersionNotFound","add_key","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","current_version","decrypt","default","deserialize","empty","encrypt","erased_serialize","fmt","fmt","fmt","for_testing","from","from","from","from","from","from","from_base64","initialize","initialize_for_testing","into","into","into","new","serialize","set_current_version","source","test_only_hash","to_base64","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0","0","0","0","0","1","1"],"q":["diem_network_address_encryption","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_network_address_encryption::Error","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","This generates an empty encryptor for use in scenarios …","","","","","","This generates an encryptor for use in testing scenarios. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,1,1,0,0,1,1,0,1,2,2,1,3,2,1,3,3,3,2,2,3,3,2,2,3,1,1,3,2,2,1,1,1,1,3,0,2,2,2,1,3,2,3,2,1,3,0,3,1,2,1,3,2,1,3,2,1,3,2,1,3,4,5,6,7,8,9,4,5],"f":[null,null,null,null,null,null,null,null,null,[[["key",6],["keyversion",6]],[["error",4],["result",4,["error"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["validatorkeys",3]],[[]],[[],[["keyversion",6],["error",4],["result",4,["keyversion","error"]]]],[[["accountaddress",3]],[["vec",3,["networkaddress"]],["error",4],["result",4,["vec","error"]]]],[[]],[[],["result",4]],[[]],[[["u64",15],["accountaddress",3]],[["vec",3,["u8"]],["error",4],["result",4,["vec","error"]]]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["error",4]]],[[["parseerror",4]]],[[["storageerror",4]]],[[]],[[],[["result",4,["key"]],["key",6]]],[[],[["error",4],["result",4,["error"]]]],[[],[["error",4],["result",4,["error"]]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[["keyversion",6]],[["error",4],["result",4,["error"]]]],[[],[["error",8],["option",4,["error"]]]],[[],["hashvalue",3]],[[],["result",4]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null],"p":[[4,"Error"],[3,"Encryptor"],[3,"ValidatorKeys"],[13,"AddressDeserialization"],[13,"DecryptionError"],[13,"BCSError"],[13,"ParseError"],[13,"StorageError"],[13,"VersionNotFound"]]},\
"diem_node":{"doc":"","t":[3,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11],"n":["DiemHandle","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","load_test_environment","setup_environment","start","try_from","try_into","type_id","vzip"],"q":["diem_node","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1],"f":[null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[["pathbuf",3],["option",4,["vmpublishingoption"]],["vmpublishingoption",3],["bool",15],["vec",3,["vec"]],["vec",3,["u8"]],["option",4,["pathbuf"]]]],[[["arc",3,["logger"]],["nodeconfig",3],["option",4,["arc"]]],["diemhandle",3]],[[["pathbuf",3],["nodeconfig",3],["option",4,["pathbuf"]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"DiemHandle"]]},\
"diem_operational_tool":{"doc":"","t":[3,12,11,11,0,11,11,11,11,11,12,11,11,11,11,0,0,11,11,11,12,11,0,11,11,11,11,11,13,13,13,13,13,13,13,13,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,4,3,3,3,3,3,3,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["TransactionContext","address","borrow","borrow_mut","command","deref","deref_mut","drop","eq","erased_serialize","execution_result","fmt","from","init","into","json_rpc","keys","ne","new","new_with_validation","sequence_number","serialize","test_helper","test_only_hash","try_from","try_into","type_id","vzip","AccountResource","AccountResource","AddValidator","AddValidator","CheckEndpoint","CheckEndpoint","CheckValidatorSetEndpoints","CheckValidatorSetEndpoints","Command","CommandName","CreateValidator","CreateValidator","CreateValidatorOperator","CreateValidatorOperator","Error","ExtractPeerFromFile","ExtractPeerFromFile","ExtractPeerFromStorage","ExtractPeerFromStorage","ExtractPeersFromKeys","ExtractPeersFromKeys","ExtractPrivateKey","ExtractPrivateKey","ExtractPublicKey","ExtractPublicKey","GenerateKey","GenerateKey","InsertWaypoint","InsertWaypoint","PrintAccount","PrintAccount","PrintKey","PrintKey","PrintWaypoint","PrintWaypoint","PrintXKey","PrintXKey","RemoveValidator","RemoveValidator","Result","ResultWrapper","RotateConsensusKey","RotateConsensusKey","RotateFullNodeNetworkKey","RotateFullNodeNetworkKey","RotateOperatorKey","RotateOperatorKey","RotateValidatorNetworkKey","RotateValidatorNetworkKey","SetValidatorConfig","SetValidatorConfig","SetValidatorOperator","SetValidatorOperator","ValidateTransaction","ValidateTransaction","ValidatorConfig","ValidatorConfig","ValidatorSet","ValidatorSet","account_resource","add_validator","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_endpoint","check_validator_set_endpoints","clap","create_validator","create_validator_operator","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","erased_serialize","execute","extract_peer_from_file","extract_peer_from_storage","extract_peers_from_keys","extract_private_key","extract_public_key","fmt","fmt","fmt","from","from","from","from","from_clap","generate_key","init","init","init","insert_waypoint","into","into","into","print_account","print_key","print_transaction_context","print_waypoint","print_x_key","remove_validator","rotate_consensus_key","rotate_fullnode_network_key","rotate_operator_key","rotate_validator_network_key","serialize","set_validator_config","set_validator_operator","test_only_hash","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate_transaction","validator_config","validator_set","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","JsonRpcClientWrapper","account_resource","account_state","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","new","sequence_number","submit_transaction","transaction_status","try_from","try_into","type_id","validator_config","validator_set","vzip","BCS","Base64","Ed25519","EncodingType","ExtractPeerFromFile","ExtractPeerFromStorage","ExtractPeersFromKeys","ExtractPrivateKey","ExtractPublicKey","GenerateKey","Hex","KeyType","X25519","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clap","clap","clap","clap","clap","clap","clap","clap","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_str","from_str","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","load_key","save_key","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","OperationalTool","account_resource","add_validator","borrow","borrow_mut","check_endpoint","check_endpoint_with_key","create_account","create_validator","create_validator_operator","deref","deref_mut","drop","extract_peer_from_file","extract_peer_from_storage","extract_peers_from_keys","extract_private_key","extract_public_key","from","generate_key","init","insert_waypoint","into","new","print_account","print_key","print_waypoint","remove_validator","rotate_consensus_key","rotate_fullnode_network_key","rotate_operator_key","rotate_operator_key_with_custom_validation","rotate_validator_network_key","set_validator_config","set_validator_operator","test","try_from","try_into","type_id","validate_transaction","validator_config","validator_set","vzip"],"q":["diem_operational_tool","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_operational_tool::command","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_operational_tool::command::Command","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_operational_tool::command::ResultWrapper","","diem_operational_tool::json_rpc","","","","","","","","","","","","","","","","","","","","","diem_operational_tool::keys","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_operational_tool::test_helper","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Information for validating a transaction after it’s been …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A result wrapper for displaying either a correct execution …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Show the transaction context and validation result in a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A wrapper around JSON RPC for error handling","","","","","","","","","","","","","","","","","","","This method returns all validator infos currently …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Loads a key to a file hex string encoded","Saves a key to a file encoded in a string","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A helper to test the operational tool in tests","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,0,1,1,1,1,1,2,3,2,3,2,3,2,3,0,0,2,3,2,3,4,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,4,0,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,2,2,3,4,2,3,4,2,2,2,2,2,2,3,4,2,3,4,2,3,4,3,4,2,2,2,2,2,2,2,3,3,2,3,3,4,2,2,2,3,4,2,2,3,4,2,2,2,2,2,2,2,2,2,2,4,2,2,4,3,2,3,4,2,3,4,2,3,4,2,2,2,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,35,35,36,0,0,0,0,0,0,0,35,0,36,37,36,35,38,39,40,41,42,37,36,35,38,39,40,41,42,37,36,35,38,39,40,41,42,36,35,36,35,37,36,35,38,39,40,41,42,37,36,35,38,39,40,41,42,37,36,35,38,39,40,41,42,37,38,39,40,41,42,37,36,35,38,39,40,41,42,37,36,35,38,39,40,41,42,37,36,35,38,39,40,41,42,36,35,37,36,35,38,39,40,41,42,37,36,35,38,39,40,41,42,0,0,36,35,37,36,35,38,39,40,41,42,37,36,35,38,39,40,41,42,37,36,35,38,39,40,41,42,37,36,35,38,39,40,41,42,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43],"f":[null,null,[[]],[[]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["transactioncontext",3]],["bool",15]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],null,[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],null,null,[[["transactioncontext",3]],["bool",15]],[[["accountaddress",3],["u64",15]],["transactioncontext",3]],[[["accountaddress",3],["u64",15],["option",4,["vmstatusview"]],["vmstatusview",4]],["transactioncontext",3]],null,[[],["result",4]],null,[[],["hashvalue",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["simplifiedaccountresource",3],["result",4,["simplifiedaccountresource","error"]],["error",4]]],[[],[["result",4,["transactioncontext","error"]],["transactioncontext",3],["error",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["error",4],["result",4,["string","error"]],["string",3]]],[[],[["error",4],["result",4,["string","error"]],["string",3]]],[[],["app",3]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["commandname",4]],["bool",15]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[],[["error",4],["result",4,["string","error"]],["string",3]]],[[],[["error",4],["result",4,["hashmap","error"]],["hashmap",3,["peerid","peer"]]]],[[],[["error",4],["result",4,["hashmap","error"]],["hashmap",3,["peerid","peer"]]]],[[],[["error",4],["result",4,["hashmap","error"]],["hashmap",3,["peerid","peer"]]]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["command",4]]],[[]],[[]],[[["argmatches",3]]],[[],[["result",4,["error"]],["error",4]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],[["result",4,["error"]],["error",4]]],[[]],[[]],[[]],[[],[["accountaddress",3],["result",4,["accountaddress","error"]],["error",4]]],[[],[["ed25519publickey",3],["result",4,["ed25519publickey","error"]],["error",4]]],[[["result",4,["transactioncontext","error"]],["transactioncontext",3],["error",4]],[["error",4],["result",4,["string","error"]],["string",3]]],[[],[["waypoint",3],["result",4,["waypoint","error"]],["error",4]]],[[],[["result",4,["publickey","error"]],["publickey",3],["error",4]]],[[],[["result",4,["transactioncontext","error"]],["transactioncontext",3],["error",4]]],[[],[["error",4],["result",4,["error"]]]],[[],[["error",4],["result",4,["error"]]]],[[],[["error",4],["result",4,["error"]]]],[[],[["error",4],["result",4,["error"]]]],[[],["result",4]],[[],[["result",4,["transactioncontext","error"]],["transactioncontext",3],["error",4]]],[[],[["result",4,["transactioncontext","error"]],["transactioncontext",3],["error",4]]],[[],["hashvalue",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["result",4,["transactioncontext","error"]],["transactioncontext",3],["error",4]]],[[],[["decryptedvalidatorconfig",3],["result",4,["decryptedvalidatorconfig","error"]],["error",4]]],[[],[["error",4],["result",4,["vec","error"]],["vec",3,["decryptedvalidatorinfo"]]]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["accountaddress",3]],[["error",4],["result",4,["accountresource","error"]],["accountresource",3]]],[[["accountaddress",3]],[["error",4],["accountstate",3],["result",4,["accountstate","error"]]]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[["string",3]],["jsonrpcclientwrapper",3]],[[["accountaddress",3]],[["u64",15],["result",4,["u64","error"]],["error",4]]],[[["signedtransaction",3]],[["result",4,["transactioncontext","error"]],["transactioncontext",3],["error",4]]],[[["accountaddress",3],["u64",15]],[["result",4,["option","error"]],["option",4,["vmstatusview"]],["error",4]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["accountaddress",3]],[["result",4,["validatorconfigresource","error"]],["validatorconfigresource",3],["error",4]]],[[["accountaddress",3],["option",4,["accountaddress"]]],[["result",4,["vec","error"]],["vec",3,["validatorinfo"]],["error",4]]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["keytype",4]],[[],["encodingtype",4]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],[["result",4,["error"]],["error",4]]],[[],[["error",4],["result",4,["hashmap","error"]],["hashmap",3,["peerid","peer"]]]],[[],[["error",4],["result",4,["hashmap","error"]],["hashmap",3,["peerid","peer"]]]],[[],[["error",4],["result",4,["hashmap","error"]],["hashmap",3,["peerid","peer"]]]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["pathbuf",3],["encodingtype",4]],[["validcryptomaterial",8],["result",4,["error"]],["error",4]]],[[["encodingtype",4],["path",3],["str",15]],[["result",4,["error"]],["error",4]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["accountaddress",3]],[["simplifiedaccountresource",3],["result",4,["simplifiedaccountresource","error"]],["error",4]]],[[["accountaddress",3],["securebackend",4],["bool",15]],[["result",4,["transactioncontext","error"]],["transactioncontext",3],["error",4]]],[[]],[[]],[[["networkid",4],["networkaddress",3]],[["error",4],["result",4,["string","error"]],["string",3]]],[[["privatekey",3],["networkid",4],["networkaddress",3]],[["error",4],["result",4,["string","error"]],["string",3]]],[[["commandname",4],["securebackend",4],["bool",15],["str",15]],[["result",4,["error"]],["error",4]]],[[["str",15],["securebackend",4],["bool",15]],[["result",4,["error"]],["error",4]]],[[["str",15],["securebackend",4],["bool",15]],[["result",4,["error"]],["error",4]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["encodingtype",4],["path",3]],[["error",4],["result",4,["hashmap","error"]],["hashmap",3,["peerid","peer"]]]],[[["str",15],["securebackend",4]],[["error",4],["result",4,["hashmap","error"]],["hashmap",3,["peerid","peer"]]]],[[["hashset",3,["publickey"]],["publickey",3],["path",3]],[["error",4],["result",4,["hashmap","error"]],["hashmap",3,["peerid","peer"]]]],[[["encodingtype",4],["securebackend",4],["str",15],["keytype",4]],[["result",4,["error"]],["error",4]]],[[["encodingtype",4],["securebackend",4],["str",15],["keytype",4]],[["result",4,["error"]],["error",4]]],[[]],[[["encodingtype",4],["path",3],["keytype",4]],[["result",4,["privatekey","error"]],["privatekey",3],["error",4]]],[[],["usize",15]],[[["waypoint",3],["securebackend",4],["bool",15]],[["result",4,["error"]],["error",4]]],[[]],[[["chainid",3],["string",3]],["operationaltool",3]],[[["str",15],["securebackend",4]],[["accountaddress",3],["result",4,["accountaddress","error"]],["error",4]]],[[["str",15],["securebackend",4]],[["ed25519publickey",3],["result",4,["ed25519publickey","error"]],["error",4]]],[[["str",15],["securebackend",4]],[["waypoint",3],["result",4,["waypoint","error"]],["error",4]]],[[["accountaddress",3],["securebackend",4],["bool",15]],[["result",4,["transactioncontext","error"]],["transactioncontext",3],["error",4]]],[[["securebackend",4],["bool",15]],[["error",4],["result",4,["error"]]]],[[["securebackend",4],["bool",15]],[["error",4],["result",4,["error"]]]],[[["securebackend",4],["bool",15]],[["error",4],["result",4,["error"]]]],[[["u64",15],["securebackend",4],["bool",15],["option",4,["u64"]]],[["error",4],["result",4,["error"]]]],[[["securebackend",4],["bool",15]],[["error",4],["result",4,["error"]]]],[[["securebackend",4],["networkaddress",3],["bool",15],["option",4,["networkaddress"]]],[["result",4,["transactioncontext","error"]],["transactioncontext",3],["error",4]]],[[["accountaddress",3],["securebackend",4],["bool",15],["str",15]],[["result",4,["transactioncontext","error"]],["transactioncontext",3],["error",4]]],[[],["operationaltool",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["accountaddress",3],["u64",15]],[["result",4,["transactioncontext","error"]],["transactioncontext",3],["error",4]]],[[["accountaddress",3],["securebackend",4],["option",4,["securebackend"]]],[["decryptedvalidatorconfig",3],["result",4,["decryptedvalidatorconfig","error"]],["error",4]]],[[["accountaddress",3],["securebackend",4],["option",4,["securebackend"]],["option",4,["accountaddress"]]],[["error",4],["result",4,["vec","error"]],["vec",3,["decryptedvalidatorinfo"]]]],[[]]],"p":[[3,"TransactionContext"],[4,"Command"],[4,"CommandName"],[4,"ResultWrapper"],[13,"AccountResource"],[13,"AddValidator"],[13,"CheckEndpoint"],[13,"CheckValidatorSetEndpoints"],[13,"CreateValidator"],[13,"CreateValidatorOperator"],[13,"ExtractPeerFromFile"],[13,"ExtractPeerFromStorage"],[13,"ExtractPeersFromKeys"],[13,"ExtractPrivateKey"],[13,"ExtractPublicKey"],[13,"GenerateKey"],[13,"InsertWaypoint"],[13,"PrintAccount"],[13,"PrintKey"],[13,"PrintXKey"],[13,"PrintWaypoint"],[13,"RemoveValidator"],[13,"RotateConsensusKey"],[13,"RotateFullNodeNetworkKey"],[13,"RotateOperatorKey"],[13,"RotateValidatorNetworkKey"],[13,"SetValidatorConfig"],[13,"SetValidatorOperator"],[13,"ValidateTransaction"],[13,"ValidatorConfig"],[13,"ValidatorSet"],[13,"Result"],[13,"Error"],[3,"JsonRpcClientWrapper"],[4,"EncodingType"],[4,"KeyType"],[3,"GenerateKey"],[3,"ExtractPeersFromKeys"],[3,"ExtractPeerFromFile"],[3,"ExtractPeerFromStorage"],[3,"ExtractPublicKey"],[3,"ExtractPrivateKey"],[3,"OperationalTool"]]},\
"diem_parallel_executor":{"doc":"","t":[0,0,0,4,13,13,6,13,13,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,16,16,4,8,16,16,8,13,13,16,16,16,8,8,16,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,10,10,11,11,11,11,12,12,10,11,11,11,11,11,11,12,12,12],"n":["errors","executor","task","Error","InferencerError","InvariantViolation","Result","UnestimatedWrite","UserError","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","init","into","try_from","try_into","type_id","0","MVHashMapView","ParallelTransactionExecutor","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","execute_transactions_parallel","from","from","has_unexpected_read","init","init","into","into","new","read","try_from","try_from","try_into","try_into","type_id","type_id","version","Abort","Accesses","Argument","Error","ExecutionStatus","ExecutorTask","Key","Output","ReadWriteSetInferencer","SkipRest","Success","T","T","T","Transaction","TransactionOutput","Value","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","execute_transaction","fmt","from","from","get_writes","infer_reads_writes","init","init","init","into","into","keys_read","keys_written","skip_output","try_from","try_from","try_into","try_into","type_id","type_id","0","0","0"],"q":["diem_parallel_executor","","","diem_parallel_executor::errors","","","","","","","","","","","","","","","","","","diem_parallel_executor::errors::Error","diem_parallel_executor::executor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_parallel_executor::task","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_parallel_executor::task::ExecutionStatus","",""],"d":["","","","","The inference can’t get the read/write set of a …","Invariant violation that happens internally inside of …","","A transaction write to a key that wasn’t estimated by …","Execution of a thread yields a non-recoverable error, such …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Transaction hit a none recoverable error during execution, …","Inference result of a transaction.","Type to intialize the single thread transaction executor. …","Type of error when the executor failed to process a …","The execution result of a transaction","Trait for single threaded transaction executor.","","The output of a transaction. This should contain the side …","Trait for inferencing the read and write set of a …","Transaction was executed successfully, but will skip the …","Transaction was executed successfully.","Type of transaction and its associated key.","Type of transaction and its associated key and value.","Type of transaction and its associated key and value.","Trait that defines a transaction that could be parallel …","Trait for execution result of a transaction.","","","","","","","","","","","","Execute one single transaction given the view of the …","","","","Get the side effect of a transaction from its output.","Get the read and write set of a transaction.","Create an instance of the transaction executor.","","","","","","","Execution output for transactions that comes after …","","","","","","","","",""],"i":[0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0,0,3,4,3,4,3,4,3,4,3,4,4,3,4,3,3,4,3,4,4,3,3,4,3,4,3,4,3,5,0,6,6,0,0,7,6,0,5,5,8,6,9,0,0,7,10,5,10,5,10,5,10,5,10,5,6,5,10,5,9,8,6,10,5,10,5,10,10,9,10,5,10,5,10,5,11,12,13],"f":[null,null,null,null,null,null,null,null,null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["vec",3]],[["result",6,["vec"]],["vec",3]]],[[]],[[]],[[],["bool",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[],[["aresult",6,["option"]],["option",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["version",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["mvhashmapview",3]],["executionstatus",4]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["vec",3]],[[],[["result",6,["accesses"]],["accesses",3]]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null],"p":[[4,"Error"],[13,"UserError"],[3,"MVHashMapView"],[3,"ParallelTransactionExecutor"],[4,"ExecutionStatus"],[8,"ExecutorTask"],[8,"Transaction"],[8,"ReadWriteSetInferencer"],[8,"TransactionOutput"],[3,"Accesses"],[13,"Success"],[13,"Abort"],[13,"SkipRest"]]},\
"diem_proptest_helpers":{"doc":"","t":[3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5],"n":["GrowingSubset","Index","RepeatVec","ValueGenerator","advance_to","arbitrary_with","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","current","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deterministic","drop","drop","drop","drop","eq","extend","fmt","fmt","fmt","from","from","from","from","from_iter","generate","get","hash","init","init","init","init","into","into","into","into","is_empty","is_empty","len","len","ne","new","new","new_with_rng","pick_idxs","pick_item","pick_slice_idxs","pick_uniform","pick_uniform_indexes","pick_value","remove","remove_all","to_owned","to_owned","to_owned","total_len","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","with_capacity","with_stack_size"],"q":["diem_proptest_helpers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A set of elements, each with an associated key, that grows …","Wrapper for <code>proptest</code>’s <code>Index</code> that allows <code>AsRef</code> to work.","An efficient representation of a vector with repeated …","Context for generating single values out of strategies.","Advances the valid subset to the provided index. After the …","","","","","","","","","","","","","","","","","Returns a slice containing the items in the <em>current subset</em>.","","","","","","","","","","","","Creates a new value generator with a deterministic RNG.","","","","","","Extends this <code>RepeatVec</code> by logically adding <code>size</code> copies of …","","","","","","","","","Generates a single value for this strategy.","Returns the item at location <code>at</code>. The return value is a …","","","","","","","","","","Returns <code>true</code> if the <em>current subset</em> contains no elements.","Returns <code>true</code> if this <code>RepeatVec</code> has no <em>logical</em> elements.","Returns the number of elements in the <em>current subset</em>.","Returns the <em>logical</em> number of elements in this <code>RepeatVec</code>.","","Creates a new, empty <code>RepeatVec</code>.","Creates a new value generator with the default RNG.","Creates a new value generator with provided RNG","Given a maximum value <code>max</code> and a list of <code>Index</code> instances, …","Chooses an (index, value) pair from the <em>current subset</em> …","Given a maximum value <code>max</code> and a slice of <code>Index</code> instances, …","Picks out elements uniformly randomly from this <code>RepeatVec</code>, …","Picks out indexes uniformly randomly from this <code>RepeatVec</code>, …","Chooses a value from the <em>current subset</em> using the provided …","Removes the item specified by the given <em>logical</em> index, …","Removes the items specified by the given <em>logical</em> indexes, …","","","","Returns the total number of elements in the universal set.","","","","","","","","","","","","","","","","","Creates a new, empty <code>RepeatVec</code> with the specified capacity …","Creates a new thread with a larger stack size."],"i":[0,0,0,0,1,2,2,1,3,4,2,1,3,4,2,1,3,2,1,3,2,1,3,4,1,3,4,2,2,1,3,4,2,4,1,3,4,2,3,3,1,3,2,1,3,4,2,1,4,3,3,1,3,4,2,1,3,4,2,1,3,1,3,3,3,4,4,0,1,0,3,3,1,3,3,1,3,2,1,1,3,4,2,1,3,4,2,1,3,4,2,1,3,4,2,3,0],"f":[null,null,null,null,[[]],[[]],[[],["propindex",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["growingsubset",3]],[[],["repeatvec",3]],[[],["index",3]],[[]],[[]],[[]],[[]],[[],["repeatvec",3]],[[],["valuegenerator",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["propindex",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["repeatvec",3]],["bool",15]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["strategy",8]]],[[["usize",15]],["option",4]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["usize",15]],[[],["usize",15]],[[["repeatvec",3]],["bool",15]],[[]],[[]],[[["testrng",3]]],[[["usize",15]],[["vec",3,["usize"]],["usize",15]]],[[["index",3]]],[[["usize",15]],[["vec",3,["usize"]],["usize",15]]],[[],["vec",3]],[[],[["vec",3,["usize"]],["usize",15]]],[[["index",3]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]],[["result",4,["box"]],["box",3,["any"]]]]],"p":[[3,"GrowingSubset"],[3,"Index"],[3,"RepeatVec"],[3,"ValueGenerator"]]},\
"diem_rate_limiter":{"doc":"","t":[0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,3,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["async_lib","rate_limit","AsyncRateLimiter","borrow","borrow_mut","from","into","new","poll_close","poll_flush","poll_read","poll_write","try_from","try_into","type_id","Bucket","SharedBucket","TokenBucketRateLimiter","acquire_all_tokens","acquire_tokens","borrow","borrow","borrow_mut","borrow_mut","bucket","fmt","from","from","into","into","new","new","open","open","return_tokens","test","time_of_next_refill","time_of_tokens_needed","try_from","try_from","try_garbage_collect_key","try_into","try_into","type_id","type_id"],"q":["diem_rate_limiter","","diem_rate_limiter::async_lib","","","","","","","","","","","","","diem_rate_limiter::rate_limit","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","A rate limiter for <code>AsyncRead</code> or <code>AsyncWrite</code> interfaces to …","","","","","","","","","","","","","A token bucket object that keeps track of everything …","","A generic token bucket filter","Determine if an entire batch can be passed through This is …","Returns <code>usize</code> of tokens allowed.  May be less than …","","","","","Retrieve bucket, or create a new one","","","","","","","","Used for testing and to not have a rate limiter","A fully open rate limiter, to allow for ignoring rate …","Returns tokens that were unused","","Tells us when the next refill is","Tells us when an entire batch will make it through.  …","","","Garbage collects a single key, if we know what it is","","","",""],"i":[0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,2,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,2,3,2,2,3,2,3,3,2,3,2],"f":[null,null,null,[[]],[[]],[[]],[[]],[[["sharedbucket",6],["option",4,["sharedbucket"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6]]],[[["pin",3],["context",3]],[["result",6,["usize"]],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",6,["usize"]],["poll",4,["result"]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,[[["usize",15]],[["result",4,["option"]],["option",4,["instant"]]]],[[["usize",15]],[["usize",15],["result",4,["usize","instant"]],["instant",3]]],[[]],[[]],[[]],[[]],[[],["sharedbucket",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["usize",15],["u8",15],["histogramvec",6],["option",4,["histogramvec"]],["string",3],["str",15]]],[[["usize",15],["histogramvec",6],["option",4,["histogramvec"]],["string",3]]],[[["str",15]]],[[["string",3]]],[[["usize",15]]],[[["usize",15]]],[[],["instant",3]],[[["usize",15]],[["option",4,["instant"]],["instant",3]]],[[],["result",4]],[[],["result",4]],[[],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"AsyncRateLimiter"],[3,"Bucket"],[3,"TokenBucketRateLimiter"]]},\
"diem_resource_viewer":{"doc":"","t":[13,3,3,4,13,13,3,13,13,13,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12],"n":["Address","AnnotatedAccountStateBlob","AnnotatedMoveStruct","AnnotatedMoveValue","Bool","Bytes","DiemValueAnnotator","Struct","U128","U64","U8","Vector","abilities","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","get_type","into","into","into","into","new","serialize","serialize","test_only_hash","test_only_hash","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","value","view_access_path","view_account_state","view_contract_event","view_resource","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","1"],"q":["diem_resource_viewer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_resource_viewer::AnnotatedMoveValue","","","","","","","",""],"d":["","A wrapper around <code>MoveValueAnnotator</code> that adds a few …","","AnnotatedMoveValue is a fully expanded version of on chain …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,0,0,0,1,1,0,1,1,1,1,1,2,3,4,2,1,3,4,2,1,2,1,2,1,4,4,2,2,1,1,3,4,2,1,1,3,4,2,1,3,2,1,2,1,2,1,4,2,1,3,4,2,1,3,4,2,1,2,3,4,2,1,2,3,3,3,3,3,4,2,1,5,6,7,8,9,10,11,12,10],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["annotatedmovestruct",3]],[[],["annotatedmovevalue",4]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[],["typetag",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[["accesspath",3]],[["annotatedmovestruct",3],["result",6,["annotatedmovestruct"]]]],[[["accountstate",3]],[["annotatedaccountstateblob",3],["result",6,["annotatedaccountstateblob"]]]],[[["contractevent",4]],[["result",6,["annotatedmovevalue"]],["annotatedmovevalue",4]]],[[["structtag",3]],[["annotatedmovestruct",3],["result",6,["annotatedmovestruct"]]]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null],"p":[[4,"AnnotatedMoveValue"],[3,"AnnotatedMoveStruct"],[3,"DiemValueAnnotator"],[3,"AnnotatedAccountStateBlob"],[13,"U8"],[13,"U64"],[13,"U128"],[13,"Bool"],[13,"Address"],[13,"Vector"],[13,"Bytes"],[13,"Struct"]]},\
"diem_retrier":{"doc":"","t":[3,3,11,11,11,11,5,5,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11],"n":["ExponentWithLimitDelay","FixedDelay","borrow","borrow","borrow_mut","borrow_mut","exp_retry_strategy","fixed_retry_strategy","from","from","into","into","into_iter","into_iter","next","next","retry","retry_async","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["diem_retrier","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","An iterator which uses a fixed delay","","","","","","","","","","","","","","","Given an operation retries it successfully sleeping …","","","","","","",""],"i":[0,0,1,2,1,2,0,0,1,2,1,2,1,2,1,2,0,0,1,2,1,2,1,2],"f":[null,null,[[]],[[]],[[]],[[]],[[["u64",15],["usize",15]]],[[["u64",15],["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4,["duration"]],["duration",3]]],[[],[["option",4,["duration"]],["duration",3]]],[[],["result",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"FixedDelay"],[3,"ExponentWithLimitDelay"]]},\
"diem_sdk":{"doc":"The official Rust SDK for Diem.","t":[0,0,0,0,0,3,3,3,3,3,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,4,4,4,3,6,3,3,3,3,6,13,13,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,4,7,13,13,13,4,3,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,4,4,13,13,3,13,13,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,13,3,4,3,13,4,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,12,12,12,4,3,3,3,3,3,13,3,13,13,13,3,13,13,13,13,3,13,13,3,4,3,3,13,13,3,13,13,13,3,13,13,13,13,13,3,3,13,13,13,3,13,3,13,4,3,3,3,3,13,13,13,13,13,13,13,13,4,13,13,12,12,12,12,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,4,13,8,3,18,18,8,13,8,16,8,16,13,8,16,16,8,16,16,13,8,8,8,13,8,16,16,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,0,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,0,11,0,11,11,11,11,10,0,11,11,11,11,0,11,11,11,11,11,11,10,10,5,11,0,10,10,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,0,10,10,11,11,11,11,0,11,12,0,0,0,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,3,3,3,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,17,3,17,3,16,17,3,17,17,3,3,3,6,8,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,12,10,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,17,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,8,8,8,11,10,11,10,10,3,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,7,8,8,3,7,3,3,3,16,7,7,3,8,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,13,13,13,3,17,13,3,4,3,13,13,13,3,13,13,13,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,17,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,13,13,4,13,8,8,13,8,16,8,16,13,8,16,16,8,16,16,13,8,8,8,13,8,16,16,13,11,11,11,10,11,10,10,11,10,10,5,10,10,11,10,10,11,11,12,16,3,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,10,11,11,11,17,17,3,3,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,3,4,13,3,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,17,3,17,8,6,3,3,3,3,3,17,17,17,17,17,17,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,10,11,11,11,11,12,12,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,12,11,11,12,12,12,12,12,12,11,11,12,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,17,17,3,17,3,13,13,3,4,13,13,13,13,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,12,12,18,8,8,18,11,11,11,11,11,5,5,5,5,5,5,16,16,16,8,8,8,10,10,13,13,4,13,13,13,13,3,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,13,13,13,13,3,4,4,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,7,7,13,13,13,13,13,13,6,13,13,13,13,13,13,13,13,7,7,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,7,7,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,7,7,13,13,13,13,13,7,7,13,4,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,7,17,7,17,7,17,5,5,5,17,17,4,3,3,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,3,0,0,0,0,0,11,11,11,0,0,11,11,11,11,0,0,0,0,0,0,0,11,11,11,11,11,11,11,11,11,11,0,0,0,0,11,0,0,11,11,0,0,0,11,11,11,11,11,0,11,11,11,0,0,0,0,11,11,11,11,11,11,0,0,0,0,0,11,11,0,0,3,13,4,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,8,5,5,10,7,17,3,4,4,3,3,3,3,7,17,13,3,3,3,3,13,3,3,3,3,7,17,7,17,3,13,4,7,17,3,3,3,3,3,3,3,3,13,13,3,13,3,3,3,3,3,3,3,13,3,13,13,3,3,3,3,17,3,17,7,17,17,17,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,12,12,12,12,12,12,12,12,12,12,12,12,12,7,17,7,17,7,17,7,17,7,17,17,7,17,17,17,0,0,5,5,0,5,0,0,5,0,5,5,5,5,5,5,5,5,7,17,17,5,5,5,5,5,17,7,17,17,17,5,5,5,7,17,7,7,17,5,5,5,5,7,17,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,3,13,3,3,3,13,3,3,3,13,4,3,3,3,3,13,13,13,3,3,3,3,13,13,13,3,3,3,3,17,3,0,0,0,0,0,0,12,12,0,0,0,12,0,0,0,0,0,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,3,4,13,3,13,12,12,12,3,3,4,13,13,12,12,3,3,12,3,3,3,3,3,4,13,13,13,13,13,12,12,12,12,12,12,12,12,3,3,3,3,3,3,3,17,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,6,3,17,17,17,17,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,7,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,13,13,4,13,13,13,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,3,3,3,3,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,6,6,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,3,8,11,11,11,11,11,11,11,10,11,11,11,11,11,10,12,12,11,11,11,11,11,11,11,11,10,11,11,3,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,3,3,3,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,13,13,13,3,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,10,10,10,13,13,13,13,13,13,3,13,13,3,13,13,13,13,13,13,4,13,3,13,13,13,13,4,13,13,4,13,13,13,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,17,17,3,17,17,6,6,17,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,3,3,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,3,8,3,3,3,17,17,17,17,3,18,17,8,3,4,3,13,13,3,3,3,11,5,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,3,3,3,6,6,3,3,6,3,3,3,3,6,6,6,6,6,6,3,3,3,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,3,3,3,3,6,6,3,3,6,6,3,6,6,3,3,3,3,3,6,3,6,17,17,3,3,6,6,6,6,3,3,3,0,12,12,12,12,6,3,3,3,3,6,6,3,3,6,6,3,6,6,3,3,3,3,13,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,3,3,3,3,3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,18,8,16,11,11,11,11,11,11,11,11,11,11,11,11,0,5,5,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,5,5,5,5,5,5,5,5,12,3,13,3,13,13,3,13,13,13,13,13,4,13,3,13,13,13,17,3,3,4,3,13,3,13,13,4,3,13,13,3,3,3,4,4,3,3,3,8,3,3,3,4,13,3,4,3,3,13,3,13,13,13,13,13,3,13,13,3,6,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,12,12,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,4,4,3,3,3,13,13,13,18,17,13,13,13,13,13,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,6,6,6,6,6,8,5,5,10,4,13,3,13,4,13,3,13,13,13,4,13,4,13,3,13,4,13,3,13,4,4,13,3,13,13,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,4,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,5,5,5,5,5,13,13,13,13,13,3,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,6,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,7,17,7,17,7,17,5,5,5,17,17,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,4,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["client","crypto","move_types","transaction_builder","types","AccountAddress","BlockingClient","Client","Error","Event","FaucetClient","GetAccount","GetAccount","GetAccount","GetAccountStateWithProof","GetAccountStateWithProof","GetAccountStateWithProof","GetAccountTransaction","GetAccountTransaction","GetAccountTransaction","GetAccountTransactions","GetAccountTransactions","GetAccountTransactions","GetAccountTransactionsWithProofs","GetAccountTransactionsWithProofs","GetAccountTransactionsWithProofs","GetAccumulatorConsistencyProof","GetAccumulatorConsistencyProof","GetAccumulatorConsistencyProof","GetCurrencies","GetCurrencies","GetCurrencies","GetEventByVersionWithProof","GetEventByVersionWithProof","GetEventByVersionWithProof","GetEvents","GetEvents","GetEvents","GetEventsWithProofs","GetEventsWithProofs","GetEventsWithProofs","GetMetadata","GetMetadata","GetMetadata","GetNetworkStatus","GetNetworkStatus","GetNetworkStatus","GetStateProof","GetStateProof","GetStateProof","GetTransactionError","GetTransactions","GetTransactions","GetTransactions","GetTransactionsWithProofs","GetTransactionsWithProofs","GetTransactionsWithProofs","JsonRpcRequest","Method","MethodRequest","MethodResponse","Response","Result","Retry","SignedTransaction","State","StreamError","StreamResult","Submit","Submit","Submit","Timeout","TransactionExecutionFailed","TransactionExpired","TransactionHashMismatchError","WaitForTransactionError","and_then","batch","batch","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_id","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","create_account","data","default","delay","deserialize","deserialize","deserialize","eq","eq","equivalent","errors","event","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_json","from_response","fund","get_account","get_account","get_account","get_account_by_version","get_account_by_version","get_account_by_version","get_account_state_with_proof","get_account_state_with_proof","get_account_state_with_proof","get_account_transaction","get_account_transaction","get_account_transaction","get_account_transactions","get_account_transactions","get_account_transactions","get_account_transactions_with_proofs","get_account_transactions_with_proofs","get_account_transactions_with_proofs","get_accumulator_consistency_proof","get_accumulator_consistency_proof","get_accumulator_consistency_proof","get_currencies","get_currencies","get_currencies","get_deserialized_events","get_deserialized_events","get_deserialized_resource","get_deserialized_resource","get_event_by_version_with_proof","get_event_by_version_with_proof","get_event_by_version_with_proof","get_events","get_events","get_events","get_events_with_proofs","get_events_with_proofs","get_events_with_proofs","get_metadata","get_metadata","get_metadata","get_metadata_by_version","get_metadata_by_version","get_metadata_by_version","get_network_status","get_network_status","get_network_status","get_state_proof","get_state_proof","get_state_proof","get_transactions","get_transactions","get_transactions","get_transactions_with_proofs","get_transactions_with_proofs","get_transactions_with_proofs","id","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_parts","is_need_sync","is_retriable","json_rpc_error","json_rpc_error","last_known_state","last_known_state","max_retries","method","method","method","mint","ne","ne","new","new","new","new","new","new","new_with_retry","none","partial_cmp","request","request","serialize","serialize","serialize","source","source","source","state","stream","submit","submit","submit","test_only_hash","test_only_hash","test_only_hash","timestamp_usecs","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_get_account","try_into_get_account_state_with_proof","try_into_get_account_transaction","try_into_get_account_transactions","try_into_get_accumulator_consistency_proof","try_into_get_currencies","try_into_get_event_by_version_with_proof","try_into_get_events","try_into_get_metadata","try_into_get_network_status","try_into_get_state_proof","try_into_get_transactions","try_into_submit","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap_get_account","version","views","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_for_signed_transaction","wait_for_signed_transaction","wait_for_transaction","wait_for_transaction","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","1","1","1","1","1","1","1","1","1","2","2","2","2","2","2","2","2","3","3","4","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","DefaultServerError","ErrorData","INTERNAL_ERRORS","InvalidFormat","InvalidParams","InvalidRequest","InvalidRequestCode","JsonRpcError","MempoolInvalidSeqNumber","MempoolInvalidUpdate","MempoolIsFull","MempoolTooManyTransactions","MempoolUnknownError","MempoolVmError","MethodNotFound","ParseError","ServerCode","StatusCode","VmDeserializationError","VmExecutionError","VmInvariantViolationError","VmUnknownError","VmValidationError","VmVerificationError","as_status_code","as_str","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","code","code_as_str","data","deserialize","deserialize","fmt","fmt","fmt","from","from","from","from","from","from","from","from_i64","from_u64","internal_error","into","into","into","into","invalid_format","invalid_param","invalid_params","invalid_params_size","invalid_request","invalid_request_with_data","invalid_request_with_msg","is_internal_error","mempool_error","message","method_not_found","serialize","serialize","serialize","test_only_hash","test_only_hash","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vm_status","vzip","vzip","vzip","vzip","0","StreamingClient","StreamingClientConfig","SubscriptionStream","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","channel_size","clone","clone_into","default","drop","from","from","from","id","into","into","into","new","ok_timeout_millis","poll_next","request","response","send_subscription","subscribe_events","subscribe_transactions","subscription_count","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","vzip","vzip","vzip","wait_for_msg","StreamJsonRpcRequest","StreamMethod","StreamMethodRequest","SubscribeToEvents","SubscribeToEvents","SubscribeToEventsParams","SubscribeToTransactions","SubscribeToTransactions","SubscribeToTransactionsParams","Unsubscribe","Unsubscribe","as_str","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","deserialize","eq","equivalent","event_key","event_seq_num","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","from_value","hash","id","include_events","into","into","into","into","into","method","method_name","method_name","method_request","new","serialize","serialize","serialize","serialize","serialize","starting_version","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","0","0","Event","OK","StreamJsonRpcResponse","StreamJsonRpcResponseView","SubscribeResult","SubscribeResult","SubscriptionResult","Transaction","UnsubscribeResult","UnsubscribeResult","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","error","error","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","id","into","into","into","into","into","jsonrpc","ne","ne","ne","ok","ok","parse_result","result","result","serialize","serialize","serialize","serialize","serialize","status","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_owned","transaction_version","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unsubscribe","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","AccountRoleView","AccountStateProofView","AccountStateWithProofView","AccountTransactionsWithProofView","AccountView","AccumulatorConsistencyProofView","AdminTransaction","AmountView","BaseUrlRotation","BlockMetadata","Burn","BytesView","CancelBurn","ChildVASP","ComplianceKeyRotation","CreateAccount","CurrencyInfoView","DeserializationError","DesignatedDealer","EventByVersionWithProofView","EventDataView","EventView","EventWithProofView","Executed","ExecutionFailure","MetadataView","Mint","MiscellaneousError","MoveAbort","MoveAbortExplanationView","NewBlock","NewEpoch","OutOfGas","ParentVASP","Preburn","PreburnQueueView","PreburnWithMetadataView","PublishingFailure","ReceivedMint","ReceivedPayment","ScriptView","SentPayment","StateProofView","ToXDXExchangeRateUpdate","TransactionDataView","TransactionListView","TransactionView","TransactionsProofsView","TransactionsWithProofsView","TreasuryCompliance","Unknown","Unknown","Unknown","UnknownToClient","UnknownTransaction","UserTransaction","VASPDomain","VMStatusView","VerificationError","WriteSet","accumulator_root_hash","address","amount","amount","arguments","arguments_bcs","as_ref","authentication_key","balances","blob","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","burn_events_key","bytes","cancel_burn_events_key","category","category_description","chain_id","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","code","currency","currency","currency","data","default","delegated_key_rotation_capability","delegated_withdrawal_capability","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diem_version","dual_attestation_limit","empty","encode_hex","encode_hex_upper","epoch_change_proof","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","event_with_proof","events","exchange_rate_update_events_key","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fractional_part","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","function_name","gas_used","hash","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","is_executed","is_frozen","key","ledger_consistency_proof","ledger_consistency_proof","ledger_info_to_transaction_info_proof","ledger_info_to_transaction_infos_proof","ledger_info_with_signatures","lower_bound_incl","metadata","metadata","metadata_signature","mint_events_key","module_address","module_name","module_publishing_allowed","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","preburn","preburn_events_key","preburns","proof","proofs","reason","reason_description","received_events_key","receiver","role","scaling_factor","script_hash_allow_list","sent_events_key","sequence_number","sequence_number","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialized_events","serialized_transactions","serialized_txns_with_proofs","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_xdx_exchange_rate","transaction","transaction_info","transaction_info_to_account_proof","transaction_infos","transaction_version","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_account_state","try_from_tx_and_events","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_txn_list_with_proof","type","type_arguments","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unknown","upper_bound_excl","version","version","version","version","vm_status","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_diem_root","base_url","base_url","base_url_rotation_events_key","base_url_rotation_events_key","compliance_key","compliance_key","compliance_key_rotation_events_key","compliance_key_rotation_events_key","expiration_time","expiration_time","human_name","human_name","num_children","parent_vasp_address","preburn_balances","preburn_queues","received_mint_events_key","vasp_domain_events_key","vasp_domains","address","amount","amount","amount","amount","amount","amount","amount","bytes","committed_timestamp_secs","created_address","currency_code","destination_address","domain","epoch","metadata","metadata","new_base_url","new_compliance_public_key","new_to_xdx_exchange_rate","preburn_address","preburn_address","preburn_address","proposed_time","proposer","receiver","receiver","removed","role_id","round","sender","sender","time_rotated_seconds","time_rotated_seconds","chain_id","expiration_timestamp_secs","gas_currency","gas_unit_price","max_gas_amount","public_key","script","script_bytes","script_hash","secondary_public_keys","secondary_signature_schemes","secondary_signatures","secondary_signers","sender","sequence_number","signature","signature_scheme","timestamp_usecs","abort_code","code_offset","explanation","function_index","location","location","BitVecError","CanonicalRepresentationError","CryptoMaterialError","DeserializationError","Genesis","HashValue","LENGTH","LENGTH_IN_BITS","Length","PointNotOnCurveError","PrivateKey","PrivateKeyMaterial","PublicKey","PublicKeyMaterial","SerializationError","Signature","SignatureMaterial","SignatureMaterial","SigningKey","SigningKeyMaterial","SigningKeyMaterial","SmallSubgroupError","Uniform","ValidCryptoMaterial","ValidCryptoMaterialStringExt","ValidationError","VerifyingKey","VerifyingKeyMaterial","VerifyingKeyMaterial","WrongLengthError","arbitrary_with","as_ref","batch_verify","batch_verify","bit","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","common_prefix_bits_len","compat","default","deref","deserialize","ed25519","eq","eq","equivalent","equivalent","error","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bit_iter","from_encoded_string","from_hex","from_slice","from_str","from_u64","generate","generate_for_testing","genesis","hash","hash","hkdf","index","into","into","iter_bits","length","multi_ed25519","ne","ne","new","nibble","noise","partial_cmp","public_key","random","random_with_rng","serialize","sha3_256_of","sign","sign_arbitrary_message","signing_message","test_only_hash","test_utils","to_bytes","to_bytes","to_encoded_string","to_hex","to_hex_literal","to_owned","to_owned","to_string","to_string","to_vec","traits","try_from","try_from","try_into","try_into","type_id","type_id","validatable","verify","verify_arbitrary_msg","verify_struct_signature","verifying_key","vzip","vzip","x25519","zero","0","race","sync","unsync","OnceBool","OnceBox","OnceNonZeroUsize","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","default","default","drop","fmt","fmt","fmt","from","from","from","get","get","get","get_or_init","get_or_init","get_or_init","get_or_try_init","get_or_try_init","get_or_try_init","into","into","into","new","new","new","set","set","set","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Lazy","OnceCell","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","default","deref","deref_mut","eq","equivalent","fmt","fmt","force","from","from","from","from","get","get_mut","get_or_init","get_or_try_init","get_unchecked","into","into","into_inner","into_value","new","new","set","take","to_owned","try_from","try_from","try_insert","try_into","try_into","type_id","type_id","vzip","vzip","Lazy","OnceCell","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","default","deref","deref_mut","eq","equivalent","fmt","fmt","force","from","from","from","from","get","get_mut","get_or_init","get_or_try_init","into","into","into_inner","into_value","new","new","set","take","to_owned","try_from","try_from","try_insert","try_into","try_into","type_id","type_id","vzip","vzip","trace_name","Sha3_256","borrow","borrow_mut","box_clone","chain","clone","clone_into","default","digest","finalize","finalize","finalize_into","finalize_into_reset","finalize_reset","finalize_reset","from","into","new","output_size","output_size","reset","reset","reset","to_owned","try_from","try_into","type_id","update","update","update","vzip","ED25519_PRIVATE_KEY_LENGTH","ED25519_PUBLIC_KEY_LENGTH","ED25519_SIGNATURE_LENGTH","Ed25519PrivateKey","Ed25519PublicKey","Ed25519Signature","LENGTH","LENGTH","arbitrary_with","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_malleability","clone","clone","clone","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","dummy_signature","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","generate","genesis","hash","hash","into","into","into","keypair_strategy","length","length","length","serialize","serialize","serialize","sign","sign_arbitrary_message","test_only_hash","test_only_hash","test_only_hash","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_unvalidated","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate","verify","verify_arbitrary_msg","vzip","vzip","vzip","Digest","EXPANDED_SECRET_KEY_LENGTH","ExpandedSecretKey","KEYPAIR_LENGTH","Keypair","OutputSize","PUBLIC_KEY_LENGTH","PublicKey","SECRET_KEY_LENGTH","SIGNATURE_LENGTH","SecretKey","Sha512","Signature","SignatureError","Signer","Verifier","as_bytes","as_bytes","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","box_clone","chain","chain","clone","clone","clone","clone_into","clone_into","clone_into","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","digest","digest","drop","drop","encode_hex","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","encode_hex_upper","eq","eq","equivalent","equivalent","finalize","finalize","finalize","finalize_into","finalize_into_dirty","finalize_into_reset","finalize_reset","finalize_reset","finalize_reset","flush","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","generate","generate","into","into","into","into","into","into","ne","new","new","new","output_size","output_size","output_size","public","reset","reset","reset","reset","secret","serialize","serialize","serialize","serialize","serialize","sign","sign","sign_prehashed","sign_prehashed","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_sign","try_sign","type_id","type_id","type_id","type_id","type_id","type_id","update","update","update","update","verify","verify","verify","verify","verify_prehashed","verify_prehashed","verify_strict","verify_strict","vzip","vzip","vzip","vzip","vzip","vzip","write","zeroize","zeroize","Error","SIGNATURE_LENGTH","Signature","borrow","borrow_mut","default","fmt","fmt","from","from","from","from_source","into","new","source","to_string","try_from","try_into","type_id","vzip","Error","Signature","Signer","Verifier","as_bytes","from_bytes","sign","try_sign","verify","Error","as_ref","as_ref","backtrace","bail","borrow","borrow_mut","chain","context","deref","deref_mut","downcast","downcast_mut","downcast_ref","drop","fmt","fmt","from","from","from","into","is","msg","new","root_cause","to_string","try_from","try_into","type_id","vzip","ACCUMULATOR_PLACEHOLDER_HASH","CryptoHash","CryptoHasher","EventAccumulatorHasher","GENESIS_BLOCK_ID","HashValue","HashValueBitIterator","HashValueParseError","Hasher","PRE_GENESIS_BLOCK_ID","SPARSE_MERKLE_PLACEHOLDER_HASH","SparseMerkleInternalHasher","TestOnlyHash","TestOnlyHasher","TransactionAccumulatorHasher","VoteProposalHasher","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","finish","finish","finish","finish","finish","finish","flush","flush","flush","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","hash_all","into","into","into","into","into","into","into","into_iter","next","next_back","seed","seed","seed","seed","seed","seed","size_hint","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","update","update","update","update","update","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write","write","write","write","write","Hkdf","HkdfError","InvalidOutputLengthError","InvalidSeedLengthError","MACKeyError","WrongPseudorandomKeyError","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","equivalent","expand","extract","extract_then_expand","extract_then_expand_no_ikm","fmt","fmt","fmt","from","from","into","into","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","MultiEd25519PrivateKey","MultiEd25519PublicKey","MultiEd25519Signature","bitmap","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","generate","genesis","hash","hash","into","into","into","length","length","length","ne","ne","ne","new","new","new","new_with_signatures_and_bitmap","public_keys","serialize","serialize","serialize","sign","sign_arbitrary_message","signatures","test_only_hash","test_only_hash","test_only_hash","threshold","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verify","verify_arbitrary_msg","vzip","vzip","vzip","AES_GCM_TAGLEN","Decrypt","Encrypt","Hkdf","InitiatorHandshakeState","MAX_SIZE_NOISE_MSG","MsgTooShort","NoiseConfig","NoiseError","NoiseSession","NonceOverflow","PayloadTooLarge","ReceivedMsgTooLarge","ResponderHandshakeState","ResponseBufferTooSmall","SessionClosed","WrongPublicKeyReceived","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","decrypted_len","encrypted_len","finalize_connection","fmt","fmt","fmt","fmt","from","from","from","from","from","get_remote_static","handshake_init_msg_len","handshake_resp_msg_len","initiate_connection","into","into","into","into","into","new","new_for_testing","parse_client_init_message","public_key","read_message_in_place","respond_to_client","respond_to_client_and_finalize","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","write_message_in_place","0","KeyPair","TEST_SEED","TestDiemCrypto","TestDiemCryptoHasher","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deserialize","deserialize","eq","equivalent","finish","flush","fmt","fmt","from","from","from","from","from","generate","hash","into","into","into","ne","private_key","public_key","random_serializable_struct","seed","serialize","serialize","sign_txn","test_only_hash","test_only_hash","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","uniform_keypair_strategy","uniform_keypair_strategy_with_perturbation","update","vzip","vzip","vzip","write","BitVecError","CanonicalRepresentationError","CryptoMaterialError","DeserializationError","Genesis","Length","PointNotOnCurveError","PrivateKey","PrivateKeyMaterial","PublicKey","PublicKeyMaterial","SerializationError","Signature","SignatureMaterial","SignatureMaterial","SigningKey","SigningKeyMaterial","SigningKeyMaterial","SmallSubgroupError","Uniform","ValidCryptoMaterial","ValidCryptoMaterialStringExt","ValidationError","VerifyingKey","VerifyingKeyMaterial","VerifyingKeyMaterial","WrongLengthError","batch_verify","batch_verify","from_encoded_string","generate","generate_for_testing","genesis","length","public_key","sign","sign_arbitrary_message","signing_message","to_bytes","to_bytes","to_encoded_string","verify","verify_arbitrary_msg","verify_struct_signature","verifying_key","0","Unvalidated","UnvalidatedEd25519PublicKey","Validatable","Validate","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","hash","hash","into","into","new_unvalidated","new_valid","serialize","serialize","test_only_hash","test_only_hash","to_bytes","to_owned","to_owned","to_unvalidated","try_from","try_from","try_into","try_into","type_id","type_id","unvalidated","valid","validate","validate","vzip","vzip","PRIVATE_KEY_SIZE","PUBLIC_KEY_SIZE","PrivateKey","PublicKey","SHARED_SECRET_SIZE","arbitrary_with","arbitrary_with","as_slice","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","default","deserialize","deserialize","diffie_hellman","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_ed25519_private_bytes","from_ed25519_public_bytes","generate","hash","into","into","keypair_strategy","ne","partial_cmp","public_key","serialize","serialize","test_only_hash","test_only_hash","to_bytes","to_bytes","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","EphemeralSecret","PublicKey","SharedSecret","StaticSecret","X25519_BASEPOINT_BYTES","as_bytes","as_bytes","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","diffie_hellman","diffie_hellman","drop","drop","drop","eq","equivalent","fmt","from","from","from","from","from","from","from","from","hash","into","into","into","into","ne","new","new","to_bytes","to_bytes","to_bytes","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","x25519","zeroize","zeroize","zeroize","abi","account_address","effects","errmap","gas_schedule","ident_str","identifier","language_storage","move_resource","parser","proptest_types","resolver","transaction_argument","value","vm_status","ArgumentABI","ScriptABI","ScriptFunction","ScriptFunctionABI","TransactionScript","TransactionScriptABI","TypeArgumentABI","args","args","args","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","code","deserialize","deserialize","deserialize","deserialize","deserialize","doc","doc","doc","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","hash","hash","into","into","into","into","into","is_script_fun_abi","is_transaction_script_abi","module_name","name","name","name","name","name","ne","ne","ne","ne","ne","new","new","new","new","serialize","serialize","serialize","serialize","serialize","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","ty_args","ty_args","ty_args","type_id","type_id","type_id","type_id","type_id","type_tag","vzip","vzip","vzip","vzip","vzip","0","0","AccountAddress","AccountAddressParseError","LENGTH","ZERO","arbitrary_with","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","deref","deserialize","encode_hex","encode_hex_upper","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bytes","from_hex","from_hex_literal","from_str","hash","hash","into","into","into_bytes","ne","new","partial_cmp","random","serialize","short_str_lossless","test_only_hash","to_hex","to_hex_literal","to_owned","to_owned","to_string","to_string","to_vec","try_from","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AccountChangeSet","ChangeSet","Event","accounts","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from_modules_resources","into","into","into_inner","into_inner","into_modules","into_modules","into_resources","is_empty","modules","modules","ne","ne","new","new","partial_cmp","partial_cmp","publish_module","publish_module","publish_or_overwrite_account_change_set","publish_or_overwrite_module","publish_or_overwrite_module","publish_or_overwrite_resource","publish_or_overwrite_resource","publish_resource","publish_resource","resources","resources","squash","squash","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unpublish_module","unpublish_module","unpublish_resource","unpublish_resource","vzip","vzip","ErrorContext","ErrorDescription","ErrorMapping","add_error_category","add_module_error","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","category","clone","clone","clone","clone_into","clone_into","clone_into","code_description","code_name","default","deserialize","deserialize","deserialize","error_categories","fmt","fmt","fmt","from","from","from","from_file","get_explanation","into","into","into","module_error_maps","reason","serialize","serialize","serialize","test_only_hash","test_only_hash","test_only_hash","to_file","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","AbstractMemorySize","CONST_SIZE","CostTable","DEFAULT_ACCOUNT_SIZE","GasAlgebra","GasCarrier","GasConstants","GasCost","GasPrice","GasUnits","InternalGasUnits","LARGE_TRANSACTION_CUTOFF","MAX_ABSTRACT_MEMORY_SIZE","MAX_TRANSACTION_SIZE_IN_BYTES","MIN_EXISTS_DATA_SIZE","ONE_GAS_UNIT","REFERENCE_SIZE","STRUCT_SIZE","add","app","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default_account_size","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","div","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","gas_constants","gas_unit_scaling_factor","get","get","get","get","get","global_memory_per_byte_cost","global_memory_per_byte_write_cost","hash","hash","hash","hash","instruction_cost","instruction_gas","instruction_table","into","into","into","into","into","into","into","intrinsic_gas_per_byte","large_transaction_cutoff","map","map2","max_price_per_gas_unit","max_transaction_size_in_bytes","maximum_number_of_gas_units","memory_gas","min_price_per_gas_unit","min_transaction_gas_units","mul","native_cost","native_table","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","serialize","serialize","serialize","serialize","serialize","serialize","serialize","sub","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_external_units","to_internal_units","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unitary_cast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","IdentStr","Identifier","arbitrary_with","as_bytes","as_ident_str","as_ref","as_str","borrow","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","cmp","deref","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from_str","from_utf8","hash","hash","into","into_bytes","into_string","is_empty","is_self","is_valid","is_valid","is_valid","is_valid_identifier_char","len","ne","ne","new","new","partial_cmp","partial_cmp","ref_cast","ref_cast_mut","serialize","test_only_hash","to_owned","to_owned","to_string","to_string","try_from","try_into","type_id","type_id","vzip","Address","Bool","CODE_TAG","CORE_CODE_ADDRESS","ModuleId","RESOURCE_TAG","ResourceKey","Signer","Struct","StructTag","TypeTag","U128","U64","U8","Vector","access_vector","access_vector","address","address","address","address","arbitrary_with","arbitrary_with","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","hash","into","into","into","into","module","module_id","name","name","ne","ne","ne","ne","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","serialize","serialize","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_","type_","type_id","type_id","type_id","type_id","type_params","vzip","vzip","vzip","vzip","0","0","MODULE_NAME","MoveResource","MoveStructType","STRUCT_NAME","module_identifier","resource_path","struct_identifier","struct_tag","type_params","parse_string_list","parse_struct_tag","parse_transaction_argument","parse_transaction_arguments","parse_type_tag","parse_type_tags","Err","Error","Error","ModuleResolver","MoveResolver","ResourceResolver","get_module","get_resource","Address","Bool","TransactionArgument","U128","U64","U8","U8Vector","VecBytes","arbitrary_with","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","convert_txn_args","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","from","from","from","hash","hash","into","into","into_vec","ne","ne","serialize","test_only_hash","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","0","0","0","0","Address","Address","Bool","Bool","MoveFieldLayout","MoveStruct","MoveStructLayout","MoveTypeLayout","MoveValue","Runtime","Runtime","Signer","Signer","Struct","Struct","U128","U128","U64","U64","U8","U8","Vector","Vector","WithFields","WithFields","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","eq","eq","equivalent","equivalent","fields","fields","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into_fields","into_fields","ne","ne","new","new","new","serialize","serialize","serialize","serialize","serialize","serialize_values","simple_deserialize","simple_deserialize","simple_serialize","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vector_address","vector_u8","vzip","vzip","vzip","vzip","vzip","with_fields","with_fields","0","0","0","0","0","0","0","0","0","0","0","0","0","0","ABORTED","ABORT_TYPE_MISMATCH_ERROR","ARITHMETIC_ERROR","AbortLocation","BACKWARD_INCOMPATIBLE_MODULE_UPDATE","BAD_CHAIN_ID","BAD_HEADER_TABLE","BAD_MAGIC","BAD_TRANSACTION_FEE_CURRENCY","BAD_U128","BAD_U64","BOOLEAN_OP_TYPE_MISMATCH_ERROR","BORROWFIELD_BAD_FIELD_ERROR","BORROWFIELD_EXISTS_MUTABLE_BORROW_ERROR","BORROWFIELD_TYPE_MISMATCH_ERROR","BORROWGLOBAL_TYPE_MISMATCH_ERROR","BORROWGLOBAL_WITHOUT_KEY_ABILITY","BORROWLOC_EXISTS_BORROW_ERROR","BORROWLOC_REFERENCE_ERROR","BORROWLOC_UNAVAILABLE_ERROR","BR_TYPE_MISMATCH_ERROR","CALLED_SCRIPT_VISIBLE_FROM_NON_SCRIPT_VISIBLE","CALL_BORROWED_MUTABLE_REFERENCE_ERROR","CALL_STACK_OVERFLOW","CALL_TYPE_MISMATCH_ERROR","CODE_DESERIALIZATION_ERROR","CONSTRAINT_NOT_SATISFIED","COPYLOC_EXISTS_BORROW_ERROR","COPYLOC_UNAVAILABLE_ERROR","COPYLOC_WITHOUT_COPY_ABILITY","CURRENCY_INFO_DOES_NOT_EXIST","CYCLIC_MODULE_DEPENDENCY","CYCLIC_MODULE_FRIENDSHIP","DATA_FORMAT_ERROR","DESERIALIZATION_STATUS_MAX_CODE","DESERIALIZATION_STATUS_MIN_CODE","DUPLICATE_ACQUIRES_ANNOTATION","DUPLICATE_ELEMENT","DUPLICATE_MODULE_NAME","DUPLICATE_NATIVE_FUNCTION","DUPLICATE_TABLE","Deserialization","DiscardedVMStatus","EMPTY_CODE_UNIT","EMPTY_VALUE_STACK","EQUALITY_OP_TYPE_MISMATCH_ERROR","EVENT_KEY_MISMATCH","EXCEEDED_MAX_TRANSACTION_SIZE","EXECUTED","EXECUTE_SCRIPT_FUNCTION_CALLED_ON_NON_SCRIPT_VISIBLE","EXECUTION_STACK_OVERFLOW","EXECUTION_STATUS_MAX_CODE","EXECUTION_STATUS_MIN_CODE","EXISTS_WITHOUT_KEY_ABILITY_OR_BAD_ARGUMENT","EXTRANEOUS_ACQUIRES_ANNOTATION","Error","Executed","Executed","Execution","ExecutionFailure","ExecutionFailure","FAILED_TO_DESERIALIZE_ARGUMENT","FAILED_TO_DESERIALIZE_RESOURCE","FAILED_TO_SERIALIZE_WRITE_SET_CHANGES","FEATURE_UNDER_GATING","FIELD_MISSING_TYPE_ABILITY","FREEZEREF_EXISTS_MUTABLE_BORROW_ERROR","FREEZEREF_TYPE_MISMATCH_ERROR","FUNCTION_RESOLUTION_FAILURE","GAS_UNIT_PRICE_ABOVE_MAX_BOUND","GAS_UNIT_PRICE_BELOW_MIN_BOUND","GENERIC_MEMBER_OPCODE_MISMATCH","GLOBAL_REFERENCE_ERROR","INDEX_OUT_OF_BOUNDS","INSUFFICIENT_BALANCE_FOR_TRANSACTION_FEE","INTEGER_OP_TYPE_MISMATCH_ERROR","INTERNAL_TYPE_ERROR","INVALID_ACQUIRES_ANNOTATION","INVALID_AUTH_KEY","INVALID_CONSTANT_TYPE","INVALID_FALL_THROUGH","INVALID_FLAG_BITS","INVALID_FRIEND_DECL_WITH_MODULES_IN_DEPENDENCIES","INVALID_FRIEND_DECL_WITH_MODULES_OUTSIDE_ACCOUNT_ADDRESS","INVALID_FRIEND_DECL_WITH_SELF","INVALID_GAS_SPECIFIER","INVALID_LOOP_BREAK","INVALID_LOOP_CONTINUE","INVALID_LOOP_SPLIT","INVALID_MAIN_FUNCTION_SIGNATURE","INVALID_MODULE_HANDLE","INVALID_MODULE_PUBLISHER","INVALID_OPERATION_IN_SCRIPT","INVALID_PARAM_TYPE_FOR_DESERIALIZATION","INVALID_PHANTOM_TYPE_PARAM_POSITION","INVALID_SIGNATURE","INVALID_SIGNATURE_TOKEN","INVALID_WRITE_SET","INVARIANT_VIOLATION_STATUS_MAX_CODE","INVARIANT_VIOLATION_STATUS_MIN_CODE","InvariantViolation","KeptVMStatus","LINKER_ERROR","LOOKUP_FAILED","LOOP_IN_INSTANTIATION_GRAPH","MALFORMED","MALFORMED_CONSTANT_DATA","MAX_GAS_UNITS_BELOW_MIN_TRANSACTION_GAS_UNITS","MAX_GAS_UNITS_EXCEEDS_MAX_GAS_UNITS_BOUND","MISSING_ACQUIRES_ANNOTATION","MISSING_DATA","MISSING_DEPENDENCY","MODULE_ADDRESS_DOES_NOT_MATCH_SENDER","MOVEFROM_TYPE_MISMATCH_ERROR","MOVEFROM_WITHOUT_KEY_ABILITY","MOVELOC_EXISTS_BORROW_ERROR","MOVELOC_UNAVAILABLE_ERROR","MOVETO_TYPE_MISMATCH_ERROR","MOVETO_WITHOUT_KEY_ABILITY","MiscellaneousError","Module","MoveAbort","MoveAbort","NEGATIVE_STACK_SIZE_WITHIN_BLOCK","NO_ACCOUNT_ROLE","NO_MODULE_HANDLES","NUMBER_OF_ARGUMENTS_MISMATCH","NUMBER_OF_SIGNER_ARGUMENTS_MISMATCH","NUMBER_OF_TYPE_ARGUMENTS_MISMATCH","OUT_OF_GAS","OutOfGas","PACK_TYPE_MISMATCH_ERROR","PC_OVERFLOW","POP_WITHOUT_DROP_ABILITY","POSITIVE_STACK_SIZE_AT_BLOCK_END","READREF_EXISTS_MUTABLE_BORROW_ERROR","READREF_TYPE_MISMATCH_ERROR","READREF_WITHOUT_COPY_ABILITY","RECURSIVE_STRUCT_DEFINITION","REJECTED_WRITE_SET","RESOURCE_ALREADY_EXISTS","RESOURCE_DOES_NOT_EXIST","RET_BORROWED_MUTABLE_REFERENCE_ERROR","RET_TYPE_MISMATCH_ERROR","SECONDARY_KEYS_ADDRESSES_COUNT_MISMATCH","SENDING_ACCOUNT_DOES_NOT_EXIST","SENDING_ACCOUNT_FROZEN","SEQUENCE_NONCE_INVALID","SEQUENCE_NUMBER_TOO_BIG","SEQUENCE_NUMBER_TOO_NEW","SEQUENCE_NUMBER_TOO_OLD","SIGNERS_CONTAIN_DUPLICATES","STLOC_TYPE_MISMATCH_ERROR","STLOC_UNSAFE_TO_DESTROY_ERROR","STORAGE_ERROR","Script","StatusCode","StatusType","TOO_MANY_LOCALS","TRANSACTION_EXPIRED","TYPE_MISMATCH","TYPE_RESOLUTION_FAILURE","UNABLE_TO_DESERIALIZE_ACCOUNT","UNEXPECTED_DESERIALIZATION_ERROR","UNEXPECTED_ERROR_FROM_KNOWN_MOVE_FUNCTION","UNEXPECTED_SIGNATURE_TYPE","UNEXPECTED_VERIFIER_ERROR","UNIMPLEMENTED_HANDLE","UNKNOWN_ABILITY","UNKNOWN_BINARY_ERROR","UNKNOWN_INVARIANT_VIOLATION_ERROR","UNKNOWN_MODULE","UNKNOWN_NATIVE_STRUCT_FLAG","UNKNOWN_OPCODE","UNKNOWN_RUNTIME_STATUS","UNKNOWN_SCRIPT","UNKNOWN_SERIALIZED_TYPE","UNKNOWN_SIGNATURE_TYPE","UNKNOWN_STATUS","UNKNOWN_TABLE_TYPE","UNKNOWN_VALIDATION_STATUS","UNKNOWN_VERIFICATION_ERROR","UNKNOWN_VERSION","UNPACK_TYPE_MISMATCH_ERROR","UNREACHABLE","UNSAFE_RET_LOCAL_OR_RESOURCE_STILL_BORROWED","UNSAFE_RET_UNUSED_VALUES_WITHOUT_DROP","Unknown","VALIDATION_STATUS_MAX_CODE","VALIDATION_STATUS_MIN_CODE","VALUE_DESERIALIZATION_ERROR","VALUE_SERIALIZATION_ERROR","VEC_BORROW_ELEMENT_EXISTS_MUTABLE_BORROW_ERROR","VEC_UPDATE_EXISTS_MUTABLE_BORROW_ERROR","VERIFICATION_ERROR","VERIFICATION_STATUS_MAX_CODE","VERIFICATION_STATUS_MIN_CODE","VERIFIER_INVARIANT_VIOLATION","VMStatus","VM_MAX_TYPE_DEPTH_REACHED","VM_MAX_VALUE_DEPTH_REACHED","VM_STARTUP_FAILURE","Validation","Verification","WRITEREF_EXISTS_BORROW_ERROR","WRITEREF_NO_MUTABLE_REFERENCE_ERROR","WRITEREF_TYPE_MISMATCH_ERROR","WRITEREF_WITHOUT_DROP_ABILITY","ZERO_SIZED_STRUCT","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","hash","hash","into","into","into","into","into","is_success","keep_or_discard","known_locations","move_abort_code","ne","ne","ne","partial_cmp","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","serialize","serialize","status_code","status_type","status_type","sub_status","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","0","0","1","code_offset","function","location","0","0","1","code_offset","function","location","status_code","ACCOUNT_MODULE","ACCOUNT_MODULE_IDENTIFIER","DESIGNATED_DEALER_MODULE","DESIGNATED_DEALER_MODULE_IDENTIFIER","DIEM_MODULE","DIEM_MODULE_IDENTIFIER","account_module_abort","designated_dealer_module_abort","diem_module_abort","NFE_BCS_SERIALIZATION_FAILURE","NFE_VECTOR_ERROR_BASE","Currency","DualAttestationMessage","TransactionBuilder","TransactionFactory","XDX","XUS","add_currency_to_account","add_recovery_rotation_capability","add_validator_and_reconfigure","add_vasp_domain","as_str","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","burn_txn_fees","burn_with_amount","cancel_burn_with_amount","chain_id","change_set","clone","clone","clone_into","clone_into","cmp","create_child_vasp_account","create_designated_dealer","create_parent_vasp_account","create_recovery_address","deserialize","eq","eq","eq","equivalent","expiration_timestamp_secs","fmt","fmt","fmt","from","from","from","from","gas_currency_code","gas_unit_price","hash","into","into","into","into","max_gas_amount","message","module","new","new","partial_cmp","payload","peer_to_peer","peer_to_peer_with_metadata","preburn","publish_rotate_ed25519_public_key","publish_shared_ed25519_public_key","remove_validator_and_reconfigure","remove_vasp_domain","rotate_authentication_key","rotate_authentication_key_by_script","rotate_authentication_key_with_recovery_address","rotate_dual_attestation_info","script","script_function","sender","sequence_number","serialize","stdlib","test_only_hash","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_tag","update_diem_consensus_config","update_diem_version","update_exchange_rate","vzip","vzip","vzip","vzip","with_chain_id","with_diem_version","with_gas_currency","with_gas_unit_price","with_max_gas_amount","with_transaction_expiration_time","AddCurrencyToAccount","AddCurrencyToAccount","AddRecoveryRotationCapability","AddRecoveryRotationCapability","AddValidatorAndReconfigure","AddValidatorAndReconfigure","AddVaspDomain","Burn","BurnTxnFees","BurnTxnFees","BurnWithAmount","CancelBurn","CancelBurnWithAmount","CreateChildVaspAccount","CreateChildVaspAccount","CreateDesignatedDealer","CreateDesignatedDealer","CreateParentVaspAccount","CreateParentVaspAccount","CreateRecoveryAddress","CreateRecoveryAddress","CreateValidatorAccount","CreateValidatorAccount","CreateValidatorOperatorAccount","CreateValidatorOperatorAccount","CreateVaspDomains","ForceExpire","FreezeAccount","FreezeAccount","GcBallots","InitializeDiemConsensusConfig","OptInToCrsn","PeerToPeerBySigners","PeerToPeerWithMetadata","PeerToPeerWithMetadata","Preburn","Preburn","PublishSharedEd25519PublicKey","PublishSharedEd25519PublicKey","RegisterValidatorConfig","RegisterValidatorConfig","RemoveValidatorAndReconfigure","RemoveValidatorAndReconfigure","RemoveVaspDomain","RotateAuthenticationKey","RotateAuthenticationKey","RotateAuthenticationKeyWithNonce","RotateAuthenticationKeyWithNonce","RotateAuthenticationKeyWithNonceAdmin","RotateAuthenticationKeyWithNonceAdmin","RotateAuthenticationKeyWithRecoveryAddress","RotateAuthenticationKeyWithRecoveryAddress","RotateDualAttestationInfo","RotateDualAttestationInfo","RotateSharedEd25519PublicKey","RotateSharedEd25519PublicKey","ScriptCall","ScriptFunctionCall","SetGasConstants","SetValidatorConfigAndReconfigure","SetValidatorConfigAndReconfigure","SetValidatorOperator","SetValidatorOperator","SetValidatorOperatorWithNonceAdmin","SetValidatorOperatorWithNonceAdmin","TieredMint","TieredMint","UnfreezeAccount","UnfreezeAccount","UpdateDiemConsensusConfig","UpdateDiemVersion","UpdateDiemVersion","UpdateDualAttestationLimit","UpdateDualAttestationLimit","UpdateExchangeRate","UpdateExchangeRate","UpdateMintingAbility","UpdateMintingAbility","arbitrary_with","arbitrary_with","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decode","decode","encode","encode","encode_add_currency_to_account_script","encode_add_currency_to_account_script_function","encode_add_recovery_rotation_capability_script","encode_add_recovery_rotation_capability_script_function","encode_add_validator_and_reconfigure_script","encode_add_validator_and_reconfigure_script_function","encode_add_vasp_domain_script_function","encode_burn_script","encode_burn_txn_fees_script","encode_burn_txn_fees_script_function","encode_burn_with_amount_script_function","encode_cancel_burn_script","encode_cancel_burn_with_amount_script_function","encode_create_child_vasp_account_script","encode_create_child_vasp_account_script_function","encode_create_designated_dealer_script","encode_create_designated_dealer_script_function","encode_create_parent_vasp_account_script","encode_create_parent_vasp_account_script_function","encode_create_recovery_address_script","encode_create_recovery_address_script_function","encode_create_validator_account_script","encode_create_validator_account_script_function","encode_create_validator_operator_account_script","encode_create_validator_operator_account_script_function","encode_create_vasp_domains_script_function","encode_force_expire_script_function","encode_freeze_account_script","encode_freeze_account_script_function","encode_gc_ballots_script_function","encode_initialize_diem_consensus_config_script_function","encode_opt_in_to_crsn_script_function","encode_peer_to_peer_by_signers_script_function","encode_peer_to_peer_with_metadata_script","encode_peer_to_peer_with_metadata_script_function","encode_preburn_script","encode_preburn_script_function","encode_publish_shared_ed25519_public_key_script","encode_publish_shared_ed25519_public_key_script_function","encode_register_validator_config_script","encode_register_validator_config_script_function","encode_remove_validator_and_reconfigure_script","encode_remove_validator_and_reconfigure_script_function","encode_remove_vasp_domain_script_function","encode_rotate_authentication_key_script","encode_rotate_authentication_key_script_function","encode_rotate_authentication_key_with_nonce_admin_script","encode_rotate_authentication_key_with_nonce_admin_script_function","encode_rotate_authentication_key_with_nonce_script","encode_rotate_authentication_key_with_nonce_script_function","encode_rotate_authentication_key_with_recovery_address_script","encode_rotate_authentication_key_with_recovery_address_script_function","encode_rotate_dual_attestation_info_script","encode_rotate_dual_attestation_info_script_function","encode_rotate_shared_ed25519_public_key_script","encode_rotate_shared_ed25519_public_key_script_function","encode_set_gas_constants_script_function","encode_set_validator_config_and_reconfigure_script","encode_set_validator_config_and_reconfigure_script_function","encode_set_validator_operator_script","encode_set_validator_operator_script_function","encode_set_validator_operator_with_nonce_admin_script","encode_set_validator_operator_with_nonce_admin_script_function","encode_tiered_mint_script","encode_tiered_mint_script_function","encode_unfreeze_account_script","encode_unfreeze_account_script_function","encode_update_diem_consensus_config_script_function","encode_update_diem_version_script","encode_update_diem_version_script_function","encode_update_dual_attestation_limit_script","encode_update_dual_attestation_limit_script_function","encode_update_exchange_rate_script","encode_update_exchange_rate_script_function","encode_update_minting_ability_script","encode_update_minting_ability_script_function","eq","eq","fmt","fmt","from","from","into","into","name","ne","ne","partial_cmp","partial_cmp","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","add_all_currencies","add_all_currencies","add_all_currencies","addr","allow_minting","amount","amount","auth_key_prefix","auth_key_prefix","auth_key_prefix","auth_key_prefix","auth_key_prefix","child_address","child_initial_balance","coin_type","coin_type","coin_type","coin_type","consensus_pubkey","consensus_pubkey","currency","currency","currency","currency","currency","designated_dealer_address","fullnode_network_addresses","fullnode_network_addresses","human_name","human_name","human_name","human_name","major","metadata","metadata_signature","mint_amount","new_account_address","new_account_address","new_account_address","new_exchange_rate_denominator","new_exchange_rate_numerator","new_key","new_key","new_key","new_key","new_key","new_micro_xdx_limit","new_url","operator_account","operator_account","operator_name","operator_name","payee","preburn_address","preburn_address","public_key","public_key","recovery_address","recovery_address","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","tier_index","to_freeze_account","to_recover","to_unfreeze_account","token","token","token","validator_account","validator_account","validator_address","validator_address","validator_name","validator_name","validator_network_addresses","validator_network_addresses","add_all_currencies","add_all_currencies","add_all_currencies","addr","addr","address","address","allow_minting","amount","amount","amount","amount","amount","auth_key_prefix","auth_key_prefix","auth_key_prefix","auth_key_prefix","auth_key_prefix","child_address","child_initial_balance","coin_type","coin_type","coin_type","coin_type","config","consensus_pubkey","consensus_pubkey","crsn_size","currency","currency","currency","currency","currency","currency","default_account_size","designated_dealer_address","domain","domain","fullnode_network_addresses","fullnode_network_addresses","gas_unit_scaling_factor","global_memory_per_byte_cost","global_memory_per_byte_write_cost","human_name","human_name","human_name","human_name","intrinsic_gas_per_byte","large_transaction_cutoff","major","max_price_per_gas_unit","max_transaction_size_in_bytes","maximum_number_of_gas_units","metadata","metadata","metadata_signature","min_price_per_gas_unit","min_transaction_gas_units","mint_amount","new_account_address","new_account_address","new_account_address","new_exchange_rate_denominator","new_exchange_rate_numerator","new_key","new_key","new_key","new_key","new_key","new_micro_xdx_limit","new_url","operator_account","operator_account","operator_name","operator_name","payee","preburn_address","preburn_address","proposal","public_key","public_key","recovery_address","recovery_address","shift_amount","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","tier_index","to_freeze_account","to_recover","to_unfreeze_account","token","token","token","validator_account","validator_account","validator_address","validator_address","validator_name","validator_name","validator_network_addresses","validator_network_addresses","AccountKey","LocalAccount","PeerId","access_path","account_address","account_config","account_state","account_state_blob","address","authentication_key","authentication_key","block_info","block_metadata","borrow","borrow","borrow_mut","borrow_mut","chain_id","contract_event","diem_id_identifier","diem_timestamp","epoch_change","epoch_state","event","fmt","fmt","from","from","from","from_private_key","generate","generate","into","into","ledger_info","mempool_status","move_resource","network_address","new","nibble","on_chain_config","private_key","private_key","proof","proptest_types","protocol_spec","public_key","public_key","rotate_key","sequence_number","sequence_number_mut","serde_helper","sign_multi_agent_with_transaction_builder","sign_transaction","sign_with_transaction_builder","state_proof","test_helpers","transaction","trusted_state","try_from","try_from","try_into","try_into","type_id","type_id","validator_config","validator_info","validator_signer","validator_verifier","vm_status","vzip","vzip","waypoint","write_set","AccessPath","Code","Path","Resource","address","arbitrary_with","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","code_access_path","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","get_path","get_struct_tag","hash","hash","into","into","ne","ne","new","partial_cmp","partial_cmp","path","resource_access_path","resource_access_vec","serialize","serialize","test_only_hash","test_only_hash","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","AccountAddress","HashAccountAddress","from_identity_public_key","from_public_key","hash","ACCOUNT_MODULE","ACCOUNT_MODULE_IDENTIFIER","AccountResource","AccountRole","AccountSequenceInfo","AdminTransactionEvent","BalanceResource","BaseUrlRotationEvent","BurnEvent","COIN_MODULE","CORE_CODE_ADDRESS","CRSN","CRSNResource","CancelBurnEvent","ChainIdResource","ChildVASP","ChildVASP","ComplianceKeyRotationEvent","CreateAccountEvent","Credential","CurrencyInfoResource","DESIGNATED_DEALER_MODULE","DESIGNATED_DEALER_MODULE_IDENTIFIER","DIEM_MODULE","DIEM_MODULE_IDENTIFIER","DesignatedDealer","DesignatedDealer","DesignatedDealerPreburns","EVENT_MODULE","EVENT_MODULE_IDENTIFIER","ForceShiftEvent","FreezingBit","KeyRotationCapabilityResource","Limit","MintEvent","NewBlockEvent","NewEpochEvent","ParentVASP","ParentVASP","Preburn","PreburnEvent","PreburnQueue","PreburnQueueResource","PreburnResource","PreburnWithMetadataResource","ReceivedMintEvent","ReceivedPaymentEvent","RoleId","SentPaymentEvent","Sequential","ToXDXExchangeRateUpdateEvent","TreasuryCompliance","Unknown","VASPDomain","VASPDomainEvent","VASPDomainManager","VASPDomains","VASP_DOMAIN_MODULE_IDENTIFIER","WithdrawCapabilityResource","XDX_IDENTIFIER","XDX_MODULE","XDX_NAME","XUS_IDENTIFIER","XUS_NAME","access_path_for","access_path_for","access_path_for","access_path_for","address","allowed_currency_code_string","amount","amount","amount","amount","amount","amount","amount","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","authentication_key","base_url","base_url_rotation_events","bits_at_shift","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","burn_events","cancel_burn_events","chain_id","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coin","coin","coin_name","committed_timestamp_secs","compliance_key_rotation_events","compliance_public_key","constants","convert_to_xdx","created","currency_code","currency_code","currency_code","currency_code","currency_code","currency_code","currency_code","currency_code","currency_code","currency_code_from_type_tag","current_min_nonce","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","destination_address","diem_root_address","domain","domain","domain","domains","domains","epoch","eq","eq","eq","eq","equivalent","equivalent","equivalent","event_key","event_key","events","exchange_rate","exchange_rate_update_events","expiration_date","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fractional_part","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_currency_code_string","get_domains_list","has_delegated_key_rotation_capability","has_delegated_withdrawal_capability","hash","human_name","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_frozen","metadata","metadata","metadata","micro_xdx_limit","min_nonce","min_seq","mint_events","ne","ne","ne","ne","new","new","new","new","new","new","new","new_base_url","new_compliance_public_key","new_to_xdx_exchange_rate","num_children","parent_vasp_addr","preburn","preburn_address","preburn_address","preburn_address","preburn_events","preburn_value","preburns","proposed_time","proposer","received_events","received_mint_events","receiver","removed","reserved_vm_address","resource_path_for","resources","role_id","role_id","round","scaling_factor","sender","sent_events","sequence_number","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","shift_amount","size","struct_tag_for","struct_tag_for_currency","struct_tag_for_currency","struct_tag_for_currency","struct_tag_for_currency","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","testnet_dd_account_address","time_rotated_seconds","time_rotated_seconds","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_value","treasury_compliance_account_address","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_bytes","try_from_bytes","try_from_bytes","try_from_bytes","try_from_bytes","try_from_bytes","try_from_bytes","try_from_bytes","try_from_bytes","try_from_bytes","try_from_bytes","try_from_bytes","try_from_bytes","try_from_bytes","try_from_bytes","try_from_bytes","try_from_bytes","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_params","type_params","type_params","type_params","type_tag_for_currency_code","validator_set_address","vasp_domain_events","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","xdx_type_tag","xus_tag","0","credential","dd_credential","designated_dealer","preburn_balances","vasp","vasp_domain_manager","vasp_domains","0","min_nonce","size","0","0","ACCOUNT_MODULE","ACCOUNT_MODULE_IDENTIFIER","COIN_MODULE","CORE_CODE_ADDRESS","DESIGNATED_DEALER_MODULE","DESIGNATED_DEALER_MODULE_IDENTIFIER","DIEM_MODULE","DIEM_MODULE_IDENTIFIER","EVENT_MODULE","EVENT_MODULE_IDENTIFIER","XDX_IDENTIFIER","XDX_MODULE","XDX_NAME","XUS_IDENTIFIER","XUS_NAME","account","addresses","allowed_currency_code_string","coin_name","coins","currency_code_from_type_tag","designated_dealer","diem","diem_root_address","event","from_currency_code_string","reserved_vm_address","testnet_dd_account_address","treasury_compliance_account_address","type_tag_for_currency_code","validator_set_address","xdx_type_tag","xus_tag","ACCOUNT_MODULE","ACCOUNT_MODULE_IDENTIFIER","CORE_CODE_ADDRESS","diem_root_address","reserved_vm_address","testnet_dd_account_address","treasury_compliance_account_address","validator_set_address","XDX_IDENTIFIER","XDX_MODULE","XDX_NAME","XUS_IDENTIFIER","XUS_NAME","coin_name","xdx_type_tag","xus_tag","DESIGNATED_DEALER_MODULE","DESIGNATED_DEALER_MODULE_IDENTIFIER","COIN_MODULE","DIEM_MODULE","DIEM_MODULE_IDENTIFIER","allowed_currency_code_string","currency_code_from_type_tag","from_currency_code_string","type_tag_for_currency_code","EVENT_MODULE","EVENT_MODULE_IDENTIFIER","AdminTransactionEvent","BaseUrlRotationEvent","BurnEvent","CancelBurnEvent","ComplianceKeyRotationEvent","CreateAccountEvent","ForceShiftEvent","MintEvent","NewBlockEvent","NewEpochEvent","PreburnEvent","ReceivedMintEvent","ReceivedPaymentEvent","SentPaymentEvent","ToXDXExchangeRateUpdateEvent","admin_transaction","base_url_rotation","burn","cancel_burn","compliance_key_rotation","create_account","exchange_rate_update","force_shift","mint","new_block","new_epoch","preburn","received_mint","received_payment","sent_payment","AdminTransactionEvent","BaseUrlRotationEvent","BurnEvent","CancelBurnEvent","ComplianceKeyRotationEvent","CreateAccountEvent","ToXDXExchangeRateUpdateEvent","ForceShiftEvent","MintEvent","NewBlockEvent","NewEpochEvent","PreburnEvent","ReceivedMintEvent","ReceivedPaymentEvent","SentPaymentEvent","AccountResource","AccountRole","AccountSequenceInfo","BalanceResource","CRSN","CRSNResource","ChainIdResource","ChildVASP","ChildVASP","Credential","CurrencyInfoResource","DesignatedDealer","DesignatedDealer","DesignatedDealerPreburns","FreezingBit","KeyRotationCapabilityResource","Limit","ParentVASP","ParentVASP","Preburn","PreburnQueue","PreburnQueueResource","PreburnResource","PreburnWithMetadataResource","RoleId","Sequential","TreasuryCompliance","Unknown","VASPDomain","VASPDomainEvent","VASPDomainManager","VASPDomains","VASP_DOMAIN_MODULE_IDENTIFIER","WithdrawCapabilityResource","account","balance","chain_id","crsn","currency_info","designated_dealer","domain","domains","dual_attestation","freezing_bit","key_rotation_capability","micro_xdx_limit","preburn_balance","preburn_queue","preburn_with_metadata","role","role_id","vasp","vasp_domain","withdraw_capability","0","credential","dd_credential","designated_dealer","preburn_balances","vasp","vasp_domain_manager","vasp_domains","0","min_nonce","size","0","0","AccountResource","BalanceResource","ChainIdResource","AccountSequenceInfo","CRSN","CRSNResource","Sequential","0","min_nonce","size","CurrencyInfoResource","DesignatedDealer","DesignatedDealerPreburns","Preburn","PreburnQueue","0","0","Credential","Limit","micro_xdx_limit","FreezingBit","KeyRotationCapabilityResource","PreburnResource","PreburnQueueResource","PreburnWithMetadataResource","AccountRole","ChildVASP","DesignatedDealer","ParentVASP","TreasuryCompliance","Unknown","0","credential","dd_credential","designated_dealer","preburn_balances","vasp","vasp_domain_manager","vasp_domains","RoleId","ChildVASP","ParentVASP","VASPDomain","VASPDomainEvent","VASPDomainManager","VASPDomains","VASP_DOMAIN_MODULE_IDENTIFIER","domain","domains","WithdrawCapabilityResource","AccountState","borrow","borrow_mut","default","deserialize","eq","fmt","from","get","get_account_address","get_account_resource","get_account_role","get_balance_resources","get_chain_id_resource","get_config","get_configuration_resource","get_crsn_resource","get_diem_block_resource","get_diem_timestamp_resource","get_diem_version","get_freezing_bit","get_modules","get_preburn_balances","get_preburn_queue_balances","get_registered_currency_info_resources","get_resource","get_resource_impl","get_resources","get_resources_with_type","get_validator_config_resource","get_validator_operator_config_resource","get_validator_set","get_vm_publishing_option","insert","into","into_modules","iter","ne","remove","serialize","test_only_hash","try_from","try_from","try_from","try_into","type_id","vzip","AccountStateBlob","AccountStateBlobHasher","AccountStateWithProof","AccountStatesChunkWithProof","account_blobs","arbitrary_with","arbitrary_with","as_ref","blob","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default_protocol","deserialize","deserialize","deserialize","encode_hex","encode_hex_upper","eq","eq","eq","equivalent","equivalent","equivalent","finish","first_index","first_key","flush","fmt","fmt","fmt","from","from","from","from","from","hash","into","into","into","into","last_index","last_key","ne","ne","ne","new","proof","proof","seed","serialize","serialize","serialize","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update","verify","version","vzip","vzip","vzip","vzip","write","AccountStateWithProof","BlockInfo","GENESIS_EPOCH","GENESIS_ROUND","GENESIS_TIMESTAMP_USECS","GENESIS_VERSION","Round","arbitrary_with","borrow","borrow_mut","change_timestamp","clone","clone_into","deserialize","empty","epoch","eq","equivalent","executed_state_id","fmt","fmt","from","genesis","has_reconfiguration","id","into","is_ordered_only","match_ordered_only","mock_genesis","ne","new","next_block_epoch","next_epoch_state","random","round","serialize","test_only_hash","timestamp_usecs","to_owned","to_string","try_from","try_into","type_id","version","vzip","BlockMetadata","DiemBlockResource","NEW_BLOCK_EVENT_PATH","NewBlockEvent","arbitrary_with","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","deserialize","eq","equivalent","fmt","from","from","from","height","id","into","into","into","into_inner","ne","new","new","new_block_event_key","new_block_events","previous_block_votes","proposer","proposer","round","round","serialize","serialize","serialize","test_only_hash","test_only_hash","test_only_hash","timestamp_usec","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","votes","vzip","vzip","vzip","ChainId","DEVNET","MAINNET","NamedChain","PREMAINNET","TESTING","TESTNET","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deserialize","deserialize_config_chain_id","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from_chain_id","from_str","hash","id","id","into","into","ne","new","serialize","test","test_only_hash","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ContractEvent","ContractEventHasher","ContractEventV0","ContractEventV0Hasher","EventByVersionWithProof","EventWithProof","V0","arbitrary_with","arbitrary_with","arbitrary_with","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default_protocol","deref","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","event","event_data","event_index","finish","finish","flush","flush","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","hash","hash","into","into","into","into","into","into","key","lower_bound_incl","ne","ne","ne","ne","new","new","new","new","proof","seed","seed","sequence_number","serialize","serialize","serialize","serialize","strategy_impl","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","transaction_version","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_tag","update","update","upper_bound_excl","verify","verify","vzip","vzip","vzip","vzip","vzip","vzip","write","write","0","EventByVersionWithProof","EventWithProof","DiemId","DiemIdParseError","DiemIdUserIdentifier","DiemIdVaspDomainIdentifier","as_str","as_str","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_str","into","into","into","into","ne","ne","ne","ne","new","new","new","serialize","serialize","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","user_identifier","vasp_domain_identifier","vzip","vzip","vzip","vzip","DiemTimestamp","DiemTimestampResource","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deserialize","deserialize","diem_timestamp","fmt","fmt","from","from","into","into","microseconds","serialize","serialize","test_only_hash","test_only_hash","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","EpochChangeProof","Verifier","arbitrary_with","borrow","borrow_mut","clone","clone_into","deserialize","epoch","epoch_change_verification_required","eq","equivalent","fmt","from","into","is_ledger_info_stale","ledger_info_with_sigs","more","ne","new","serialize","test_only_hash","to_owned","try_from","try_into","type_id","verify","verify","vzip","EpochState","arbitrary_with","borrow","borrow_mut","clone","clone_into","deserialize","empty","epoch","epoch_change_verification_required","eq","equivalent","fmt","fmt","from","into","is_ledger_info_stale","ne","serialize","test_only_hash","to_owned","to_string","try_from","try_into","type_id","verifier","verify","vzip","EventHandle","EventKey","EventKeyParseError","LENGTH","arbitrary_with","arbitrary_with","as_bytes","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","count","count_mut","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bytes","from_hex","from_str","get_creation_number","get_creator_address","hash","into","into","into","key","ne","ne","new","new","new_from_address","new_from_address","partial_cmp","random","random_handle","serialize","serialize","strategy_impl","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_string","to_string","to_vec","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","LedgerInfo","LedgerInfoHasher","LedgerInfoWithSignatures","LedgerInfoWithV0","V0","add_signature","arbitrary_with","arbitrary_with","arbitrary_with","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_voting_power","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","commit_info","commit_info","consensus_block_id","consensus_data_hash","default","deref","deref_mut","deserialize","deserialize","deserialize","ends_epoch","epoch","eq","eq","eq","equivalent","equivalent","equivalent","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","genesis","genesis","genesis","hash","into","into","into","into","ledger_info","mock_genesis","ne","ne","ne","new","new","new","next_block_epoch","next_epoch_state","remove_signature","round","seed","serialize","serialize","serialize","set_consensus_data_hash","signatures","test_only_hash","test_only_hash","test_only_hash","timestamp_usecs","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","transaction_accumulator_hash","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update","verify_signatures","version","vzip","vzip","vzip","vzip","write","0","Accepted","InvalidSeqNumber","InvalidUpdate","MempoolIsFull","MempoolStatus","MempoolStatusCode","TooManyTransactions","UnknownStatus","VmError","arbitrary_with","arbitrary_with","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","code","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","hash","hash","into","into","message","ne","new","partial_cmp","partial_cmp","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_message","MoveStorage","batch_fetch_resources","batch_fetch_resources_by_version","fetch_synced_version","Any","BCSError","DecryptError","Dns","Dns4","Dns6","DnsName","DnsNameTooLong","EmptyDnsNameString","EmptyError","EmptyProtocolString","Handshake","InvalidDnsNameCharacter","InvalidProtocolString","Ip4","Ip6","IpFilter","Memory","NetworkAddress","NoiseIK","OnlyIp4","OnlyIp6","ParseAddrError","ParseError","ParseIntError","ParseX25519PubkeyError","Protocol","Tcp","UnexpectedEnd","UnknownProtocolType","append_prod_protos","arb_diemnet_addr","arbitrary_with","arbitrary_with","arbitrary_with","as_ref","as_slice","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","encrypt","encrypted","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","extend_from_slice","find_ip_addr","find_noise_proto","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","from_str","hash","hash","hash","into","into","into","into","into","into","into_iter","is_diemnet_addr","matches","mock","ne","ne","ne","parse_dns_tcp","parse_handshake","parse_ip_tcp","parse_memory","parse_noise_ik","parse_tcp","push","rotate_noise_public_key","serialize","serialize","serialize","source","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_socket_addrs","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","AES_GCM_NONCE_LEN","AES_GCM_TAG_LEN","EncNetworkAddress","HKDF_SALT","KEY_LEN","Key","KeyVersion","TEST_SHARED_VAL_NETADDR_KEY","TEST_SHARED_VAL_NETADDR_KEY_VERSION","arbitrary_with","borrow","borrow_mut","clone","clone_into","decrypt","deserialize","encrypt","eq","equivalent","fmt","from","into","key_version","ne","seq_num","serialize","test_only_hash","to_owned","try_from","try_into","type_id","vzip","Nibble","ROOT_NIBBLE_HEIGHT","arbitrary_with","borrow","borrow_mut","clone","clone_into","cmp","deserialize","eq","equivalent","fmt","fmt","from","from","hash","into","ne","nibble_path","partial_cmp","serialize","test_only_hash","to_owned","try_from","try_into","type_id","vzip","BitIterator","NibbleIterator","NibblePath","Peekable","arbitrary_with","bits","bits","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bytes","clone","clone_into","cmp","deserialize","eq","equivalent","fmt","fmt","from","from","from","from_iter","get_nibble","get_nibble_path","hash","into","into","into","into_iter","into_iter","is_empty","is_finished","last","ne","new","new_odd","next","next","next_back","nibbles","num_nibbles","num_nibbles","partial_cmp","peek","peek","peek","pop","push","remaining_nibbles","serialize","skip_common_prefix","test_only_hash","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","visited_nibbles","vzip","vzip","vzip","ADDRESS","CONFIG_ID","ConfigID","ConfigStorage","ConfigurationResource","ConsensusConfigV1","ConsensusConfigV2","DIEM_MAX_KNOWN_VERSION","DIEM_VERSION_2","DIEM_VERSION_3","DIEM_VERSION_4","DiemVersion","IDENTIFIER","ON_CHAIN_CONFIG_REGISTRY","OnChainConfig","OnChainConfigPayload","OnChainConsensusConfig","RegisteredCurrencies","V1","V2","VMConfig","VMPublishingOption","ValidatorSet","access_path","access_path_for_config","arbitrary_with","back_pressure_limit","back_pressure_limit","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bump_epoch_for_test","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","config_address","configs","currency_codes","custom_scripts","decoupled_execution","decoupled_execution","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_default_impl","deserialize_into_config","deserialize_into_config","deserialize_into_config","empty","epoch","epoch","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","events","exclude_round","fetch_config","fetch_config","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","gas_schedule","get","hash","into","into","into","into","into","into","into","into","into","into","into","into_iter","is_open_module","is_open_module","is_open_script","last_reconfiguration_time","leader_reputation_exclude_round","locked","major","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new_epoch_event_key","open","partial_cmp","payload","script_allow_list","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","two_chain","two_chain","two_chain","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","AccountStateProof","AccumulatorConsistencyProof","AccumulatorExtensionProof","AccumulatorProof","AccumulatorRangeProof","EventAccumulatorInternalNode","EventAccumulatorProof","EventProof","MerkleTreeInternalNode","SparseMerkleInternalNode","SparseMerkleLeafNode","SparseMerkleLeafNodeHasher","SparseMerkleProof","SparseMerkleRangeProof","TestAccumulatorInternalNode","TestAccumulatorProof","TestAccumulatorRangeProof","TransactionAccumulatorInternalNode","TransactionAccumulatorProof","TransactionAccumulatorRangeProof","TransactionAccumulatorSummary","TransactionInfoListWithProof","TransactionInfoWithProof","accumulator","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default_protocol","definition","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_subtrees","is_empty","key","leaf","ledger_info_to_transaction_info_proof","ledger_info_to_transaction_info_proof","ledger_info_to_transaction_infos_proof","left_siblings","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_empty","position","proptest_proof","right_siblings","right_siblings","root_hash","seed","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","siblings","siblings","subtrees","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transaction_info","transaction_info","transaction_info_to_account_proof","transaction_info_with_proof","transaction_info_with_proof","transaction_infos","try_extend_with_proof","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_genesis_proof","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","value_hash","verify","verify","verify","verify","verify","verify","verify","verify","verify","verify_consistency","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write","InMemoryAccumulator","append","append_subtrees","borrow","borrow_mut","clone","clone_into","default","deserialize","eq","equivalent","fmt","from","from_leaves","frozen_subtree_roots","into","is_empty","mock","new","num_leaves","root_hash","serialize","test_only_hash","to_owned","try_from","try_into","type_id","version","vzip","MockTransactionAccumulator","borrow","borrow_mut","clone","clone_into","fmt","from","from_leaves","get_accumulator_summary","get_consistency_proof","get_root_hash","into","to_owned","try_from","try_into","type_id","version","vzip","with_version","AccountStateProof","AccumulatorConsistencyProof","AccumulatorExtensionProof","AccumulatorProof","AccumulatorRangeProof","EventAccumulatorProof","EventProof","SparseMerkleProof","SparseMerkleRangeProof","TransactionAccumulatorProof","TransactionAccumulatorRangeProof","TransactionAccumulatorSummary","TransactionInfoListWithProof","TransactionInfoWithProof","AccountStateProof","AccumulatorConsistencyProof","AccumulatorExtensionProof","AccumulatorProof","AccumulatorRangeProof","EventAccumulatorProof","EventProof","LeafCount","MAX_ACCUMULATOR_LEAVES","MAX_ACCUMULATOR_PROOF_DEPTH","SparseMerkleProof","SparseMerkleRangeProof","TestAccumulatorProof","TestAccumulatorRangeProof","TransactionAccumulatorProof","TransactionAccumulatorRangeProof","TransactionAccumulatorSummary","TransactionInfoListWithProof","TransactionInfoWithProof","default_protocol","ledger_info_to_transaction_info_proof","ledger_info_to_transaction_infos_proof","transaction_info","transaction_infos","AccountStateProof","AccumulatorConsistencyProof","AccumulatorExtensionProof","AccumulatorProof","AccumulatorRangeProof","EventAccumulatorProof","EventProof","SparseMerkleProof","SparseMerkleRangeProof","TransactionAccumulatorProof","TransactionAccumulatorRangeProof","TransactionAccumulatorSummary","TransactionInfoListWithProof","TransactionInfoWithProof","AncestorIterator","AncestorSiblingIterator","FrozenSubTreeIterator","FrozenSubtreeSiblingIterator","Left","NodeDirection","Position","Right","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_inorder_index","from_leaf_index","from_level_and_pos","from_postorder_index","hash","inorder_to_postorder","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","is_freezable","is_leaf","is_left_child","is_placeholder","is_right_child","iter_ancestor","iter_ancestor_sibling","left_child","left_most_child","level","ne","new","new","next","next","next","next","parent","partial_cmp","postorder_to_inorder","right_child","right_most_child","root_from_leaf_count","root_from_leaf_index","root_level_from_leaf_count","sibling","to_inorder_index","to_owned","to_postorder_index","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","AccountInfoUniverse","AccountResourceGen","AccountStateBlobGen","BalanceResourceGen","BlockInfoGen","ContractEventGen","LedgerInfoGen","LedgerInfoWithSignaturesGen","RawTransactionGen","SignatureCheckedTransactionGen","TransactionToCommitGen","arb_json_value","arbitrary","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","get_validator_set","into","into","into","into","into","into","into","into","into","into","into","materialize","materialize","materialize","materialize","materialize","materialize","materialize","materialize","materialize","materialize","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","DpnProto","NAME","ProtocolSpec","TransactionInfo","borrow","borrow_mut","clone","clone_into","fmt","from","into","to_owned","try_from","try_into","type_id","vzip","vec_bytes","deserialize","serialize","StateProof","arbitrary_with","as_inner","borrow","borrow_mut","clone","clone_into","consistency_proof","deserialize","epoch_changes","eq","equivalent","fmt","from","into","into_inner","latest_ledger_info","latest_ledger_info_w_sigs","ne","new","serialize","test_only_hash","to_owned","try_from","try_from","try_into","type_id","vzip","transaction_test_helpers","get_test_signed_module_publishing_transaction","get_test_signed_transaction","get_test_signed_txn","get_test_txn_with_chain_id","get_test_unchecked_multi_agent_txn","get_test_unchecked_transaction","get_test_unchecked_txn","get_write_set_txn","0","AccountTransactionsWithProof","Address","ArgumentABI","BlockMetadata","Bool","ChangeSet","DesignatedDealer","DiemRoot","Direct","Discard","GenesisTransaction","GovernanceRole","Keep","Module","Module","MultiAgent","NonGovernanceRole","PRE_GENESIS_VERSION","RawTransaction","RawTransactionHasher","RawTransactionWithData","RawTransactionWithDataHasher","Retry","Script","Script","Script","ScriptABI","ScriptFunction","ScriptFunction","ScriptFunction","ScriptFunctionABI","SignatureCheckedTransaction","SignedTransaction","Transaction","TransactionArgument","TransactionHasher","TransactionInfo","TransactionInfoHasher","TransactionInfoTrait","TransactionListWithProof","TransactionOutput","TransactionOutputListWithProof","TransactionPayload","TransactionScript","TransactionScriptABI","TransactionStatus","TransactionToCommit","TransactionWithProof","TreasuryCompliance","TypeArgumentABI","U128","U64","U8","U8Vector","UserTransaction","VMValidatorResult","Validator","ValidatorOperator","VecBytes","Version","WriteSet","WriteSetPayload","account_states","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","args","args","as_signed_user_txn","authenticator","authenticator","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_id","check_signature","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","code","code","committed_hash","contains_duplicate_signers","default","default","default","default","default_protocol","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","event_root_hash","event_root_hash","events","events","events","events","events","expiration_timestamp_secs","finish","finish","finish","finish","first_transaction_output_version","first_transaction_version","flush","flush","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format_for_client","format_for_client","format_for_client","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_role_id","function","gas_currency_code","gas_unit_price","gas_used","gas_used","gas_used","gas_used","genesis_strategy","genesis_strategy","governance_role","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","helpers","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_payload","into_raw_transaction","into_raw_transaction","into_script_function","is_discarded","is_empty","is_multi_agent","jf_node_hashes","len","max_gas_amount","metadata","module","module_strategy","module_strategy","multi_sign_for_testing","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_change_set","new_empty","new_empty","new_empty","new_module","new_multi_agent","new_multi_agent","new_multisig","new_script","new_script_function","new_with_authenticator","new_write_set","new_writeset_script","parse_transaction_argument","partial_cmp","payload","priority","proof","proof","proof","raw_txn_bytes_len","score","script_strategy","script_strategy","seed","seed","seed","seed","sender","sender","sequence_number","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","should_trigger_reconfiguration_by_default","should_trigger_reconfiguration_by_default","sign","sign_multi_agent","signing_message","state_root_hash","state_root_hash","status","status","status","status","status","status","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transaction","transaction","transaction_hash","transaction_hash","transactions","transactions_and_outputs","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty_args","ty_args","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","update","update","update","verify","verify","verify","verify_user_txn","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write","write","write","write","write_set","write_set","write_set","write_set_strategy","write_set_strategy","raw_txn","secondary_signer_addresses","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","execute_as","script","AccountAuthenticator","AuthenticationError","AuthenticationKey","AuthenticationKeyHasher","AuthenticationKeyPreimage","Ed25519","Ed25519","Ed25519","LENGTH","MAX_NUM_OF_SIGS","MaxSignaturesExceeded","MultiAgent","MultiEd25519","MultiEd25519","MultiEd25519","Scheme","TransactionAuthenticator","arbitrary_with","as_ref","authentication_key","authentication_key_preimage","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","derived_address","deserialize","deserialize","deserialize","ed25519","ed25519","ed25519","ed25519","encode_hex","encode_hex_upper","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_preimage","from_str","hash","hash","hash","into","into","into","into","into","into","into","into_vec","multi_agent","multi_ed25519","multi_ed25519","multi_ed25519","multi_ed25519","ne","ne","ne","new","number_of_signatures","partial_cmp","prefix","public_key_bytes","random","scheme","secondary_signer_addreses","secondary_signers","seed","sender","serialize","serialize","serialize","signature_bytes","test_only_hash","test_only_hash","test_only_hash","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_vec","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","verify","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write","zero","public_key","public_key","signature","signature","public_key","public_key","secondary_signer_addresses","secondary_signers","sender","signature","signature","AccountTransactionsWithProof","TransactionInfoWithProof","TransactionListWithProof","TransactionOutputListWithProof","TransactionWithProof","TransactionSigner","create_unsigned_txn","create_user_txn","sign_txn","CoinTradeMetadata","CoinTradeMetadata","CoinTradeMetadataV0","CoinTradeMetadataV0","GeneralMetadata","GeneralMetadata","GeneralMetadataV0","GeneralMetadataVersion0","InvalidReferenceId","InvalidSubaddress","Metadata","OtherReason","PaymentMetadata","PaymentMetadata","PaymentMetadataV0","PaymentMetadataVersion0","RefundMetadata","RefundMetadata","RefundMetadataV0","RefundMetadataV0","RefundReason","TravelRuleMetadata","TravelRuleMetadata","TravelRuleMetadataV0","TravelRuleMetadataVersion0","Undefined","UnstructuredBytesMetadata","UnstructuredBytesMetadata","UserInitiatedFullRefund","UserInitiatedPartialRefund","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_subaddress","into","into","into","into","into","into","into","into","into","into","into","into","into","metadata","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","off_chain_reference_id","reason","reference_id","referenced_event","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subaddress","trade_ids","transaction_version","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","Epoch","EpochState","EpochWaypoint","NoChange","TrustedState","TrustedStateChange","TrustedStateHasher","Version","accumulator_root_hash","accumulator_summary","arbitrary_with","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","deserialize","epoch_change_verification_required","eq","equivalent","finish","flush","fmt","fmt","from","from","from","from_epoch_waypoint","hash","into","into","into","is_epoch_change","is_epoch_waypoint","is_ledger_info_stale","is_no_change","ne","need_accumulator","new_state","seed","serialize","test_only_hash","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from_epoch_change_li","try_into","try_into","try_into","type_id","type_id","type_id","update","verify","verify_and_ratchet","verify_and_ratchet_inner","version","vzip","vzip","vzip","waypoint","write","0","accumulator","epoch_state","waypoint","latest_epoch_change_li","new_state","new_state","ValidatorConfig","ValidatorConfigResource","ValidatorOperatorConfigResource","arbitrary_with","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","consensus_public_key","default","default","delegated_account","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","fullnode_network_addresses","fullnode_network_addresses","human_name","human_name","into","into","into","ne","ne","ne","new","serialize","serialize","serialize","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validator_config","validator_network_addresses","validator_network_addresses","vzip","vzip","vzip","ValidatorInfo","account_address","arbitrary_with","borrow","borrow_mut","clone","clone_into","config","consensus_public_key","consensus_voting_power","deserialize","eq","equivalent","fmt","fmt","from","into","into_config","ne","new","new_with_test_network_keys","serialize","test_only_hash","to_owned","to_string","try_from","try_into","type_id","vzip","ValidatorSigner","author","borrow","borrow_mut","clone","clone_into","fmt","from","from_int","into","new","private_key","proptests","public_key","random","sign","to_owned","try_from","try_into","type_id","vzip","arb_signer","arb_signing_key","mostly_in_keypair_pool","rand_signer","signer_strategy","InconsistentBlockInfo","InvalidSignature","TooLittleVotingPower","TooManySignatures","UnknownAuthor","ValidatorConsensusInfo","ValidatorVerifier","VerifyError","arbitrary_with","arbitrary_with","batch_verify_aggregated_signatures","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_voting_power","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","get_ordered_account_addresses_iter","get_public_key","get_voting_power","into","into","into","is_empty","len","ne","ne","ne","new","new","new_for_testing","new_single","new_with_quorum_voting_power","quorum_voting_power","random_validator_verifier","serialize","serialize","test_only_hash","test_only_hash","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verify","verify_aggregated_struct_signature","vzip","vzip","vzip","num_of_authors","num_of_signatures","quorum_voting_power","voting_power","ABORTED","ABORT_TYPE_MISMATCH_ERROR","ARITHMETIC_ERROR","AbortLocation","BACKWARD_INCOMPATIBLE_MODULE_UPDATE","BAD_CHAIN_ID","BAD_HEADER_TABLE","BAD_MAGIC","BAD_TRANSACTION_FEE_CURRENCY","BAD_U128","BAD_U64","BOOLEAN_OP_TYPE_MISMATCH_ERROR","BORROWFIELD_BAD_FIELD_ERROR","BORROWFIELD_EXISTS_MUTABLE_BORROW_ERROR","BORROWFIELD_TYPE_MISMATCH_ERROR","BORROWGLOBAL_TYPE_MISMATCH_ERROR","BORROWGLOBAL_WITHOUT_KEY_ABILITY","BORROWLOC_EXISTS_BORROW_ERROR","BORROWLOC_REFERENCE_ERROR","BORROWLOC_UNAVAILABLE_ERROR","BR_TYPE_MISMATCH_ERROR","CALLED_SCRIPT_VISIBLE_FROM_NON_SCRIPT_VISIBLE","CALL_BORROWED_MUTABLE_REFERENCE_ERROR","CALL_STACK_OVERFLOW","CALL_TYPE_MISMATCH_ERROR","CODE_DESERIALIZATION_ERROR","CONSTRAINT_NOT_SATISFIED","COPYLOC_EXISTS_BORROW_ERROR","COPYLOC_UNAVAILABLE_ERROR","COPYLOC_WITHOUT_COPY_ABILITY","CURRENCY_INFO_DOES_NOT_EXIST","CYCLIC_MODULE_DEPENDENCY","CYCLIC_MODULE_FRIENDSHIP","DATA_FORMAT_ERROR","DUPLICATE_ACQUIRES_ANNOTATION","DUPLICATE_ELEMENT","DUPLICATE_MODULE_NAME","DUPLICATE_NATIVE_FUNCTION","DUPLICATE_TABLE","Deserialization","DiscardedVMStatus","EMPTY_CODE_UNIT","EMPTY_VALUE_STACK","EQUALITY_OP_TYPE_MISMATCH_ERROR","EVENT_KEY_MISMATCH","EXCEEDED_MAX_TRANSACTION_SIZE","EXECUTED","EXECUTE_SCRIPT_FUNCTION_CALLED_ON_NON_SCRIPT_VISIBLE","EXECUTION_STACK_OVERFLOW","EXISTS_WITHOUT_KEY_ABILITY_OR_BAD_ARGUMENT","EXTRANEOUS_ACQUIRES_ANNOTATION","Error","Executed","Executed","Execution","ExecutionFailure","ExecutionFailure","FAILED_TO_DESERIALIZE_ARGUMENT","FAILED_TO_DESERIALIZE_RESOURCE","FAILED_TO_SERIALIZE_WRITE_SET_CHANGES","FEATURE_UNDER_GATING","FIELD_MISSING_TYPE_ABILITY","FREEZEREF_EXISTS_MUTABLE_BORROW_ERROR","FREEZEREF_TYPE_MISMATCH_ERROR","FUNCTION_RESOLUTION_FAILURE","GAS_UNIT_PRICE_ABOVE_MAX_BOUND","GAS_UNIT_PRICE_BELOW_MIN_BOUND","GENERIC_MEMBER_OPCODE_MISMATCH","GLOBAL_REFERENCE_ERROR","INDEX_OUT_OF_BOUNDS","INSUFFICIENT_BALANCE_FOR_TRANSACTION_FEE","INTEGER_OP_TYPE_MISMATCH_ERROR","INTERNAL_TYPE_ERROR","INVALID_ACQUIRES_ANNOTATION","INVALID_AUTH_KEY","INVALID_CONSTANT_TYPE","INVALID_FALL_THROUGH","INVALID_FLAG_BITS","INVALID_FRIEND_DECL_WITH_MODULES_IN_DEPENDENCIES","INVALID_FRIEND_DECL_WITH_MODULES_OUTSIDE_ACCOUNT_ADDRESS","INVALID_FRIEND_DECL_WITH_SELF","INVALID_GAS_SPECIFIER","INVALID_LOOP_BREAK","INVALID_LOOP_CONTINUE","INVALID_LOOP_SPLIT","INVALID_MAIN_FUNCTION_SIGNATURE","INVALID_MODULE_HANDLE","INVALID_MODULE_PUBLISHER","INVALID_OPERATION_IN_SCRIPT","INVALID_PARAM_TYPE_FOR_DESERIALIZATION","INVALID_PHANTOM_TYPE_PARAM_POSITION","INVALID_SIGNATURE","INVALID_SIGNATURE_TOKEN","INVALID_WRITE_SET","InvariantViolation","KeptVMStatus","LINKER_ERROR","LOOKUP_FAILED","LOOP_IN_INSTANTIATION_GRAPH","MALFORMED","MALFORMED_CONSTANT_DATA","MAX_GAS_UNITS_BELOW_MIN_TRANSACTION_GAS_UNITS","MAX_GAS_UNITS_EXCEEDS_MAX_GAS_UNITS_BOUND","MISSING_ACQUIRES_ANNOTATION","MISSING_DATA","MISSING_DEPENDENCY","MODULE_ADDRESS_DOES_NOT_MATCH_SENDER","MOVEFROM_TYPE_MISMATCH_ERROR","MOVEFROM_WITHOUT_KEY_ABILITY","MOVELOC_EXISTS_BORROW_ERROR","MOVELOC_UNAVAILABLE_ERROR","MOVETO_TYPE_MISMATCH_ERROR","MOVETO_WITHOUT_KEY_ABILITY","MiscellaneousError","Module","MoveAbort","MoveAbort","NEGATIVE_STACK_SIZE_WITHIN_BLOCK","NO_ACCOUNT_ROLE","NO_MODULE_HANDLES","NUMBER_OF_ARGUMENTS_MISMATCH","NUMBER_OF_SIGNER_ARGUMENTS_MISMATCH","NUMBER_OF_TYPE_ARGUMENTS_MISMATCH","OUT_OF_GAS","OutOfGas","PACK_TYPE_MISMATCH_ERROR","PC_OVERFLOW","POP_WITHOUT_DROP_ABILITY","POSITIVE_STACK_SIZE_AT_BLOCK_END","READREF_EXISTS_MUTABLE_BORROW_ERROR","READREF_TYPE_MISMATCH_ERROR","READREF_WITHOUT_COPY_ABILITY","RECURSIVE_STRUCT_DEFINITION","REJECTED_WRITE_SET","RESOURCE_ALREADY_EXISTS","RESOURCE_DOES_NOT_EXIST","RET_BORROWED_MUTABLE_REFERENCE_ERROR","RET_TYPE_MISMATCH_ERROR","SECONDARY_KEYS_ADDRESSES_COUNT_MISMATCH","SENDING_ACCOUNT_DOES_NOT_EXIST","SENDING_ACCOUNT_FROZEN","SEQUENCE_NONCE_INVALID","SEQUENCE_NUMBER_TOO_BIG","SEQUENCE_NUMBER_TOO_NEW","SEQUENCE_NUMBER_TOO_OLD","SIGNERS_CONTAIN_DUPLICATES","STLOC_TYPE_MISMATCH_ERROR","STLOC_UNSAFE_TO_DESTROY_ERROR","STORAGE_ERROR","Script","StatusCode","StatusType","TOO_MANY_LOCALS","TRANSACTION_EXPIRED","TYPE_MISMATCH","TYPE_RESOLUTION_FAILURE","UNABLE_TO_DESERIALIZE_ACCOUNT","UNEXPECTED_DESERIALIZATION_ERROR","UNEXPECTED_ERROR_FROM_KNOWN_MOVE_FUNCTION","UNEXPECTED_SIGNATURE_TYPE","UNEXPECTED_VERIFIER_ERROR","UNIMPLEMENTED_HANDLE","UNKNOWN_ABILITY","UNKNOWN_BINARY_ERROR","UNKNOWN_INVARIANT_VIOLATION_ERROR","UNKNOWN_MODULE","UNKNOWN_NATIVE_STRUCT_FLAG","UNKNOWN_OPCODE","UNKNOWN_RUNTIME_STATUS","UNKNOWN_SCRIPT","UNKNOWN_SERIALIZED_TYPE","UNKNOWN_SIGNATURE_TYPE","UNKNOWN_STATUS","UNKNOWN_TABLE_TYPE","UNKNOWN_VALIDATION_STATUS","UNKNOWN_VERIFICATION_ERROR","UNKNOWN_VERSION","UNPACK_TYPE_MISMATCH_ERROR","UNREACHABLE","UNSAFE_RET_LOCAL_OR_RESOURCE_STILL_BORROWED","UNSAFE_RET_UNUSED_VALUES_WITHOUT_DROP","Unknown","VALUE_DESERIALIZATION_ERROR","VALUE_SERIALIZATION_ERROR","VEC_BORROW_ELEMENT_EXISTS_MUTABLE_BORROW_ERROR","VEC_UPDATE_EXISTS_MUTABLE_BORROW_ERROR","VERIFICATION_ERROR","VERIFIER_INVARIANT_VIOLATION","VMStatus","VM_MAX_TYPE_DEPTH_REACHED","VM_MAX_VALUE_DEPTH_REACHED","VM_STARTUP_FAILURE","Validation","Verification","WRITEREF_EXISTS_BORROW_ERROR","WRITEREF_NO_MUTABLE_REFERENCE_ERROR","WRITEREF_TYPE_MISMATCH_ERROR","WRITEREF_WITHOUT_DROP_ABILITY","ZERO_SIZED_STRUCT","known_locations","sub_status","0","0","1","code_offset","function","location","0","0","1","code_offset","function","location","status_code","ACCOUNT_MODULE","ACCOUNT_MODULE_IDENTIFIER","DESIGNATED_DEALER_MODULE","DESIGNATED_DEALER_MODULE_IDENTIFIER","DIEM_MODULE","DIEM_MODULE_IDENTIFIER","account_module_abort","designated_dealer_module_abort","diem_module_abort","NFE_BCS_SERIALIZATION_FAILURE","NFE_VECTOR_ERROR_BASE","Ledger2WaypointConverterHasher","Waypoint","arbitrary_with","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deserialize","epoch_change_verification_required","eq","equivalent","finish","flush","fmt","fmt","from","from","from_str","into","into","is_ledger_info_stale","ne","new_any","new_epoch_boundary","seed","serialize","test_only_hash","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update","value","verify","verify","version","vzip","vzip","write","Deletion","Value","WriteOp","WriteSet","WriteSetMut","arbitrary_with","arbitrary_with","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","deletion_strategy","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","freeze","from","from","from","from_iter","hash","hash","hash","into","into","into","into_iter","into_mut","is_deletion","is_empty","is_empty","iter","ne","ne","ne","new","push","serialize","serialize","serialize","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","value_strategy","vzip","vzip","vzip","0"],"q":["diem_sdk","","","","","diem_sdk::clientdiem_sdk::client::MethodRequest","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::client::MethodResponse","","","","","","","","","","","","","","","diem_sdk::client::WaitForTransactionError","","","diem_sdk::client::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::client::errors::ErrorData","diem_sdk::client::stream","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::client::stream::request","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::client::stream::request::StreamMethodRequest","","diem_sdk::client::stream::response","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::client::stream::response::StreamJsonRpcResponseView","","","","diem_sdk::client::viewsdiem_sdk::client::views::AccountRoleView","","","","","","","","","","","","","","","","","","","diem_sdk::client::views::EventDataView","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::client::views::TransactionDataView","","","","","","","","","","","","","","","","","","diem_sdk::client::views::VMStatusView","","","","","","diem_sdk::crypto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::crypto::CryptoMaterialError","diem_sdk::crypto::_once_cell","","","diem_sdk::crypto::_once_cell::race","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::crypto::_once_cell::sync","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::crypto::_once_cell::unsync","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::crypto::_serde_name","diem_sdk::crypto::compat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::crypto::ed25519","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::crypto::ed25519::ed25519_dalekdiem_sdk::crypto::ed25519::ed25519_dalek::ed25519","","","","","","","","","","","","","","","","","","","","diem_sdk::crypto::ed25519::ed25519_dalek::ed25519::signature","","","","","","","","","diem_sdk::crypto::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::crypto::hash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::crypto::hkdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::crypto::multi_ed25519","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::crypto::noise","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::crypto::test_utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::crypto::traits","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::crypto::traits::CryptoMaterialError","diem_sdk::crypto::validatable","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::crypto::x25519","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::crypto::x25519::x25519_dalek","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::move_types","","","","","","","","","","","","","","","diem_sdk::move_types::abi","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::move_types::abi::ScriptABI","","diem_sdk::move_types::account_address","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::move_types::effects","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::move_types::errmap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::move_types::gas_schedulediem_sdk::move_types::identifier","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::move_types::language_storage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::move_types::language_storage::TypeTag","","diem_sdk::move_types::move_resource","","","","","","","","","diem_sdk::move_types::parser","","","","","","diem_sdk::move_types::resolver","","","","","","","","diem_sdk::move_types::transaction_argument","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::move_types::transaction_argument::TransactionArgument","","","","","","diem_sdk::move_types::value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::move_types::value::MoveStruct","","diem_sdk::move_types::value::MoveStructLayout","","diem_sdk::move_types::value::MoveTypeLayout","","diem_sdk::move_types::value::MoveValue","","","","","","","","diem_sdk::move_types::vm_status","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::move_types::vm_status::AbortLocation","diem_sdk::move_types::vm_status::KeptVMStatus","","","","","diem_sdk::move_types::vm_status::VMStatus","","","","","","","diem_sdk::move_types::vm_status::known_locations","","","","","","","","","diem_sdk::move_types::vm_status::sub_status","","diem_sdk::transaction_builder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::transaction_builder::stdlibdiem_sdk::transaction_builder::stdlib::ScriptCall","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::transaction_builder::stdlib::ScriptFunctionCall","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::types::access_path","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::types::access_path::Path","","diem_sdk::types::account_address","","","","","diem_sdk::types::account_configdiem_sdk::types::account_config::AccountRole","","","","","","","","diem_sdk::types::account_config::AccountSequenceInfo","","","diem_sdk::types::account_config::DesignatedDealerPreburns","","diem_sdk::types::account_config::constants","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::types::account_config::constants::account","","diem_sdk::types::account_config::constants::addresses","","","","","","diem_sdk::types::account_config::constants::coins","","","","","","","","diem_sdk::types::account_config::constants::designated_dealer","","diem_sdk::types::account_config::constants::diem","","","","","","","diem_sdk::types::account_config::constants::event","","diem_sdk::types::account_config::events","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::types::account_config::events::admin_transaction","diem_sdk::types::account_config::events::base_url_rotation","diem_sdk::types::account_config::events::burn","diem_sdk::types::account_config::events::cancel_burn","diem_sdk::types::account_config::events::compliance_key_rotation","diem_sdk::types::account_config::events::create_account","diem_sdk::types::account_config::events::exchange_rate_update","diem_sdk::types::account_config::events::force_shift","diem_sdk::types::account_config::events::mint","diem_sdk::types::account_config::events::new_block","diem_sdk::types::account_config::events::new_epoch","diem_sdk::types::account_config::events::preburn","diem_sdk::types::account_config::events::received_mint","diem_sdk::types::account_config::events::received_payment","diem_sdk::types::account_config::events::sent_payment","diem_sdk::types::account_config::resources","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::types::account_config::resources::AccountRole","","","","","","","","diem_sdk::types::account_config::resources::AccountSequenceInfo","","","diem_sdk::types::account_config::resources::DesignatedDealerPreburns","","diem_sdk::types::account_config::resources::account","diem_sdk::types::account_config::resources::balance","diem_sdk::types::account_config::resources::chain_id","diem_sdk::types::account_config::resources::crsn","","","","diem_sdk::types::account_config::resources::crsn::AccountSequenceInfo","","","diem_sdk::types::account_config::resources::currency_info","diem_sdk::types::account_config::resources::designated_dealer","","","","diem_sdk::types::account_config::resources::designated_dealer::DesignatedDealerPreburns","","diem_sdk::types::account_config::resources::dual_attestation","","","diem_sdk::types::account_config::resources::freezing_bit","diem_sdk::types::account_config::resources::key_rotation_capability","diem_sdk::types::account_config::resources::preburn_balance","diem_sdk::types::account_config::resources::preburn_queue","diem_sdk::types::account_config::resources::preburn_with_metadata","diem_sdk::types::account_config::resources::role","","","","","","diem_sdk::types::account_config::resources::role::AccountRole","","","","","","","","diem_sdk::types::account_config::resources::role_id","diem_sdk::types::account_config::resources::vasp","","diem_sdk::types::account_config::resources::vasp_domain","","","","","","","diem_sdk::types::account_config::resources::withdraw_capability","diem_sdk::types::account_state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::types::account_state_blob","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::types::account_state_blob::default_protocol","diem_sdk::types::block_info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::types::block_metadata","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::types::chain_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::types::contract_event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::types::contract_event::ContractEvent","diem_sdk::types::contract_event::default_protocol","","diem_sdk::types::diem_id_identifier","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::types::diem_timestamp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::types::epoch_change","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::types::epoch_state","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::types::event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::types::ledger_info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::types::ledger_info::LedgerInfoWithSignatures","diem_sdk::types::mempool_status","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::types::move_resource","","","","diem_sdk::types::network_address","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::types::network_address::ParseError","","","","","","diem_sdk::types::network_address::Protocol","","","","","","","","","diem_sdk::types::network_address::encrypted","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::types::nibble","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::types::nibble::nibble_path","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::types::on_chain_configdiem_sdk::types::on_chain_config::OnChainConsensusConfig","","diem_sdk::types::proofdiem_sdk::types::proof::accumulator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::types::proof::accumulator::mock","","","","","","","","","","","","","","","","","","","diem_sdk::types::proof::default_protocol","","","","","","","","","","","","","","diem_sdk::types::proof::definition","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::types::proof::definition::default_protocol","","","","","","","","","","","","","","diem_sdk::types::proof::position","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::types::proptest_types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::types::protocol_spec","","","","","","","","","","","","","","","","diem_sdk::types::serde_helper","diem_sdk::types::serde_helper::vec_bytes","","diem_sdk::types::state_proof","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::types::test_helpers","diem_sdk::types::test_helpers::transaction_test_helpers","","","","","","","","diem_sdk::types::transactiondiem_sdk::types::transaction::RawTransactionWithData","","diem_sdk::types::transaction::ScriptABI","","diem_sdk::types::transaction::Transaction","","","diem_sdk::types::transaction::TransactionArgument","","","","","","diem_sdk::types::transaction::TransactionPayload","","","","diem_sdk::types::transaction::TransactionStatus","","diem_sdk::types::transaction::WriteSetPayload","","","diem_sdk::types::transaction::authenticatordiem_sdk::types::transaction::authenticator::AccountAuthenticator","","","","diem_sdk::types::transaction::authenticator::TransactionAuthenticator","","","","","","","diem_sdk::types::transaction::default_protocol","","","","","diem_sdk::types::transaction::helpers","","","","diem_sdk::types::transaction::metadatadiem_sdk::types::transaction::metadata::CoinTradeMetadata","diem_sdk::types::transaction::metadata::GeneralMetadata","diem_sdk::types::transaction::metadata::Metadata","","","","","","diem_sdk::types::transaction::metadata::PaymentMetadata","diem_sdk::types::transaction::metadata::RefundMetadata","diem_sdk::types::transaction::metadata::TravelRuleMetadata","diem_sdk::types::trusted_state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::types::trusted_state::TrustedState","","","","diem_sdk::types::trusted_state::TrustedStateChange","","","diem_sdk::types::validator_config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::types::validator_info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::types::validator_signer","","","","","","","","","","","","","","","","","","","","","diem_sdk::types::validator_signer::proptests","","","","","diem_sdk::types::validator_verifier","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::types::validator_verifier::VerifyError","","","","diem_sdk::types::vm_statusdiem_sdk::types::vm_status::AbortLocation","diem_sdk::types::vm_status::KeptVMStatus","","","","","diem_sdk::types::vm_status::VMStatus","","","","","","","diem_sdk::types::vm_status::known_locations","","","","","","","","","diem_sdk::types::vm_status::sub_status","","diem_sdk::types::waypoint","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::types::write_set","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_sdk::types::write_set::WriteOp"],"d":["","","","","","A struct that represents an account address.","","","","Wrapper for a deserialized Move event and its containing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A transaction that has been signed.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the events of type <code>T</code> that have been emitted to …","Return the events of type <code>T</code> that have been emitted to …","Deserialize and return the resource value of type <code>T</code> stored …","Deserialize and return the resource value of type <code>T</code> stored …list of server internal errors","","","","JSON RPC server error codes for invalid request","","","","","","","","","","Custom JSON RPC server error codes Ranges from -32000 to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This API is experimental and subject to change …","Configuration options for the <code>Streaming Client</code>","","","","","","","","The buffer of incoming messages per subscription","","","","","","","","","","","","","How long to wait for an incoming message before …he Unknown variant is deserialized by the client if it …itVec errors in accountable multi-sig schemes.","Part of the signature or key is not canonical resulting to …","An error type for key and signature validation issues, see …","Key or signature material does not deserialize correctly.","A type family with a by-convention notion of genesis …","Output value of our hash function. Intentionally opaque …","The length of the hash in bytes.","The length of the hash in bits.","The serialized length of the data that enables macro …","A curve point (i.e., a public key) does not satisfy the …","A type family for key material that should remain secret …","We require public / private types to be coupled, i.e. their","A type for key material that can be publicly shared, and …","We require public / private types to be coupled, i.e. their","Struct to be signed does not serialize correctly.","A type family for signature material that knows which …","The associated signature type for this signing key.","The associated signature type for this verifying key.","A type family of valid keys that know how to sign.","The associated signing key type for this verifying key.","The associated signing key type for this signature","A curve point (i.e., a public key) lies on a small group.","A type family for schemes which know how to generate key …","Key or more generally crypto material with a notion of …","An extension to to/from Strings for <code>ValidCryptoMaterial</code>.","Key or signature material deserializes, but is otherwise …","A type family of public keys that are used for signing.","The associated verifying key type for this signing key.","The associated verifying key type for this signature.","Key, threshold or signature material does not have the …","","","We provide the implementation which dispatches to the …","The implementer can override a batch verification …","Returns the <code>index</code>-th bit in the bytes.","","","","","","","","","","Returns the length of common prefix of <code>self</code> and <code>other</code> in …","Wrapper structs for types that need RustCrypto traits …","","","","This module provides an API for the PureEdDSA signature …","","","","","Rexport the error types needed for the various crypto …","","","","","","","","","Constructs a <code>HashValue</code> from an iterator of bits.","When trying to convert from bytes, we simply decode the …","Parse a given hex string to a hash value.","Create from a slice (e.g. retrieved from storage).","","Create a hash value whose contents are just the given …","Generate key material from an RNG. This should generally …","Generate a random key using the shared TEST_SEED","Produces the genesis private key.","This module defines traits and implementations of …","","An implementation of HKDF, the HMAC-based …","","","","Returns a <code>HashValueBitIterator</code> over all the bits that …","The serialized length of the data","This module provides an API for the accountable threshold …","","","Create a new <code>HashValue</code> from a byte array.","Returns the <code>index</code>-th nibble in the bytes.","Noise is a protocol framework which we use in Diem to …","","Returns the associated public key","Create a cryptographically random instance.","Creates a random instance with given rng. Useful in unit …","","Convenience function that computes a <code>HashValue</code> internally …","Signs an object that has an distinct domain-separation …","Signs a non-hash input message. For testing only.","Returns the signing message for the given message. It is …","","Internal module containing convenience utility functions …","Convert the valid crypto material to bytes.","Convert the signature into a byte representation.","A function to encode into hex-string after serializing.","Full hex representation of a given hash value.","Full hex representation of a given hash value with <code>0x</code> …","","","","","Dumps into a vector.","This module provides a generic set of traits for dealing …","","","","","","","This module provides the <code>Validate</code> trait and <code>Validatable</code> …","Verification for a struct we unabmiguously know how to …","Native verification function.","We provide the striaghtfoward implementation which …","Returns the associated verifying key","","","An abstraction of x25519 elliptic curve keys required for …","Creates a zero-initialized instance.","","Thread-safe, non-blocking, “first one wins” flavor of …","Thread-safe, blocking version of <code>OnceCell</code>.","Single-threaded version of <code>OnceCell</code>.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","","","","","","","","","","","","","","","","","Gets the underlying value.","Gets the underlying value.","Gets a reference to the underlying value.","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","","","","Creates a new empty cell.","Creates a new empty cell.","Creates a new empty cell.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","","","","","","","","","","","","","A value which is initialized on the first access.","A thread-safe cell which can be written to only once.","","","","","","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","","","","","Forces the evaluation of this lazy value and returns a …","","","","","Gets the reference to the underlying value.","Gets the mutable reference to the underlying value.","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Get the reference to the underlying value, without …","","","Consumes the <code>OnceCell</code>, returning the wrapped value. Returns","Consumes this <code>Lazy</code> returning the stored value.","Creates a new empty cell.","Creates a new lazy value with the given initializing …","Sets the contents of this cell to <code>value</code>.","Takes the value out of this <code>OnceCell</code>, moving it back to an …","","","","Like <code>set</code>, but also returns a reference to the final cell …","","","","","","","A value which is initialized on the first access.","A cell which can be written to only once. It is not thread …","","","","","","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","","","","","Forces the evaluation of this lazy value and returns a …","","","","","Gets a reference to the underlying value.","Gets a mutable reference to the underlying value.","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","","","Consumes the <code>OnceCell</code>, returning the wrapped value.","Consumes this <code>Lazy</code> returning the stored value.","Creates a new empty cell.","Creates a new lazy value with the given initializing …","Sets the contents of this cell to <code>value</code>.","Takes the value out of this <code>OnceCell</code>, moving it back to an …","","","","Like <code>set</code>, but also returns a referce to the final cell …","","","","","","","Compute the Serde name of a container.","A wrapper for [<code>tiny_keccak::Sha3::v256</code>] that implements …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The length of the Ed25519PrivateKey","The length of the Ed25519PublicKey","The length of the Ed25519Signature","An Ed25519 private key","An Ed25519 public key","An Ed25519 signature","The length of the Ed25519PrivateKey","The length of the Ed25519Signature","","","","","","","","Check for correct size and third-party based signature …","","","","","","","","","","return an all-zero signature (for test only)","","","","","","","","","","","","","","","","","","","","","","","","Produces a uniformly random ed25519 keypair from a seed","","","","","","","","","","","","Serialize an Ed25519PrivateKey.","","Serialize an Ed25519PublicKey.","","Serialize an Ed25519Signature.","","","","","","","","","","","Deserialize an Ed25519PrivateKey. This method will also …","Deserialize an Ed25519PublicKey. This method will also …","","","","","","","","","","","Verifies that the provided signature is valid for the …","Checks that <code>self</code> is valid for an arbitrary &amp;u8 <code>message</code> …","","","","The <code>Digest</code> trait specifies an interface common for digest …","The length of an “expanded” ed25519 key, …","An “expanded” secret key.","The length of an ed25519 <code>Keypair</code>, in bytes.","An ed25519 keypair.","Output size for <code>Digest</code>","The length of an ed25519 <code>PublicKey</code>, in bytes.","An ed25519 public key.","The length of a ed25519 <code>SecretKey</code>, in bytes.","The length of a ed25519 <code>Signature</code>, in bytes.","An EdDSA secret key.","The SHA-512 hash algorithm with the SHA-512 initial hash …","Ed25519 signature.","Errors which may occur while processing signatures and …","Sign the provided message bytestring using <code>Self</code> (e.g. a …","Verify the provided message bytestring using <code>Self</code> (e.g. a …","View this public key as a byte array.","View this secret key as a byte array.","","","","","","","","","","","","","","","","","Digest input data in a chained manner.","","","","","","","","","","","","","","","Convenience function to compute hash of the <code>data</code>. It will …","","","","","","","","","","","","","","Retrieve result and consume hasher instance.","","","","","","Retrieve result and reset hasher instance.","","","","","","","","","","","Derive this public key from its corresponding …","Derive this public key from its corresponding <code>SecretKey</code>.","","","Construct an <code>ExpandedSecretKey</code> from a <code>SecretKey</code>.","","","","","Construct a <code>Keypair</code> from the bytes of a <code>PublicKey</code> and …","Construct a <code>PublicKey</code> from a slice of bytes.","Construct a <code>SecretKey</code> from a slice of bytes.","Construct an <code>ExpandedSecretKey</code> from a slice of bytes.","","Generate an ed25519 keypair.","Generate a <code>SecretKey</code> from a <code>csprng</code>.","","","","","","","","Create new hasher instance","Create a new signature from a byte array","","Get output size of the hasher","","","The public half of this keypair.","Reset hasher instance to its initial state.","","","","The secret half of this keypair.","","","","","","Sign a message with this <code>ExpandedSecretKey</code>.","Sign the given message and return a digital signature","Sign a <code>prehashed_message</code> with this <code>Keypair</code> using the …","Sign a <code>prehashed_message</code> with this <code>ExpandedSecretKey</code> using …","","","","","","Convert this keypair to bytes.","Convert this public key to a byte array.","Convert this secret key to a byte array.","Convert this <code>ExpandedSecretKey</code> into an array of 64 bytes.","Return the inner byte array","","","","","","","","","","","","","","","","","Attempt to sign the given message, returning a digital …","Sign a message with this keypair’s secret key.","","","","","","","Digest data, updating the internal state.","","","","Use <code>Self</code> to verify that the provided signature for a given …","Verify a signature on a message with this keypair’s …","Verify a signature on a message with this keypair’s …","Verify a signature on a message with this keypair’s …","Verify a <code>signature</code> on a <code>prehashed_message</code> using the …","Verify a <code>signature</code> on a <code>prehashed_message</code> using the …","Strictly verify a signature on a message with this keypair…","Strictly verify a signature on a message with this keypair…","","","","","","","","","","Signature errors.","Length of an Ed25519 signature","Ed25519 signature.","","","","","","","","","Create a new error with an associated source.","","Create a new error with no associated source","","","","","","","Signature errors.","Trait impl’d by concrete types that represent digital …","Sign the provided message bytestring using <code>Self</code> (e.g. a …","Verify the provided message bytestring using <code>Self</code> (e.g. a …","Borrow a byte slice representing the serialized form of …","Parse a signature from its byte representation","Sign the given message and return a digital signature","Attempt to sign the given message, returning a digital …","Use <code>Self</code> to verify that the provided signature for a given …","The <code>Error</code> type, a wrapper around a dynamic error type.","","","Get the backtrace for this Error.","Return early with an error.","","","An iterator of the chain of source errors contained by …","Wrap the error value with additional context.","","","Attempt to downcast the error object to a concrete type.","Downcast this error object by mutable reference.","Downcast this error object by reference.","","","","","","","","Returns true if <code>E</code> is the type held by this error object.","Create a new error object from a printable error message.","Create a new error object from any error type.","The lowest level cause of this error — this error’s …","","","","","","Placeholder hash of <code>Accumulator</code>.","A type that can be cryptographically hashed to produce a …","A trait for representing the state of a cryptographic …","The hasher used to compute the hash of an internal node in …","Genesis block id is used as a parent of the very first …","Output value of our hash function. Intentionally opaque …","An iterator over <code>HashValue</code> that generates one bit for each …","Parse error when attempting to construct a HashValue","The associated <code>Hasher</code> type which comes with a unique salt …","Block id reserved as the id of parent block of the genesis …","Placeholder hash of <code>SparseMerkleTree</code>.","The hasher used to compute the hash of an internal node in …","Provides a test_only_hash() method that can be used in …","The hasher used only for testing. It doesn’t have a salt.","The hasher used to compute the hash of an internal node in …","The hasher used to compute the hash of an internal node in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Finish constructing the <code>HashValue</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Hashes the object and produces a <code>HashValue</code>.","Convenience method to compute the hash of a complete byte …","","","","","","","","","","","the seed used to initialize hashing <code>Self</code> before the …","","","","","","","Generates a hash used only for tests.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Write bytes into the hasher.","","","","","","","","","","","","","","","","","","Structure representing the HKDF, capable of HKDF-Extract …","An error type for HKDF key derivation issues.","HKDF expand output exceeds the maximum allowed or is zero.","HKDF extract input seed should not be less than the …","HMAC key related error; unlikely to happen because every …","PRK on HKDF-Expand should not be less than the underlying …","","","","","","","","","","","The RFC5869 HKDF-Expand operation.","The RFC5869 HKDF-Extract operation.","HKDF Extract then Expand operation as a single step.","CAUTION: This is not recommended because it does not take …","","","","","","","","","","","","","","","","","","","Vector of private keys in the multi-key Ed25519 structure …","Vector of public keys in the multi-key Ed25519 structure …","Vector of the multi-key signatures along with a 32bit [u8; …","Getter bitmap.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a new MultiEd25519PrivateKey.","Construct a new MultiEd25519PublicKey. — Rules — a) …","This method will also sort signatures based on index.","Creates a new MultiEd25519signature by given signatures …","Getter public_keys","","","","","","Getter signatures.","","","","Getter threshold","","Serialize a MultiEd25519PrivateKey.","Serialize a MultiEd25519PublicKey.","","Serialize a MultiEd25519Signature in the form of …","","","","","","","","Deserialize an Ed25519PrivateKey. This method will also …","","","Deserialize a MultiEd25519PublicKey. This method will also …","Deserialize a MultiEd25519Signature. This method will also …","","","","","","","","","Checks that <code>self</code> is valid for an arbitrary &amp;u8 <code>message</code> …","","","","The authentication tag length of AES-GCM.","could not decrypt the received data (most likely the data …","encryption has failed (in practice there is no reason for …","HKDF has failed (in practice there is no reason for HKDF …","Refer to the Noise protocol framework specification in …","A noise message cannot be larger than 65535 bytes as per …","the received message is too short to contain the expected …","A key holder structure used for both initiators and …","A NoiseError enum represents the different types of error …","A NoiseSession is produced after a successful Noise …","the nonce exceeds the maximum u64 value (in practice this …","the payload that we are trying to send is too large","the message we received is too large","Refer to the Noise protocol framework specification in …","the response buffer passed as argument is too small","session was closed due to decrypt error","the public key received is of the wrong format","","","","","","","","","","","A handy const fn to get the size of a plaintext from a …","A handy const fn to get the expanded size of a plaintext …","A client can call this to finalize a connection, after …","","","","","","","","","","obtain remote static public key","A handy const fn to get the size of the first handshake …","A handy const fn to get the size of the second handshake …","An initiator can use this function to initiate a handshake …","","","","","","A peer must create a NoiseConfig through this function …","create a dummy session with 0 keys","A responder can accept a connection by first parsing an …","Handy getter to access the configuration’s public key","decrypts a message from the other peer (post-handshake) …","A responder can respond to an initiator by calling this …","This function is a one-call that replaces calling the two …","","","","","","","","","","","","","","","","","","","","","","encrypts a message for the other peers (post-handshake) …","","A keypair consisting of a private and public key","A deterministic seed for PRNGs related to keys","This struct provides a means of testing signing and …","Cryptographic hasher for an BCS-serializable #item","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the private key component","the public key component","Produces a random TestDiemCrypto signable / verifiable …","","","","","","","","","","","","","","","","","","Produces a uniformly random keypair from a seed","Produces a uniformly random keypair from a seed and the …","","","","","","BitVec errors in accountable multi-sig schemes.","Part of the signature or key is not canonical resulting to …","An error type for key and signature validation issues, see …","Key or signature material does not deserialize correctly.","A type family with a by-convention notion of genesis …","The serialized length of the data that enables macro …","A curve point (i.e., a public key) does not satisfy the …","A type family for key material that should remain secret …","We require public / private types to be coupled, i.e. their","A type for key material that can be publicly shared, and …","We require public / private types to be coupled, i.e. their","Struct to be signed does not serialize correctly.","A type family for signature material that knows which …","The associated signature type for this signing key.","The associated signature type for this verifying key.","A type family of valid keys that know how to sign.","The associated signing key type for this verifying key.","The associated signing key type for this signature","A curve point (i.e., a public key) lies on a small group.","A type family for schemes which know how to generate key …","Key or more generally crypto material with a notion of …","An extension to to/from Strings for <code>ValidCryptoMaterial</code>.","Key or signature material deserializes, but is otherwise …","A type family of public keys that are used for signing.","The associated verifying key type for this signing key.","The associated verifying key type for this signature.","Key, threshold or signature material does not have the …","We provide the implementation which dispatches to the …","The implementer can override a batch verification …","When trying to convert from bytes, we simply decode the …","Generate key material from an RNG. This should generally …","Generate a random key using the shared TEST_SEED","Produces the genesis private key.","The serialized length of the data","Returns the associated public key","Signs an object that has an distinct domain-separation …","Signs a non-hash input message. For testing only.","Returns the signing message for the given message. It is …","Convert the valid crypto material to bytes.","Convert the signature into a byte representation.","A function to encode into hex-string after serializing.","Verification for a struct we unabmiguously know how to …","Native verification function.","We provide the striaghtfoward implementation which …","Returns the associated verifying key","","The unvalidated form of some type <code>V</code>","An unvalidated <code>Ed25519PublicKey</code>","Used in connection with the <code>Validate</code> trait to be able to …","The <code>Validate</code> trait is used in tandem with the <code>Validatable</code> …","","","","","","","","","","","","","","","","","","","","","","","Create a new <code>Validatable</code> from an unvalidated type","Create a new <code>Validatable</code> from a valid type","","","","","Return key as bytes","","","Return the unvalidated form of type <code>V</code>","","","","","","","Return a reference to the unvalidated form <code>V::Unvalidated</code>","Try to validate the unvalidated form returning <code>Some(&amp;V)</code> on …","Attempt to validate a <code>V::Unvalidated</code> and returning a …","Attempt to validate <code>V::Unvalidated</code> and return a reference …","","","Size of a X25519 private key","Size of a X25519 public key","This type should be used to deserialize a received private …","This type should be used to deserialize a received public …","Size of a X25519 shared secret","","","Obtain a slice reference to the underlying bytearray","","","","","","","","","","","","","To perform a key exchange with another public key","","","","","","","","","","","","","Deserialize an X25119 PrivateKey given the sha512 …","Deserialize an X25119 PublicKey from its representation as …","","","","","Produces a uniformly random ed25519 keypair from a seed","","","Obtain the public key part of a private key","","","","","","","","","","","","","","","","","","","","","A short-lived Diffie-Hellman secret key that can only be …","A Diffie-Hellman public key, corresponding to an …","The result of a Diffie-Hellman key exchange.","A Diffie-Hellman secret key that can be used to compute …","The X25519 basepoint, for use with the bare, byte-oriented …","View this public key as a byte array.","View this shared secret key as a byte array.","","","","","","","","","","","","","Perform a Diffie-Hellman key agreement between <code>self</code> and …","Perform a Diffie-Hellman key agreement between <code>self</code> and …","","","","","","","Given an x25519 <code>EphemeralSecret</code> key, compute its …","Given a byte array, construct a x25519 <code>PublicKey</code>.","Given an x25519 <code>StaticSecret</code> key, compute its …","","","","Load a secret key from a byte array.","","","","","","","","Generate an x25519 <code>EphemeralSecret</code> key.","Generate an x25519 key.","Convert this public key to a byte array.","Extract this key’s bytes for serialization.","Convert this shared secret to a byte array.","","","","","","","","","","","","","","","","","","","The bare, byte-oriented x25519 function, exactly as …","","","","","","","","This module lays out the basic abstract costing schedule …","<code>ident_str!</code> is a compile-time validated macro that …","An identifier is the name of an entity (module, resource, …","","","","","","","","","The description of a (regular) argument in a script.","How to call a particular Move script (aka. an “ABI”).","","","","","The description of a type argument in a script.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A struct that represents an account address.","","The number of bytes in an address.","Hex address: 0x0","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to convert the provided byte array into Address.","Tries to convert the provided byte buffer into Address.","","","","","","","","A collection of changes to modules and resources under a …","A collection of changes to a Move state. Each …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The error category e.g., INVALID_ARGUMENT","","","","","","","The code description. This is generated from the doc …","The constant name of error e.g., ECANT_PAY_DEPOSIT","","","","","The set of error categories and their descriptions","","","","","","","","","","","","The set of modules, and the module-specific errors","The error reason e.g., ECANT_PAY_DEPOSIT","","","","","","","","","","","","","","","","","","","","","","","A newtype wrapper that represents the (abstract) memory …","The size in bytes for a non-string or address constant on …","The cost tables, keyed by the serialized form of the …","For V1 all accounts will be ~800 bytes","A trait encoding the operations permitted on the …","The underlying carrier for gas-related units and costs. …","","The  <code>GasCost</code> tracks:","A newtype wrapper around the gas price for each unit of …","Units of gas as seen by clients of the Move VM.","Units of gas used within the Move VM, scaled for …","Any transaction over this size will be charged …","The maximum size representable by AbstractMemorySize","","For exists checks on data that doesn’t exists this is …","One unit of gas","The size in bytes for a reference on the stack","The size of a struct in bytes","Add the two <code>GasAlgebra</code>s together.","Apply a function <code>f</code> of two arguments to the carrier. Since <code>f</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Divide one <code>GasAlgebra</code> by the other.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the carrier.","","","","","The cost per-byte read from global storage.","The cost per-byte written to storage.","","","","","","","","","","","","","","","The units of gas that to be charged per byte over the …","Any transaction over this size will be charged an …","Map a function <code>f</code> of one argument over the underlying data.","Map a function <code>f</code> of two arguments over the underlying …","The maximum gas unit price that a transaction can be …","","~5 microseconds should equal one unit of computational …","","The minimum gas price that a transaction can be submitted …","The flat minimum amount of gas required for any …","Multiply two <code>GasAlgebra</code>s together.","","","","","","","","","","Project a value into the gas algebra.","","","","","","","","","","","","","Subtract one <code>GasAlgebra</code> from the other.","","","","","","","","","","","","","","","","","Convert a GasCost to a total gas charge in <code>InternalGasUnits</code>…","","","","","","","","","","","","","","","","","","","","","","We allow casting between GasAlgebras as long as they have …","","","","","","","","A borrowed identifier.","An owned identifier.","","Converts <code>self</code> to a byte slice.","Creates a borrowed version of <code>self</code>.","","Converts <code>self</code> to a <code>&amp;str</code>.","","","","","","","","","","","","","","","","","","","","","","","Converts a vector of bytes to an <code>Identifier</code>.","","","","Converts this <code>Identifier</code> into a UTF-8-encoded byte …","Converts this <code>Identifier</code> into a <code>String</code>.","Returns <code>true</code> if <code>self</code> has a length of zero bytes.","Returns if this identifier is “”. TODO: remove once we …","Describes what identifiers are allowed.","Returns true if this string is a valid identifier.","Returns true if this string is a valid identifier.","Return true if this character can appear in a Move …","Returns the length of <code>self</code> in bytes.","","","Creates a new <code>Identifier</code> instance.","","","","","","","","","","","","","","","","","","","","","Represents the initial key into global storage where we …","","Represents the intitial key into global storage where we …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Traits for resolving Move modules and resources from …","A persistent storage implementation that can resolve both …","A persistent storage backend that can resolve resources by …","","","","","","","","","","Struct for encoding vector&lt;vector&gt; arguments for script …","","","","","","","","","","Convert the transaction arguments into Move values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A layout associated with a named field","","","","","The representation used by the MoveVM","The representation used by the MoveVM","","","","","","","","","","","","","A decorated representation with human-readable field names …","A decorated representation with human-readable field names …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An <code>AbortLocation</code> specifies where a Move program <code>abort</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The maximum status code for deserialization statuses","The minimum status code for deserialization statuses","","","","","","","","","","","","","","","","The maximum status code for runtim statuses","The minimum status code for runtime statuses","","","Indicates an error from the VM, e.g. OUT_OF_GAS, …","The VM status corresponding to an EXECUTED status code","","","Indicates an failure from inside Move code, where the VM …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The maximum status code for invariant violation statuses","The minimum status code for invariant violation statuses","","","","","","","","","","","","","","","","","","","","","Indicates <code>abort</code> occurred in the specified module","Indicates an <code>abort</code> from inside Move code. Contains the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates the <code>abort</code> occurred in a script","We don’t derive Arbitrary on this enum because it is too …","A status type is one of 5 different variants, along with a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The maximum status code for validation statuses","The minimum status code for validation statuses","","","","","","The maximum status code for verification statuses","The minimum status code for verification statuses","","A <code>VMStatus</code> is represented as either","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>Ok</code> with a recorded status if it should be kept, <code>Err</code>…","","Returns the Move abort code if the status is <code>MoveAbort</code>, …","","","","","","","","","","","","Return the status code for the <code>VMStatus</code>","Return the status type for this <code>VMStatus</code>. This is solely …","Return the status type for this status code","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The ModuleId for the Account module.","The Identifier for the Account module.","The ModuleId for the Designated Dealer module.","The Identifier for the Designated Dealer module.","The ModuleId for the Diem module.","The Identifier for the Diem module.","Location for an abort in the Account module","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Conversion library between a structured representation of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","gc_ballots deletes all the expired ballots of the type …","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Structured representation of a call into a known Move …","Structured representation of a call into a known Move …","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","","","","","","","","","","","Try to recognize a Diem <code>Script</code> and convert it into a …","Try to recognize a Diem <code>TransactionPayload</code> and convert it …","Build a Diem <code>Script</code> from a structured object <code>ScriptCall</code>.","Build a Diem <code>TransactionPayload</code> from a structured object …","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","gc_ballots deletes all the expired ballots of the type …","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","","","","","","","","","Return the name of a Diem <code>Script</code> from a structured object …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A struct that represents an account address.","Suppose we have the following data structure in a smart …","","","","","","","","","","","","","","","","This file implements length and character set limited …","","","","","","","","","","","","","","","","","","","","<code>Nibble</code> represents a four-bit unsigned integer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","For each transaction the VM executes, the VM will output a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extract the structured resource or module <code>Path</code> from <code>self</code>","Extract a StructTag from <code>self</code>. Returns Some if this is a …","","","","","","","","","","","Convert Accesses into a byte offset which would be used by …","","","","","","","","","","","","","","","","","","","","","A struct that represents an account address.","","","","","The ModuleId for the Account module.","The Identifier for the Account module.","A Rust representation of an Account resource. This is not …","A enum that captures the collection of role-specific …","","Struct that represents a AdminEvent.","The balance resource held under an account.","Struct that represents a BaseUrlRotationEvent.","Struct that represents a BurnEvent.","","","","","Struct that represents a CancelBurnEvent.","","","","Struct that represents a ComplianceKeyRotationEvent.","","","Struct that represents a CurrencyInfo resource","The ModuleId for the Designated Dealer module.","The Identifier for the Designated Dealer module.","The ModuleId for the Diem module.","The Identifier for the Diem module.","","","","","","Struct that represents a ForceShiftEvent.","","","Defines the dual attest limit in microDiem XDX","Struct that represents a MintEvent.","Struct that represents a NewBlockEvent.","Struct that represents a NewEpochEvent.","","","","Struct that represents a PreburnEvent.","","The preburn balance held under an account.","The preburn balance held under an account.","The preburn along with metadata held in a preburn queue.","Struct that represents a ReceivedMintEvent.","Struct that represents a ReceivedPaymentEvent.","","Struct that represents a SentPaymentEvent.","","Struct that represents a ToXDXExchangeRateUpdateEvent","","","","","","","The Identifier for the VASPDomain module.","","","","","","","","","","","","In addition to the constraints for valid Move identifiers, …","Get the amount burned","Get the amount canceled","Get the amount minted","Get the amount preburned","Get the amount minted","Get the amount sent or received","Get the amount sent or received","","","","","","","","","","Return the authentication_key field for the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return <code>Some(struct_name)</code> if <code>t</code> is a <code>StructTag</code> representing …","Get the applied writeset.","","","","","","Return the code for the currency that was burned","Return the code for the currency that was returned","Return the code for the currency whose exchange rate was …","Return the code for the currency that was minted","Return the code for the currency that was preburned","Return the code for the currency that was minted","Return the currency code that the payment was made in.","Return the currency currency_code symbol that the payment …","","","Get the min nonce at the time of the force shift","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the address who received the mint","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns if this account has delegated its key rotation …","Returns if this account has delegated its withdrawal …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the metadata associated with this event","Get the metadata associated with this event","","","","","","","","","","","","Constructs an Account resource.","","","","","Get the new base url","Get the new compliance public key","Exchange rates are represented as 32|32 fixed-point …","","","","Return the address whose Preburn resource formerly held …","Return the address whose Preburn resource formerly held …","Return the address whose Preburn now holds the funds","","","","","","Return the received_events handle for the given …","Return the received_mint_events handle for the given …","Get the sender of this transaction event.","","","","","","","","","Get the receiver of this transaction event.","Return the sent_events handle for the given AccountResource","Return the sequence_number field for the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the amount that the CRSN window was shifted","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the (blockchain) time in seconds when the url was …","Get the (blockchain) time in seconds when the url was …he ModuleId for the Account module.","The Identifier for the Account module.","","","The ModuleId for the Designated Dealer module.","The Identifier for the Designated Dealer module.","The ModuleId for the Diem module.","The Identifier for the Diem module.","","","","","","","","","","In addition to the constraints for valid Move identifiers, …","Return <code>Some(struct_name)</code> if <code>t</code> is a <code>StructTag</code> representing …","","","","","","","","","","","","","","","The ModuleId for the Account module.","The Identifier for the Account module.","","","","","","","","","","","","Return <code>Some(struct_name)</code> if <code>t</code> is a <code>StructTag</code> representing …","","","The ModuleId for the Designated Dealer module.","The Identifier for the Designated Dealer module.","","The ModuleId for the Diem module.","The Identifier for the Diem module.","In addition to the constraints for valid Move identifiers, …","","","","","","Struct that represents a AdminEvent.","Struct that represents a BaseUrlRotationEvent.","Struct that represents a BurnEvent.","Struct that represents a CancelBurnEvent.","Struct that represents a ComplianceKeyRotationEvent.","","Struct that represents a ForceShiftEvent.","Struct that represents a MintEvent.","Struct that represents a NewBlockEvent.","Struct that represents a NewEpochEvent.","Struct that represents a PreburnEvent.","Struct that represents a ReceivedMintEvent.","Struct that represents a ReceivedPaymentEvent.","Struct that represents a SentPaymentEvent.","Struct that represents a ToXDXExchangeRateUpdateEvent","","","","","","","","","","","","","","","","Struct that represents a AdminEvent.","Struct that represents a BaseUrlRotationEvent.","Struct that represents a BurnEvent.","Struct that represents a CancelBurnEvent.","Struct that represents a ComplianceKeyRotationEvent.","","Struct that represents a ToXDXExchangeRateUpdateEvent","Struct that represents a ForceShiftEvent.","Struct that represents a MintEvent.","Struct that represents a NewBlockEvent.","Struct that represents a NewEpochEvent.","Struct that represents a PreburnEvent.","Struct that represents a ReceivedMintEvent.","Struct that represents a ReceivedPaymentEvent.","Struct that represents a SentPaymentEvent.","A Rust representation of an Account resource. This is not …","A enum that captures the collection of role-specific …","","The balance resource held under an account.","","","","","","","Struct that represents a CurrencyInfo resource","","","","","","Defines the dual attest limit in microDiem XDX","","","","","The preburn balance held under an account.","The preburn balance held under an account.","The preburn along with metadata held in a preburn queue.","","","","","","","","","The Identifier for the VASPDomain module.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A Rust representation of an Account resource. This is not …","The balance resource held under an account.","","","","","","","","","Struct that represents a CurrencyInfo resource","","","","","","","","Defines the dual attest limit in microDiem XDX","","","","The preburn balance held under an account.","The preburn balance held under an account.","The preburn along with metadata held in a preburn queue.","A enum that captures the collection of role-specific …","","","","","","","","","","","","","","","","","","","","","The Identifier for the VASPDomain module.","","","","","","","","","","","","","","","","","","","","","","","","","Return an iterator over the module values stored under …","","","","","","Return an iterator over all resources stored under this …","Given a particular <code>MoveResource</code>, return an iterator with …","","","","","","","Into an iterator over the module values stored under this …","","","","","","","","","","","","","Cryptographic hasher for an BCS-serializable #item","","TODO(joshlind): add a proof implementation (e.g., …","","","","","Blob value representing the account state. If this field …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructor.","The proof the client can use to authenticate the value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verifies the the account state blob with the proof, both …","The transaction version at which this account state is …","","","","","","","This structure contains all the information needed for …","","","","","The round of a block is a consensus-internal counter, …","","","","","","","","","","","","","","","","Create a new genesis block. The genesis block is …","","","","This function checks if the current BlockInfo is consistent","This function checks if the current BlockInfo has exactly …","Create a mock genesis <code>BlockInfo</code> with an empty state tree …","","","The epoch after this block committed","","","","","","","","","","","","","","Struct that will be persisted on chain to store the …","","The path to the new block event handle under a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Note: u7 in a u8 is uleb-compatible, and any usage of this …","","Users might accidentally initialize the ChainId field to …","A registry of named chain IDs Its main purpose is to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Support versioning of the data structure.","Cryptographic hasher for an BCS-serializable #item","Entry produced via a call to the <code>emit_event</code> builtin.","Cryptographic hasher for an BCS-serializable #item","The response type for <code>get_event_by_version_with_proof</code>, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructor.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verifies the event with the proof, both carried by <code>self</code>.","Verify that the <code>lower_bound_incl</code> <code>EventWithProof</code> is the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A vector of LedgerInfo with contiguous increasing epoch …","The verification of the epoch change proof starts with …","","","","","","","The first/lowest epoch of the proof to indicate which …","Returns true in case the given epoch is larger than the …","","","","","","Returns true if the given <code>LedgerInfo</code> is stale and probably …","","","","","","","","","","","Verify if the ledger_info is trust worthy.","Verify the proof is correctly chained with known epoch and …","","EpochState represents a trusted validator set to validate …","","","","","","","","","","","","","","","","","","","","","","","","","","","","A Rust representation of an Event Handle Resource.","A struct that represents a globally unique id for an Event …","","The number of bytes in an EventKey.","","","Get the byte representation of the event key.","","","","","","","","","","","","","","Return the counter for the handle","","","","","","","","","","","","","","","","","","","","If this is the <code>ith</code> EventKey<code>created by</code>get_creator_address()…","Get the account address part in this event key","","","","","Return the key to where this event is stored in EventStore.","","","Construct a new EventKey from a byte array slice.","Constructs a new Event Handle","Create a unique handle by using an AccountAddress and a …","Derive a unique handle by using an AccountAddress and a …","","Create a random event key for testing","Create a random event handle for testing","","","","","","","","","","","Convert event key into a byte array.","Tries to convert the provided byte array into Event Key.","","","","","","","","","","","","","This structure serves a dual purpose.","Cryptographic hasher for an BCS-serializable #item","Wrapper around LedgerInfoWithScheme to support future …","The validator node returns this structure which includes …","","","","","","","","","","","","","","","","","","","","","","","The <code>BlockInfo</code> of a committed block.","","","Returns hash of consensus voting data in this <code>LedgerInfo</code>.","","","","","","","","A series of wrapper functions for the data stored in the …","","","","","","","","","","","","","","","","","","","Create a new LedgerInfo at genesis with the given genesis …","","Create a new <code>LedgerInfoWithEd25519</code> at genesis with the …","","","","","","","","","","","Constructs a <code>LedgerInfo</code> object based on the given commit …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A <code>MempoolStatus</code> is represented as a required status code …","","","","","","","","","","","","","","","","","insertion status code","","","","","","","","","","","","","","","optional message","","","","","","","","","","","","","","","","","","Adds a message to the Mempool status.","","Returns a vector of Move resources as serialized byte array","Returns a vector of Move resources as serialized byte …","Get the version on the latest transaction info.","","","","","","","A minimally parsed DNS name. We don’t really do any …","","","","","","","","","","","","Overview","","","","","Possible errors when parsing a human-readable …","","","A single protocol in the <code>NetworkAddress</code> protocol stack.","","","","Given a base <code>NetworkAddress</code>, append production protocols …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>EncNetworkAddress::encrypt</code>.","","","","","","","","","","","Retrieves the IP address from the network address","A temporary, hacky function to parse out the first …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check that a <code>NetworkAddress</code> looks like a typical DiemNet …","","","","","","parse the <code>&amp;[Protocol]</code> into the <code>&quot;/dns/&lt;domain&gt;/tcp/&lt;port&gt;&quot;</code>, …","parse the <code>&amp;[Protocol]</code> into the <code>&quot;/ln-handshake/&lt;version&gt;&quot;</code> …","parse the <code>&amp;[Protocol]</code> into the <code>&quot;/ip4/&lt;addr&gt;/tcp/&lt;port&gt;&quot;</code> or …","parse the <code>&amp;[Protocol]</code> into the <code>&quot;/memory/&lt;port&gt;&quot;</code> prefix and …","parse the <code>&amp;[Protocol]</code> into the <code>&quot;/ln-noise-ik/&lt;pubkey&gt;&quot;</code> …","","","A function to rotate public keys for <code>NoiseIK</code> protocols","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The length in bytes of the AES-256-GCM nonce.","The length in bytes of the AES-256-GCM authentication tag.","An encrypted <code>NetworkAddress</code>.","We salt the HKDF for deriving the account keys to provide …","The length in bytes of the <code>shared_val_netaddr_key</code> and …","Convenient type alias for the <code>shared_val_netaddr_key</code> as an …","","Constant key + version so we can push <code>EncNetworkAddress</code> …","","","","","","","","","Panics","","","","","","","","","","","","","","","","","The hardcoded maximum height of a state merkle tree in …","","","","","","","","","","","","","","","","","NibblePath library simplify operations with nibbles in a …","","","","","","","","","BitIterator iterates a nibble path by bit.","NibbleIterator iterates a nibble path by nibble.","NibblePath defines a path in Merkle tree in the unit of …","","","Get a bit iterator iterates over the whole nibble path.","Turn it into a <code>BitIterator</code>.","","","","","","","Get the underlying bytes storing nibbles.","","","","","","","","","","","","","Get the i-th nibble.","Cut and return the range of the underlying <code>nibble_path</code> …","","","","","","","Returns <code>true</code> if the nibbles contains no elements.","Return <code>true</code> if the iteration is over.","Returns the last nibble.","","Creates a new <code>NibblePath</code> from a vector of bytes assuming …","Similar to <code>new()</code> but assumes that the bytes have one less …","","","","Get a nibble iterator iterates over the whole nibble path.","Get the total number of nibbles stored.","Get the number of nibbles that this iterator covers.","","Returns the <code>next()</code> value without advancing the iterator.","Returns the <code>next()</code> value without advancing the iterator.","Returns the <code>next()</code> value without advancing the iterator.","Pops a nibble from the end of the nibble path.","Adds a nibble to the end of the nibble path.","Returns a nibble iterator that iterates all remaining …","","Advance both iterators if their next nibbles are the same …","","","","","","","","","","","","Returns a nibble iterator that iterates all visited …","","","","","","To register an on-chain config in Rust:","Trait to be implemented by a storage type from which to …","","","","","","","","Defines the version of Diem Validator software.","","State sync will panic if the value of any config in this …","Trait to be implemented by a Rust struct representation of …","","The on-chain consensus config, in order to be able to add …","","","","Defines all the on chain configuration data needed by VM.","Defines and holds the publishing policies for the VM. …","","","","","Backpressure controls","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decouple execution from consensus or not.","","","","","","","","","","","","","","","","The Move resource is","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The number of recent rounds that don’t count into …","","","","","","","","","","","","","Constructs a ValidatorSet resource.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2-chain commit rule or 3-chain commit rule.","","","","","","","","","","","","","","","","","","","","","","","","","","","The complete proof used to authenticate the state of an …","A proof that can be used to show that two Merkle …","A proof that first verifies that establishes correct …","A proof that can be used authenticate an element in an …","A proof that is similar to <code>AccumulatorProof</code>, but can be …","","","The complete proof used to authenticate a contract event. …","","","","Cryptographic hasher for an BCS-serializable #item","A proof that can be used to authenticate an element in a …","Note: this is not a range proof in the sense that a range …","","","","","","","An in-memory accumulator for storing a summary of the core …","The proof used to authenticate a list of consecutive …","<code>TransactionInfo</code> and a <code>TransactionAccumulatorProof</code> …","This module implements an in-memory Merkle Accumulator …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This module has definition of various proofs.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the leaf node in this proof.","Returns the <code>ledger_info_to_transaction_info_proof</code> object …","The accumulator proof from ledger info root to leaf that …","","Get all the left siblngs.","","","","","","","","","","","","Constructs a new <code>AccumulatorProof</code> using a list of siblings.","Constructs a new <code>SparseMerkleProof</code> using leaf and a list …","","Constructs a new <code>AccumulatorConsistencyProof</code> using given …","Constructs a new <code>AccumulatorRangeProof</code> using <code>left_siblings</code> …","Constructs a new <code>SparseMerkleRangeProof</code>.","Constructs a new <code>TransactionWithProof</code> object using given …","Constructs a new <code>AccountStateProof</code> using given …","Constructs a new <code>EventProof</code> using given …","","","","Constructs a new <code>AccumulatorRangeProof</code> for an empty list …","Constructs a proof for an empty list of transaction infos. …","This module provides an abstraction for positioning a node …","All proofs generated in this module are not valid proofs. …","Get all the right siblngs.","Returns the right siblings.","","","","","","","","","","","","","","","Returns the list of siblings in this proof.","Returns the list of siblings in this proof.","Returns the subtrees.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the <code>transaction_info</code> object in this proof.","The <code>TransactionInfo</code> object at the leaf of the accumulator.","Returns the <code>transaction_info_to_account_proof</code> object in …","Returns the <code>transaction_info_with_proof</code> object in this …","Returns the <code>transaction_info_with_proof</code> object in this …","","Try to extend an existing accumulator summary with a …","","","","","","","","","","","","","","","","","","Try to build an accumulator summary using a consistency …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verifies an element whose hash is <code>element_hash</code> and version …","If <code>element_value</code> is present, verifies an element whose key …","Verifies the proof is correct. The verifier needs to have …","Verifies that the rightmost known leaf exists in the tree …","Verifies that the <code>TransactionInfo</code> exists in the ledger …","Verifies that the state of an account at version …","Verifies that a given event is correct using provided …","Verifies the list of transaction infos are correct using …","","Verify that this accumulator summary is “consistent” …","","","","","","","","","","","","","","","","","The Accumulator implementation.","Appends a list of new leaves to an existing accumulator. …","Appends a list of new subtrees to the existing …","","","","","","","","","","","Constructs a new accumulator with given leaves.","Returns the set of frozen subtree roots in this accumulator","","Returns true if this accumulator is empty and has no …","","Constructs a new accumulator with roots of existing frozen …","Returns the total number of leaves in this accumulator.","Returns the root hash of the accumulator.","","","","","","","","","An immutable transaction accumulator (not a summary, since …","","","","","","","Create a full transaction accumulator from a list of leaf …","","","Get the accumulator root hash at a specific version. Note …","","","","","","","","Create an accumulator with some mock leaf hash values at …","","A proof that can be used to show that two Merkle …","A proof that first verifies that establishes correct …","A proof that can be used authenticate an element in an …","A proof that is similar to <code>AccumulatorProof</code>, but can be …","","","A proof that can be used to authenticate an element in a …","Note: this is not a range proof in the sense that a range …","","","An in-memory accumulator for storing a summary of the core …","","","The complete proof used to authenticate the state of an …","A proof that can be used to show that two Merkle …","A proof that first verifies that establishes correct …","A proof that can be used authenticate an element in an …","A proof that is similar to <code>AccumulatorProof</code>, but can be …","","The complete proof used to authenticate a contract event. …","Because leaves can only take half the space in the tree, …","","","A proof that can be used to authenticate an element in a …","Note: this is not a range proof in the sense that a range …","","","","","An in-memory accumulator for storing a summary of the core …","The proof used to authenticate a list of consecutive …","<code>TransactionInfo</code> and a <code>TransactionAccumulatorProof</code> …","","The accumulator proof from ledger info root to leaf that …","","The <code>TransactionInfo</code> object at the leaf of the accumulator.","","","A proof that can be used to show that two Merkle …","A proof that first verifies that establishes correct …","A proof that can be used authenticate an element in an …","A proof that is similar to <code>AccumulatorProof</code>, but can be …","","","A proof that can be used to authenticate an element in a …","Note: this is not a range proof in the sense that a range …","","","An in-memory accumulator for storing a summary of the core …","","","<code>AncestorIterator</code> generates current position and moves …","<code>AncestorSiblingIterator</code> generates current sibling position …","Traverse leaves from left to right in groups that forms …","Given an accumulator of size <code>current_num_leaves</code>, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pos count start from 0 on each level","","","Given <code>node</code>, an index in an in-order traversal of a perfect …","","","","","","","","","","","","","Whether this position is a left child of its parent.  The …","","","Creates an <code>AncestorIterator</code> using this position.","Creates an <code>AncestorSiblingIterator</code> using this position.","What is the left node of this node? Will overflow if the …","Given a node, find its left most child in its subtree Left …","What level is this node in the tree, 0 if the node is a …","","","Constructs a new <code>FrozenSubtreeSiblingIterator</code> given the …","","","","","What is the parent of this node?","","","What is the right node of this node? Will overflow if the …","Given a node, find its right most child in its subtree. …","","This method calculates the index of the smallest root …","","This method takes in a node position and return its …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents information already determined for generating a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Materialize considering current states in the universe.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Default Protocol Spec","","","","","","","","","","","","","","","","","","","A convenience type for the collection of sub-proofs that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A list of transactions under an account that are …","","The description of a (regular) argument in a script.","Transaction to update the block metadata resource at the …","","","","","Directly passing in the WriteSet.","Discard the transaction output","Transaction that applies a WriteSet to the current …","","Keep the transaction output","","A transaction that publishes code.","","","","RawTransaction is the portion of a transaction that a …","Cryptographic hasher for an BCS-serializable #item","","Cryptographic hasher for an BCS-serializable #item","Retry the transaction, e.g., after a reconfiguration","Call a Move script.","A transaction that executes code.","Generate the WriteSet by running a script.","How to call a particular Move script (aka. an “ABI”).","Call a Move script function.","A transaction that executes an existing script function …","","","A transaction for which the signature has been verified. …","A transaction that has been signed.","<code>Transaction</code> will be the transaction type used internally …","","Cryptographic hasher for an BCS-serializable #item","<code>TransactionInfo</code> is the object we store in the transaction …","Cryptographic hasher for an BCS-serializable #item","","","The output of executing a transaction.","This differs from TransactionListWithProof in that …","Different kinds of transactions.","","","The status of executing a transaction. The VM decides …","","","","The description of a type argument in a script.","","","","","Transaction submitted by the user. e.g: P2P payment …","The result of running the transaction through the VM …","","","Struct for encoding vector&lt;vector&gt; arguments for script …","","A system maintenance transaction.","Two different kinds of WriteSet transactions.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks that the signature of given transaction. Returns …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the hash when the transaction is commited onchain.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the root hash of Merkle Accumulator storing all …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the amount of gas used by this transaction.","","","","Similar to <code>write_set_strategy</code> except generates a valid …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the <code>SignedTransaction</code> within.","","","","Returns the <code>RawTransaction</code> within.","","","","","","","","This file implements Diem transaction metadata types to …","","","","","","","","","","","","","","","","","","","","","","","","","Constructs a new <code>TransactionInfo</code> object using transaction …","","","","","Create a new <code>RawTransaction</code> with a payload.","","","","","","","Constructor.","","","","A convenience function to create an empty proof. Mostly …","A convenience function to create an empty proof. Mostly …","","Create a new <code>RawTransaction</code> with a module to publish.","","","","Create a new <code>RawTransaction</code> with a script.","Create a new <code>RawTransaction</code> with a script function.","","","","","","","The higher the number that is returned, the greater …","","","","","","","","","","","","Return the sender of this transaction.","","","","","","","","","","","","","","","","","","","","","","","Signs the given <code>RawTransaction</code>. Note that this consumes …","Signs the given multi-agent <code>RawTransaction</code>, which is a …","Return the signing message for creating transaction …","Returns root hash of Sparse Merkle Tree describing the …","","Resturns the Status from the VM for this transaction.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the hash of this transaction.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verifies the transaction list with proof using the given …","Verifies the transaction output list with proof using the …","Verify all transactions are consistent with the given …","Verifies the transaction with the proof, both carried by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Execute the script as the designated signer.","Script body that gets executed.","","An error enum for issues related to transaction or account …","A struct that represents an account authentication key. An …","Cryptographic hasher for an BCS-serializable #item","A value that can be hashed to produce an authentication key","Single signature","","Single signature","The number of bytes in an authentication key.","Maximum number of signatures supported in …","The number of signatures exceeds the maximum supported.","Multi-agent transaction.","K-of-N multisignature","","K-of-N multisignature","An <code>AccountAuthenticator</code> is an an abstraction of a …","Each transaction submitted to the Diem blockchain contains …","","","Return an authentication key derived from <code>self</code>’s public …","Return an authentication key preimage derived from <code>self</code>’…","","","","","","","","","","","","","","","","","","","","","","","","","","","Return an address derived from the last …","","","","Construct a preimage from an Ed25519 public key","Create a single-signature ed25519 authenticator","Create a single-signature ed25519 authenticator","Create an authentication key from an Ed25519 public key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create an authentication key from a preimage by taking its …","","","","","","","","","","","","Construct a vector from this authentication key","Create a multi-agent authenticator","Construct a preimage from a MultiEd25519 public key","Create a multisignature ed25519 authenticator","Create a multisignature ed25519 authenticator","Create an authentication key from a MultiEd25519 public key","","","","Create an authentication key from <code>bytes</code>","Return the number of signatures included in this account …","","Return the first AccountAddress::LENGTH bytes of this …","Return the raw bytes of <code>self.public_key</code>","Create a random authentication key. For testing only","Unique identifier for the signature scheme","","","","","","","","Return the raw bytes of <code>self.signature</code>","","","","","","","","","","","","","","","Construct a vector from this authentication key","","","","","","","","","","","","","","","","","","","","","","","","","Return Ok if all AccountAuthenticator’s public keys …","Return Ok if the authenticator’s public key matches its …","","","","","","","","","Return an authentication key that is impossible (in …","","","","","","","","","","","","","","","","","","","Craft a transaction request.","","List of supported transaction metadata format versions for …","","Transaction metadata format for coin trades …","","List of supported transaction metadata format versions for …","","Transaction metadata for regular addressing with optional …","","","","List of all supported metadata types","","List of supported transaction metadata format versions for …","","Transaction metadata format for transactions for payments","","List of supported transaction metadata format versions for …","","Transaction metadata format for transactions subject to …","","","List of supported transaction metadata format versions for …","","Transaction metadata format for transactions subject to …","","","Opaque binary transaction metadata","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unstructured byte vector metadata","","","","","","","","","","","","","","Off-chain reference_id.  Used when off-chain APIs are used.","The reason of the refund","Reference ID needed for off-chain reference ID exchange.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A list of trade_ids this transaction wants to settle","Transaction version that is refunded","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","We have a newer <code>TrustedState</code> and there was at least one …","The current trusted state is inside a verified epoch …","The current trusted state is an epoch waypoint, which is a …","The latest ledger info is at the same version as the …","<code>TrustedState</code> keeps track of light clients’ latest, …","<code>TrustedStateChange</code> is the result of attempting to ratchet …","Cryptographic hasher for an BCS-serializable #item","We have a newer <code>TrustedState</code> but it’s still in the same …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create an initial trusted state from a trusted epoch …","","","","","","","","","","","","","","","","","","","","","Try to create a trusted state from an epoch-change ledger …","","","","","","","","","Verify and ratchet forward our trusted state using an …","","","","","","","","","The current verified view of the transaction accumulator. …","The current epoch and validator set inside that epoch.","The current trusted version and a commitment to a ledger …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is an bcs serialized Vec","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is an bcs serialized Vec","","","","After executing a special transaction indicates a change …","Returns the id of this validator (hash of the current …","","","","","","Returns the validator’s config","Returns the key for validating signed messages from this …","Returns the voting power for this validator","","","","","","","","Returns the validator’s config, consuming self","","","","","","","","","","","","ValidatorSigner associates an author with public and …","Returns the author associated with this signer.","","","","","","","For test only - makes signer with nicely looking account …","","","Returns the private key associated with this signer. Only …","","Returns the public key associated with this signer.","Generate a random set of public and private keys and author","Constructs a signature for <code>message</code> using <code>private_key</code>.","","","","","","","","","","","","The signature does not match the hash.","","","The author for this signature is unknown by this validator.","Helper struct to manage validator information for …","Supports validation of signatures for known authors with …","Errors possible during signature verification.","","","This function will try batch signature verification and …","","","","","","","Ensure there is at least quorum_voting_power in the …","","","","","","","","","","","","","","","","","","","","","Returns an ordered list of account addresses as an <code>Iterator</code>…","Returns the public key for this address.","Returns the voting power for this address.","","","","Is there at least one author?","Returns the number of authors to be validated.","","","","","Initialize with a map of account address to validator info …","Initializes a validator verifier with a specified quorum …","Helper method to initialize with a single author and …","Initializes a validator verifier with a specified quorum …","Returns quorum voting power.","Helper function to get random validator signers and a …","","","","","","","","","","","","","","","","","","Verify the correctness of a signature of a message by a …","This function will successfully return when at least …","","","","","","","","","","","An <code>AbortLocation</code> specifies where a Move program <code>abort</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates an error from the VM, e.g. OUT_OF_GAS, …","The VM status corresponding to an EXECUTED status code","","","Indicates an failure from inside Move code, where the VM …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates <code>abort</code> occurred in the specified module","Indicates an <code>abort</code> from inside Move code. Contains the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates the <code>abort</code> occurred in a script","We don’t derive Arbitrary on this enum because it is too …","A status type is one of 5 different variants, along with a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A <code>VMStatus</code> is represented as either","","","","","","","","","","","","","","","","","","","","","","","","","","The ModuleId for the Account module.","The Identifier for the Account module.","The ModuleId for the Designated Dealer module.","The Identifier for the Designated Dealer module.","The ModuleId for the Diem module.","The Identifier for the Diem module.","Location for an abort in the Account module","","","","","Cryptographic hasher for an BCS-serializable #item","Waypoint keeps information about the LedgerInfo on a given …","","","","","","","","","","","","","","","","","","","","","","","","","","","Generate a new waypoint given any LedgerInfo.","Generates a new waypoint given the epoch change LedgerInfo.","","","","","","","","","","","","","","","","Errors in case the given ledger info does not match the …","","","","","","","","<code>WriteSet</code> contains all access paths that one transaction …","A mutable version of <code>WriteSet</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,4,1,2,3,1,2,3,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,4,4,4,0,5,6,7,8,9,4,6,7,10,1,11,5,2,12,13,14,3,8,9,4,6,7,10,1,11,5,2,12,13,14,3,13,6,7,1,2,12,13,14,6,7,1,2,12,13,14,13,10,12,14,14,1,11,3,2,13,13,0,12,8,8,9,9,4,4,6,7,1,11,5,2,12,13,14,3,8,8,9,9,4,6,7,10,1,11,5,2,12,13,14,3,2,13,10,6,7,1,6,7,1,6,7,1,6,7,1,6,7,1,6,7,1,6,7,1,6,7,1,6,7,6,7,6,7,1,6,7,1,6,7,1,6,7,1,6,7,1,6,7,1,6,7,1,6,7,1,6,7,1,11,5,8,9,4,6,7,10,1,11,5,2,12,13,14,3,5,5,8,8,8,9,6,7,14,1,11,2,10,2,13,6,7,10,11,5,14,7,14,13,6,7,1,11,3,8,9,4,5,0,6,7,1,1,11,3,13,6,7,1,2,12,13,14,8,9,4,8,9,4,6,7,10,1,11,5,2,12,13,14,3,8,9,4,6,7,10,1,11,5,2,12,13,14,3,2,2,2,2,2,2,2,2,2,2,2,2,2,8,9,4,6,7,10,1,11,5,2,12,13,14,3,2,13,0,8,9,4,6,7,10,1,11,5,2,12,13,14,3,6,7,6,7,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,17,18,19,20,21,25,26,27,28,29,30,18,19,20,21,26,27,28,29,20,28,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,0,0,50,50,50,0,0,49,49,49,49,49,49,50,50,0,51,49,49,49,49,49,49,52,50,49,50,51,52,49,50,51,52,51,52,51,52,52,52,52,51,52,51,52,52,49,50,51,52,52,52,52,50,50,52,49,50,51,52,52,52,52,52,52,52,52,0,52,52,52,51,52,52,51,52,51,52,52,49,50,51,52,49,50,51,52,49,50,51,52,52,49,50,51,52,53,0,0,0,54,55,56,54,55,56,55,56,56,55,54,54,55,56,54,54,55,56,56,55,54,0,0,56,56,56,56,56,54,55,56,54,55,56,54,54,55,56,54,55,56,54,0,0,0,57,58,0,57,58,0,57,58,58,59,57,58,60,61,59,57,58,60,61,59,57,58,60,61,59,57,58,60,61,59,57,58,60,61,58,58,60,60,59,57,58,60,61,59,57,58,60,61,59,57,58,59,61,59,57,58,60,61,57,59,57,59,59,59,57,58,60,61,61,59,57,58,60,61,59,57,58,60,61,59,57,58,60,61,59,57,58,60,61,59,57,58,60,61,59,57,58,60,61,62,63,64,65,0,0,0,64,0,64,0,64,64,66,65,67,68,64,66,65,67,68,64,66,65,67,68,64,66,65,67,68,64,66,65,67,68,64,65,67,68,66,66,64,66,65,67,68,64,66,65,67,68,66,66,64,66,65,67,68,66,64,67,68,67,68,66,66,66,64,66,65,67,68,68,64,66,65,67,68,64,66,65,67,68,68,64,66,65,67,68,64,66,65,67,68,64,66,65,67,68,67,64,66,65,67,68,69,70,71,72,73,0,0,0,0,0,0,74,0,74,75,74,0,74,76,74,74,0,77,76,0,0,0,0,77,77,0,74,77,77,0,74,74,77,76,74,0,0,77,74,74,0,74,0,74,0,0,0,0,0,76,76,74,77,74,75,75,74,0,77,75,78,79,80,81,81,81,82,79,79,83,80,76,79,84,85,86,87,88,74,78,82,89,77,90,73,91,92,93,75,81,94,95,96,83,97,80,76,79,84,85,86,87,88,74,78,82,89,77,90,73,91,92,93,75,81,94,95,96,83,97,94,90,94,89,89,78,80,76,79,84,85,86,87,88,74,78,82,89,77,90,73,91,92,93,75,81,94,95,96,83,97,80,76,79,84,85,86,87,88,74,78,82,89,77,90,73,91,92,93,75,81,94,95,96,83,97,81,94,80,84,81,86,81,79,79,82,80,76,79,84,85,86,87,88,74,78,82,89,77,90,73,91,92,93,75,81,94,95,96,83,97,78,78,73,82,82,95,80,76,79,84,85,86,87,88,74,78,82,89,77,90,73,91,92,93,75,81,94,95,96,83,97,87,90,94,80,76,79,84,85,86,87,88,74,78,82,82,89,89,77,77,90,73,91,92,93,75,81,94,95,96,83,97,94,80,76,76,79,84,85,86,87,88,74,78,82,82,82,89,77,77,90,73,91,92,93,75,75,81,81,81,94,94,95,96,83,97,81,90,90,82,80,76,79,84,85,86,87,88,74,78,82,89,77,90,73,91,92,93,75,81,94,95,96,83,97,82,77,79,86,95,96,97,92,95,88,85,81,81,94,81,81,78,80,76,79,84,85,86,87,88,74,78,82,89,77,90,73,91,92,93,75,81,94,95,96,83,97,79,84,78,82,85,94,84,83,91,89,89,79,81,79,94,78,79,79,86,80,76,79,84,85,86,87,88,74,78,82,89,77,90,73,91,92,93,75,81,94,95,96,83,97,91,91,93,80,76,79,84,85,86,87,88,74,78,82,89,77,90,73,91,92,93,75,81,94,95,96,83,97,78,80,76,79,84,85,86,87,88,74,78,82,89,77,90,73,91,92,93,75,81,94,95,96,83,97,82,89,77,94,90,97,97,92,86,80,76,79,84,85,86,86,87,87,88,88,74,74,78,82,89,77,90,73,73,73,91,91,92,92,93,93,75,81,94,95,95,96,96,83,83,97,97,79,90,80,76,79,84,85,86,87,88,74,78,82,89,77,90,73,91,92,93,75,81,94,95,96,83,97,91,81,81,80,76,79,84,85,86,87,88,74,78,82,89,77,90,73,91,92,93,75,81,94,95,96,83,97,81,88,79,78,90,83,90,80,76,79,84,85,86,87,88,74,78,82,89,77,90,73,91,92,93,75,81,94,95,96,83,97,78,98,99,98,99,98,99,98,99,98,99,98,99,98,100,99,99,99,101,98,102,103,104,105,106,107,108,109,110,111,112,113,109,102,114,107,108,115,116,113,103,104,106,117,117,107,108,102,112,117,107,108,116,115,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,119,120,121,120,121,120,121,122,122,0,122,0,0,123,123,0,122,0,124,0,125,122,0,126,127,0,127,128,122,0,0,0,122,0,126,128,122,123,123,127,128,123,123,122,123,122,123,122,123,122,123,123,0,123,123,123,0,123,122,123,122,0,123,123,123,123,122,122,123,122,123,129,123,123,123,123,130,130,131,0,123,0,123,123,122,123,132,0,123,122,123,123,0,123,125,123,123,123,123,126,126,0,123,0,133,128,129,123,123,123,122,123,122,123,0,123,122,123,122,123,122,0,128,128,127,126,123,122,0,123,134,0,0,0,0,0,0,135,136,137,135,136,137,135,136,137,137,135,136,137,135,136,137,135,136,137,135,136,137,135,136,137,135,136,137,135,136,137,135,136,137,135,136,137,135,136,137,135,136,137,135,136,137,0,0,138,139,138,139,138,138,138,139,139,139,138,138,138,139,139,138,138,138,139,138,138,138,138,138,138,139,138,139,138,139,138,138,138,138,139,138,138,139,138,139,138,139,0,0,140,141,140,141,140,140,140,141,141,141,140,140,140,141,141,140,140,140,141,140,140,140,140,140,141,140,141,140,141,140,140,140,140,141,140,140,141,140,141,140,141,0,0,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,0,0,0,0,0,0,143,144,145,143,145,144,143,145,144,144,143,145,144,143,145,144,143,145,144,144,143,145,144,143,145,144,143,143,145,145,144,144,143,145,145,144,143,143,145,144,143,145,144,0,143,145,144,143,145,144,143,143,143,145,144,143,143,145,145,144,144,144,143,145,144,143,145,144,145,143,143,145,145,144,144,143,145,144,143,145,144,145,144,144,143,145,144,0,0,0,0,0,146,0,0,0,0,0,0,0,0,0,0,147,148,147,148,149,150,147,148,151,149,152,150,147,148,151,149,152,152,146,152,147,149,152,147,149,152,147,152,150,147,148,151,149,146,152,148,151,147,148,149,147,148,149,147,149,147,149,146,152,152,152,152,152,146,152,152,152,150,147,148,149,152,150,147,147,147,148,151,151,149,149,149,152,150,147,148,151,149,150,148,150,147,148,151,149,152,147,146,149,152,146,152,152,150,146,152,152,152,150,150,147,148,151,149,151,153,150,151,150,147,148,151,149,150,147,148,151,149,147,149,152,150,147,148,151,149,149,152,150,147,148,151,149,152,153,150,150,147,148,151,149,152,146,152,152,152,154,150,150,147,150,147,150,147,150,147,148,151,149,152,152,148,151,0,0,0,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,0,0,0,0,156,156,153,153,154,0,157,157,157,0,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,0,0,0,0,0,0,0,0,158,0,0,0,0,0,0,0,159,160,161,162,163,164,165,159,160,161,162,163,164,165,160,161,162,163,164,165,160,161,162,163,164,165,161,162,163,164,165,166,161,162,163,164,165,161,162,163,164,165,160,160,161,162,163,164,165,159,160,161,162,163,164,165,158,166,159,160,161,162,163,164,165,159,159,159,166,161,162,163,164,165,159,167,160,161,162,163,164,165,160,159,160,161,162,163,164,165,159,160,161,162,163,164,165,159,160,161,162,163,164,165,166,161,162,163,164,165,159,160,161,162,163,164,165,161,162,163,164,165,0,0,168,168,168,168,169,168,169,168,169,168,169,168,168,168,169,169,169,169,169,168,168,169,168,169,168,169,168,168,169,168,169,168,169,168,169,168,0,0,0,170,171,172,170,171,172,170,172,170,172,170,171,172,170,171,172,170,171,172,170,171,171,172,172,170,170,171,171,172,172,172,170,170,171,171,172,170,171,172,170,171,172,170,171,172,170,171,172,170,170,172,171,172,170,171,171,170,171,172,170,172,171,171,172,172,170,170,170,172,170,171,172,170,171,171,172,172,170,170,171,172,170,171,172,170,170,170,171,172,170,0,173,173,173,0,0,173,0,0,0,173,173,173,0,173,173,173,174,175,176,173,177,174,175,176,173,177,0,0,177,176,173,173,177,174,175,176,173,177,176,0,0,177,174,175,176,173,177,177,176,177,177,176,177,177,173,174,175,176,173,177,174,175,176,173,177,174,175,176,173,177,174,175,176,173,177,176,178,0,0,0,0,179,180,178,179,180,178,179,180,179,180,179,180,178,180,180,179,179,180,178,179,180,180,180,178,180,178,179,180,178,180,180,180,0,179,180,178,180,180,178,179,180,179,180,178,179,180,178,179,180,178,0,0,179,179,180,178,179,122,122,0,122,0,0,122,0,124,0,125,122,0,126,127,0,127,128,122,0,0,0,122,0,126,128,122,127,128,129,130,130,131,132,125,126,126,0,133,128,129,128,128,127,126,134,181,0,0,0,182,183,182,183,182,183,182,183,182,183,182,183,182,183,182,183,182,183,182,183,182,183,182,182,182,183,182,183,183,182,183,181,182,183,182,183,182,183,182,182,181,182,182,183,0,0,0,0,0,184,185,185,184,185,184,185,184,185,184,185,185,185,184,185,184,184,185,185,184,184,185,185,184,184,185,185,185,184,185,184,185,184,185,0,185,185,184,184,185,184,185,184,185,184,185,184,185,184,184,185,185,184,185,184,185,184,185,0,0,0,0,0,186,187,186,188,189,187,186,188,189,187,186,189,186,189,188,189,188,189,187,186,186,186,186,186,186,186,188,189,189,187,186,186,188,189,187,186,188,189,186,189,187,186,189,186,188,189,187,186,188,189,187,186,188,189,187,186,188,189,187,0,188,189,187,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,190,0,190,0,0,190,191,192,190,191,192,193,194,190,191,192,193,194,190,191,192,193,194,190,191,192,193,194,192,190,191,192,193,194,190,191,192,190,191,192,193,194,190,191,192,193,194,190,191,192,193,194,190,191,192,193,194,190,191,192,193,194,190,191,192,193,194,190,190,191,190,191,192,193,194,190,191,192,193,194,191,192,193,194,190,191,192,193,194,190,191,192,193,194,190,191,192,193,194,190,191,192,193,194,190,191,192,193,194,190,191,192,190,191,192,193,194,193,190,191,192,193,194,195,196,0,0,197,197,197,197,197,198,197,198,197,198,197,198,197,197,197,197,197,197,197,197,197,197,197,198,198,197,197,198,197,197,197,197,197,197,197,198,197,197,197,197,197,197,197,197,197,197,197,198,197,198,197,197,197,197,197,198,197,198,197,198,197,198,0,0,0,199,200,199,200,199,200,199,200,199,200,199,200,199,200,199,200,199,200,199,200,200,199,200,199,200,199,200,200,200,199,200,199,200,199,200,199,200,199,199,200,199,200,199,200,199,200,199,200,199,200,199,200,199,200,199,200,199,200,199,200,199,200,199,0,0,0,201,201,202,203,201,202,203,201,203,202,203,201,202,203,201,202,202,201,202,203,201,201,202,203,201,202,203,201,201,201,202,203,201,201,203,202,203,201,202,203,201,201,202,203,201,202,203,201,202,203,201,202,203,201,202,203,201,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,204,204,205,206,207,208,209,210,211,205,206,207,208,209,210,211,205,206,207,208,209,210,211,205,206,207,208,209,210,211,209,209,205,206,207,208,209,210,211,204,205,206,207,208,209,210,211,205,206,207,208,205,206,207,208,209,210,211,205,206,207,208,209,210,211,210,209,204,205,206,207,208,209,209,205,206,207,208,210,211,210,205,206,207,208,209,210,211,209,209,204,204,209,209,209,211,209,209,204,210,210,205,206,207,208,209,210,211,204,205,206,207,208,211,205,206,207,208,209,210,211,204,205,206,207,208,209,210,211,209,209,205,206,207,208,209,210,211,211,205,206,207,208,209,210,211,205,206,207,208,209,210,211,205,206,207,208,209,210,211,204,205,206,207,208,209,210,211,0,0,212,213,212,212,213,212,212,213,212,213,212,212,212,213,212,212,212,213,212,213,212,212,213,213,212,212,212,212,212,213,212,212,212,213,212,0,212,213,0,213,212,213,212,213,212,213,213,213,212,212,212,213,212,213,212,212,212,213,212,214,214,0,0,0,0,0,214,214,0,0,214,214,214,214,215,216,217,216,215,217,214,216,214,215,217,216,214,215,217,216,214,215,217,216,214,215,217,216,214,215,217,216,214,215,217,216,214,215,217,216,214,215,217,216,214,214,215,215,217,217,216,216,214,214,215,217,216,214,215,217,216,214,215,217,216,215,215,216,215,214,215,217,216,217,216,214,215,217,216,214,215,217,216,214,215,217,216,214,215,217,216,214,215,217,216,214,215,217,216,214,215,217,216,217,217,214,215,217,216,215,214,215,217,216,218,219,220,0,0,220,220,221,220,220,220,0,0,0,0,0,0,222,223,224,0,0,0,223,224,225,225,0,225,225,225,225,0,225,225,226,225,226,225,226,225,226,0,225,226,225,226,225,226,225,225,226,226,225,226,225,226,226,225,226,225,225,225,226,225,225,226,225,226,225,226,225,226,227,228,229,230,231,232,233,234,233,234,0,0,0,0,0,235,236,233,234,233,234,233,234,233,234,233,234,233,234,235,236,235,233,237,236,234,235,233,237,236,234,235,233,237,236,234,235,233,237,236,234,237,236,234,235,233,235,233,235,236,235,233,237,237,236,236,234,234,235,233,233,237,236,234,235,233,237,236,234,235,236,235,233,235,237,236,235,233,237,236,234,0,235,233,233,235,233,237,236,234,235,233,237,236,234,237,236,234,235,233,237,236,234,235,233,237,236,234,235,233,237,236,234,233,233,235,233,237,236,234,235,236,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,252,252,0,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,0,0,252,252,252,252,252,253,0,252,252,252,252,252,252,252,252,0,0,252,252,254,254,255,253,254,255,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,0,0,253,0,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,255,256,254,255,252,252,252,252,252,252,252,255,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,256,0,0,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,253,0,0,252,252,252,252,252,0,0,252,0,252,252,252,253,253,252,252,252,252,252,254,255,256,252,254,255,256,253,252,254,255,256,253,252,254,255,256,253,252,254,255,256,253,252,254,255,256,252,254,255,256,252,254,255,256,253,252,254,255,256,253,252,254,254,255,255,256,256,253,253,252,254,255,256,253,252,254,255,256,253,252,254,255,256,253,252,255,254,0,254,254,255,256,254,255,256,252,254,255,256,252,254,254,252,0,254,255,256,252,254,255,256,253,252,254,255,256,253,254,255,256,253,252,252,254,255,256,253,252,254,255,256,253,252,254,255,256,253,252,257,258,258,259,259,259,260,261,261,262,262,262,262,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,263,263,264,264,264,264,263,265,266,264,263,265,266,264,263,265,264,264,264,265,264,264,263,264,263,263,264,264,264,264,263,263,263,263,263,265,264,263,263,265,266,264,263,265,265,263,265,266,264,263,265,266,264,266,264,263,264,264,264,264,264,264,264,264,264,264,264,264,264,264,265,265,263,0,263,264,263,263,265,266,264,263,265,266,264,263,265,266,264,263,263,264,264,264,265,266,264,263,264,264,264,264,264,264,267,268,267,268,267,268,268,267,267,268,268,267,268,267,268,267,268,267,268,267,268,267,268,267,268,268,268,267,268,268,268,268,268,267,268,267,268,267,268,267,268,267,268,268,267,268,267,268,267,268,267,268,267,268,267,268,0,0,268,267,268,267,268,267,268,267,268,267,268,268,267,268,267,268,267,268,267,268,267,268,267,268,267,268,267,268,267,268,267,268,267,268,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,267,268,267,268,267,268,267,268,267,267,268,267,268,267,268,267,268,267,268,267,268,267,268,269,270,271,270,272,273,274,269,270,271,275,276,269,269,277,269,271,278,279,280,281,270,273,282,272,278,279,280,270,271,275,276,283,273,273,278,271,275,276,282,282,284,285,286,287,288,289,288,290,291,290,291,273,292,293,294,295,296,287,297,292,270,271,275,276,298,299,285,286,291,278,300,283,289,282,278,298,287,300,292,293,274,279,280,297,299,297,299,279,280,301,302,303,302,304,305,306,307,308,309,310,311,312,301,302,303,313,314,301,301,315,301,303,316,317,318,319,320,321,302,310,311,322,307,323,316,305,306,318,319,323,323,323,302,303,313,314,323,323,324,323,323,323,310,311,311,323,323,316,303,313,314,322,322,325,326,327,328,329,330,329,331,332,331,332,311,308,309,304,333,334,335,328,336,337,308,302,303,313,314,338,339,340,326,327,323,332,316,341,317,324,330,322,316,338,328,341,308,309,312,318,319,337,340,337,340,318,319,0,0,0,0,0,0,0,0,342,342,343,0,0,342,343,342,343,0,0,0,0,0,0,0,342,343,342,343,343,343,342,343,342,343,0,0,0,0,342,0,0,342,343,0,0,0,342,343,342,342,342,0,342,342,342,0,0,0,0,342,343,342,343,342,343,0,0,0,0,0,342,343,0,0,0,344,0,344,345,345,345,344,345,344,345,344,345,344,345,344,345,345,344,345,344,345,344,345,345,345,345,344,345,345,345,344,345,344,345,344,345,345,344,345,345,345,345,344,345,344,345,344,345,345,344,344,344,345,344,345,344,345,344,346,347,0,0,0,0,348,0,0,0,0,0,0,0,0,0,0,0,349,0,0,0,0,350,0,0,0,0,0,0,0,0,0,350,0,0,0,0,0,0,0,0,0,0,0,350,351,0,351,0,0,0,0,0,0,0,349,0,350,350,0,0,0,0,0,0,0,0,0,0,0,352,353,354,355,356,0,357,358,359,360,361,362,363,364,352,365,366,353,354,355,367,368,364,369,369,370,371,372,357,358,373,374,375,370,359,376,377,360,361,362,363,364,352,378,349,365,379,380,351,369,381,382,366,353,354,355,350,383,384,367,385,386,356,387,368,371,372,357,358,373,374,375,370,359,376,377,360,361,362,363,364,352,378,349,365,379,380,351,369,381,382,366,353,354,355,350,383,384,367,385,386,356,387,368,379,379,378,349,365,379,381,385,386,349,365,379,381,385,386,352,353,0,371,369,369,0,379,374,357,358,375,359,360,361,362,363,379,0,370,371,372,357,358,373,374,375,370,359,376,377,360,361,362,363,364,352,378,365,379,380,351,369,381,382,366,353,354,355,350,383,384,367,385,386,356,387,368,361,0,386,356,386,385,385,377,349,381,385,386,349,385,386,374,377,0,379,379,369,371,372,357,358,373,374,375,370,359,376,377,360,361,362,363,364,352,349,365,379,380,351,369,381,382,366,353,354,355,350,383,384,367,385,386,356,387,368,379,371,372,357,358,373,374,375,370,359,376,377,360,361,362,363,364,352,378,349,365,379,380,351,369,381,382,366,353,354,355,350,383,384,367,385,386,356,387,368,0,385,364,364,349,369,371,372,357,358,373,374,375,370,359,376,377,360,361,362,363,364,352,378,349,365,379,380,351,369,381,382,366,353,354,355,350,383,384,367,385,386,356,387,368,382,362,363,355,381,365,349,379,349,381,385,386,376,363,364,352,379,353,355,372,373,375,384,367,355,357,358,360,379,379,354,376,376,364,380,363,356,0,379,0,374,383,376,379,362,364,364,371,372,357,358,373,374,375,370,359,376,377,360,361,362,363,364,352,365,379,380,351,369,381,382,366,353,354,355,350,383,384,367,385,386,356,387,368,370,365,379,352,353,354,355,371,372,357,358,373,374,375,370,359,376,377,360,361,362,363,364,352,365,379,380,351,369,381,382,366,353,354,355,350,383,384,367,385,386,356,387,368,0,372,373,349,365,379,381,385,386,379,0,371,371,372,372,357,357,358,358,373,373,374,374,375,375,370,359,359,376,376,377,377,360,360,361,361,362,362,363,363,364,364,352,378,349,365,379,380,351,369,381,382,366,353,354,355,350,383,384,367,385,386,356,356,387,368,371,372,357,358,373,374,375,370,359,376,377,360,361,362,363,379,356,371,372,357,358,373,374,375,370,359,376,377,360,361,362,363,364,352,378,349,365,379,380,351,369,381,382,366,353,354,355,350,383,384,367,385,386,356,387,368,371,372,357,358,373,374,375,370,359,376,377,360,361,362,363,364,352,378,349,365,379,380,351,369,381,382,366,353,354,355,350,383,384,367,385,386,356,387,368,352,353,354,355,0,0,387,371,372,357,358,373,374,375,370,359,376,377,360,361,362,363,364,352,378,349,365,379,380,351,369,381,382,366,353,354,355,350,383,384,367,385,386,356,387,368,0,0,388,389,390,390,390,389,391,389,392,393,393,394,395,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,349,0,0,0,350,0,0,0,350,0,0,0,0,0,350,351,351,0,0,0,0,349,350,350,0,0,0,0,0,0,0,0,0,0,0,0,386,385,0,0,0,381,0,0,0,0,0,0,0,0,388,389,390,390,390,389,391,389,392,393,393,394,395,0,0,0,0,349,0,349,392,393,393,0,0,0,351,351,394,395,0,0,381,0,0,0,0,0,0,350,350,350,350,350,388,389,390,390,390,389,391,389,0,0,0,0,0,0,0,0,386,385,0,0,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,0,0,0,0,397,398,399,398,399,398,400,399,397,398,400,399,397,398,400,399,397,398,400,399,397,400,0,398,399,397,398,398,398,399,397,398,399,397,400,397,397,400,398,399,397,398,398,400,399,397,398,398,400,399,397,397,397,398,399,397,399,399,397,400,398,399,397,398,399,397,398,400,399,397,398,398,398,400,399,399,397,398,400,399,397,398,400,399,397,400,399,399,398,400,399,397,400,0,0,0,0,0,0,0,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,0,0,0,0,402,402,403,404,402,403,404,402,404,402,404,402,403,404,402,402,402,402,403,404,403,402,402,403,404,402,402,402,404,0,403,402,402,404,402,404,402,403,404,402,403,404,402,402,404,402,403,404,402,403,404,402,403,404,404,402,403,404,0,405,405,0,405,405,405,405,406,405,406,405,406,405,406,406,406,0,406,406,405,405,406,406,405,406,405,406,406,405,406,405,406,406,406,406,406,406,405,406,405,406,405,406,405,406,405,406,405,406,0,0,0,0,0,0,407,407,408,409,407,410,411,412,408,409,407,410,411,412,408,409,407,410,411,412,408,409,407,410,411,412,408,409,410,412,0,407,407,411,408,409,407,411,408,409,407,411,408,409,408,411,408,410,412,410,412,407,407,408,408,409,407,410,411,412,408,409,407,407,411,407,410,411,412,408,409,411,409,407,411,408,409,407,411,408,409,408,410,412,411,407,411,408,409,407,407,411,408,409,407,410,411,412,408,409,407,408,408,407,410,411,412,408,408,409,409,407,410,411,412,408,409,407,410,411,412,408,409,411,410,412,409,408,409,407,410,411,412,408,409,410,412,413,0,0,0,0,0,0,414,415,416,414,415,417,416,414,415,417,416,414,415,417,416,414,415,417,414,415,416,414,415,417,416,414,415,417,416,416,414,415,417,417,416,414,415,417,416,416,414,415,417,416,414,415,417,416,414,415,414,415,414,415,416,414,415,417,416,417,416,414,415,417,416,414,415,417,416,414,415,417,416,416,416,414,415,417,0,0,418,419,418,419,419,419,418,419,418,418,419,418,419,418,419,419,418,419,418,419,419,418,419,418,419,418,419,418,419,0,0,420,420,420,420,420,420,420,421,420,420,420,420,420,421,420,420,420,420,420,420,420,420,420,420,421,420,420,0,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,0,0,0,423,423,424,423,423,425,424,423,425,424,423,425,424,423,425,424,423,424,424,423,424,423,424,423,424,423,423,423,425,425,424,423,425,424,423,423,423,423,423,423,423,425,424,424,423,424,423,424,423,424,423,423,424,423,424,424,423,424,423,425,424,423,425,423,423,423,425,424,423,425,424,423,425,424,423,425,424,0,0,0,0,426,427,428,426,427,429,428,426,427,429,428,426,427,427,429,428,426,427,429,428,426,427,428,427,428,428,429,426,426,428,426,427,428,428,428,426,427,428,426,427,429,429,428,428,426,426,427,427,429,428,426,427,428,426,427,428,429,428,426,427,427,428,428,426,427,428,426,427,428,428,427,428,429,428,426,427,428,427,428,426,427,428,429,428,426,427,428,426,427,428,429,428,426,427,429,428,426,427,429,428,426,427,429,427,428,429,428,426,427,429,430,431,431,431,431,0,0,431,431,431,432,431,432,431,432,431,432,431,432,431,432,431,432,432,431,432,431,432,432,431,431,432,431,432,431,432,431,432,432,432,432,431,432,431,432,431,432,431,431,432,431,432,431,432,431,432,0,433,433,433,434,435,435,436,436,436,0,435,435,0,435,436,435,435,436,436,0,436,0,436,434,434,435,0,435,435,0,436,435,435,437,0,437,436,438,438,437,437,436,438,435,439,434,437,436,438,435,439,434,437,436,438,434,437,436,438,434,437,436,438,437,0,437,436,438,434,437,436,438,434,437,437,437,437,437,436,436,438,438,435,435,439,439,434,437,437,437,436,436,438,435,435,435,435,435,439,434,437,438,437,436,438,437,436,438,435,439,434,437,437,434,437,437,436,438,0,0,0,0,0,0,437,437,437,436,438,435,437,436,438,437,436,438,434,437,437,436,438,435,439,437,437,436,438,438,435,439,434,437,436,438,435,439,434,437,436,438,435,439,434,437,436,438,435,439,434,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,0,0,0,0,0,0,0,0,0,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,0,0,456,456,456,456,456,456,456,456,456,456,456,456,456,456,456,456,0,456,456,456,456,456,456,456,456,0,0,0,0,457,457,458,459,457,458,459,457,458,457,457,457,457,457,457,457,457,458,459,457,458,457,457,458,457,459,457,458,459,458,457,458,457,457,457,457,459,458,459,457,457,458,457,460,459,458,457,457,458,457,0,457,457,459,457,458,459,457,458,459,457,458,458,459,457,458,461,461,0,0,0,0,0,0,0,0,0,0,461,0,0,0,0,0,462,462,0,0,0,463,0,464,462,465,462,466,465,467,468,464,469,470,463,471,472,462,466,465,467,468,464,469,470,463,471,472,472,462,466,465,467,468,464,469,470,463,471,462,466,465,467,468,464,469,470,463,471,467,0,471,468,470,462,465,462,466,472,462,466,465,467,468,464,469,470,472,461,461,462,469,464,471,472,462,466,465,467,468,464,469,470,463,471,467,468,464,463,472,465,473,461,462,466,465,467,468,468,464,464,469,470,463,463,471,471,472,462,466,465,467,468,464,464,469,470,463,471,472,468,469,471,463,462,466,465,467,468,464,469,470,463,471,472,464,470,470,470,472,462,470,467,462,466,465,467,468,464,469,470,463,471,464,471,0,470,467,464,470,462,466,465,467,468,464,469,470,472,462,466,465,467,468,464,469,470,472,462,466,465,467,468,464,469,470,463,471,468,464,463,471,462,466,465,467,468,464,469,470,463,471,472,462,466,465,467,468,464,469,470,463,471,472,462,466,465,462,466,465,467,468,464,469,470,463,471,472,462,466,465,467,468,464,469,470,463,471,472,474,475,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,476,477,478,479,480,481,482,483,484,485,486,487,476,477,478,479,480,481,482,483,484,485,488,489,486,487,476,477,478,479,480,481,482,483,484,485,488,489,486,476,477,478,479,480,481,482,483,484,485,488,489,486,476,477,478,479,480,481,482,483,484,485,488,489,486,489,0,0,476,477,478,479,480,481,482,483,484,485,488,486,476,477,478,479,480,481,482,483,484,485,488,486,476,477,478,479,480,481,482,483,484,485,488,486,489,489,476,477,478,479,480,481,482,483,484,485,488,486,487,476,477,478,479,480,481,482,483,484,485,488,489,486,487,486,487,476,477,478,479,480,481,482,483,484,485,488,489,486,479,479,486,477,482,482,485,480,477,478,479,481,482,483,484,485,488,486,487,476,477,478,479,480,481,482,483,484,485,488,486,480,485,0,0,480,481,478,489,476,477,478,479,480,481,482,483,484,485,488,486,476,477,479,476,477,478,479,480,481,482,483,484,485,488,486,476,477,478,479,480,481,482,483,484,485,488,489,486,482,482,483,483,484,485,478,487,476,477,478,479,479,480,481,482,483,483,484,485,485,488,489,486,478,487,476,477,478,479,480,481,482,483,484,485,488,489,486,487,476,477,478,479,480,481,482,483,484,485,488,489,486,489,486,476,477,480,481,482,483,484,485,488,478,478,487,476,477,478,479,480,481,482,483,484,485,488,489,486,489,0,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,0,490,490,490,490,490,490,490,490,490,490,490,0,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,482,485,482,485,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,492,0,0,492,493,494,495,492,496,497,493,494,495,492,496,497,495,495,495,495,492,495,492,495,495,492,496,497,493,494,495,492,496,497,495,495,495,495,495,0,493,494,495,492,496,497,493,494,496,497,495,495,495,495,495,495,495,495,495,495,495,493,494,493,494,496,497,495,495,0,495,495,495,495,495,495,495,495,495,495,493,494,495,492,496,497,493,494,495,492,496,497,493,494,495,492,496,497,493,494,495,492,496,497,0,0,0,0,0,0,0,0,0,0,0,0,498,498,499,500,501,502,503,504,505,506,507,508,498,499,500,501,502,503,504,505,506,507,508,498,499,500,501,502,503,504,505,506,507,508,498,499,500,501,502,503,504,505,506,507,508,498,499,500,501,502,503,504,505,506,507,508,498,498,499,500,501,502,503,504,505,506,507,508,499,500,501,502,503,504,505,506,507,508,498,499,500,501,502,503,504,505,506,507,508,498,499,500,501,502,503,504,505,506,507,508,498,499,500,501,502,503,504,505,506,507,508,498,499,500,501,502,503,504,505,506,507,508,0,509,0,509,510,510,510,510,510,510,510,510,510,510,510,510,0,0,0,0,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,0,0,0,0,0,0,0,0,0,512,0,225,0,513,225,0,514,514,515,516,513,0,516,0,517,518,514,0,0,0,0,0,516,0,517,515,0,0,517,190,0,0,0,0,0,0,0,0,0,0,0,0,0,190,0,0,0,0,514,0,225,225,225,225,513,0,514,514,0,0,517,0,519,520,521,522,523,517,515,524,525,526,516,527,519,528,512,513,522,529,513,0,524,520,521,522,529,523,530,518,531,517,515,524,525,526,516,514,532,533,534,527,519,528,535,512,513,536,520,521,522,529,523,530,518,531,517,515,524,525,526,516,514,532,533,534,527,519,528,535,512,513,536,524,524,520,521,522,529,523,530,518,531,517,515,524,525,526,516,514,532,533,534,527,519,528,535,512,513,536,520,521,522,529,523,530,518,531,517,515,524,525,526,516,514,532,533,534,527,519,528,535,512,513,536,514,521,522,524,524,530,531,534,536,0,525,520,521,522,529,523,518,517,515,524,526,516,533,527,519,528,535,512,513,520,521,522,529,523,518,517,515,524,525,526,516,514,532,533,527,519,528,535,512,513,520,521,522,529,523,518,517,515,524,525,526,516,514,532,533,527,519,528,535,512,513,532,537,527,520,533,519,526,528,524,530,531,534,536,535,528,530,531,534,536,520,521,522,529,523,518,517,515,524,525,526,516,514,532,533,527,527,519,528,535,512,513,523,524,513,520,521,522,529,523,530,518,531,517,515,524,525,526,516,516,516,514,532,533,534,527,519,528,535,512,513,536,514,529,524,524,537,533,527,519,517,525,532,520,521,522,529,523,523,518,518,517,515,524,525,514,527,513,0,512,520,521,522,529,523,530,518,531,517,515,524,525,526,516,514,532,533,533,534,527,519,528,535,512,513,536,520,521,522,529,525,512,523,524,525,517,516,512,524,519,512,524,0,529,517,525,523,520,521,522,529,523,518,517,515,524,525,526,516,532,533,527,519,528,535,512,513,537,520,521,522,529,523,524,526,532,533,527,519,528,535,512,523,528,535,512,523,518,524,524,523,523,524,523,523,0,514,524,514,526,528,535,524,532,517,525,530,531,534,536,523,524,524,520,521,522,529,523,518,517,515,524,526,516,533,527,519,528,535,512,513,517,515,523,523,523,537,527,537,516,532,533,527,519,520,521,522,529,523,518,517,515,524,526,516,533,527,519,528,535,512,513,520,521,522,529,523,530,518,531,517,515,524,525,526,516,514,532,533,534,527,519,528,535,512,513,536,527,519,526,537,527,528,535,520,521,522,529,523,530,518,531,517,515,524,524,525,526,516,514,532,533,534,527,519,528,535,512,512,513,536,520,521,522,529,523,530,518,531,517,515,524,525,526,516,514,532,533,534,527,519,528,535,512,513,536,522,529,520,521,522,529,523,530,518,531,517,515,524,525,526,516,514,532,533,534,527,519,528,535,512,513,536,530,531,534,536,528,535,512,526,526,520,521,522,529,523,530,518,531,517,515,524,525,526,516,514,532,533,534,527,519,528,535,512,513,536,530,531,534,536,520,533,519,517,525,538,538,195,196,539,540,541,227,228,229,230,231,232,542,543,544,545,546,547,548,549,549,0,0,0,0,0,550,551,552,553,0,554,550,550,551,552,0,0,553,553,552,552,555,554,550,551,552,556,553,555,554,550,551,552,556,553,554,550,552,556,553,554,550,552,556,553,553,556,553,550,552,553,555,550,552,553,553,553,554,550,552,553,554,550,552,553,556,556,554,554,550,550,551,551,552,552,553,553,553,555,554,550,551,552,556,553,553,553,550,552,553,555,554,550,551,552,556,553,555,550,555,550,552,553,550,552,553,553,552,553,553,552,553,552,550,550,556,550,550,552,553,552,550,552,553,553,554,550,552,556,553,554,550,551,552,553,553,555,554,550,551,552,556,553,553,553,555,554,550,551,552,556,553,555,554,550,551,552,556,553,556,550,552,555,554,550,551,552,556,553,556,553,557,558,557,558,559,560,561,561,561,559,560,0,0,0,0,0,0,0,0,562,0,563,0,564,0,563,0,565,566,566,0,566,0,563,0,567,0,563,0,568,0,0,563,0,569,563,0,563,566,566,563,565,570,569,571,572,568,573,566,564,574,567,575,563,565,570,569,571,572,568,573,566,564,574,567,575,563,565,570,569,571,572,568,573,566,564,574,567,575,563,565,570,569,571,572,568,573,566,564,574,567,575,563,565,570,569,571,572,568,573,566,564,574,567,575,563,565,570,569,571,572,568,573,566,564,574,567,575,563,565,570,569,571,572,568,573,566,564,574,567,575,563,565,570,569,571,572,568,573,566,564,574,567,575,563,565,570,569,571,572,568,573,566,564,574,567,575,570,563,565,570,569,571,572,568,573,566,564,574,567,575,572,563,565,570,569,571,572,568,573,564,574,567,575,570,571,573,575,570,563,565,570,569,571,572,568,573,566,564,574,567,575,563,565,570,569,571,572,568,573,566,564,574,567,575,563,565,570,569,571,572,568,573,566,564,574,567,575,570,574,573,563,565,570,569,571,572,568,573,566,564,574,567,575,563,565,570,569,571,572,568,573,566,564,574,567,575,563,565,570,569,571,572,568,573,566,564,574,567,575,563,565,570,569,571,572,568,573,566,564,574,567,575,576,577,578,579,580,581,582,583,584,585,586,587,588,588,587,0,0,0,587,588,588,588,589,588,587,589,588,587,589,588,587,589,588,587,589,588,588,588,588,589,589,588,587,589,588,587,588,588,589,588,587,587,588,588,587,588,588,587,589,588,588,589,588,587,589,588,587,588,589,588,587,589,588,587,589,588,588,588,588,589,588,587,588,589,590,591,591,591,592,593,592,0,0,0,594,595,596,594,595,596,594,595,596,594,595,596,594,594,595,596,595,595,596,594,595,596,594,595,596,594,595,596,594,595,596,594,594,594,595,596,595,596,594,595,596,594,594,595,596,594,595,596,594,595,596,594,595,596,594,595,596,594,595,596,594,595,594,594,595,596,594,0,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,0,598,598,598,598,598,598,598,598,598,598,598,0,598,598,598,598,598,598,598,598,0,0,0,0,0,599,599,599,599,599,0,0,0,600,601,601,599,600,601,599,600,601,601,600,601,600,601,600,601,599,600,601,600,601,599,599,600,601,601,599,600,601,601,601,601,601,599,600,601,601,601,599,600,601,600,601,601,601,601,601,0,600,601,600,601,600,601,599,601,599,600,601,599,600,601,599,600,601,601,601,599,600,601,602,602,603,603,252,252,252,0,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,253,0,252,252,252,252,252,252,252,252,252,252,254,254,255,253,254,255,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,253,0,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,255,256,254,255,252,252,252,252,252,252,252,255,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,256,0,0,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,253,252,252,252,252,252,252,0,252,252,252,253,253,252,252,252,252,252,0,0,257,258,258,259,259,259,260,261,261,262,262,262,262,0,0,0,0,0,0,0,0,0,0,0,0,0,604,604,605,604,605,604,605,604,605,604,605,604,604,604,604,605,605,604,604,604,605,604,604,605,604,604,604,604,605,604,604,604,605,604,604,605,604,605,604,605,605,604,604,604,604,604,605,605,606,606,0,0,0,606,607,606,607,608,606,607,608,606,607,608,606,607,608,607,608,606,606,607,608,606,607,608,606,607,608,606,607,608,608,606,607,608,608,606,607,608,606,607,608,607,607,606,607,608,607,606,607,608,608,608,606,607,608,606,607,608,606,607,608,606,607,608,606,607,608,606,607,608,606,606,607,608,609],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["result",4,["response"]],["response",3]]],[[["vec",3,["methodrequest","global"]],["methodrequest",4],["global",3]],[["vec",3,["result","global"]],["error",3],["result",4,["vec","error"]]]],[[["vec",3,["methodrequest","global"]],["methodrequest",4],["global",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["blockingclient",3]],[[],["client",3]],[[],["methodrequest",4]],[[],["methodresponse",4]],[[],["event",3]],[[],["state",3]],[[],["retry",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["state",3]],["ordering",4]],[[["authenticationkey",3]],[["error",3],["result",4,["error"]]]],[[]],[[],["retry",3]],[[],["duration",3]],[[],[["methodrequest",4],["result",4,["methodrequest"]]]],[[],[["result",4,["jsonrpcrequest"]],["jsonrpcrequest",3]]],[[],[["result",4,["method"]],["method",4]]],[[["methodresponse",4]],["bool",15]],[[["state",3]],["bool",15]],[[],["bool",15]],null,[[],["contractevent",4]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["error",3]],["error",3]],[[]],[[]],[[["error",3]],["streamerror",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["value",4],["method",4]],[["error",3],["methodresponse",4],["result",4,["methodresponse","error"]]]],[[["jsonrpcresponse",3]],["state",3]],[[["u64",15],["str",15],["accountaddress",3]],[["error",3],["result",4,["error"]]]],[[["accountaddress",3]],[["response",3,["option"]],["error",3],["result",4,["response","error"]]]],[[["accountaddress",3]]],[[["accountaddress",3]],["methodrequest",4]],[[["u64",15],["accountaddress",3]],[["response",3,["option"]],["error",3],["result",4,["response","error"]]]],[[["u64",15],["accountaddress",3]]],[[["u64",15],["accountaddress",3]],["methodrequest",4]],[[["u64",15],["option",4,["u64"]],["accountaddress",3]],[["error",3],["result",4,["response","error"]],["response",3,["accountstatewithproofview"]]]],[[["u64",15],["option",4,["u64"]],["accountaddress",3]]],[[["u64",15],["option",4,["u64"]],["accountaddress",3]],["methodrequest",4]],[[["u64",15],["bool",15],["accountaddress",3]],[["error",3],["response",3,["option"]],["result",4,["response","error"]]]],[[["u64",15],["bool",15],["accountaddress",3]]],[[["u64",15],["bool",15],["accountaddress",3]],["methodrequest",4]],[[["u64",15],["bool",15],["accountaddress",3]],[["error",3],["result",4,["response","error"]],["response",3,["vec"]]]],[[["u64",15],["bool",15],["accountaddress",3]]],[[["u64",15],["bool",15],["accountaddress",3]],["methodrequest",4]],[[["u64",15],["bool",15],["option",4,["u64"]],["accountaddress",3]],[["error",3],["result",4,["response","error"]],["response",3,["accounttransactionswithproofview"]]]],[[["u64",15],["bool",15],["option",4,["u64"]],["accountaddress",3]]],[[["u64",15],["bool",15],["option",4,["u64"]],["accountaddress",3]],["methodrequest",4]],[[["option",4,["u64"]],["u64",15]],[["error",3],["result",4,["response","error"]],["response",3,["accumulatorconsistencyproofview"]]]],[[["option",4,["u64"]],["u64",15]]],[[["option",4,["u64"]],["u64",15]],["methodrequest",4]],[[],[["response",3,["vec"]],["error",3],["result",4,["response","error"]]]],[[]],[[],["methodrequest",4]],[[["eventkey",3],["u64",15]],[["error",3],["result",4,["response","error"]],["response",3,["vec"]]]],[[["u64",15],["eventkey",3]]],[[["accountaddress",3]],[["error",3],["result",4,["response","error"]],["response",3,["option"]]]],[[["accountaddress",3]]],[[["eventkey",3],["option",4,["u64"]],["u64",15]],[["error",3],["result",4,["response","error"]],["response",3,["eventbyversionwithproofview"]]]],[[["eventkey",3],["option",4,["u64"]],["u64",15]]],[[["eventkey",3],["option",4,["u64"]],["u64",15]],["methodrequest",4]],[[["eventkey",3],["u64",15]],[["error",3],["response",3,["vec"]],["result",4,["response","error"]]]],[[["eventkey",3],["u64",15]]],[[["eventkey",3],["u64",15]],["methodrequest",4]],[[["eventkey",3],["u64",15]],[["result",4,["response","error"]],["error",3],["response",3,["vec"]]]],[[["eventkey",3],["u64",15]]],[[["eventkey",3],["u64",15]],["methodrequest",4]],[[],[["response",3,["metadataview"]],["error",3],["result",4,["response","error"]]]],[[]],[[],["methodrequest",4]],[[["u64",15]],[["response",3,["metadataview"]],["error",3],["result",4,["response","error"]]]],[[["u64",15]]],[[["u64",15]],["methodrequest",4]],[[],[["result",4,["response","error"]],["response",3,["u64"]],["error",3]]],[[]],[[],["methodrequest",4]],[[["u64",15]],[["response",3,["stateproofview"]],["error",3],["result",4,["response","error"]]]],[[["u64",15]]],[[["u64",15]],["methodrequest",4]],[[["u64",15],["bool",15]],[["error",3],["result",4,["response","error"]],["response",3,["vec"]]]],[[["u64",15],["bool",15]]],[[["u64",15],["bool",15]],["methodrequest",4]],[[["u64",15],["bool",15]],[["error",3],["result",4,["response","error"]],["response",3,["option"]]]],[[["u64",15],["bool",15]]],[[["u64",15],["bool",15]],["methodrequest",4]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],[["jsonrpcerror",3],["option",4,["jsonrpcerror"]]]],[[],[["jsonrpcerror",3],["option",4,["jsonrpcerror"]]]],[[],[["state",3],["option",4,["state"]]]],[[],[["state",3],["option",4,["state"]]]],[[],["u32",15]],[[],["method",4]],[[],["method",4]],[[],["method",4]],[[["u64",15],["str",15],["authenticationkey",3]],[["error",3],["result",4,["error"]]]],[[["methodresponse",4]],["bool",15]],[[["state",3]],["bool",15]],[[],["blockingclient",3]],[[],["client",3]],[[["string",3]],["faucetclient",3]],[[["methodrequest",4]],["jsonrpcrequest",3]],[[["state",3]],["response",3]],[[["duration",3],["u32",15]],["retry",3]],[[["retry",3]],["client",3]],[[],["retry",3]],[[["state",3]],[["option",4,["ordering"]],["ordering",4]]],[[["methodrequest",4]],[["response",3,["methodresponse"]],["result",4,["response","error"]],["error",3]]],[[["methodrequest",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["option",4,["error"]],["error",8]]],[[],[["option",4,["error"]],["error",8]]],[[],[["option",4,["error"]],["error",8]]],[[],["state",3]],null,[[["signedtransaction",3]],[["result",4,["response","error"]],["error",3],["response",3]]],[[["signedtransaction",3]]],[[["signedtransaction",3]],[["methodrequest",4],["result",4,["methodrequest","error"]],["error",4]]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["option","error"]],["option",4,["accountview"]],["error",3]]],[[],[["error",3],["accountstatewithproofview",3],["result",4,["accountstatewithproofview","error"]]]],[[],[["error",3],["result",4,["option","error"]],["option",4,["transactionview"]]]],[[],[["result",4,["vec","error"]],["vec",3,["transactionview","global"]],["error",3]]],[[],[["accumulatorconsistencyproofview",3],["error",3],["result",4,["accumulatorconsistencyproofview","error"]]]],[[],[["result",4,["vec","error"]],["vec",3,["currencyinfoview","global"]],["error",3]]],[[],[["eventbyversionwithproofview",3],["error",3],["result",4,["eventbyversionwithproofview","error"]]]],[[],[["error",3],["result",4,["vec","error"]],["vec",3,["eventview","global"]]]],[[],[["result",4,["metadataview","error"]],["metadataview",3],["error",3]]],[[],[["u64",15],["result",4,["u64","error"]],["error",3]]],[[],[["stateproofview",3],["error",3],["result",4,["stateproofview","error"]]]],[[],[["result",4,["vec","error"]],["vec",3,["transactionview","global"]],["error",3]]],[[],[["error",3],["result",4,["error"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["option",4,["accountview"]],["accountview",3]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["signedtransaction",3],["duration",3],["option",4,["duration"]]],[["response",3,["transactionview"]],["result",4,["response","waitfortransactionerror"]],["waitfortransactionerror",4]]],[[["signedtransaction",3],["duration",3],["option",4,["duration"]]]],[[["u64",15],["hashvalue",3],["duration",3],["option",4,["duration"]],["accountaddress",3]],[["response",3,["transactionview"]],["result",4,["response","waitfortransactionerror"]],["waitfortransactionerror",4]]],[[["u64",15],["hashvalue",3],["duration",3],["option",4,["duration"]],["accountaddress",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["option",4,["statuscode"]],["statuscode",4]]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["errordata",4]],[[],["jsonrpcerror",3]],[[]],[[]],null,[[],["str",15]],null,[[],[["result",4,["errordata"]],["errordata",4]]],[[],[["jsonrpcerror",3],["result",4,["jsonrpcerror"]]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[["error",3]],["jsonrpcerror",3]],[[["error",3]],["jsonrpcerror",3]],[[["error",4]],["jsonrpcerror",3]],[[]],[[["i64",15]],[["invalidrequestcode",4],["option",4,["invalidrequestcode"]]]],[[["u64",15]],[["invalidrequestcode",4],["option",4,["invalidrequestcode"]]]],[[["string",3]],["jsonrpcerror",3]],[[]],[[]],[[]],[[]],[[],["jsonrpcerror",3]],[[["str",15]],["jsonrpcerror",3]],[[["str",15]],["jsonrpcerror",3]],[[["string",3]],["jsonrpcerror",3]],[[],["jsonrpcerror",3]],[[["option",4,["errordata"]],["errordata",4]],["jsonrpcerror",3]],[[["string",3]],["jsonrpcerror",3]],[[["i16",15]],["bool",15]],[[["mempoolstatus",3]],[["result",4,["jsonrpcerror","error"]],["error",3],["jsonrpcerror",3]]],null,[[],["jsonrpcerror",3]],[[],["result",4]],[[],["result",4]],[[],["value",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["statuscode",4]],["jsonrpcerror",3]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["streamingclient",3]],[[]],[[],["streamingclientconfig",3]],[[]],[[]],[[]],[[]],[[],["id",4]],[[]],[[]],[[]],[[["option",4,["websocketconfig"]],["streamingclientconfig",3],["websocketconfig",3]]],null,[[["pin",3,["subscriptionstream"]],["context",3],["subscriptionstream",3]],[["option",4],["poll",4,["option"]]]],null,null,[[["streammethodrequest",4]]],[[["eventkey",3],["u64",15]]],[[["u64",15],["option",4,["bool"]],["bool",15]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["streamjsonrpcrequest",3]],[[],["streammethodrequest",4]],[[],["streammethod",4]],[[],["subscribetoeventsparams",3]],[[],["subscribetotransactionsparams",3]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4,["streamjsonrpcrequest"]],["streamjsonrpcrequest",3]]],[[],[["result",4,["streammethodrequest"]],["streammethodrequest",4]]],[[],[["result",4,["streammethod"]],["streammethod",4]]],[[],[["result",4,["subscribetoeventsparams"]],["subscribetoeventsparams",3]]],[[],[["subscribetotransactionsparams",3],["result",4,["subscribetotransactionsparams"]]]],[[["streammethod",4]],["bool",15]],[[],["bool",15]],null,null,[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],[["result",4,["streamjsonrpcrequest"]],["streamjsonrpcrequest",3]]],[[["value",4],["streammethod",4]],[["error",3],["result",4,["streammethodrequest","error"]],["streammethodrequest",4]]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[],["streammethod",4]],[[],["str",15]],[[],["str",15]],null,[[["id",4],["streammethodrequest",4]],["streamjsonrpcrequest",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["streamjsonrpcresponseview",4]],[[],["streamjsonrpcresponse",3]],[[],["subscriptionresult",4]],[[],["unsubscriberesult",3]],[[],["subscriberesult",3]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4,["streamjsonrpcresponseview"]],["streamjsonrpcresponseview",4]]],[[],[["streamjsonrpcresponse",3],["result",4,["streamjsonrpcresponse"]]]],[[],[["result",4,["subscriptionresult"]],["subscriptionresult",4]]],[[],[["result",4,["unsubscriberesult"]],["unsubscriberesult",3]]],[[],[["subscriberesult",3],["result",4,["subscriberesult"]]]],[[["streamjsonrpcresponseview",4]],["bool",15]],[[["subscriptionresult",4]],["bool",15]],[[["unsubscriberesult",3]],["bool",15]],[[["subscriberesult",3]],["bool",15]],[[["jsonrpcerror",3],["id",4],["option",4,["id"]]],["streamjsonrpcresponse",3]],null,[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],[["result",4,["streamjsonrpcresponse","error"]],["streamjsonrpcresponse",3],["error",3]]],null,[[]],[[]],[[]],[[]],[[]],null,[[["streamjsonrpcresponseview",4]],["bool",15]],[[["unsubscriberesult",3]],["bool",15]],[[["subscriberesult",3]],["bool",15]],[[],["unsubscriberesult",3]],[[["u64",15]],["subscriberesult",3]],[[["streammethod",4]],[["result",4,["option","error"]],["option",4,["streamjsonrpcresponseview"]],["error",3]]],[[["option",4,["value"]],["id",4],["value",4],["option",4,["id"]]],["streamjsonrpcresponse",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[],["amountview",3]],[[],["accountroleview",4]],[[],["accountview",3]],[[],["preburnqueueview",3]],[[],["preburnwithmetadataview",3]],[[],["eventview",3]],[[],["eventwithproofview",3]],[[],["eventbyversionwithproofview",3]],[[],["eventdataview",4]],[[],["metadataview",3]],[[],["bytesview",3]],[[],["moveabortexplanationview",3]],[[],["vmstatusview",4]],[[],["transactionview",3]],[[],["transactionlistview",3]],[[],["transactionswithproofsview",3]],[[],["transactionsproofsview",3]],[[],["accounttransactionswithproofview",3]],[[],["transactiondataview",4]],[[],["scriptview",3]],[[],["currencyinfoview",3]],[[],["stateproofview",3]],[[],["accumulatorconsistencyproofview",3]],[[],["accountstatewithproofview",3]],[[],["accountstateproofview",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[],["scriptview",3]],null,null,[[]],[[],[["amountview",3],["result",4,["amountview"]]]],[[],[["accountroleview",4],["result",4,["accountroleview"]]]],[[],[["result",4,["accountview"]],["accountview",3]]],[[],[["preburnqueueview",3],["result",4,["preburnqueueview"]]]],[[],[["result",4,["preburnwithmetadataview"]],["preburnwithmetadataview",3]]],[[],[["result",4,["eventview"]],["eventview",3]]],[[],[["result",4,["eventwithproofview"]],["eventwithproofview",3]]],[[],[["eventbyversionwithproofview",3],["result",4,["eventbyversionwithproofview"]]]],[[],[["result",4,["eventdataview"]],["eventdataview",4]]],[[],[["metadataview",3],["result",4,["metadataview"]]]],[[],[["result",4,["bytesview"]],["bytesview",3]]],[[],[["result",4,["moveabortexplanationview"]],["moveabortexplanationview",3]]],[[],[["vmstatusview",4],["result",4,["vmstatusview"]]]],[[],[["result",4,["transactionview"]],["transactionview",3]]],[[],[["result",4,["transactionlistview"]],["transactionlistview",3]]],[[],[["transactionswithproofsview",3],["result",4,["transactionswithproofsview"]]]],[[],[["transactionsproofsview",3],["result",4,["transactionsproofsview"]]]],[[],[["result",4,["accounttransactionswithproofview"]],["accounttransactionswithproofview",3]]],[[],[["result",4,["transactiondataview"]],["transactiondataview",4]]],[[],[["result",4,["scriptview"]],["scriptview",3]]],[[],[["result",4,["currencyinfoview"]],["currencyinfoview",3]]],[[],[["stateproofview",3],["result",4,["stateproofview"]]]],[[],[["accumulatorconsistencyproofview",3],["result",4,["accumulatorconsistencyproofview"]]]],[[],[["accountstatewithproofview",3],["result",4,["accountstatewithproofview"]]]],[[],[["accountstateproofview",3],["result",4,["accountstateproofview"]]]],null,null,[[],["transactionlistview",3]],[[]],[[]],null,[[["amountview",3]],["bool",15]],[[["accountroleview",4]],["bool",15]],[[["accountview",3]],["bool",15]],[[["preburnqueueview",3]],["bool",15]],[[["preburnwithmetadataview",3]],["bool",15]],[[["eventview",3]],["bool",15]],[[["eventwithproofview",3]],["bool",15]],[[["eventbyversionwithproofview",3]],["bool",15]],[[["eventdataview",4]],["bool",15]],[[["metadataview",3]],["bool",15]],[[["bytesview",3]],["bool",15]],[[["moveabortexplanationview",3]],["bool",15]],[[["vmstatusview",4]],["bool",15]],[[["transactionview",3]],["bool",15]],[[["transactionlistview",3]],["bool",15]],[[["transactionswithproofsview",3]],["bool",15]],[[["transactionsproofsview",3]],["bool",15]],[[["accounttransactionswithproofview",3]],["bool",15]],[[["transactiondataview",4]],["bool",15]],[[["scriptview",3]],["bool",15]],[[["currencyinfoview",3]],["bool",15]],[[["stateproofview",3]],["bool",15]],[[["accumulatorconsistencyproofview",3]],["bool",15]],[[["accountstatewithproofview",3]],["bool",15]],[[["accountstateproofview",3]],["bool",15]],null,null,null,[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],null,[[]],[[["accountrole",4]],["accountroleview",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["vec",3,["u8","global"]],["u8",15],["global",3]],["bytesview",3]],[[],["bytesview",3]],[[]],[[]],[[["keptvmstatus",4]],["vmstatusview",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["transaction",4]],["transactiondataview",4]],[[]],[[["scriptfunction",3]],["scriptview",3]],[[["script",3]],["scriptview",3]],[[]],[[["currencyinforesource",3]],["currencyinfoview",3]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["global",3],["box",3,["global"]]]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["amountview",3]],["bool",15]],[[["accountroleview",4]],["bool",15]],[[["accountview",3]],["bool",15]],[[["preburnqueueview",3]],["bool",15]],[[["preburnwithmetadataview",3]],["bool",15]],[[["eventview",3]],["bool",15]],[[["eventwithproofview",3]],["bool",15]],[[["eventbyversionwithproofview",3]],["bool",15]],[[["eventdataview",4]],["bool",15]],[[["metadataview",3]],["bool",15]],[[["bytesview",3]],["bool",15]],[[["moveabortexplanationview",3]],["bool",15]],[[["vmstatusview",4]],["bool",15]],[[["transactionview",3]],["bool",15]],[[["transactionlistview",3]],["bool",15]],[[["transactionswithproofsview",3]],["bool",15]],[[["transactionsproofsview",3]],["bool",15]],[[["accounttransactionswithproofview",3]],["bool",15]],[[["transactiondataview",4]],["bool",15]],[[["scriptview",3]],["bool",15]],[[["currencyinfoview",3]],["bool",15]],[[["stateproofview",3]],["bool",15]],[[["accumulatorconsistencyproofview",3]],["bool",15]],[[["accountstatewithproofview",3]],["bool",15]],[[["accountstateproofview",3]],["bool",15]],[[["u64",15],["balanceresource",3],["identifier",3],["accountrole",4],["freezingbit",3],["accountresource",3],["accountaddress",3],["btreemap",3,["identifier","balanceresource"]]],["accountview",3]],[[["vec",3,["preburnwithmetadataview","global"]],["preburnwithmetadataview",3],["global",3],["string",3]],["preburnqueueview",3]],[[["u64",15],["hashvalue",3],["u8",15]],["metadataview",3]],[[],["bytesview",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["error",3],["result",4,["eventview","error"]],["eventview",3]]],[[],["result",4]],[[["eventwithproof",3]],[["error",3],["result",4,["eventwithproofview","error"]],["eventwithproofview",3]]],[[],["result",4]],[[["eventbyversionwithproof",3]],[["eventbyversionwithproofview",3],["result",4,["eventbyversionwithproofview"]]]],[[],["result",4]],[[["contractevent",4]],[["eventdataview",4],["error",3],["result",4,["eventdataview","error"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["accounttransactionswithproof",3,["transactioninfo"]],["transactioninfo",3]],[["result",4,["transactionlistview"]],["transactionlistview",3]]],[[],["result",4]],[[["transactioninfo",3],["transactionlistwithproof",3,["transactioninfo"]]],[["result",4,["transactionlistview"]],["transactionlistview",3]]],[[],["result",4]],[[["transactionlistwithproof",3]],[["result",4,["transactionswithproofsview"]],["transactionswithproofsview",3]]],[[],["result",4]],[[["transactioninfolistwithproof",3]],[["result",4,["transactionsproofsview"]],["transactionsproofsview",3]]],[[],["result",4]],[[["accounttransactionswithproof",3]],[["result",4,["accounttransactionswithproofview"]],["accounttransactionswithproofview",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["stateproof",3]],[["result",4,["stateproofview"]],["stateproofview",3]]],[[],["result",4]],[[["accumulatorconsistencyproof",3]],[["accumulatorconsistencyproofview",3],["result",4,["accumulatorconsistencyproofview"]]]],[[],["result",4]],[[],["result",4]],[[["transactioninfo",3],["accountstatewithproof",3,["transactioninfo"]]],[["result",4,["accountstatewithproofview","error"]],["accountstatewithproofview",3],["error",3]]],[[],["result",4]],[[["transactioninfo",3],["accountstateproof",3,["transactioninfo"]]],[["result",4,["accountstateproofview","error"]],["accountstateproofview",3],["error",3]]],[[["accountstate",3],["u64",15],["accountaddress",3]],[["error",3],["result",4,["accountview","error"]],["accountview",3]]],[[["u64",15],["transaction",4],["contractevent",4],["global",3],["vec",3,["contractevent","global"]]],[["error",3],["result",4,["transactionview","error"]],["transactionview",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u64",15]],[["transactionlistwithproof",3,["transactioninfo"]],["result",4,["transactionlistwithproof","error"]],["error",3]]],null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["scriptview",3]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["accountstate",3]],[["result",4,["error"]],["error",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["vec",3,["global"]],["global",3]],[["result",4,["error"]],["error",3]]],[[["vec",3,["global"]],["global",3]],[["result",4,["error"]],["error",3]]],[[["usize",15]],["bool",15]],[[]],[[]],[[]],[[]],[[],["hashvalue",3]],[[],["cryptomaterialerror",4]],[[]],[[]],[[["hashvalue",3]],["ordering",4]],[[["hashvalue",3]],["usize",15]],null,[[],["hashvalue",3]],[[]],[[],[["hashvalue",3],["result",4,["hashvalue"]]]],null,[[["hashvalue",3]],["bool",15]],[[["cryptomaterialerror",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[],[["result",4,["hashvalue","hashvalueparseerror"]],["hashvalue",3],["hashvalueparseerror",3]]],[[["str",15]],[["cryptomaterialerror",4],["result",4,["cryptomaterialerror"]]]],[[],[["result",4,["hashvalue","hashvalueparseerror"]],["hashvalue",3],["hashvalueparseerror",3]]],[[],[["result",4,["hashvalue","hashvalueparseerror"]],["hashvalue",3],["hashvalueparseerror",3]]],[[["str",15]],[["result",4,["hashvalue","hashvalueparseerror"]],["hashvalue",3],["hashvalueparseerror",3]]],[[["u64",15]],["hashvalue",3]],[[]],[[]],[[]],null,[[]],null,[[["usize",15]],["u8",15]],[[]],[[]],[[],["hashvaluebititerator",3]],[[],["usize",15]],null,[[["hashvalue",3]],["bool",15]],[[["cryptomaterialerror",4]],["bool",15]],[[],["hashvalue",3]],[[["usize",15]],["u8",15]],null,[[["hashvalue",3]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["result",4]],[[],["hashvalue",3]],[[]],[[]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],["hashvalue",3]],null,[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],[["string",3],["result",4,["string","error"]],["error",3]]],[[],["string",3]],[[],["string",3]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],null,[[],["hashvalue",3]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["oncenonzerousize",3]],[[],["oncebool",3]],[[],["oncebox",3]],[[]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[],[["nonzerousize",3],["option",4,["nonzerousize"]]]],[[],[["option",4,["bool"]],["bool",15]]],[[],["option",4]],[[],["nonzerousize",3]],[[],["bool",15]],[[]],[[],[["result",4,["nonzerousize"]],["nonzerousize",3]]],[[],[["result",4,["bool"]],["bool",15]]],[[],["result",4]],[[]],[[]],[[]],[[],["oncenonzerousize",3]],[[],["oncebool",3]],[[],["oncebox",3]],[[["nonzerousize",3]],["result",4]],[[["bool",15]],["result",4]],[[["box",3,["global"]],["global",3]],[["box",3,["global"]],["result",4,["box"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[],["oncecell",3]],[[]],[[],["oncecell",3]],[[],["lazy",3]],[[]],[[]],[[["oncecell",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["lazy",3]]],[[]],[[]],[[],["oncecell",3]],[[]],[[],["option",4]],[[],["option",4]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["option",4]],[[["lazy",3]],["result",4]],[[],["oncecell",3]],[[],["lazy",3]],[[],["result",4]],[[],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[],["oncecell",3]],[[]],[[],["oncecell",3]],[[],["lazy",3]],[[]],[[]],[[["oncecell",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["lazy",3]]],[[]],[[],["oncecell",3]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[]],[[],["result",4]],[[]],[[]],[[],["option",4]],[[["lazy",3]],["result",4]],[[],["oncecell",3]],[[],["lazy",3]],[[],["result",4]],[[],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[],[["option",4,["str"]],["str",15]]],null,[[]],[[]],[[],[["global",3],["dyndigest",8],["box",3,["dyndigest","global"]]]],[[]],[[],["sha3_256",3]],[[]],[[],["sha3_256",3]],[[],[["u8",15],["genericarray",3,["u8"]]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["global"]]]],[[],[["u8",15],["genericarray",3,["u8"]]]],[[["genericarray",3]]],[[["genericarray",3]]],[[],[["global",3],["box",3,["global"]]]],[[],[["u8",15],["genericarray",3,["u8"]]]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4,["cryptomaterialerror"]],["cryptomaterialerror",4]]],[[],["ed25519privatekey",3]],[[],["ed25519publickey",3]],[[],["ed25519signature",3]],[[]],[[]],[[]],[[],[["result",4,["ed25519privatekey"]],["ed25519privatekey",3]]],[[],[["ed25519publickey",3],["result",4,["ed25519publickey"]]]],[[],[["result",4,["ed25519signature"]],["ed25519signature",3]]],[[],["ed25519signature",3]],[[["ed25519privatekey",3]],["bool",15]],[[["ed25519publickey",3]],["bool",15]],[[["ed25519signature",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[["ed25519privatekey",3]],["ed25519publickey",3]],[[]],[[],["ed25519privatekey",3]],[[],["ed25519privatekey",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["ed25519signature",3]],[[],["ed25519signature",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[]],[[],["result",4]],[[],[["result",4,["ed25519privatekey","cryptomaterialerror"]],["cryptomaterialerror",4],["ed25519privatekey",3]]],[[],[["ed25519publickey",3],["cryptomaterialerror",4],["result",4,["ed25519publickey","cryptomaterialerror"]]]],[[],["result",4]],[[],[["result",4,["ed25519signature","cryptomaterialerror"]],["cryptomaterialerror",4],["ed25519signature",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["ed25519publickey",3],["error",3],["result",4,["ed25519publickey","error"]]]],[[["ed25519publickey",3]],[["result",4,["error"]],["error",3]]],[[["ed25519publickey",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["global",3],["dyndigest",8],["box",3,["dyndigest","global"]]]],[[]],[[]],[[],["publickey",3]],[[],["signature",3]],[[],["sha512",3]],[[]],[[]],[[]],[[],["publickey",3]],[[],["sha512",3]],[[],[["result",4,["keypair"]],["keypair",3]]],[[],[["result",4,["publickey"]],["publickey",3]]],[[],[["secretkey",3],["result",4,["secretkey"]]]],[[],[["result",4,["expandedsecretkey"]],["expandedsecretkey",3]]],[[],[["signature",3],["result",4,["signature"]]]],[[],[["u8",15],["genericarray",3,["u8"]]]],[[],[["u8",15],["genericarray",3,["u8"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["publickey",3]],["bool",15]],[[["signature",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["u8",15],["genericarray",3,["u8"]]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["global"]]]],[[],[["u8",15],["genericarray",3,["u8"]]]],[[["genericarray",3]]],[[["genericarray",3]]],[[["genericarray",3]]],[[],[["u8",15],["genericarray",3,["u8"]]]],[[],[["global",3],["box",3,["global"]]]],[[],[["u8",15],["genericarray",3,["u8"]]]],[[],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[["expandedsecretkey",3]],["publickey",3]],[[["secretkey",3]],["publickey",3]],[[]],[[]],[[["secretkey",3]],["expandedsecretkey",3]],[[["internalsignature",3]],["signature",3]],[[],["signature",3]],[[]],[[]],[[],[["error",3],["keypair",3],["result",4,["keypair","error"]]]],[[],[["result",4,["publickey","error"]],["publickey",3],["error",3]]],[[],[["result",4,["secretkey","error"]],["secretkey",3],["error",3]]],[[],[["expandedsecretkey",3],["result",4,["expandedsecretkey","error"]],["error",3]]],[[],[["signature",3],["error",3],["result",4,["signature","error"]]]],[[],["keypair",3]],[[],["secretkey",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["publickey",3]],["bool",15]],[[]],[[],["signature",3]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],null,[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["publickey",3]],["signature",3]],[[]],[[["option",4]],[["signature",3],["error",3],["result",4,["signature","error"]]]],[[["publickey",3],["option",4]],[["signature",3],["error",3],["result",4,["signature","error"]]]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["signature",3],["error",3],["result",4,["signature","error"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["error"]],["error",3]]],[[],[["signature",3],["error",3],["result",4,["signature","error"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],[["result",4,["error"]],["error",3]]],[[["signature",3]],[["result",4,["error"]],["error",3]]],[[["signature",3]],[["result",4,["error"]],["error",3]]],[[["signature",3]],[["result",4,["error"]],["error",3]]],[[["option",4],["signature",3]],[["result",4,["error"]],["error",3]]],[[["option",4],["signature",3]],[["result",4,["error"]],["error",3]]],[[["signature",3]],[["result",4,["error"]],["error",3]]],[[["signature",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[]],[[]],null,null,null,[[]],[[]],[[],["error",3]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["internalerror",4]],["error",3]],[[["box",3,["error","global"]],["error",8],["global",3]],["error",3]],[[]],[[],["error",3]],[[]],[[],["error",3]],[[],[["option",4,["error"]],["error",8]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,[[]],[[],[["error",3],["result",4,["error"]]]],[[]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],null,[[],["error",8]],[[],["error",8]],[[],["backtrace",3]],null,[[]],[[]],[[],["chain",3]],[[],["error",3]],[[]],[[]],[[],[["error",3],["result",4,["error"]]]],[[],["option",4]],[[],["option",4]],[[]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[],["error",3]],[[]],[[]],[[]],[[],["bool",15]],[[],["error",3]],[[],["error",3]],[[],["error",8]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["hashvalueparseerror",3]],[[],["transactionaccumulatorhasher",3]],[[],["eventaccumulatorhasher",3]],[[],["sparsemerkleinternalhasher",3]],[[],["voteproposalhasher",3]],[[],["testonlyhasher",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["transactionaccumulatorhasher",3]],[[],["eventaccumulatorhasher",3]],[[],["sparsemerkleinternalhasher",3]],[[],["voteproposalhasher",3]],[[],["testonlyhasher",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["hkdf",3]],[[],["hkdferror",4]],[[]],[[]],[[["hkdferror",4]],["bool",15]],[[],["bool",15]],[[["option",4],["usize",15]],[["hkdferror",4],["result",4,["vec","hkdferror"]],["vec",3,["u8","global"]]]],[[["option",4]],[["hkdferror",4],["result",4,["vec","hkdferror"]],["vec",3,["u8","global"]]]],[[["option",4],["usize",15]],[["hkdferror",4],["result",4,["vec","hkdferror"]],["vec",3,["u8","global"]]]],[[["option",4],["usize",15]],[["hkdferror",4],["result",4,["vec","hkdferror"]],["vec",3,["u8","global"]]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["multied25519publickey",3]],[[],["multied25519signature",3]],[[]],[[]],[[],[["result",4,["multied25519privatekey"]],["multied25519privatekey",3]]],[[],[["multied25519publickey",3],["result",4,["multied25519publickey"]]]],[[],[["result",4,["multied25519signature"]],["multied25519signature",3]]],[[["multied25519privatekey",3]],["bool",15]],[[["multied25519publickey",3]],["bool",15]],[[["multied25519signature",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["ed25519privatekey",3]],["multied25519privatekey",3]],[[]],[[["multied25519privatekey",3]],["multied25519publickey",3]],[[["ed25519publickey",3]],["multied25519publickey",3]],[[]],[[["ed25519signature",3]],["multied25519signature",3]],[[]],[[],["multied25519privatekey",3]],[[],["multied25519privatekey",3]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["multied25519privatekey",3]],["bool",15]],[[["multied25519publickey",3]],["bool",15]],[[["multied25519signature",3]],["bool",15]],[[["u8",15],["ed25519privatekey",3],["global",3],["vec",3,["ed25519privatekey","global"]]],[["cryptomaterialerror",4],["multied25519privatekey",3],["result",4,["multied25519privatekey","cryptomaterialerror"]]]],[[["vec",3,["ed25519publickey","global"]],["u8",15],["global",3],["ed25519publickey",3]],[["multied25519publickey",3],["result",4,["multied25519publickey","cryptomaterialerror"]],["cryptomaterialerror",4]]],[[["vec",3,["global"]],["global",3]],[["result",4,["multied25519signature","cryptomaterialerror"]],["cryptomaterialerror",4],["multied25519signature",3]]],[[["global",3],["ed25519signature",3],["vec",3,["ed25519signature","global"]]],["multied25519signature",3]],[[],["vec",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["multied25519signature",3]],[[],["multied25519signature",3]],[[],["vec",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["u8",15]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],[["cryptomaterialerror",4],["multied25519privatekey",3],["result",4,["multied25519privatekey","cryptomaterialerror"]]]],[[],["result",4]],[[],["result",4]],[[],[["multied25519publickey",3],["result",4,["multied25519publickey","cryptomaterialerror"]],["cryptomaterialerror",4]]],[[],[["result",4,["multied25519signature","cryptomaterialerror"]],["cryptomaterialerror",4],["multied25519signature",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["multied25519publickey",3]],[["result",4,["error"]],["error",3]]],[[["multied25519publickey",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],["usize",15]],[[["usize",15]],["usize",15]],[[["initiatorhandshakestate",3]],[["result",4,["noiseerror"]],["noiseerror",4]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[],["publickey",3]],[[["usize",15]],["usize",15]],[[["usize",15]],["usize",15]],[[["publickey",3],["option",4]],[["initiatorhandshakestate",3],["result",4,["initiatorhandshakestate","noiseerror"]],["noiseerror",4]]],[[]],[[]],[[]],[[]],[[]],[[["privatekey",3]],["noiseconfig",3]],[[],["noisesession",3]],[[],[["result",4,["noiseerror"]],["noiseerror",4]]],[[],["publickey",3]],[[],[["noiseerror",4],["result",4,["noiseerror"]]]],[[["option",4],["responderhandshakestate",3]],[["noisesession",3],["result",4,["noisesession","noiseerror"]],["noiseerror",4]]],[[["option",4]],[["result",4,["noiseerror"]],["noiseerror",4]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],[["vec",3,["u8","global"]],["noiseerror",4],["result",4,["vec","noiseerror"]]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["testdiemcryptohasher",3]],[[],["keypair",3]],[[]],[[]],[[],["testdiemcryptohasher",3]],[[],[["keypair",3],["result",4,["keypair"]]]],[[],[["result",4,["testdiemcrypto"]],["testdiemcrypto",3]]],[[["keypair",3]],["bool",15]],[[],["bool",15]],[[],["hashvalue",3]],[[],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[],["keypair",3]],[[]],[[]],[[]],[[],["keypair",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[["keypair",3]],["bool",15]],null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[["rawtransaction",3]],[["signedtransaction",3],["result",4,["signedtransaction","error"]],["error",3]]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[["u8",15]]],[[]],[[]],[[]],[[]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["vec",3,["global"]],["global",3]],[["result",4,["error"]],["error",3]]],[[["vec",3,["global"]],["global",3]],[["result",4,["error"]],["error",3]]],[[["str",15]],[["cryptomaterialerror",4],["result",4,["cryptomaterialerror"]]]],[[]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],[["string",3],["result",4,["string","error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["validatable",3]],[[],["unvalidateded25519publickey",3]],[[]],[[]],[[],[["validatable",3],["result",4,["validatable"]]]],[[],[["result",4,["unvalidateded25519publickey"]],["unvalidateded25519publickey",3]]],[[["validatable",3]],["bool",15]],[[["unvalidateded25519publickey",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["validatable",3]],[[],["validatable",3]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[],["option",4]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["privatekey",3]],[[],["publickey",3]],[[]],[[]],[[["publickey",3]],["ordering",4]],[[],["publickey",3]],[[],[["result",4,["privatekey"]],["privatekey",3]]],[[],[["result",4,["publickey"]],["publickey",3]]],[[["publickey",3]]],[[["privatekey",3]],["bool",15]],[[["publickey",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[],["privatekey",3]],[[]],[[["privatekey",3]],["publickey",3]],[[]],[[],["publickey",3]],[[],[["privatekey",3],["cryptomaterialerror",4],["result",4,["privatekey","cryptomaterialerror"]]]],[[],[["publickey",3],["result",4,["publickey","cryptomaterialerror"]],["cryptomaterialerror",4]]],[[],["privatekey",3]],[[]],[[]],[[]],[[]],[[["publickey",3]],["bool",15]],[[["publickey",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["publickey",3]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],[["result",4,["privatekey"]],["privatekey",3]]],[[],["result",4]],[[],[["publickey",3],["result",4,["publickey"]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["publickey",3]],[[],["staticsecret",3]],[[]],[[]],[[["publickey",3]],["sharedsecret",3]],[[["publickey",3]],["sharedsecret",3]],[[]],[[]],[[]],[[["publickey",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["ephemeralsecret",3]],["publickey",3]],[[],["publickey",3]],[[["staticsecret",3]],["publickey",3]],[[]],[[]],[[]],[[],["staticsecret",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["publickey",3]],["bool",15]],[[],["ephemeralsecret",3]],[[],["staticsecret",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["scriptabi",4]],[[],["scriptfunctionabi",3]],[[],["transactionscriptabi",3]],[[],["argumentabi",3]],[[],["typeargumentabi",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4,["scriptabi"]],["scriptabi",4]]],[[],[["result",4,["scriptfunctionabi"]],["scriptfunctionabi",3]]],[[],[["result",4,["transactionscriptabi"]],["transactionscriptabi",3]]],[[],[["result",4,["argumentabi"]],["argumentabi",3]]],[[],[["result",4,["typeargumentabi"]],["typeargumentabi",3]]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[["scriptabi",4]],["bool",15]],[[["scriptfunctionabi",3]],["bool",15]],[[["transactionscriptabi",3]],["bool",15]],[[["argumentabi",3]],["bool",15]],[[["typeargumentabi",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["moduleid",3]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[["scriptabi",4]],["bool",15]],[[["scriptfunctionabi",3]],["bool",15]],[[["transactionscriptabi",3]],["bool",15]],[[["argumentabi",3]],["bool",15]],[[["typeargumentabi",3]],["bool",15]],[[["vec",3,["argumentabi","global"]],["argumentabi",3],["global",3],["string",3],["moduleid",3],["vec",3,["typeargumentabi","global"]],["typeargumentabi",3]],["scriptfunctionabi",3]],[[["u8",15],["string",3],["vec",3,["typeargumentabi","global"]],["argumentabi",3],["vec",3,["u8","global"]],["global",3],["vec",3,["argumentabi","global"]],["typeargumentabi",3]],["transactionscriptabi",3]],[[["string",3],["typetag",4]],["argumentabi",3]],[[["string",3]],["typeargumentabi",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typetag",4]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["accountaddress",3]],[[],["accountaddressparseerror",3]],[[]],[[]],[[["accountaddress",3]],["ordering",4]],[[]],[[],[["result",4,["accountaddress"]],["accountaddress",3]]],[[]],[[]],[[["accountaddress",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[],["accountaddress",3]],[[]],[[]],[[],[["accountaddress",3],["accountaddressparseerror",3],["result",4,["accountaddress","accountaddressparseerror"]]]],[[],[["accountaddress",3],["accountaddressparseerror",3],["result",4,["accountaddress","accountaddressparseerror"]]]],[[["str",15]],[["accountaddress",3],["accountaddressparseerror",3],["result",4,["accountaddress","accountaddressparseerror"]]]],[[["str",15]],[["accountaddress",3],["accountaddressparseerror",3],["result",4,["accountaddress","accountaddressparseerror"]]]],[[]],[[],["hashvalue",3]],[[]],[[]],[[]],[[["accountaddress",3]],["bool",15]],[[],["accountaddress",3]],[[["accountaddress",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["accountaddress",3]],[[],["result",4]],[[],["string",3]],[[],["hashvalue",3]],[[],["string",3]],[[],["string",3]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[["string",3]],[["accountaddress",3],["accountaddressparseerror",3],["result",4,["accountaddress","accountaddressparseerror"]]]],[[],["result",4]],[[],[["accountaddress",3],["accountaddressparseerror",3],["result",4,["accountaddress","accountaddressparseerror"]]]],[[["vec",3,["u8","global"]],["u8",15],["global",3]],[["accountaddress",3],["accountaddressparseerror",3],["result",4,["accountaddress","accountaddressparseerror"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,[[],["btreemap",3]],[[]],[[]],[[]],[[]],[[],["accountchangeset",3]],[[],["changeset",3]],[[]],[[]],[[["accountchangeset",3]],["ordering",4]],[[["changeset",3]],["ordering",4]],[[["accountchangeset",3]],["bool",15]],[[["changeset",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[["btreemap",3,["identifier","option"]],["identifier",3],["btreemap",3,["structtag","option"]],["structtag",3],["option",4,["vec"]]],["accountchangeset",3]],[[]],[[]],[[]],[[],[["accountchangeset",3],["btreemap",3,["accountaddress","accountchangeset"]],["accountaddress",3]]],[[],[["btreemap",3,["identifier","option"]],["identifier",3],["option",4,["vec"]]]],[[]],[[],[["btreemap",3,["structtag","option"]],["structtag",3],["option",4,["vec"]]]],[[],["bool",15]],[[],["btreemap",3]],[[]],[[["accountchangeset",3]],["bool",15]],[[["changeset",3]],["bool",15]],[[],["accountchangeset",3]],[[],["changeset",3]],[[["accountchangeset",3]],[["option",4,["ordering"]],["ordering",4]]],[[["changeset",3]],[["option",4,["ordering"]],["ordering",4]]],[[["vec",3,["u8","global"]],["u8",15],["global",3],["identifier",3]],[["result",4,["error"]],["error",3]]],[[["vec",3,["u8","global"]],["u8",15],["global",3],["moduleid",3]],[["result",4,["error"]],["error",3]]],[[["accountchangeset",3],["accountaddress",3]]],[[["vec",3,["u8","global"]],["u8",15],["global",3],["identifier",3]]],[[["vec",3,["u8","global"]],["u8",15],["global",3],["moduleid",3]]],[[["vec",3,["u8","global"]],["u8",15],["global",3],["structtag",3]]],[[["vec",3,["u8","global"]],["u8",15],["global",3],["structtag",3],["accountaddress",3]]],[[["vec",3,["u8","global"]],["u8",15],["global",3],["structtag",3]],[["result",4,["error"]],["error",3]]],[[["vec",3,["u8","global"]],["u8",15],["global",3],["structtag",3],["accountaddress",3]],[["result",4,["error"]],["error",3]]],[[],["btreemap",3]],[[]],[[["accountchangeset",3]],[["result",4,["error"]],["error",3]]],[[["changeset",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["identifier",3]],[["result",4,["error"]],["error",3]]],[[["moduleid",3]],[["result",4,["error"]],["error",3]]],[[["structtag",3]],[["result",4,["error"]],["error",3]]],[[["structtag",3],["accountaddress",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],null,null,null,[[["u64",15],["errordescription",3]],[["result",4,["error"]],["error",3]]],[[["u64",15],["moduleid",3],["errordescription",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["errordescription",3]],[[],["errorcontext",3]],[[],["errormapping",3]],[[]],[[]],[[]],null,null,[[],["errormapping",3]],[[],[["errordescription",3],["result",4,["errordescription"]]]],[[],[["result",4,["errorcontext"]],["errorcontext",3]]],[[],[["result",4,["errormapping"]],["errormapping",3]]],null,[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[],["errormapping",3]],[[["moduleid",3],["u64",15]],[["errorcontext",3],["option",4,["errorcontext"]]]],[[]],[[]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["abstractmemorysize",3]],[[],["gasunits",3]],[[],["internalgasunits",3]],[[],["gasprice",3]],[[],["gasconstants",3]],[[],["costtable",3]],[[],["gascost",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["gasconstants",3]],null,[[],[["result",4,["abstractmemorysize"]],["abstractmemorysize",3]]],[[],[["gasunits",3],["result",4,["gasunits"]]]],[[],[["internalgasunits",3],["result",4,["internalgasunits"]]]],[[],[["result",4,["gasprice"]],["gasprice",3]]],[[],[["result",4,["gasconstants"]],["gasconstants",3]]],[[],[["result",4,["costtable"]],["costtable",3]]],[[],[["result",4,["gascost"]],["gascost",3]]],[[]],[[["abstractmemorysize",3]],["bool",15]],[[["gasunits",3]],["bool",15]],[[["internalgasunits",3]],["bool",15]],[[["gasprice",3]],["bool",15]],[[["gasconstants",3]],["bool",15]],[[["costtable",3]],["bool",15]],[[["gascost",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],null,null,[[]],[[]],[[]],[[]],[[["u8",15]],["gascost",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],null,null,null,null,null,null,[[]],[[["u8",15]],["gascost",3]],null,[[["abstractmemorysize",3]],["bool",15]],[[["gasunits",3]],["bool",15]],[[["internalgasunits",3]],["bool",15]],[[["gasprice",3]],["bool",15]],[[["gasconstants",3]],["bool",15]],[[["costtable",3]],["bool",15]],[[["gascost",3]],["bool",15]],[[]],[[["u64",15]],[["abstractmemorysize",3,["u64"]],["u64",15]]],[[["u64",15]],[["u64",15],["gasunits",3,["u64"]]]],[[["u64",15]],[["u64",15],["internalgasunits",3,["u64"]]]],[[["u64",15]],[["u64",15],["gasprice",3,["u64"]]]],[[["u64",15]],["gascost",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[["u64",15],["internalgasunits",3,["u64"]]],[["u64",15],["gasunits",3,["u64"]]]],[[["u64",15],["gasunits",3,["u64"]]],[["u64",15],["internalgasunits",3,["u64"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["u64",15],["internalgasunits",3,["u64"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[],["identstr",3]],[[],["identstr",3]],[[],["str",15]],[[]],[[],["identstr",3]],[[]],[[]],[[]],[[],["identifier",3]],[[]],[[["identifier",3]],["ordering",4]],[[["identstr",3]],["ordering",4]],[[],["identstr",3]],[[],[["result",4,["identifier"]],["identifier",3]]],[[["identifier",3]],["bool",15]],[[["identstr",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[["identstr",3]],["identifier",3]],[[["str",15]],[["identifier",3],["result",4,["identifier","error"]],["error",3]]],[[["vec",3,["u8","global"]],["u8",15],["global",3]],[["identifier",3],["result",4,["identifier","error"]],["error",3]]],[[]],[[]],[[]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],["string",3]],[[],["bool",15]],[[],["bool",15]],[[["str",15]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["char",15]],["bool",15]],[[],["usize",15]],[[["identifier",3]],["bool",15]],[[["identstr",3]],["bool",15]],[[],[["identifier",3],["result",4,["identifier","error"]],["error",3]]],[[["str",15]],[["result",4,["identstr","error"]],["identstr",3],["error",3]]],[[["identifier",3]],[["option",4,["ordering"]],["ordering",4]]],[[["identstr",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["identstr",3]],[[],["identstr",3]],[[],["result",4]],[[],["hashvalue",3]],[[]],[[],["identifier",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],["accountaddress",3]],[[],["accountaddress",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["typetag",4]],[[],["structtag",3]],[[],["resourcekey",3]],[[],["moduleid",3]],[[]],[[]],[[]],[[]],[[["typetag",4]],["ordering",4]],[[["structtag",3]],["ordering",4]],[[["resourcekey",3]],["ordering",4]],[[["moduleid",3]],["ordering",4]],[[],[["result",4,["typetag"]],["typetag",4]]],[[],[["structtag",3],["result",4,["structtag"]]]],[[],[["resourcekey",3],["result",4,["resourcekey"]]]],[[],[["result",4,["moduleid"]],["moduleid",3]]],[[["typetag",4]],["bool",15]],[[["structtag",3]],["bool",15]],[[["resourcekey",3]],["bool",15]],[[["moduleid",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["structtag",3]],["typetag",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["moduleid",3]],[[],["identstr",3]],null,[[["typetag",4]],["bool",15]],[[["structtag",3]],["bool",15]],[[["resourcekey",3]],["bool",15]],[[["moduleid",3]],["bool",15]],[[["structtag",3],["accountaddress",3]],["resourcekey",3]],[[["identifier",3],["accountaddress",3]],["moduleid",3]],[[["typetag",4]],[["option",4,["ordering"]],["ordering",4]]],[[["structtag",3]],[["option",4,["ordering"]],["ordering",4]]],[[["resourcekey",3]],[["option",4,["ordering"]],["ordering",4]]],[[["moduleid",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["structtag",3]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[],["identifier",3]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],["identifier",3]],[[],["structtag",3]],[[],[["global",3],["vec",3,["typetag","global"]],["typetag",4]]],[[["str",15]],[["result",4,["vec","error"]],["error",3],["vec",3,["string","global"]]]],[[["str",15]],[["result",4,["structtag","error"]],["structtag",3],["error",3]]],[[["str",15]],[["result",4,["transactionargument","error"]],["transactionargument",4],["error",3]]],[[["str",15]],[["error",3],["vec",3,["transactionargument","global"]],["result",4,["vec","error"]]]],[[["str",15]],[["result",4,["typetag","error"]],["error",3],["typetag",4]]],[[["str",15]],[["result",4,["vec","error"]],["vec",3,["typetag","global"]],["error",3]]],null,null,null,null,null,null,[[["moduleid",3]],[["result",4,["option"]],["option",4,["vec"]]]],[[["accountaddress",3],["structtag",3]],[["result",4,["option"]],["option",4,["vec"]]]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["transactionargument",4]],[[],["vecbytes",3]],[[]],[[]],[[],[["vec",3,["vec","global"]],["vec",3,["u8","global"]],["global",3]]],[[],[["transactionargument",4],["result",4,["transactionargument"]]]],[[],[["result",4,["vecbytes"]],["vecbytes",3]]],[[["transactionargument",4]],["bool",15]],[[["vecbytes",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[["vec",3,["vec","global"]],["vec",3,["u8","global"]],["global",3]],["vecbytes",3]],[[]],[[]],[[]],[[]],[[],[["vec",3,["vec","global"]],["vec",3,["u8","global"]],["global",3]]],[[["transactionargument",4]],["bool",15]],[[["vecbytes",3]],["bool",15]],[[],["result",4]],[[],["hashvalue",3]],[[]],[[]],[[],["result",4]],[[["movevalue",4]],[["result",4,["transactionargument","error"]],["transactionargument",4],["error",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["movestruct",4]],[[],["movevalue",4]],[[],["movefieldlayout",3]],[[],["movestructlayout",4]],[[],["movetypelayout",4]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4,["movefieldlayout"]],["movefieldlayout",3]]],[[],[["result",4,["movestructlayout"]],["movestructlayout",4]]],[[],[["movetypelayout",4],["result",4,["movetypelayout"]]]],[[["movestruct",4]],["bool",15]],[[["movevalue",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[["transactionargument",4]],["movevalue",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["vec",3,["movevalue","global"]],["movevalue",4],["global",3]]],[[],[["global",3],["movetypelayout",4],["vec",3,["movetypelayout","global"]]]],[[["movestruct",4]],["bool",15]],[[["movevalue",4]],["bool",15]],[[["vec",3,["movevalue","global"]],["movevalue",4],["global",3]],["movestruct",4]],[[["identifier",3],["movetypelayout",4]],["movefieldlayout",3]],[[["vec",3,["movetypelayout","global"]],["movetypelayout",4],["global",3]],["movestructlayout",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["vec",3,["vec","global"]],["vec",3,["u8","global"]],["global",3]]],[[["movestructlayout",4]],[["error",3],["result",4,["movestruct","error"]],["movestruct",4]]],[[["movetypelayout",4]],[["movevalue",4],["result",4,["movevalue","error"]],["error",3]]],[[],[["vec",3,["u8","global"]],["option",4,["vec"]]]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["accountaddress",3],["vec",3,["accountaddress","global"]],["global",3]],["movevalue",4]],[[["vec",3,["u8","global"]],["u8",15],["global",3]],["movevalue",4]],[[]],[[]],[[]],[[]],[[]],[[["vec",3,["global"]],["global",3]],["movestruct",4]],[[["vec",3,["movefieldlayout","global"]],["movefieldlayout",3],["global",3]],["movestructlayout",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["vmstatus",4]],[[],["keptvmstatus",4]],[[],["abortlocation",4]],[[],["statustype",4]],[[],["statuscode",4]],[[]],[[]],[[]],[[]],[[]],[[["vmstatus",4]],["ordering",4]],[[["keptvmstatus",4]],["ordering",4]],[[["abortlocation",4]],["ordering",4]],[[["statuscode",4]],["ordering",4]],[[],[["result",4,["vmstatus"]],["vmstatus",4]]],[[],[["result",4,["keptvmstatus"]],["keptvmstatus",4]]],[[],[["abortlocation",4],["result",4,["abortlocation"]]]],[[],[["statuscode",4],["result",4,["statuscode"]]]],[[["vmstatus",4]],["bool",15]],[[["keptvmstatus",4]],["bool",15]],[[["abortlocation",4]],["bool",15]],[[["statustype",4]],["bool",15]],[[["statuscode",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],[["statuscode",4],["result",4,["keptvmstatus","statuscode"]],["keptvmstatus",4]]],null,[[],[["option",4,["u64"]],["u64",15]]],[[["vmstatus",4]],["bool",15]],[[["keptvmstatus",4]],["bool",15]],[[["abortlocation",4]],["bool",15]],[[["vmstatus",4]],[["option",4,["ordering"]],["ordering",4]]],[[["keptvmstatus",4]],[["option",4,["ordering"]],["ordering",4]]],[[["abortlocation",4]],[["option",4,["ordering"]],["ordering",4]]],[[["statuscode",4]],[["option",4,["ordering"]],["ordering",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["statuscode",4]],[[],["statustype",4]],[[],["statustype",4]],null,[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u64",15]],[["result",4,["statuscode"]],["statuscode",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["abortlocation",4]],[[],["abortlocation",4]],[[],["abortlocation",4]],null,null,null,null,null,null,null,null,[[["currency",4]],["transactionbuilder",3]],[[["accountaddress",3]],["transactionbuilder",3]],[[["u64",15],["u8",15],["vec",3,["u8"]],["accountaddress",3]],["transactionbuilder",3]],[[["accountaddress",3],["vec",3,["u8"]],["u8",15]],["transactionbuilder",3]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["rawtransaction",3]],[[["currency",4]],["transactionbuilder",3]],[[["u64",15],["currency",4],["accountaddress",3]],["transactionbuilder",3]],[[["currency",4],["accountaddress",3],["u64",15]],["transactionbuilder",3]],[[["chainid",3]]],[[["changeset",3]],["transactionbuilder",3]],[[],["transactionfactory",3]],[[],["currency",4]],[[]],[[]],[[["currency",4]],["ordering",4]],[[["u64",15],["bool",15],["currency",4],["authenticationkey",3]],["transactionbuilder",3]],[[["u64",15],["authenticationkey",3],["currency",4],["str",15],["bool",15]],["transactionbuilder",3]],[[["u64",15],["authenticationkey",3],["currency",4],["str",15],["bool",15]],["transactionbuilder",3]],[[],["transactionbuilder",3]],[[],["result",4]],[[["str",15]],["bool",15]],[[["string",3]],["bool",15]],[[["currency",4]],["bool",15]],[[],["bool",15]],[[["u64",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["into",8,["string"]],["string",3]]],[[["u64",15]]],[[]],[[]],[[]],[[]],[[]],[[["u64",15]]],[[]],[[["vec",3,["u8"]],["u8",15]],["transactionbuilder",3]],[[["u64",15],["into",8,["vec"]],["vec",3,["u8"]],["accountaddress",3]]],[[["chainid",3]]],[[["currency",4]],[["option",4,["ordering"]],["ordering",4]]],[[["transactionpayload",4]],["transactionbuilder",3]],[[["currency",4],["accountaddress",3],["u64",15]],["transactionbuilder",3]],[[["u64",15],["u8",15],["currency",4],["accountaddress",3],["vec",3,["u8"]]],["transactionbuilder",3]],[[["currency",4],["u64",15]],["transactionbuilder",3]],[[["vec",3,["u8"]],["u8",15]],["transactionbuilder",3]],[[["vec",3,["u8"]],["u8",15]],["transactionbuilder",3]],[[["u64",15],["u8",15],["vec",3,["u8"]],["accountaddress",3]],["transactionbuilder",3]],[[["accountaddress",3],["vec",3,["u8"]],["u8",15]],["transactionbuilder",3]],[[["authenticationkey",3]],["transactionbuilder",3]],[[["authenticationkey",3]],["transactionbuilder",3]],[[["accountaddress",3],["authenticationkey",3]],["transactionbuilder",3]],[[["vec",3,["u8"]],["u8",15]],["transactionbuilder",3]],[[["script",3]],["transactionbuilder",3]],[[["scriptfunction",3]],["transactionbuilder",3]],[[["accountaddress",3]]],[[["u64",15]]],[[],["result",4]],null,[[],["hashvalue",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typetag",4]],[[["u64",15],["vec",3,["u8"]],["u8",15]],["transactionbuilder",3]],[[["u64",15]],["transactionbuilder",3]],[[["currency",4],["u64",15]],["transactionbuilder",3]],[[]],[[]],[[]],[[]],[[["chainid",3]]],[[["u64",15]]],[[["currency",4]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["scriptcall",4]],[[],["scriptfunctioncall",4]],[[]],[[]],[[["script",3]],[["option",4,["scriptcall"]],["scriptcall",4]]],[[["transactionpayload",4]],[["option",4,["scriptfunctioncall"]],["scriptfunctioncall",4]]],[[],["script",3]],[[],["transactionpayload",4]],[[["typetag",4]],["script",3]],[[["typetag",4]],["transactionpayload",4]],[[["accountaddress",3]],["script",3]],[[["accountaddress",3]],["transactionpayload",4]],[[["u64",15],["vec",3,["u8","global"]],["u8",15],["global",3],["accountaddress",3]],["script",3]],[[["u64",15],["vec",3,["u8","global"]],["u8",15],["global",3],["accountaddress",3]],["transactionpayload",4]],[[["vec",3,["u8","global"]],["u8",15],["global",3],["accountaddress",3]],["transactionpayload",4]],[[["u64",15],["accountaddress",3],["typetag",4]],["script",3]],[[["typetag",4]],["script",3]],[[["typetag",4]],["transactionpayload",4]],[[["u64",15],["typetag",4],["accountaddress",3]],["transactionpayload",4]],[[["accountaddress",3],["typetag",4]],["script",3]],[[["accountaddress",3],["u64",15],["typetag",4]],["transactionpayload",4]],[[["u64",15],["vec",3,["u8","global"]],["u8",15],["typetag",4],["global",3],["bool",15],["accountaddress",3]],["script",3]],[[["u64",15],["vec",3,["u8","global"]],["u8",15],["typetag",4],["global",3],["bool",15],["accountaddress",3]],["transactionpayload",4]],[[["u64",15],["u8",15],["typetag",4],["accountaddress",3],["vec",3,["u8","global"]],["global",3],["bool",15]],["script",3]],[[["u64",15],["u8",15],["typetag",4],["accountaddress",3],["vec",3,["u8","global"]],["global",3],["bool",15]],["transactionpayload",4]],[[["u64",15],["u8",15],["typetag",4],["accountaddress",3],["vec",3,["u8","global"]],["global",3],["bool",15]],["script",3]],[[["u64",15],["u8",15],["typetag",4],["accountaddress",3],["vec",3,["u8","global"]],["global",3],["bool",15]],["transactionpayload",4]],[[],["script",3]],[[],["transactionpayload",4]],[[["u64",15],["vec",3,["u8","global"]],["u8",15],["global",3],["accountaddress",3]],["script",3]],[[["u64",15],["vec",3,["u8","global"]],["u8",15],["global",3],["accountaddress",3]],["transactionpayload",4]],[[["u64",15],["vec",3,["u8","global"]],["u8",15],["global",3],["accountaddress",3]],["script",3]],[[["u64",15],["vec",3,["u8","global"]],["u8",15],["global",3],["accountaddress",3]],["transactionpayload",4]],[[],["transactionpayload",4]],[[["u64",15]],["transactionpayload",4]],[[["u64",15],["accountaddress",3]],["script",3]],[[["u64",15],["accountaddress",3]],["transactionpayload",4]],[[["accountaddress",3],["typetag",4]],["transactionpayload",4]],[[["u64",15]],["transactionpayload",4]],[[["u64",15]],["transactionpayload",4]],[[["u64",15],["vec",3,["u8","global"]],["u8",15],["typetag",4],["global",3]],["transactionpayload",4]],[[["u64",15],["u8",15],["typetag",4],["accountaddress",3],["vec",3,["u8","global"]],["global",3]],["script",3]],[[["u64",15],["u8",15],["typetag",4],["accountaddress",3],["vec",3,["u8","global"]],["global",3]],["transactionpayload",4]],[[["u64",15],["typetag",4]],["script",3]],[[["u64",15],["typetag",4]],["transactionpayload",4]],[[["vec",3,["u8","global"]],["u8",15],["global",3]],["script",3]],[[["vec",3,["u8","global"]],["u8",15],["global",3]],["transactionpayload",4]],[[["vec",3,["u8","global"]],["u8",15],["global",3],["accountaddress",3]],["script",3]],[[["vec",3,["u8","global"]],["u8",15],["global",3],["accountaddress",3]],["transactionpayload",4]],[[["u64",15],["vec",3,["u8","global"]],["u8",15],["global",3],["accountaddress",3]],["script",3]],[[["u64",15],["vec",3,["u8","global"]],["u8",15],["global",3],["accountaddress",3]],["transactionpayload",4]],[[["vec",3,["u8","global"]],["u8",15],["global",3],["accountaddress",3]],["transactionpayload",4]],[[["vec",3,["u8","global"]],["u8",15],["global",3]],["script",3]],[[["vec",3,["u8","global"]],["u8",15],["global",3]],["transactionpayload",4]],[[["u64",15],["vec",3,["u8","global"]],["u8",15],["global",3]],["script",3]],[[["u64",15],["vec",3,["u8","global"]],["u8",15],["global",3]],["transactionpayload",4]],[[["u64",15],["vec",3,["u8","global"]],["u8",15],["global",3]],["script",3]],[[["u64",15],["vec",3,["u8","global"]],["u8",15],["global",3]],["transactionpayload",4]],[[["vec",3,["u8","global"]],["u8",15],["global",3],["accountaddress",3]],["script",3]],[[["vec",3,["u8","global"]],["u8",15],["global",3],["accountaddress",3]],["transactionpayload",4]],[[["vec",3,["u8","global"]],["u8",15],["global",3]],["script",3]],[[["vec",3,["u8","global"]],["u8",15],["global",3]],["transactionpayload",4]],[[["vec",3,["u8","global"]],["u8",15],["global",3]],["script",3]],[[["vec",3,["u8","global"]],["u8",15],["global",3]],["transactionpayload",4]],[[["u64",15]],["transactionpayload",4]],[[["vec",3,["u8","global"]],["u8",15],["global",3],["accountaddress",3]],["script",3]],[[["vec",3,["u8","global"]],["u8",15],["global",3],["accountaddress",3]],["transactionpayload",4]],[[["vec",3,["u8","global"]],["u8",15],["global",3],["accountaddress",3]],["script",3]],[[["vec",3,["u8","global"]],["u8",15],["global",3],["accountaddress",3]],["transactionpayload",4]],[[["u64",15],["vec",3,["u8","global"]],["u8",15],["global",3],["accountaddress",3]],["script",3]],[[["u64",15],["vec",3,["u8","global"]],["u8",15],["global",3],["accountaddress",3]],["transactionpayload",4]],[[["u64",15],["typetag",4],["accountaddress",3]],["script",3]],[[["u64",15],["typetag",4],["accountaddress",3]],["transactionpayload",4]],[[["u64",15],["accountaddress",3]],["script",3]],[[["u64",15],["accountaddress",3]],["transactionpayload",4]],[[["u64",15],["vec",3,["u8","global"]],["u8",15],["global",3]],["transactionpayload",4]],[[["u64",15]],["script",3]],[[["u64",15]],["transactionpayload",4]],[[["u64",15]],["script",3]],[[["u64",15]],["transactionpayload",4]],[[["u64",15],["typetag",4]],["script",3]],[[["u64",15],["typetag",4]],["transactionpayload",4]],[[["bool",15],["typetag",4]],["script",3]],[[["bool",15],["typetag",4]],["transactionpayload",4]],[[["scriptcall",4]],["bool",15]],[[["scriptfunctioncall",4]],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[],["str",15]],[[["scriptcall",4]],["bool",15]],[[["scriptfunctioncall",4]],["bool",15]],[[["scriptcall",4]],[["option",4,["ordering"]],["ordering",4]]],[[["scriptfunctioncall",4]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["accountaddress",3]],[[],["authenticationkey",3]],[[],["authenticationkey",3]],null,null,[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["ed25519privatekey",3]]],[[["ed25519privatekey",3]]],[[]],[[]],[[]],[[]],null,null,null,null,[[["accountkey",3],["u64",15],["accountaddress",3],["into",8,["accountkey"]]]],null,null,[[],["ed25519privatekey",3]],[[],["ed25519privatekey",3]],null,null,null,[[],["ed25519publickey",3]],[[],["ed25519publickey",3]],[[["into",8,["accountkey"]],["accountkey",3]],["accountkey",3]],[[],["u64",15]],[[],["u64",15]],null,[[["vec",3],["transactionbuilder",3]],["signedtransaction",3]],[[["rawtransaction",3]],["signedtransaction",3]],[[["transactionbuilder",3]],["signedtransaction",3]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,[[]],[[]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["accesspath",3]],[[],["path",4]],[[]],[[]],[[["accesspath",3]],["ordering",4]],[[["path",4]],["ordering",4]],[[["moduleid",3]],["accesspath",3]],[[],[["accesspath",3],["result",4,["accesspath"]]]],[[],[["path",4],["result",4,["path"]]]],[[["accesspath",3]],["bool",15]],[[["path",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[["moduleid",3]],["accesspath",3]],[[]],[[],["path",4]],[[],[["option",4,["structtag"]],["structtag",3]]],[[]],[[]],[[]],[[]],[[["accesspath",3]],["bool",15]],[[["path",4]],["bool",15]],[[["vec",3,["u8","global"]],["u8",15],["global",3],["accountaddress",3]],["accesspath",3]],[[["accesspath",3]],[["option",4,["ordering"]],["ordering",4]]],[[["path",4]],[["option",4,["ordering"]],["ordering",4]]],null,[[["resourcekey",3]],["accesspath",3]],[[["structtag",3]],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[["vec",3]],[["result",4,["path"]],["path",4]]],[[],[["path",4],["result",4,["path"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,[[["publickey",3]],["accountaddress",3]],[[["ed25519publickey",3]],["accountaddress",3]],[[],["hashvalue",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["typetag",4]],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[["typetag",4]],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[["typetag",4]],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[["typetag",4]],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],["accountaddress",3]],[[["str",15]],["bool",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["str",15]],[[],["eventhandle",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["eventhandle",3]],[[],["eventhandle",3]],[[],["chainid",3]],[[],["accountsequenceinfo",4]],[[],["crsnresource",3]],[[],["currencyinforesource",3]],[[],["limit",3]],[[],["vaspdomains",3]],[[],["vaspdomain",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],[[["typetag",4]],[["string",3],["option",4,["string"]]]],[[],["u64",15]],[[],["eventhandle",3]],[[]],null,[[["u64",15]],["u64",15]],[[],["accountaddress",3]],[[],["identstr",3]],[[],["identstr",3]],[[],["identstr",3]],[[],["identstr",3]],[[],["identstr",3]],[[],["identstr",3]],[[],["identstr",3]],[[],["identstr",3]],[[],["identstr",3]],[[["typetag",4]],[["identifier",3],["result",4,["identifier","error"]],["error",3]]],[[],["u64",15]],[[],[["result",4,["admintransactionevent"]],["admintransactionevent",3]]],[[],[["result",4,["baseurlrotationevent"]],["baseurlrotationevent",3]]],[[],[["burnevent",3],["result",4,["burnevent"]]]],[[],[["result",4,["cancelburnevent"]],["cancelburnevent",3]]],[[],[["compliancekeyrotationevent",3],["result",4,["compliancekeyrotationevent"]]]],[[],[["result",4,["createaccountevent"]],["createaccountevent",3]]],[[],[["toxdxexchangerateupdateevent",3],["result",4,["toxdxexchangerateupdateevent"]]]],[[],[["result",4,["forceshiftevent"]],["forceshiftevent",3]]],[[],[["mintevent",3],["result",4,["mintevent"]]]],[[],[["newblockevent",3],["result",4,["newblockevent"]]]],[[],[["result",4,["newepochevent"]],["newepochevent",3]]],[[],[["preburnevent",3],["result",4,["preburnevent"]]]],[[],[["receivedmintevent",3],["result",4,["receivedmintevent"]]]],[[],[["receivedpaymentevent",3],["result",4,["receivedpaymentevent"]]]],[[],[["result",4,["sentpaymentevent"]],["sentpaymentevent",3]]],[[],[["accountresource",3],["result",4,["accountresource"]]]],[[],[["balanceresource",3],["result",4,["balanceresource"]]]],[[],[["result",4,["chainidresource"]],["chainidresource",3]]],[[],[["result",4,["crsnresource"]],["crsnresource",3]]],[[],[["result",4,["currencyinforesource"]],["currencyinforesource",3]]],[[],[["designateddealer",3],["result",4,["designateddealer"]]]],[[],[["designateddealerpreburns",4],["result",4,["designateddealerpreburns"]]]],[[],[["result",4,["credential"]],["credential",3]]],[[],[["result",4,["limit"]],["limit",3]]],[[],[["result",4,["freezingbit"]],["freezingbit",3]]],[[],[["result",4,["keyrotationcapabilityresource"]],["keyrotationcapabilityresource",3]]],[[],[["preburnresource",3],["result",4,["preburnresource"]]]],[[],[["preburnqueueresource",3],["result",4,["preburnqueueresource"]]]],[[],[["result",4,["preburnwithmetadataresource"]],["preburnwithmetadataresource",3]]],[[],[["result",4,["accountrole"]],["accountrole",4]]],[[],[["result",4,["roleid"]],["roleid",3]]],[[],[["parentvasp",3],["result",4,["parentvasp"]]]],[[],[["childvasp",3],["result",4,["childvasp"]]]],[[],[["vaspdomains",3],["result",4,["vaspdomains"]]]],[[],[["result",4,["vaspdomain"]],["vaspdomain",3]]],[[],[["vaspdomainevent",3],["result",4,["vaspdomainevent"]]]],[[],[["result",4,["vaspdomainmanager"]],["vaspdomainmanager",3]]],[[],[["result",4,["withdrawcapabilityresource"]],["withdrawcapabilityresource",3]]],[[],["accountaddress",3]],[[],["accountaddress",3]],[[],["diemidvaspdomainidentifier",3]],[[],["vaspdomain",3]],null,[[]],null,[[],["u64",15]],[[["accountsequenceinfo",4]],["bool",15]],[[["limit",3]],["bool",15]],[[["vaspdomains",3]],["bool",15]],[[["vaspdomain",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["eventkey",3]],[[],["eventkey",3]],null,[[],["f32",15]],[[],["eventhandle",3]],[[],["u64",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],[["identifier",3],["result",4,["identifier","error"]],["error",3]]],[[],[["diemidvaspdomainidentifier",3],["global",3],["vec",3,["diemidvaspdomainidentifier","global"]]]],[[],["bool",15]],[[],["bool",15]],[[]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[]],null,[[],["u64",15]],[[],["u64",15]],[[],["eventhandle",3]],[[["accountsequenceinfo",4]],["bool",15]],[[["limit",3]],["bool",15]],[[["vaspdomains",3]],["bool",15]],[[["vaspdomain",3]],["bool",15]],[[["u64",15],["vec",3,["accountaddress","global"]],["global",3],["accountaddress",3]],["newblockevent",3]],[[["u64",15],["vec",3,["u8","global"]],["u8",15],["global",3],["identifier",3],["accountaddress",3]],["sentpaymentevent",3]],[[["u64",15],["u8",15],["withdrawcapabilityresource",3],["option",4,["keyrotationcapabilityresource"]],["vec",3,["u8","global"]],["global",3],["option",4,["withdrawcapabilityresource"]],["keyrotationcapabilityresource",3],["eventhandle",3]],["accountresource",3]],[[["u64",15]],["balanceresource",3]],[[["u64",15],["bool",15],["identifier",3],["eventhandle",3],["u128",15]],["currencyinforesource",3]],[[["u64",15]],["preburnresource",3]],[[["vec",3,["u8","global"]],["u8",15],["global",3],["preburnresource",3]],["preburnwithmetadataresource",3]],[[]],[[]],[[],["f32",15]],[[],["u64",15]],[[],["accountaddress",3]],[[],["preburnresource",3]],[[],["accountaddress",3]],[[],["accountaddress",3]],[[],["accountaddress",3]],[[],["eventhandle",3]],[[],["u64",15]],[[]],[[],["u64",15]],[[],["accountaddress",3]],[[],["eventhandle",3]],[[],["eventhandle",3]],[[],["accountaddress",3]],[[],["bool",15]],[[],["accountaddress",3]],[[["identifier",3]],["accesspath",3]],null,[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["accountaddress",3]],[[],["eventhandle",3]],[[],["u64",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["u64",15]],[[],["u64",15]],[[["identifier",3]],["structtag",3]],[[["typetag",4]],["structtag",3]],[[["typetag",4]],["structtag",3]],[[["typetag",4]],["structtag",3]],[[["typetag",4]],["structtag",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["accountaddress",3]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u128",15]],[[],["accountaddress",3]],[[],["result",4]],[[["contractevent",4]],[["result",4,["admintransactionevent","error"]],["error",3],["admintransactionevent",3]]],[[],["result",4]],[[["contractevent",4]],[["error",3],["result",4,["baseurlrotationevent","error"]],["baseurlrotationevent",3]]],[[],["result",4]],[[["contractevent",4]],[["result",4,["burnevent","error"]],["burnevent",3],["error",3]]],[[["contractevent",4]],[["result",4,["cancelburnevent","error"]],["cancelburnevent",3],["error",3]]],[[],["result",4]],[[["contractevent",4]],[["error",3],["compliancekeyrotationevent",3],["result",4,["compliancekeyrotationevent","error"]]]],[[],["result",4]],[[],["result",4]],[[["contractevent",4]],[["error",3],["createaccountevent",3],["result",4,["createaccountevent","error"]]]],[[],["result",4]],[[["contractevent",4]],[["result",4,["toxdxexchangerateupdateevent","error"]],["toxdxexchangerateupdateevent",3],["error",3]]],[[],["result",4]],[[],["result",4]],[[["contractevent",4]],[["error",3],["result",4,["mintevent","error"]],["mintevent",3]]],[[["contractevent",4]],[["newblockevent",3],["result",4,["newblockevent","error"]],["error",3]]],[[],["result",4]],[[["contractevent",4]],[["result",4,["newepochevent","error"]],["newepochevent",3],["error",3]]],[[],["result",4]],[[["contractevent",4]],[["preburnevent",3],["result",4,["preburnevent","error"]],["error",3]]],[[],["result",4]],[[],["result",4]],[[["contractevent",4]],[["receivedmintevent",3],["result",4,["receivedmintevent","error"]],["error",3]]],[[["contractevent",4]],[["receivedpaymentevent",3],["error",3],["result",4,["receivedpaymentevent","error"]]]],[[],["result",4]],[[["contractevent",4]],[["error",3],["result",4,["sentpaymentevent","error"]],["sentpaymentevent",3]]],[[],["result",4]],[[],["result",4]],[[["accountstateblob",3]],[["error",3],["result",4,["accountresource","error"]],["accountresource",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["contractevent",4]],[["result",4,["vaspdomainevent","error"]],["vaspdomainevent",3],["error",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["admintransactionevent","error"]],["error",3],["admintransactionevent",3]]],[[],[["error",3],["result",4,["baseurlrotationevent","error"]],["baseurlrotationevent",3]]],[[],[["result",4,["burnevent","error"]],["burnevent",3],["error",3]]],[[],[["result",4,["cancelburnevent","error"]],["cancelburnevent",3],["error",3]]],[[],[["error",3],["compliancekeyrotationevent",3],["result",4,["compliancekeyrotationevent","error"]]]],[[],[["error",3],["createaccountevent",3],["result",4,["createaccountevent","error"]]]],[[],[["result",4,["toxdxexchangerateupdateevent","error"]],["toxdxexchangerateupdateevent",3],["error",3]]],[[],[["result",4,["forceshiftevent","error"]],["forceshiftevent",3],["error",3]]],[[],[["error",3],["result",4,["mintevent","error"]],["mintevent",3]]],[[],[["newblockevent",3],["result",4,["newblockevent","error"]],["error",3]]],[[],[["result",4,["newepochevent","error"]],["newepochevent",3],["error",3]]],[[],[["preburnevent",3],["result",4,["preburnevent","error"]],["error",3]]],[[],[["receivedmintevent",3],["result",4,["receivedmintevent","error"]],["error",3]]],[[],[["receivedpaymentevent",3],["error",3],["result",4,["receivedpaymentevent","error"]]]],[[],[["error",3],["result",4,["sentpaymentevent","error"]],["sentpaymentevent",3]]],[[],[["error",3],["currencyinforesource",3],["result",4,["currencyinforesource","error"]]]],[[],[["result",4,["vaspdomainevent","error"]],["vaspdomainevent",3],["error",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["global",3],["vec",3,["typetag","global"]],["typetag",4]]],[[],[["global",3],["vec",3,["typetag","global"]],["typetag",4]]],[[],[["global",3],["vec",3,["typetag","global"]],["typetag",4]]],[[],[["global",3],["vec",3,["typetag","global"]],["typetag",4]]],[[["identifier",3]],["typetag",4]],[[],["accountaddress",3]],[[],["eventhandle",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["typetag",4]],[[],["typetag",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15]],["bool",15]],[[["typetag",4]],[["string",3],["option",4,["string"]]]],null,[[["typetag",4]],[["identifier",3],["result",4,["identifier","error"]],["error",3]]],null,null,[[],["accountaddress",3]],null,[[["str",15]],[["identifier",3],["result",4,["identifier","error"]],["error",3]]],[[],["accountaddress",3]],[[],["accountaddress",3]],[[],["accountaddress",3]],[[["identifier",3]],["typetag",4]],[[],["accountaddress",3]],[[],["typetag",4]],[[],["typetag",4]],null,null,null,[[],["accountaddress",3]],[[],["accountaddress",3]],[[],["accountaddress",3]],[[],["accountaddress",3]],[[],["accountaddress",3]],null,null,null,null,null,[[["typetag",4]],[["string",3],["option",4,["string"]]]],[[],["typetag",4]],[[],["typetag",4]],null,null,null,null,null,[[["str",15]],["bool",15]],[[["typetag",4]],[["identifier",3],["result",4,["identifier","error"]],["error",3]]],[[["str",15]],[["identifier",3],["result",4,["identifier","error"]],["error",3]]],[[["identifier",3]],["typetag",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["accountstate",3]],[[],[["accountstate",3],["result",4,["accountstate"]]]],[[["accountstate",3]],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[],[["vec",3],["option",4,["vec"]]]],[[],[["result",4,["option","error"]],["option",4,["accountaddress"]],["error",3]]],[[],[["option",4,["accountresource"]],["result",4,["option","error"]],["error",3]]],[[],[["error",3],["result",4,["option","error"]],["option",4,["accountrole"]]]],[[],[["btreemap",3,["identifier","balanceresource"]],["result",4,["btreemap","error"]],["error",3]]],[[],[["error",3],["result",4,["option","error"]],["option",4,["chainidresource"]]]],[[],[["result",4,["option","error"]],["option",4],["error",3]]],[[],[["result",4,["option","error"]],["option",4,["configurationresource"]],["error",3]]],[[],[["option",4,["crsnresource"]],["result",4,["option","error"]],["error",3]]],[[],[["result",4,["option","error"]],["option",4,["diemblockresource"]],["error",3]]],[[],[["result",4,["option","error"]],["option",4,["diemtimestampresource"]],["error",3]]],[[],[["error",3],["result",4,["option","error"]],["option",4,["diemversion"]]]],[[],[["error",3],["result",4,["option","error"]],["option",4,["freezingbit"]]]],[[]],[[],[["result",4,["btreemap","error"]],["btreemap",3,["identifier","preburnresource"]],["error",3]]],[[],[["result",4,["btreemap","error"]],["btreemap",3,["identifier","preburnqueueresource"]],["error",3]]],[[],[["result",4,["vec","error"]],["error",3],["vec",3,["currencyinforesource","global"]]]],[[],[["result",4,["option","error"]],["option",4],["error",3]]],[[],[["result",4,["option","error"]],["option",4],["error",3]]],[[]],[[]],[[],[["error",3],["result",4,["option","error"]],["option",4,["validatorconfigresource"]]]],[[],[["option",4,["validatoroperatorconfigresource"]],["error",3],["result",4,["option","error"]]]],[[],[["option",4,["validatorset"]],["result",4,["option","error"]],["error",3]]],[[],[["error",3],["option",4,["vmpublishingoption"]],["result",4,["option","error"]]]],[[["vec",3,["u8","global"]],["u8",15],["global",3]],[["vec",3,["u8","global"]],["option",4,["vec"]]]],[[]],[[]],[[]],[[["accountstate",3]],["bool",15]],[[],[["vec",3,["u8","global"]],["option",4,["vec"]]]],[[],["result",4]],[[],["hashvalue",3]],[[],[["accountstate",3],["result",4,["accountstate","error"]],["error",3]]],[[["accountstateblob",3]],[["accountstate",3],["result",4,["accountstate","error"]],["error",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["accountstateblob",3]],[[],["accountstateblobhasher",3]],[[],["accountstatewithproof",3]],[[],["accountstateschunkwithproof",3]],[[]],[[]],[[]],[[]],[[],["accountstateblobhasher",3]],null,[[],[["accountstateblob",3],["result",4,["accountstateblob"]]]],[[],[["result",4,["accountstatewithproof"]],["accountstatewithproof",3]]],[[],[["accountstateschunkwithproof",3],["result",4,["accountstateschunkwithproof"]]]],[[]],[[]],[[["accountstateblob",3]],["bool",15]],[[["accountstatewithproof",3]],["bool",15]],[[["accountstateschunkwithproof",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["hashvalue",3]],null,null,[[],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[["vec",3,["u8","global"]],["u8",15],["global",3]],["accountstateblob",3]],[[]],[[]],[[]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],null,null,[[["accountstateblob",3]],["bool",15]],[[["accountstatewithproof",3]],["bool",15]],[[["accountstateschunkwithproof",3]],["bool",15]],[[["u64",15],["accountstateproof",3],["option",4,["accountstateblob"]],["accountstateblob",3]],["accountstatewithproof",3]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[["accountstate",3]],[["error",3],["accountstateblob",3],["result",4,["accountstateblob","error"]]]],[[],["result",4]],[[],[["error",3],["accountstateblob",3],["result",4,["accountstateblob","error"]]]],[[],["result",4]],[[["accountstatewithproofview",3]],[["accountstatewithproof",3,["transactioninfo"]],["result",4,["accountstatewithproof"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[["u64",15],["accountaddress",3],["ledgerinfo",3]],[["result",4,["error"]],["error",3]]],null,[[]],[[]],[[]],[[]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[["u64",15]]],[[],["blockinfo",3]],[[]],[[],[["blockinfo",3],["result",4,["blockinfo"]]]],[[],["blockinfo",3]],[[],["u64",15]],[[["blockinfo",3]],["bool",15]],[[],["bool",15]],[[],["hashvalue",3]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[["hashvalue",3],["validatorset",3]],["blockinfo",3]],[[],["bool",15]],[[],["hashvalue",3]],[[]],[[],["bool",15]],[[["blockinfo",3]],["bool",15]],[[["option",4,["validatorset"]],["validatorset",3]],["blockinfo",3]],[[["blockinfo",3]],["bool",15]],[[["u64",15],["hashvalue",3],["option",4,["epochstate"]],["epochstate",3]],["blockinfo",3]],[[],["u64",15]],[[],[["option",4,["epochstate"]],["epochstate",3]]],[[["u64",15]],["blockinfo",3]],[[],["u64",15]],[[],["result",4]],[[],["hashvalue",3]],[[],["u64",15]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["u64",15]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["blockmetadata",3]],[[],["newblockevent",3]],[[]],[[]],[[],[["blockmetadata",3],["result",4,["blockmetadata"]]]],[[],[["diemblockresource",3],["result",4,["diemblockresource"]]]],[[],[["result",4,["newblockevent"]],["newblockevent",3]]],[[["blockmetadata",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[],["u64",15]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[["blockmetadata",3]],["bool",15]],[[["u64",15],["hashvalue",3],["vec",3,["accountaddress","global"]],["global",3],["accountaddress",3]],["blockmetadata",3]],[[["u64",15],["vec",3,["accountaddress","global"]],["global",3],["accountaddress",3]],["newblockevent",3]],[[],["eventkey",3]],[[],["eventhandle",3]],[[],["vec",3]],[[],["accountaddress",3]],[[],["accountaddress",3]],[[],["u64",15]],[[],["u64",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["u64",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["global",3],["vec",3,["accountaddress","global"]],["accountaddress",3]]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["namedchain",4]],[[],["chainid",3]],[[]],[[]],[[],["chainid",3]],[[],[["result",4,["chainid"]],["chainid",3]]],[[],[["chainid",3],["result",4,["chainid"]]]],[[["chainid",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[["chainid",3]],[["namedchain",4],["string",3],["result",4,["namedchain","string"]]]],[[["str",15]],[["result",4,["chainid","error"]],["chainid",3],["error",3]]],[[]],[[],["u8",15]],[[],["u8",15]],[[]],[[]],[[["chainid",3]],["bool",15]],[[["u8",15]],["chainid",3]],[[],["result",4]],[[],["chainid",3]],[[],["hashvalue",3]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["contractevent",4]],[[],["contracteventhasher",3]],[[],["contracteventv0",3]],[[],["contracteventv0hasher",3]],[[],["eventwithproof",3]],[[],["eventbyversionwithproof",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["contracteventhasher",3]],[[],["contracteventv0hasher",3]],null,[[]],[[],[["result",4,["contractevent"]],["contractevent",4]]],[[],[["result",4,["contracteventv0"]],["contracteventv0",3]]],[[],[["eventwithproof",3],["result",4,["eventwithproof"]]]],[[],[["result",4,["eventbyversionwithproof"]],["eventbyversionwithproof",3]]],[[["contractevent",4]],["bool",15]],[[["contracteventv0",3]],["bool",15]],[[["eventwithproof",3]],["bool",15]],[[["eventbyversionwithproof",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[]],null,[[],["hashvalue",3]],[[],["hashvalue",3]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["eventkey",3]],null,[[["contractevent",4]],["bool",15]],[[["contracteventv0",3]],["bool",15]],[[["eventwithproof",3]],["bool",15]],[[["eventbyversionwithproof",3]],["bool",15]],[[["u64",15],["vec",3,["u8","global"]],["u8",15],["typetag",4],["eventkey",3],["global",3]],["contractevent",4]],[[["u64",15],["vec",3,["u8","global"]],["u8",15],["typetag",4],["eventkey",3],["global",3]],["contracteventv0",3]],[[["u64",15],["eventproof",3],["contractevent",4]],["eventwithproof",3]],[[["eventwithproof",3],["option",4,["eventwithproof"]]],["eventbyversionwithproof",3]],null,[[]],[[]],[[],["u64",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["eventwithproofview",3]],[["result",4,["eventwithproof","error"]],["eventwithproof",3,["transactioninfo"]],["error",3]]],[[],["result",4]],[[["eventbyversionwithproofview",3]],[["eventbyversionwithproof",3,["transactioninfo"]],["result",4,["eventbyversionwithproof"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typetag",4]],[[]],[[]],null,[[["eventkey",3],["u64",15],["ledgerinfo",3]],[["result",4,["error"]],["error",3]]],[[["eventkey",3],["u64",15],["option",4,["u64"]],["ledgerinfo",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],null,null,null,null,null,null,null,[[],["str",15]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["diemid",3]],[[],["diemiduseridentifier",3]],[[],["diemidvaspdomainidentifier",3]],[[],["diemidparseerror",3]],[[]],[[]],[[]],[[]],[[],[["result",4,["diemiduseridentifier"]],["diemiduseridentifier",3]]],[[],[["result",4,["diemidvaspdomainidentifier"]],["diemidvaspdomainidentifier",3]]],[[["diemid",3]],["bool",15]],[[["diemiduseridentifier",3]],["bool",15]],[[["diemidvaspdomainidentifier",3]],["bool",15]],[[["diemidparseerror",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[["str",15]],[["result",4,["diemid","diemidparseerror"]],["diemid",3],["diemidparseerror",3]]],[[]],[[]],[[]],[[]],[[["diemid",3]],["bool",15]],[[["diemiduseridentifier",3]],["bool",15]],[[["diemidvaspdomainidentifier",3]],["bool",15]],[[["diemidparseerror",3]],["bool",15]],[[["diemidvaspdomainidentifier",3],["diemiduseridentifier",3]],["diemid",3]],[[["str",15]],[["result",4,["diemiduseridentifier","diemidparseerror"]],["diemidparseerror",3],["diemiduseridentifier",3]]],[[["str",15]],[["diemidparseerror",3],["result",4,["diemidvaspdomainidentifier","diemidparseerror"]],["diemidvaspdomainidentifier",3]]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["diemiduseridentifier",3]],[[],["diemidvaspdomainidentifier",3]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[],["diemtimestamp",3]],[[]],[[],[["diemtimestampresource",3],["result",4,["diemtimestampresource"]]]],[[],[["diemtimestamp",3],["result",4,["diemtimestamp"]]]],null,[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,[[]],[[]],[[]],[[],["epochchangeproof",3]],[[]],[[],[["result",4,["epochchangeproof"]],["epochchangeproof",3]]],[[],[["u64",15],["result",4,["u64","error"]],["error",3]]],[[["u64",15]],["bool",15]],[[["epochchangeproof",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[["ledgerinfo",3]],["bool",15]],null,null,[[["epochchangeproof",3]],["bool",15]],[[["global",3],["bool",15],["ledgerinfowithsignatures",4],["vec",3,["ledgerinfowithsignatures","global"]]],["epochchangeproof",3]],[[],["result",4]],[[],["hashvalue",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["ledgerinfowithsignatures",4]],[["result",4,["error"]],["error",3]]],[[["verifier",8]],[["result",4,["ledgerinfowithsignatures","error"]],["ledgerinfowithsignatures",4],["error",3]]],[[]],null,[[]],[[]],[[]],[[],["epochstate",3]],[[]],[[],[["result",4,["epochstate"]],["epochstate",3]]],[[],["epochstate",3]],null,[[["u64",15]],["bool",15]],[[["epochstate",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[["ledgerinfo",3]],["bool",15]],[[["epochstate",3]],["bool",15]],[[],["result",4]],[[],["hashvalue",3]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[["ledgerinfowithsignatures",4]],[["result",4,["error"]],["error",3]]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["eventkey",3]],[[],["eventkeyparseerror",3]],[[],["eventhandle",3]],[[]],[[]],[[]],[[["eventkey",3]],["ordering",4]],[[],["u64",15]],[[],["u64",15]],[[],[["eventkey",3],["result",4,["eventkey"]]]],[[],[["result",4,["eventhandle"]],["eventhandle",3]]],[[["eventkey",3]],["bool",15]],[[["eventhandle",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[],[["eventkey",3],["result",4,["eventkey","eventkeyparseerror"]],["eventkeyparseerror",3]]],[[],[["eventkey",3],["result",4,["eventkey","eventkeyparseerror"]],["eventkeyparseerror",3]]],[[["str",15]],[["eventkey",3],["result",4,["eventkey","eventkeyparseerror"]],["eventkeyparseerror",3]]],[[],["u64",15]],[[],["accountaddress",3]],[[]],[[]],[[]],[[]],[[],["eventkey",3]],[[["eventkey",3]],["bool",15]],[[["eventhandle",3]],["bool",15]],[[],["eventkey",3]],[[["eventkey",3],["u64",15]],["eventhandle",3]],[[["accountaddress",3],["u64",15]],["eventkey",3]],[[["accountaddress",3],["u64",15]],["eventhandle",3]],[[["eventkey",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["eventkey",3]],[[["u64",15]],["eventhandle",3]],[[],["result",4]],[[],["result",4]],[[]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],[["eventkey",3],["result",4,["eventkey","eventkeyparseerror"]],["eventkeyparseerror",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,[[["ed25519signature",3],["accountaddress",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["validatorverifier",3]],[["verifyerror",4],["result",4,["verifyerror"]]]],[[],["ledgerinfohasher",3]],[[],["ledgerinfo",3]],[[],["ledgerinfowithsignatures",4]],[[],["ledgerinfowithv0",3]],[[]],[[]],[[]],[[]],[[],["blockinfo",3]],[[],["blockinfo",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["ledgerinfohasher",3]],[[],["ledgerinfowithv0",3]],[[],["ledgerinfowithv0",3]],[[],[["result",4,["ledgerinfo"]],["ledgerinfo",3]]],[[],[["ledgerinfowithsignatures",4],["result",4,["ledgerinfowithsignatures"]]]],[[],[["ledgerinfowithv0",3],["result",4,["ledgerinfowithv0"]]]],[[],["bool",15]],[[],["u64",15]],[[["ledgerinfo",3]],["bool",15]],[[["ledgerinfowithsignatures",4]],["bool",15]],[[["ledgerinfowithv0",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["hashvalue",3]],[[],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[["hashvalue",3],["validatorset",3]],["ledgerinfo",3]],[[["hashvalue",3],["validatorset",3]],["ledgerinfowithsignatures",4]],[[["hashvalue",3],["validatorset",3]],["ledgerinfowithv0",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[],["ledgerinfo",3]],[[["option",4,["validatorset"]],["validatorset",3]],["ledgerinfo",3]],[[["ledgerinfo",3]],["bool",15]],[[["ledgerinfowithsignatures",4]],["bool",15]],[[["ledgerinfowithv0",3]],["bool",15]],[[["hashvalue",3],["blockinfo",3]],["ledgerinfo",3]],[[["btreemap",3,["accountaddress","ed25519signature"]],["ledgerinfo",3],["ed25519signature",3],["accountaddress",3]],["ledgerinfowithsignatures",4]],[[["btreemap",3,["accountaddress","ed25519signature"]],["ledgerinfo",3],["ed25519signature",3],["accountaddress",3]],["ledgerinfowithv0",3]],[[],["u64",15]],[[],[["option",4,["epochstate"]],["epochstate",3]]],[[["accountaddress",3]]],[[],["u64",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["hashvalue",3]]],[[],["btreemap",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["hashvalue",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[["validatorverifier",3]],[["verifyerror",4],["result",4,["verifyerror"]]]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["mempoolstatus",3]],[[],["mempoolstatuscode",4]],[[]],[[]],[[["mempoolstatus",3]],["ordering",4]],[[["mempoolstatuscode",4]],["ordering",4]],null,[[["mempoolstatus",3]],["bool",15]],[[["mempoolstatuscode",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["mempoolstatus",3]],["bool",15]],[[["mempoolstatuscode",4]],["mempoolstatus",3]],[[["mempoolstatus",3]],[["option",4,["ordering"]],["ordering",4]]],[[["mempoolstatuscode",4]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[["u64",15]],[["result",4,["mempoolstatuscode"]],["mempoolstatuscode",4]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[["string",3]],["mempoolstatus",3]],null,[[["accesspath",3],["vec",3,["accesspath","global"]],["global",3]],[["result",4,["vec","error"]],["vec",3,["vec","global"]],["error",3]]],[[["u64",15],["global",3],["accesspath",3],["vec",3,["accesspath","global"]]],[["result",4,["vec","error"]],["vec",3,["vec","global"]],["error",3]]],[[],[["u64",15],["result",4,["u64","error"]],["error",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["publickey",3],["u8",15]],["networkaddress",3]],[[]],[[]],[[]],[[]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["networkaddress",3]],[[],["protocol",4]],[[],["dnsname",3]],[[],["ipfilter",4]],[[]],[[]],[[]],[[]],[[],[["networkaddress",3],["result",4,["networkaddress"]]]],[[],[["result",4,["protocol"]],["protocol",4]]],[[],[["result",4,["dnsname"]],["dnsname",3]]],[[["accountaddress",3],["u64",15],["u32",15]],[["parseerror",4],["result",4,["encnetworkaddress","parseerror"]],["encnetworkaddress",3]]],null,[[["networkaddress",3]],["bool",15]],[[["protocol",4]],["bool",15]],[[["dnsname",3]],["bool",15]],[[["ipfilter",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["networkaddress",3]],[[],[["option",4,["ipaddr"]],["ipaddr",4]]],[[],[["publickey",3],["option",4,["publickey"]]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["socketaddr",4]],["networkaddress",3]],[[]],[[["protocol",4]],["networkaddress",3]],[[["ipaddr",4]],["protocol",4]],[[]],[[]],[[["parseinterror",3]],["parseerror",4]],[[]],[[["addrparseerror",3]],["parseerror",4]],[[["cryptomaterialerror",4]],["parseerror",4]],[[["error",4]],["parseerror",4]],[[]],[[]],[[["str",15]],[["result",4,["networkaddress"]],["networkaddress",3]]],[[["str",15]],[["result",4,["dnsname"]],["dnsname",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["ipaddr",4]],["bool",15]],[[],["networkaddress",3]],[[["networkaddress",3]],["bool",15]],[[["protocol",4]],["bool",15]],[[["dnsname",3]],["bool",15]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["protocol",4]],["networkaddress",3]],[[["publickey",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["option",4,["error"]],["error",8]]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[],[["error",3],["result",4,["error"]]]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[["vec",3,["protocol","global"]],["protocol",4],["global",3]],[["networkaddress",3],["result",4,["networkaddress"]]]],[[],["result",4]],[[],["result",4]],[[["string",3]],[["dnsname",3],["result",4,["dnsname"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[],["encnetworkaddress",3]],[[]],[[["accountaddress",3],["u32",15]],[["result",4,["networkaddress","parseerror"]],["parseerror",4],["networkaddress",3]]],[[],[["result",4,["encnetworkaddress"]],["encnetworkaddress",3]]],[[["accountaddress",3],["u64",15],["u32",15],["networkaddress",3]],[["parseerror",4],["result",4,["encnetworkaddress","parseerror"]],["encnetworkaddress",3]]],[[["encnetworkaddress",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[],["u32",15]],[[["encnetworkaddress",3]],["bool",15]],[[],["u64",15]],[[],["result",4]],[[],["hashvalue",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[]],[[],["nibble",3]],[[]],[[["nibble",3]],["ordering",4]],[[],[["result",4,["nibble"]],["nibble",3]]],[[["nibble",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[["u8",15]],["nibble",3]],[[]],[[]],[[["nibble",3]],["bool",15]],null,[[["nibble",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["result",4]],[[],["hashvalue",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,[[]],[[],["bititerator",3]],[[],["bititerator",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["nibblepath",3]],[[]],[[["nibblepath",3]],["ordering",4]],[[],[["result",4,["nibblepath"]],["nibblepath",3]]],[[["nibblepath",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[],["nibblepath",3]],[[["usize",15]],["nibble",3]],[[],["nibblepath",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],[["nibble",3],["option",4,["nibble"]]]],[[["nibblepath",3]],["bool",15]],[[["vec",3,["u8","global"]],["u8",15],["global",3]],["nibblepath",3]],[[["vec",3,["u8","global"]],["u8",15],["global",3]],["nibblepath",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["nibbleiterator",3]],[[],["usize",15]],[[],["usize",15]],[[["nibblepath",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],[["nibble",3],["option",4,["nibble"]]]],[[["nibble",3]]],[[],["nibbleiterator",3]],[[],["result",4]],[[],["usize",15]],[[],["hashvalue",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["nibbleiterator",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["accesspath",3]],[[["identifier",3],["accountaddress",3]],["accesspath",3]],[[]],[[],["u64",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["configurationresource",3]],[[],["onchainconsensusconfig",4]],[[],["consensusconfigv1",3]],[[],["consensusconfigv2",3]],[[],["diemversion",3]],[[],["registeredcurrencies",3]],[[],["validatorset",3]],[[],["vmconfig",3]],[[],["vmpublishingoption",3]],[[],["configid",3]],[[],["onchainconfigpayload",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["diemversion",3]],["ordering",4]],[[],["accountaddress",3]],[[],["hashmap",3]],[[]],[[],["vmpublishingoption",3]],[[],["bool",15]],null,[[],["onchainconsensusconfig",4]],[[],["consensusconfigv1",3]],[[],["configurationresource",3]],[[],[["onchainconsensusconfig",4],["result",4,["onchainconsensusconfig"]]]],[[],[["consensusconfigv1",3],["result",4,["consensusconfigv1"]]]],[[],[["consensusconfigv2",3],["result",4,["consensusconfigv2"]]]],[[],[["diemversion",3],["result",4,["diemversion"]]]],[[],[["result",4,["registeredcurrencies"]],["registeredcurrencies",3]]],[[],[["result",4,["validatorset"]],["validatorset",3]]],[[],[["vmconfig",3],["result",4,["vmconfig"]]]],[[],[["result",4,["vmpublishingoption"]],["vmpublishingoption",3]]],[[],[["result",4,["configurationresource"]],["configurationresource",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["onchainconsensusconfig","error"]],["onchainconsensusconfig",4],["error",3]]],[[],[["error",3],["vmconfig",3],["result",4,["vmconfig","error"]]]],[[],["validatorset",3]],[[],["u64",15]],[[],["u64",15]],[[["onchainconsensusconfig",4]],["bool",15]],[[["consensusconfigv1",3]],["bool",15]],[[["consensusconfigv2",3]],["bool",15]],[[["diemversion",3]],["bool",15]],[[["registeredcurrencies",3]],["bool",15]],[[["validatorset",3]],["bool",15]],[[["vmconfig",3]],["bool",15]],[[["vmpublishingoption",3]],["bool",15]],[[["configid",3]],["bool",15]],[[["onchainconfigpayload",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["eventhandle",3]],null,[[["accesspath",3]],[["vec",3,["u8","global"]],["option",4,["vec"]]]],[[],["option",4]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["validatorverifier",3]],["validatorset",3]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4,["registeredcurrencies","error"]],["registeredcurrencies",3],["error",3]]],null,[[],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],null,[[],["bool",15]],[[],["u64",15]],[[],["u64",15]],[[["hashvalue",3],["vec",3,["hashvalue","global"]],["global",3]],["vmpublishingoption",3]],null,[[["onchainconsensusconfig",4]],["bool",15]],[[["consensusconfigv1",3]],["bool",15]],[[["consensusconfigv2",3]],["bool",15]],[[["diemversion",3]],["bool",15]],[[["registeredcurrencies",3]],["bool",15]],[[["validatorset",3]],["bool",15]],[[["vmconfig",3]],["bool",15]],[[["vmpublishingoption",3]],["bool",15]],[[["configid",3]],["bool",15]],[[["onchainconfigpayload",3]],["bool",15]],[[["validatorinfo",3],["vec",3,["validatorinfo","global"]],["global",3]],["validatorset",3]],[[["u64",15],["hashmap",3,["configid","vec","randomstate"]],["arc",3,["hashmap"]]],["onchainconfigpayload",3]],[[],["eventkey",3]],[[],["vmpublishingoption",3]],[[["diemversion",3]],[["option",4,["ordering"]],["ordering",4]]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["bool",15]],null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["accumulatorproof",3]],[[],["sparsemerkleproof",3]],[[],["transactionaccumulatorsummary",3]],[[],["accumulatorconsistencyproof",3]],[[],["accumulatorrangeproof",3]],[[],["sparsemerklerangeproof",3]],[[],["transactioninfowithproof",3]],[[],["accountstateproof",3]],[[],["eventproof",3]],[[],["transactioninfolistwithproof",3]],[[],["accumulatorextensionproof",3]],[[],["sparsemerkleleafnodehasher",3]],[[],["sparsemerkleleafnode",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["sparsemerkleleafnodehasher",3]],null,null,[[],[["result",4,["accumulatorproof"]],["accumulatorproof",3]]],[[],[["sparsemerkleproof",3],["result",4,["sparsemerkleproof"]]]],[[],[["result",4,["transactionaccumulatorsummary"]],["transactionaccumulatorsummary",3]]],[[],[["result",4,["accumulatorconsistencyproof"]],["accumulatorconsistencyproof",3]]],[[],[["accumulatorrangeproof",3],["result",4,["accumulatorrangeproof"]]]],[[],[["sparsemerklerangeproof",3],["result",4,["sparsemerklerangeproof"]]]],[[],[["result",4,["transactioninfowithproof"]],["transactioninfowithproof",3]]],[[],[["result",4,["accountstateproof"]],["accountstateproof",3]]],[[],[["eventproof",3],["result",4,["eventproof"]]]],[[],[["transactioninfolistwithproof",3],["result",4,["transactioninfolistwithproof"]]]],[[],[["result",4,["accumulatorextensionproof"]],["accumulatorextensionproof",3]]],[[],[["sparsemerkleleafnode",3],["result",4,["sparsemerkleleafnode"]]]],[[["accumulatorproof",3]],["bool",15]],[[["sparsemerkleproof",3]],["bool",15]],[[["transactionaccumulatorsummary",3]],["bool",15]],[[["accumulatorconsistencyproof",3]],["bool",15]],[[["accumulatorrangeproof",3]],["bool",15]],[[["sparsemerklerangeproof",3]],["bool",15]],[[["transactioninfowithproof",3]],["bool",15]],[[["accountstateproof",3]],["bool",15]],[[["eventproof",3]],["bool",15]],[[["transactioninfolistwithproof",3]],["bool",15]],[[["accumulatorextensionproof",3]],["bool",15]],[[["sparsemerkleleafnode",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["hashvalue",3]],[[],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["hashvalue",3],["vec",3,["hashvalue","global"]],["global",3]]],[[],["bool",15]],[[],["hashvalue",3]],[[],[["sparsemerkleleafnode",3],["option",4,["sparsemerkleleafnode"]]]],[[],["accumulatorproof",3]],null,null,[[],["vec",3]],[[["sparsemerkleproof",3]],["bool",15]],[[["transactionaccumulatorsummary",3]],["bool",15]],[[["accumulatorconsistencyproof",3]],["bool",15]],[[["sparsemerklerangeproof",3]],["bool",15]],[[["transactioninfowithproof",3]],["bool",15]],[[["accountstateproof",3]],["bool",15]],[[["eventproof",3]],["bool",15]],[[["transactioninfolistwithproof",3]],["bool",15]],[[["accumulatorextensionproof",3]],["bool",15]],[[["sparsemerkleleafnode",3]],["bool",15]],[[["hashvalue",3]],["merkletreeinternalnode",3]],[[["hashvalue",3],["vec",3,["hashvalue","global"]],["global",3]],["accumulatorproof",3]],[[["sparsemerkleleafnode",3],["hashvalue",3],["vec",3,["hashvalue","global"]],["global",3],["option",4,["sparsemerkleleafnode"]]],["sparsemerkleproof",3]],[[["inmemoryaccumulator",3,["transactionaccumulatorhasher"]],["transactionaccumulatorhasher",3]],[["result",4,["transactionaccumulatorsummary","error"]],["transactionaccumulatorsummary",3],["error",3]]],[[["hashvalue",3],["vec",3,["hashvalue","global"]],["global",3]],["accumulatorconsistencyproof",3]],[[["hashvalue",3],["vec",3,["hashvalue","global"]],["global",3]],["accumulatorrangeproof",3]],[[["hashvalue",3],["vec",3,["hashvalue","global"]],["global",3]],["sparsemerklerangeproof",3]],[[["transactionaccumulatorhasher",3],["accumulatorproof",3,["transactionaccumulatorhasher"]]],["transactioninfowithproof",3]],[[["transactioninfowithproof",3],["accountstateblob",3],["sparsemerkleproof",3,["accountstateblob"]]],["accountstateproof",3]],[[["accumulatorproof",3,["eventaccumulatorhasher"]],["transactioninfowithproof",3],["eventaccumulatorhasher",3]],["eventproof",3]],[[["transactionaccumulatorhasher",3],["accumulatorrangeproof",3,["transactionaccumulatorhasher"]],["global",3],["vec",3,["global"]]],["transactioninfolistwithproof",3]],[[["u64",15],["hashvalue",3],["vec",3,["hashvalue","global"]],["global",3]],["accumulatorextensionproof",3]],[[["hashvalue",3]],["sparsemerkleleafnode",3]],[[],["accumulatorrangeproof",3]],[[],["transactioninfolistwithproof",3]],null,null,[[],["vec",3]],[[]],[[],["hashvalue",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["sparsemerkleproof",3]],[[],["transactioninfowithproof",3]],[[],["transactioninfowithproof",3]],null,[[["accumulatorconsistencyproof",3],["ledgerinfo",3]],[["result",4,["transactionaccumulatorsummary","error"]],["transactionaccumulatorsummary",3],["error",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["accumulatorconsistencyproofview",3]],[["result",4,["accumulatorconsistencyproof"]],["accumulatorconsistencyproof",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["accountstateproofview",3]],[["result",4,["accountstateproof"]],["accountstateproof",3,["transactioninfo"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["transactionsproofsview",3]],[["result",4,["transactioninfolistwithproof"]],["transactioninfolistwithproof",3,["transactioninfo"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u64",15],["accumulatorconsistencyproof",3]],[["result",4,["transactionaccumulatorsummary","error"]],["transactionaccumulatorsummary",3],["error",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[],["hashvalue",3]],[[["u64",15],["hashvalue",3]],[["result",4,["error"]],["error",3]]],[[["hashvalue",3],["option",4]],[["result",4,["error"]],["error",3]]],[[["u64",15],["hashvalue",3],["option",4,["u64"]]],[["result",4,["error"]],["error",3]]],[[["sparsemerkleleafnode",3],["hashvalue",3],["vec",3,["hashvalue","global"]],["global",3]],[["result",4,["error"]],["error",3]]],[[["u64",15],["ledgerinfo",3]],[["result",4,["error"]],["error",3]]],[[["u64",15],["hashvalue",3],["accountstateblob",3],["option",4,["accountstateblob"]],["ledgerinfo",3]],[["result",4,["error"]],["error",3]]],[[["u64",15],["hashvalue",3],["ledgerinfo",3]],[["result",4,["error"]],["error",3]]],[[["option",4,["u64"]],["u64",15],["ledgerinfo",3]],[["result",4,["error"]],["error",3]]],[[["hashvalue",3]],[["error",3],["inmemoryaccumulator",3],["result",4,["inmemoryaccumulator","error"]]]],[[["ledgerinfo",3]],[["result",4,["error"]],["error",3]]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],null,[[],["inmemoryaccumulator",3]],[[["u64",15]],[["error",3],["inmemoryaccumulator",3],["result",4,["inmemoryaccumulator","error"]]]],[[]],[[]],[[],["inmemoryaccumulator",3]],[[]],[[],["inmemoryaccumulator",3]],[[],[["result",4,["inmemoryaccumulator"]],["inmemoryaccumulator",3]]],[[["inmemoryaccumulator",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[],["inmemoryaccumulator",3]],[[],["vec",3]],[[]],[[],["bool",15]],null,[[["u64",15],["hashvalue",3],["vec",3,["hashvalue","global"]],["global",3]],[["error",3],["inmemoryaccumulator",3],["result",4,["inmemoryaccumulator","error"]]]],[[],["u64",15]],[[],["hashvalue",3]],[[],["result",4]],[[],["hashvalue",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["u64",15]],[[]],null,[[]],[[]],[[],["mocktransactionaccumulator",3]],[[]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[["hashvalue",3],["vec",3,["hashvalue","global"]],["global",3]],["mocktransactionaccumulator",3]],[[["u64",15]],["transactionaccumulatorsummary",3]],[[["option",4,["u64"]],["u64",15]],["accumulatorconsistencyproof",3]],[[["u64",15]],["hashvalue",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["u64",15]],[[]],[[["u64",15]],["mocktransactionaccumulator",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["position",3]],[[]],[[["position",3]],["ordering",4]],[[["position",3]],["bool",15]],[[["nodedirection",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",15]],["position",3]],[[["u64",15]],["position",3]],[[["u64",15],["u32",15]],["position",3]],[[["u64",15]],[["result",4,["position","error"]],["position",3],["error",3]]],[[]],[[["u64",15]],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",15]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["u64",15]],["bool",15]],[[],["bool",15]],[[],["ancestoriterator",3]],[[],["ancestorsiblingiterator",3]],[[],["position",3]],[[],["position",3]],[[],["u32",15]],[[["position",3]],["bool",15]],[[["u64",15]],["frozensubtreeiterator",3]],[[["u64",15]],["frozensubtreesiblingiterator",3]],[[],[["option",4,["position"]],["position",3]]],[[],["option",4]],[[],[["option",4,["position"]],["position",3]]],[[],[["option",4,["position"]],["position",3]]],[[],["position",3]],[[["position",3]],[["option",4,["ordering"]],["ordering",4]]],[[["u64",15]],["u64",15]],[[],["position",3]],[[],["position",3]],[[["u64",15]],["position",3]],[[["u64",15]],["position",3]],[[["u64",15]],["u32",15]],[[],["position",3]],[[],["u64",15]],[[]],[[],["u64",15]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["accountinfouniverse",3],["index",3]],["rawtransaction",3]],[[["accountinfouniverse",3],["index",3]],["signaturecheckedtransaction",3]],[[["accountinfouniverse",3],["index",3]],["contractevent",4]],[[["index",3],["accountinfouniverse",3]],["accountresource",3]],[[],["balanceresource",3]],[[["index",3],["accountinfouniverse",3]],["accountstateblob",3]],[[["accountinfouniverse",3]],["transactiontocommit",3]],[[["accountinfouniverse",3],["usize",15]],["blockinfo",3]],[[["accountinfouniverse",3],["usize",15]],["ledgerinfo",3]],[[["accountinfouniverse",3],["usize",15]],["ledgerinfowithsignatures",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[],["dpnproto",3]],[[]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[],[["vec",3,["vec","global"]],["result",4,["vec"]]]],[[],["result",4]],null,[[]],[[]],[[]],[[]],[[],["stateproof",3]],[[]],[[],["accumulatorconsistencyproof",3]],[[],[["result",4,["stateproof"]],["stateproof",3]]],[[],["epochchangeproof",3]],[[["stateproof",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[],["ledgerinfo",3]],[[],["ledgerinfowithsignatures",4]],[[["stateproof",3]],["bool",15]],[[["accumulatorconsistencyproof",3],["ledgerinfowithsignatures",4],["epochchangeproof",3]],["stateproof",3]],[[],["result",4]],[[],["hashvalue",3]],[[]],[[],["result",4]],[[["stateproofview",3]],[["stateproof",3],["result",4,["stateproof"]]]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[["u64",15],["ed25519privatekey",3],["module",3],["ed25519publickey",3],["accountaddress",3]],["signedtransaction",3]],[[["u64",15],["ed25519privatekey",3],["string",3],["accountaddress",3],["transactionpayload",4],["option",4,["transactionpayload"]],["ed25519publickey",3],["option",4,["u64"]]],["signedtransaction",3]],[[["u64",15],["transactionpayload",4],["ed25519privatekey",3],["option",4,["transactionpayload"]],["ed25519publickey",3],["accountaddress",3]],["signedtransaction",3]],[[["u64",15],["ed25519privatekey",3],["ed25519publickey",3],["chainid",3],["accountaddress",3]],["signedtransaction",3]],[[["u64",15],["vec",3,["ed25519publickey","global"]],["ed25519privatekey",3],["script",3],["accountaddress",3],["vec",3,["accountaddress","global"]],["global",3],["ed25519publickey",3],["vec",3,["ed25519privatekey","global"]],["option",4,["script"]]],["signedtransaction",3]],[[["u64",15],["ed25519privatekey",3],["script",3],["string",3],["accountaddress",3],["option",4,["script"]],["ed25519publickey",3],["option",4,["u64"]]],["signedtransaction",3]],[[["u64",15],["ed25519privatekey",3],["script",3],["ed25519publickey",3],["option",4,["script"]],["accountaddress",3]],["signedtransaction",3]],[[["u64",15],["ed25519privatekey",3],["writeset",3],["ed25519publickey",3],["option",4,["writeset"]],["accountaddress",3]],["signaturecheckedtransaction",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["hashmap",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["signedtransaction",3],["result",4,["signedtransaction","error"]],["error",3]]],null,[[],["transactionauthenticator",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["chainid",3]],[[],[["error",3],["result",4,["signaturecheckedtransaction","error"]],["signaturecheckedtransaction",3]]],[[],["changeset",3]],[[],["module",3]],[[],["script",3]],[[],["scriptfunction",3]],[[],["rawtransaction",3]],[[],["rawtransactionhasher",3]],[[],["rawtransactionwithdata",4]],[[],["rawtransactionwithdatahasher",3]],[[],["transactionpayload",4]],[[],["writesetpayload",4]],[[],["signedtransaction",3]],[[],["signaturecheckedtransaction",3]],[[],["transactionwithproof",3]],[[],["transactionstatus",4]],[[],["governancerole",4]],[[],["vmvalidatorresult",3]],[[],["transactionoutput",3]],[[],["transactioninfohasher",3]],[[],["transactioninfo",3]],[[],["transactiontocommit",3]],[[],["transactionlistwithproof",3]],[[],["transactionoutputlistwithproof",3]],[[],["accounttransactionswithproof",3]],[[],["transaction",4]],[[],["transactionhasher",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["governancerole",4]],["ordering",4]],[[]],[[]],[[],["hashvalue",3]],[[],["bool",15]],[[],["rawtransactionhasher",3]],[[],["rawtransactionwithdatahasher",3]],[[],["transactioninfohasher",3]],[[],["transactionhasher",3]],null,[[]],[[],[["result",4,["changeset"]],["changeset",3]]],[[],[["result",4,["module"]],["module",3]]],[[],[["result",4,["script"]],["script",3]]],[[],[["scriptfunction",3],["result",4,["scriptfunction"]]]],[[],[["result",4,["rawtransaction"]],["rawtransaction",3]]],[[],[["rawtransactionwithdata",4],["result",4,["rawtransactionwithdata"]]]],[[],[["transactionpayload",4],["result",4,["transactionpayload"]]]],[[],[["result",4,["writesetpayload"]],["writesetpayload",4]]],[[],[["signedtransaction",3],["result",4,["signedtransaction"]]]],[[],[["transactionwithproof",3],["result",4,["transactionwithproof"]]]],[[],[["transactionstatus",4],["result",4,["transactionstatus"]]]],[[],[["transactionoutput",3],["result",4,["transactionoutput"]]]],[[],[["result",4,["transactioninfo"]],["transactioninfo",3]]],[[],[["result",4,["transactiontocommit"]],["transactiontocommit",3]]],[[],[["result",4,["transactionlistwithproof"]],["transactionlistwithproof",3]]],[[],[["transactionoutputlistwithproof",3],["result",4,["transactionoutputlistwithproof"]]]],[[],[["result",4,["accounttransactionswithproof"]],["accounttransactionswithproof",3]]],[[],[["transaction",4],["result",4,["transaction"]]]],[[["changeset",3]],["bool",15]],[[["module",3]],["bool",15]],[[["script",3]],["bool",15]],[[["scriptfunction",3]],["bool",15]],[[["rawtransaction",3]],["bool",15]],[[["rawtransactionwithdata",4]],["bool",15]],[[["transactionpayload",4]],["bool",15]],[[["writesetpayload",4]],["bool",15]],[[["signedtransaction",3]],["bool",15]],[[["signaturecheckedtransaction",3]],["bool",15]],[[["transactionwithproof",3]],["bool",15]],[[["transactionstatus",4]],["bool",15]],[[["governancerole",4]],["bool",15]],[[["vmvalidatorresult",3]],["bool",15]],[[["transactionoutput",3]],["bool",15]],[[["transactioninfo",3]],["bool",15]],[[["transactiontocommit",3]],["bool",15]],[[["transactionlistwithproof",3]],["bool",15]],[[["transactionoutputlistwithproof",3]],["bool",15]],[[["accounttransactionswithproof",3]],["bool",15]],[[["transaction",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["statuscode",4]],["vmvalidatorresult",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],null,null,[[],["u64",15]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],null,null,[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["keptvmstatus",4]],["transactionstatus",4]],[[]],[[["vmstatus",4]],["transactionstatus",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",15]],["governancerole",4]],[[],["identstr",3]],[[],["str",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[],["governancerole",4]],[[]],[[]],[[]],[[]],[[]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["hashvalue",3]],[[],["hashvalue",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[]],[[]],[[],["signedtransaction",3]],[[],[["vec",3,["transactionwithproof","global"]],["transactionwithproof",3],["global",3]]],[[],["transactionpayload",4]],[[],["rawtransaction",3]],[[],["rawtransaction",3]],[[],["scriptfunction",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["hashmap",3],["option",4,["hashmap"]]]],[[],["usize",15]],[[],["u64",15]],null,[[],["moduleid",3]],[[]],[[]],[[["ed25519publickey",3],["ed25519privatekey",3]],[["error",3],["result",4,["signaturecheckedtransaction","error"]],["signaturecheckedtransaction",3]]],[[["changeset",3]],["bool",15]],[[["module",3]],["bool",15]],[[["script",3]],["bool",15]],[[["scriptfunction",3]],["bool",15]],[[["rawtransaction",3]],["bool",15]],[[["rawtransactionwithdata",4]],["bool",15]],[[["transactionpayload",4]],["bool",15]],[[["writesetpayload",4]],["bool",15]],[[["signedtransaction",3]],["bool",15]],[[["signaturecheckedtransaction",3]],["bool",15]],[[["transactionwithproof",3]],["bool",15]],[[["transactionstatus",4]],["bool",15]],[[["vmvalidatorresult",3]],["bool",15]],[[["transactionoutput",3]],["bool",15]],[[["transactioninfo",3]],["bool",15]],[[["transactiontocommit",3]],["bool",15]],[[["transactionlistwithproof",3]],["bool",15]],[[["transactionoutputlistwithproof",3]],["bool",15]],[[["accounttransactionswithproof",3]],["bool",15]],[[["transaction",4]],["bool",15]],[[["u64",15],["hashvalue",3],["keptvmstatus",4]]],[[["contractevent",4],["writeset",3],["global",3],["vec",3,["contractevent","global"]]],["changeset",3]],[[["vec",3,["u8","global"]],["u8",15],["global",3]],["module",3]],[[["vec",3,["u8","global"]],["u8",15],["global",3],["vec",3,["typetag","global"]],["typetag",4],["vec",3,["transactionargument","global"]],["transactionargument",4]],["script",3]],[[["vec",3,["typetag","global"]],["vec",3,["u8","global"]],["global",3],["identifier",3],["moduleid",3],["typetag",4],["vec",3,["vec","global"]]],["scriptfunction",3]],[[["u64",15],["transactionpayload",4],["string",3],["chainid",3],["accountaddress",3]],["rawtransaction",3]],[[["ed25519publickey",3],["rawtransaction",3],["ed25519signature",3]],["signedtransaction",3]],[[["u64",15],["transaction",4],["option",4,["vec"]],["transactioninfowithproof",3],["vec",3,["contractevent","global"]]],["transactionwithproof",3]],[[["option",4,["statuscode"]],["u64",15],["statuscode",4],["governancerole",4]],["vmvalidatorresult",3]],[[["u64",15],["transactionstatus",4],["contractevent",4],["writeset",3],["global",3],["vec",3,["contractevent","global"]]],["transactionoutput",3]],[[["u64",15],["hashvalue",3],["keptvmstatus",4]],["transactioninfo",3]],[[["contractevent",4],["u64",15],["option",4,["hashmap"]],["keptvmstatus",4],["accountaddress",3],["vec",3,["contractevent","global"]],["transaction",4],["randomstate",3],["hashmap",3,["accountaddress","accountstateblob","randomstate"]],["writeset",3],["global",3],["accountstateblob",3],["hashmap",3,["nibblepath","hashvalue","randomstate"]]],["transactiontocommit",3]],[[["u64",15],["vec",3,["vec","global"]],["option",4,["vec"]],["vec",3,["transaction","global"]],["transaction",4],["global",3],["option",4,["u64"]],["transactioninfolistwithproof",3]],["transactionlistwithproof",3]],[[["u64",15],["global",3],["option",4,["u64"]],["vec",3,["global"]],["transactioninfolistwithproof",3]],["transactionoutputlistwithproof",3]],[[["vec",3,["transactionwithproof","global"]],["transactionwithproof",3],["global",3]],["accounttransactionswithproof",3]],[[["u64",15],["changeset",3],["chainid",3],["accountaddress",3]],["rawtransaction",3]],[[],["transactionlistwithproof",3]],[[],["transactionoutputlistwithproof",3]],[[],["accounttransactionswithproof",3]],[[["u64",15],["module",3],["string",3],["chainid",3],["accountaddress",3]],["rawtransaction",3]],[[["vec",3,["accountaddress","global"]],["rawtransaction",3],["global",3],["accountaddress",3]],["rawtransactionwithdata",4]],[[["vec",3,["accountauthenticator","global"]],["accountauthenticator",4],["rawtransaction",3],["global",3],["vec",3,["accountaddress","global"]],["accountaddress",3]],["signedtransaction",3]],[[["multied25519publickey",3],["rawtransaction",3],["multied25519signature",3]],["signedtransaction",3]],[[["u64",15],["script",3],["string",3],["chainid",3],["accountaddress",3]],["rawtransaction",3]],[[["u64",15],["scriptfunction",3],["string",3],["chainid",3],["accountaddress",3]],["rawtransaction",3]],[[["transactionauthenticator",4],["rawtransaction",3]],["signedtransaction",3]],[[["u64",15],["writeset",3],["chainid",3],["accountaddress",3]],["rawtransaction",3]],[[["u64",15],["script",3],["chainid",3],["accountaddress",3]],["rawtransaction",3]],[[["str",15]],[["result",4,["transactionargument","error"]],["transactionargument",4],["error",3]]],[[["governancerole",4]],[["option",4,["ordering"]],["ordering",4]]],[[],["transactionpayload",4]],[[],["u64",15]],null,null,null,[[],["usize",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["accountaddress",3]],[[],["accountaddress",3]],[[],["u64",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["bool",15]],[[],["bool",15]],[[["ed25519publickey",3],["ed25519privatekey",3]],[["error",3],["result",4,["signaturecheckedtransaction","error"]],["signaturecheckedtransaction",3]]],[[["vec",3,["accountaddress","global"]],["ed25519privatekey",3],["global",3],["vec",3,["ed25519privatekey","global"]],["accountaddress",3]],[["error",3],["result",4,["signaturecheckedtransaction","error"]],["signaturecheckedtransaction",3]]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["keptvmstatus",4]],[[],[["statuscode",4],["result",4,["keptvmstatus","statuscode"]],["keptvmstatus",4]]],[[],[["option",4,["statuscode"]],["statuscode",4]]],[[],["transactionstatus",4]],[[],["keptvmstatus",4]],[[],["keptvmstatus",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["transaction",4]],null,[[],["hashvalue",3]],[[],["hashvalue",3]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["transaction",4]],[["signedtransaction",3],["result",4,["signedtransaction","error"]],["error",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["accounttransactionswithproofview",3]],[["accounttransactionswithproof",3,["transactioninfo"]],["result",4,["accounttransactionswithproof"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[["option",4,["u64"]],["u64",15],["ledgerinfo",3]],[["result",4,["error"]],["error",3]]],[[["option",4,["u64"]],["u64",15],["ledgerinfo",3]],[["result",4,["error"]],["error",3]]],[[["u64",15],["ledgerinfo",3],["bool",15],["accountaddress",3]],[["result",4,["error"]],["error",3]]],[[["u64",15],["ledgerinfo",3],["accountaddress",3]],[["result",4,["error"]],["error",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[],["writeset",3]],[[],["writeset",3]],[[],["writeset",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["authenticationkey",3]],[[],["authenticationkeypreimage",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["authenticationerror",4]],[[],["transactionauthenticator",4]],[[],["accountauthenticator",4]],[[],["authenticationkeyhasher",3]],[[],["authenticationkey",3]],[[]],[[]],[[]],[[]],[[]],[[["authenticationkey",3]],["ordering",4]],[[],["authenticationkeyhasher",3]],[[],["accountaddress",3]],[[],[["transactionauthenticator",4],["result",4,["transactionauthenticator"]]]],[[],[["result",4,["accountauthenticator"]],["accountauthenticator",4]]],[[],[["result",4,["authenticationkey"]],["authenticationkey",3]]],[[["ed25519publickey",3]],["authenticationkeypreimage",3]],[[["ed25519publickey",3],["ed25519signature",3]],["transactionauthenticator",4]],[[["ed25519publickey",3],["ed25519signature",3]],["accountauthenticator",4]],[[["ed25519publickey",3]],["authenticationkey",3]],[[]],[[]],[[["authenticationerror",4]],["bool",15]],[[["transactionauthenticator",4]],["bool",15]],[[["accountauthenticator",4]],["bool",15]],[[["authenticationkey",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["hashvalue",3]],[[],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["authenticationkeypreimage",3]],["authenticationkey",3]],[[["str",15]],[["error",3],["authenticationkey",3],["result",4,["authenticationkey","error"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[["vec",3,["accountauthenticator","global"]],["accountauthenticator",4],["vec",3,["accountaddress","global"]],["global",3],["accountaddress",3]],["transactionauthenticator",4]],[[["multied25519publickey",3]],["authenticationkeypreimage",3]],[[["multied25519publickey",3],["multied25519signature",3]],["transactionauthenticator",4]],[[["multied25519publickey",3],["multied25519signature",3]],["accountauthenticator",4]],[[["multied25519publickey",3]],["authenticationkey",3]],[[["transactionauthenticator",4]],["bool",15]],[[["accountauthenticator",4]],["bool",15]],[[["authenticationkey",3]],["bool",15]],[[],["authenticationkey",3]],[[],["usize",15]],[[["authenticationkey",3]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],["authenticationkey",3]],[[],["scheme",4]],[[],[["global",3],["vec",3,["accountaddress","global"]],["accountaddress",3]]],[[],[["vec",3,["accountauthenticator","global"]],["accountauthenticator",4],["global",3]]],[[]],[[],["accountauthenticator",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["cryptomaterialerror",4],["result",4,["authenticationkey","cryptomaterialerror"]],["authenticationkey",3]]],[[["vec",3,["u8","global"]],["u8",15],["global",3]],[["cryptomaterialerror",4],["result",4,["authenticationkey","cryptomaterialerror"]],["authenticationkey",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[["rawtransaction",3]],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[],["authenticationkey",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u64",15],["transactionpayload",4],["i64",15],["string",3],["chainid",3],["accountaddress",3]],["rawtransaction",3]],[[["u64",15],["transactionpayload",4],["i64",15],["string",3],["chainid",3],["accountaddress",3]],[["signedtransaction",3],["result",4,["signedtransaction","error"]],["error",3]]],[[["rawtransaction",3]],[["signedtransaction",3],["result",4,["signedtransaction","error"]],["error",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["metadata",4]],[[],["generalmetadata",4]],[[],["generalmetadatav0",3]],[[],["travelrulemetadata",4]],[[],["travelrulemetadatav0",3]],[[],["unstructuredbytesmetadata",3]],[[],["refundmetadata",4]],[[],["refundmetadatav0",3]],[[],["refundreason",4]],[[],["cointrademetadata",4]],[[],["cointrademetadatav0",3]],[[],["paymentmetadata",4]],[[],["paymentmetadatav0",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["metadata",4],["result",4,["metadata"]]]],[[],[["generalmetadata",4],["result",4,["generalmetadata"]]]],[[],[["generalmetadatav0",3],["result",4,["generalmetadatav0"]]]],[[],[["travelrulemetadata",4],["result",4,["travelrulemetadata"]]]],[[],[["travelrulemetadatav0",3],["result",4,["travelrulemetadatav0"]]]],[[],[["result",4,["unstructuredbytesmetadata"]],["unstructuredbytesmetadata",3]]],[[],[["result",4,["refundmetadata"]],["refundmetadata",4]]],[[],[["refundmetadatav0",3],["result",4,["refundmetadatav0"]]]],[[],[["result",4,["refundreason"]],["refundreason",4]]],[[],[["cointrademetadata",4],["result",4,["cointrademetadata"]]]],[[],[["result",4,["cointrademetadatav0"]],["cointrademetadatav0",3]]],[[],[["result",4,["paymentmetadata"]],["paymentmetadata",4]]],[[],[["paymentmetadatav0",3],["result",4,["paymentmetadatav0"]]]],[[["metadata",4]],["bool",15]],[[["generalmetadata",4]],["bool",15]],[[["generalmetadatav0",3]],["bool",15]],[[["travelrulemetadata",4]],["bool",15]],[[["travelrulemetadatav0",3]],["bool",15]],[[["unstructuredbytesmetadata",3]],["bool",15]],[[["refundmetadata",4]],["bool",15]],[[["refundmetadatav0",3]],["bool",15]],[[["refundreason",4]],["bool",15]],[[["cointrademetadata",4]],["bool",15]],[[["cointrademetadatav0",3]],["bool",15]],[[["paymentmetadata",4]],["bool",15]],[[["paymentmetadatav0",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["metadata",4]],["bool",15]],[[["generalmetadata",4]],["bool",15]],[[["generalmetadatav0",3]],["bool",15]],[[["travelrulemetadata",4]],["bool",15]],[[["travelrulemetadatav0",3]],["bool",15]],[[["unstructuredbytesmetadata",3]],["bool",15]],[[["refundmetadata",4]],["bool",15]],[[["refundmetadatav0",3]],["bool",15]],[[["cointrademetadata",4]],["bool",15]],[[["cointrademetadatav0",3]],["bool",15]],[[["paymentmetadata",4]],["bool",15]],[[["paymentmetadatav0",3]],["bool",15]],[[["u64",15],["vec",3,["u8","global"]],["option",4,["u64"]],["option",4,["vec"]]],["generalmetadatav0",3]],null,null,null,[[],["option",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["hashvalue",3],["option",4,["hashvalue"]]]],[[],[["transactionaccumulatorsummary",3],["option",4,["transactionaccumulatorsummary"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["trustedstatehasher",3]],[[],["trustedstate",4]],[[],["trustedstatechange",4]],[[]],[[]],[[]],[[],["trustedstatehasher",3]],[[],[["trustedstate",4],["result",4,["trustedstate"]]]],[[["u64",15]],["bool",15]],[[["trustedstate",4]],["bool",15]],[[],["bool",15]],[[],["hashvalue",3]],[[],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[["waypoint",3]],["trustedstate",4]],[[],["hashvalue",3]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["ledgerinfo",3]],["bool",15]],[[],["bool",15]],[[["trustedstate",4]],["bool",15]],[[],["bool",15]],[[],[["option",4,["trustedstate"]],["trustedstate",4]]],[[]],[[],["result",4]],[[],["hashvalue",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["transactionaccumulatorsummary",3],["ledgerinfo",3]],[["error",3],["trustedstate",4],["result",4,["trustedstate","error"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[["ledgerinfowithsignatures",4]],[["result",4,["error"]],["error",3]]],[[["option",4,["transactionaccumulatorsummary"]],["transactionaccumulatorsummary",3],["stateproof",3]],[["result",4,["trustedstatechange","error"]],["trustedstatechange",4],["error",3]]],[[["accumulatorconsistencyproof",3],["transactionaccumulatorsummary",3],["epochchangeproof",3],["ledgerinfowithsignatures",4],["option",4,["transactionaccumulatorsummary"]]],[["result",4,["trustedstatechange","error"]],["trustedstatechange",4],["error",3]]],[[],["u64",15]],[[]],[[]],[[]],[[],["waypoint",3]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["validatorconfigresource",3]],[[],["validatoroperatorconfigresource",3]],[[],["validatorconfig",3]],[[]],[[]],[[]],null,[[],["validatorconfigresource",3]],[[],["validatoroperatorconfigresource",3]],null,[[],[["result",4,["validatorconfigresource"]],["validatorconfigresource",3]]],[[],[["validatoroperatorconfigresource",3],["result",4,["validatoroperatorconfigresource"]]]],[[],[["validatorconfig",3],["result",4,["validatorconfig"]]]],[[["validatorconfigresource",3]],["bool",15]],[[["validatoroperatorconfigresource",3]],["bool",15]],[[["validatorconfig",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[],[["result",4,["vec","error"]],["error",4],["vec",3,["networkaddress","global"]]]],null,null,null,[[]],[[]],[[]],[[["validatorconfigresource",3]],["bool",15]],[[["validatoroperatorconfigresource",3]],["bool",15]],[[["validatorconfig",3]],["bool",15]],[[["vec",3,["u8","global"]],["u8",15],["global",3],["ed25519publickey",3]],["validatorconfig",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[],[["result",4,["vec","error"]],["vec",3,["encnetworkaddress","global"]],["error",4]]],null,[[]],[[]],[[]],null,[[],["accountaddress",3]],[[]],[[]],[[]],[[],["validatorinfo",3]],[[]],[[],["validatorconfig",3]],[[],["ed25519publickey",3]],[[],["u64",15]],[[],[["result",4,["validatorinfo"]],["validatorinfo",3]]],[[["validatorinfo",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[],["validatorconfig",3]],[[["validatorinfo",3]],["bool",15]],[[["u64",15],["validatorconfig",3],["accountaddress",3]],["validatorinfo",3]],[[["ed25519publickey",3],["u64",15],["accountaddress",3]],["validatorinfo",3]],[[],["result",4]],[[],["hashvalue",3]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[],["accountaddress",3]],[[]],[[]],[[],["validatorsigner",3]],[[]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[["u8",15]],["validatorsigner",3]],[[]],[[["ed25519privatekey",3],["accountaddress",3]],["validatorsigner",3]],[[],["ed25519privatekey",3]],null,[[],["ed25519publickey",3]],[[],["validatorsigner",3]],[[],["ed25519signature",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[["ed25519privatekey",3],["vec",3,["ed25519privatekey","global"]],["global",3]]],[[]],[[]],null,null,null,null,null,null,null,null,[[]],[[]],[[["btreemap",3]],[["verifyerror",4],["result",4,["verifyerror"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["verifyerror",4],["result",4,["verifyerror"]]]],[[],["validatorconsensusinfo",3]],[[],["validatorverifier",3]],[[]],[[]],[[],[["validatorconsensusinfo",3],["result",4,["validatorconsensusinfo"]]]],[[],[["result",4,["validatorverifier"]],["validatorverifier",3]]],[[["verifyerror",4]],["bool",15]],[[["validatorconsensusinfo",3]],["bool",15]],[[["validatorverifier",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[["validatorset",3]],["validatorverifier",3]],[[]],[[["accountaddress",3]],[["option",4,["ed25519publickey"]],["ed25519publickey",3]]],[[["accountaddress",3]],[["option",4,["u64"]],["u64",15]]],[[]],[[]],[[]],[[],["bool",15]],[[],["usize",15]],[[["verifyerror",4]],["bool",15]],[[["validatorconsensusinfo",3]],["bool",15]],[[["validatorverifier",3]],["bool",15]],[[["ed25519publickey",3],["u64",15]],["validatorconsensusinfo",3]],[[["btreemap",3,["accountaddress","validatorconsensusinfo"]],["validatorconsensusinfo",3],["accountaddress",3]],["validatorverifier",3]],[[["u64",15],["validatorconsensusinfo",3],["btreemap",3,["accountaddress","validatorconsensusinfo"]],["accountaddress",3]],["validatorverifier",3]],[[["ed25519publickey",3],["accountaddress",3]],["validatorverifier",3]],[[["u64",15],["validatorconsensusinfo",3],["btreemap",3,["accountaddress","validatorconsensusinfo"]],["accountaddress",3]],[["error",3],["result",4,["validatorverifier","error"]],["validatorverifier",3]]],[[],["u64",15]],[[["usize",15],["u64",15],["bool",15],["option",4,["u64"]]]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["ed25519signature",3],["accountaddress",3]],[["verifyerror",4],["result",4,["verifyerror"]]]],[[["btreemap",3]],[["verifyerror",4],["result",4,["verifyerror"]]]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["abortlocation",4]],[[],["abortlocation",4]],[[],["abortlocation",4]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["waypoint",3]],[[],["ledger2waypointconverterhasher",3]],[[]],[[]],[[],["waypoint",3]],[[],["ledger2waypointconverterhasher",3]],[[],[["waypoint",3],["result",4,["waypoint"]]]],[[["u64",15]],["bool",15]],[[["waypoint",3]],["bool",15]],[[],["bool",15]],[[],["hashvalue",3]],[[],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[["str",15]],[["waypoint",3],["error",3],["result",4,["waypoint","error"]]]],[[]],[[]],[[["ledgerinfo",3]],["bool",15]],[[["waypoint",3]],["bool",15]],[[["ledgerinfo",3]],["waypoint",3]],[[["ledgerinfo",3]],[["waypoint",3],["error",3],["result",4,["waypoint","error"]]]],[[]],[[],["result",4]],[[],["hashvalue",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[],["hashvalue",3]],[[["ledgerinfowithsignatures",4]],[["result",4,["error"]],["error",3]]],[[["ledgerinfo",3]],[["result",4,["error"]],["error",3]]],[[],["u64",15]],[[]],[[]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["writeop",4]],[[],["writeset",3]],[[],["writesetmut",3]],[[]],[[]],[[]],[[],["writeset",3]],[[],["writesetmut",3]],[[]],[[],[["result",4,["writeop"]],["writeop",4]]],[[],[["result",4,["writeset"]],["writeset",3]]],[[],[["result",4,["writesetmut"]],["writesetmut",3]]],[[["writeop",4]],["bool",15]],[[["writeset",3]],["bool",15]],[[["writesetmut",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[],[["error",3],["result",4,["writeset","error"]],["writeset",3]]],[[]],[[]],[[]],[[],["writesetmut",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["writesetmut",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["iter",3]],[[["writeop",4]],["bool",15]],[[["writeset",3]],["bool",15]],[[["writesetmut",3]],["bool",15]],[[["vec",3,["global"]],["global",3]],["writesetmut",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null],"p":[[4,"MethodRequest"],[4,"MethodResponse"],[4,"Method"],[4,"WaitForTransactionError"],[3,"Response"],[3,"BlockingClient"],[3,"Client"],[3,"Error"],[3,"StreamError"],[3,"FaucetClient"],[3,"JsonRpcRequest"],[3,"Event"],[3,"State"],[3,"Retry"],[13,"Submit"],[13,"GetMetadata"],[13,"GetAccount"],[13,"GetTransactions"],[13,"GetAccountTransaction"],[13,"GetAccountTransactions"],[13,"GetEvents"],[13,"GetCurrencies"],[13,"GetNetworkStatus"],[13,"GetStateProof"],[13,"GetAccumulatorConsistencyProof"],[13,"GetAccountStateWithProof"],[13,"GetTransactionsWithProofs"],[13,"GetAccountTransactionsWithProofs"],[13,"GetEventsWithProofs"],[13,"GetEventByVersionWithProof"],[13,"GetMetadata"],[13,"GetAccount"],[13,"GetTransactions"],[13,"GetAccountTransaction"],[13,"GetAccountTransactions"],[13,"GetEvents"],[13,"GetCurrencies"],[13,"GetNetworkStatus"],[13,"GetStateProof"],[13,"GetAccumulatorConsistencyProof"],[13,"GetAccountStateWithProof"],[13,"GetTransactionsWithProofs"],[13,"GetAccountTransactionsWithProofs"],[13,"GetEventsWithProofs"],[13,"GetEventByVersionWithProof"],[13,"GetTransactionError"],[13,"TransactionHashMismatchError"],[13,"TransactionExecutionFailed"],[4,"ServerCode"],[4,"InvalidRequestCode"],[4,"ErrorData"],[3,"JsonRpcError"],[13,"StatusCode"],[3,"SubscriptionStream"],[3,"StreamingClientConfig"],[3,"StreamingClient"],[4,"StreamMethodRequest"],[4,"StreamMethod"],[3,"StreamJsonRpcRequest"],[3,"SubscribeToEventsParams"],[3,"SubscribeToTransactionsParams"],[13,"SubscribeToTransactions"],[13,"SubscribeToEvents"],[4,"StreamJsonRpcResponseView"],[4,"SubscriptionResult"],[3,"StreamJsonRpcResponse"],[3,"UnsubscribeResult"],[3,"SubscribeResult"],[13,"Transaction"],[13,"Event"],[13,"SubscribeResult"],[13,"UnsubscribeResult"],[3,"TransactionListView"],[4,"EventDataView"],[4,"TransactionDataView"],[4,"AccountRoleView"],[4,"VMStatusView"],[3,"MetadataView"],[3,"AccountView"],[3,"AmountView"],[3,"ScriptView"],[3,"BytesView"],[3,"AccountStateWithProofView"],[3,"PreburnQueueView"],[3,"PreburnWithMetadataView"],[3,"EventView"],[3,"EventWithProofView"],[3,"EventByVersionWithProofView"],[3,"MoveAbortExplanationView"],[3,"TransactionView"],[3,"TransactionsWithProofsView"],[3,"TransactionsProofsView"],[3,"AccountTransactionsWithProofView"],[3,"CurrencyInfoView"],[3,"StateProofView"],[3,"AccumulatorConsistencyProofView"],[3,"AccountStateProofView"],[13,"ParentVASP"],[13,"DesignatedDealer"],[13,"ChildVASP"],[13,"TreasuryCompliance"],[13,"VASPDomain"],[13,"Burn"],[13,"CancelBurn"],[13,"Mint"],[13,"Preburn"],[13,"ReceivedPayment"],[13,"SentPayment"],[13,"ReceivedMint"],[13,"Unknown"],[13,"AdminTransaction"],[13,"CreateAccount"],[13,"ToXDXExchangeRateUpdate"],[13,"NewEpoch"],[13,"BaseUrlRotation"],[13,"ComplianceKeyRotation"],[13,"NewBlock"],[13,"UserTransaction"],[13,"BlockMetadata"],[13,"MoveAbort"],[13,"ExecutionFailure"],[4,"CryptoMaterialError"],[3,"HashValue"],[8,"PublicKey"],[8,"PrivateKey"],[8,"SigningKey"],[8,"VerifyingKey"],[8,"Signature"],[8,"ValidCryptoMaterialStringExt"],[8,"Uniform"],[8,"Genesis"],[8,"Length"],[8,"ValidCryptoMaterial"],[13,"BitVecError"],[3,"OnceNonZeroUsize"],[3,"OnceBool"],[3,"OnceBox"],[3,"OnceCell"],[3,"Lazy"],[3,"OnceCell"],[3,"Lazy"],[3,"Sha3_256"],[3,"Ed25519PrivateKey"],[3,"Ed25519Signature"],[3,"Ed25519PublicKey"],[8,"Digest"],[3,"PublicKey"],[3,"SecretKey"],[3,"Signature"],[3,"Keypair"],[3,"ExpandedSecretKey"],[3,"Sha512"],[8,"Signer"],[8,"Verifier"],[3,"Error"],[8,"Signature"],[3,"Error"],[8,"CryptoHash"],[3,"HashValueBitIterator"],[3,"HashValueParseError"],[3,"TransactionAccumulatorHasher"],[3,"EventAccumulatorHasher"],[3,"SparseMerkleInternalHasher"],[3,"VoteProposalHasher"],[3,"TestOnlyHasher"],[8,"CryptoHasher"],[8,"TestOnlyHash"],[4,"HkdfError"],[3,"Hkdf"],[3,"MultiEd25519Signature"],[3,"MultiEd25519PrivateKey"],[3,"MultiEd25519PublicKey"],[4,"NoiseError"],[3,"InitiatorHandshakeState"],[3,"ResponderHandshakeState"],[3,"NoiseSession"],[3,"NoiseConfig"],[3,"TestDiemCrypto"],[3,"TestDiemCryptoHasher"],[3,"KeyPair"],[8,"Validate"],[3,"Validatable"],[3,"UnvalidatedEd25519PublicKey"],[3,"PrivateKey"],[3,"PublicKey"],[3,"PublicKey"],[3,"SharedSecret"],[3,"EphemeralSecret"],[3,"StaticSecret"],[4,"ScriptABI"],[3,"ScriptFunctionABI"],[3,"TransactionScriptABI"],[3,"ArgumentABI"],[3,"TypeArgumentABI"],[13,"TransactionScript"],[13,"ScriptFunction"],[3,"AccountAddress"],[3,"AccountAddressParseError"],[3,"ChangeSet"],[3,"AccountChangeSet"],[3,"ErrorMapping"],[3,"ErrorDescription"],[3,"ErrorContext"],[8,"GasAlgebra"],[3,"AbstractMemorySize"],[3,"GasUnits"],[3,"InternalGasUnits"],[3,"GasPrice"],[3,"GasConstants"],[3,"CostTable"],[3,"GasCost"],[3,"Identifier"],[3,"IdentStr"],[4,"TypeTag"],[3,"StructTag"],[3,"ModuleId"],[3,"ResourceKey"],[13,"Vector"],[13,"Struct"],[8,"MoveStructType"],[8,"MoveResource"],[8,"MoveResolver"],[8,"ModuleResolver"],[8,"ResourceResolver"],[4,"TransactionArgument"],[3,"VecBytes"],[13,"U8"],[13,"U64"],[13,"U128"],[13,"Address"],[13,"U8Vector"],[13,"Bool"],[4,"MoveValue"],[4,"MoveTypeLayout"],[4,"MoveStruct"],[4,"MoveStructLayout"],[3,"MoveFieldLayout"],[13,"Runtime"],[13,"WithFields"],[13,"Runtime"],[13,"WithFields"],[13,"Vector"],[13,"Struct"],[13,"U8"],[13,"U64"],[13,"U128"],[13,"Bool"],[13,"Address"],[13,"Vector"],[13,"Struct"],[13,"Signer"],[4,"StatusCode"],[4,"StatusType"],[4,"VMStatus"],[4,"KeptVMStatus"],[4,"AbortLocation"],[13,"Module"],[13,"MoveAbort"],[13,"ExecutionFailure"],[13,"Error"],[13,"MoveAbort"],[13,"ExecutionFailure"],[4,"Currency"],[3,"TransactionFactory"],[3,"TransactionBuilder"],[3,"DualAttestationMessage"],[4,"ScriptCall"],[4,"ScriptFunctionCall"],[13,"CreateChildVaspAccount"],[13,"CreateDesignatedDealer"],[13,"CreateParentVaspAccount"],[13,"UpdateMintingAbility"],[13,"PeerToPeerWithMetadata"],[13,"Preburn"],[13,"CreateValidatorAccount"],[13,"CreateValidatorOperatorAccount"],[13,"BurnTxnFees"],[13,"TieredMint"],[13,"RegisterValidatorConfig"],[13,"SetValidatorConfigAndReconfigure"],[13,"AddCurrencyToAccount"],[13,"UpdateExchangeRate"],[13,"UpdateDiemVersion"],[13,"RotateAuthenticationKey"],[13,"RotateAuthenticationKeyWithNonce"],[13,"RotateAuthenticationKeyWithNonceAdmin"],[13,"RotateAuthenticationKeyWithRecoveryAddress"],[13,"RotateDualAttestationInfo"],[13,"UpdateDualAttestationLimit"],[13,"SetValidatorOperator"],[13,"SetValidatorOperatorWithNonceAdmin"],[13,"Burn"],[13,"CancelBurn"],[13,"PublishSharedEd25519PublicKey"],[13,"RotateSharedEd25519PublicKey"],[13,"AddRecoveryRotationCapability"],[13,"AddValidatorAndReconfigure"],[13,"FreezeAccount"],[13,"RemoveValidatorAndReconfigure"],[13,"UnfreezeAccount"],[13,"CreateChildVaspAccount"],[13,"CreateDesignatedDealer"],[13,"CreateParentVaspAccount"],[13,"GcBallots"],[13,"AddVaspDomain"],[13,"RemoveVaspDomain"],[13,"UpdateMintingAbility"],[13,"BurnWithAmount"],[13,"CancelBurnWithAmount"],[13,"PeerToPeerBySigners"],[13,"PeerToPeerWithMetadata"],[13,"Preburn"],[13,"CreateValidatorAccount"],[13,"CreateValidatorOperatorAccount"],[13,"BurnTxnFees"],[13,"TieredMint"],[13,"UpdateDiemConsensusConfig"],[13,"RegisterValidatorConfig"],[13,"SetValidatorConfigAndReconfigure"],[13,"OptInToCrsn"],[13,"AddCurrencyToAccount"],[13,"UpdateExchangeRate"],[13,"SetGasConstants"],[13,"UpdateDiemVersion"],[13,"RotateAuthenticationKey"],[13,"RotateAuthenticationKeyWithNonce"],[13,"RotateAuthenticationKeyWithNonceAdmin"],[13,"RotateAuthenticationKeyWithRecoveryAddress"],[13,"RotateDualAttestationInfo"],[13,"UpdateDualAttestationLimit"],[13,"SetValidatorOperator"],[13,"SetValidatorOperatorWithNonceAdmin"],[13,"PublishSharedEd25519PublicKey"],[13,"RotateSharedEd25519PublicKey"],[13,"AddRecoveryRotationCapability"],[13,"ForceExpire"],[13,"AddValidatorAndReconfigure"],[13,"FreezeAccount"],[13,"InitializeDiemConsensusConfig"],[13,"RemoveValidatorAndReconfigure"],[13,"UnfreezeAccount"],[3,"LocalAccount"],[3,"AccountKey"],[4,"Path"],[3,"AccessPath"],[13,"Code"],[13,"Resource"],[8,"HashAccountAddress"],[4,"AccountSequenceInfo"],[4,"AccountRole"],[4,"DesignatedDealerPreburns"],[3,"BalanceResource"],[3,"PreburnResource"],[3,"PreburnQueueResource"],[3,"PreburnWithMetadataResource"],[3,"VASPDomainEvent"],[3,"BurnEvent"],[3,"CancelBurnEvent"],[3,"MintEvent"],[3,"PreburnEvent"],[3,"ReceivedMintEvent"],[3,"ReceivedPaymentEvent"],[3,"SentPaymentEvent"],[3,"AccountResource"],[3,"CRSNResource"],[3,"KeyRotationCapabilityResource"],[3,"ChildVASP"],[3,"WithdrawCapabilityResource"],[3,"Credential"],[3,"ForceShiftEvent"],[3,"AdminTransactionEvent"],[3,"BaseUrlRotationEvent"],[3,"ComplianceKeyRotationEvent"],[3,"CreateAccountEvent"],[3,"ToXDXExchangeRateUpdateEvent"],[3,"NewBlockEvent"],[3,"NewEpochEvent"],[3,"ChainIdResource"],[3,"CurrencyInfoResource"],[3,"DesignatedDealer"],[3,"Limit"],[3,"FreezingBit"],[3,"RoleId"],[3,"ParentVASP"],[3,"VASPDomains"],[3,"VASPDomain"],[3,"VASPDomainManager"],[13,"ChildVASP"],[13,"ParentVASP"],[13,"DesignatedDealer"],[13,"TreasuryCompliance"],[13,"Sequential"],[13,"CRSN"],[13,"Preburn"],[13,"PreburnQueue"],[3,"AccountState"],[3,"AccountStatesChunkWithProof"],[3,"AccountStateBlob"],[3,"AccountStateWithProof"],[3,"AccountStateBlobHasher"],[3,"BlockInfo"],[3,"BlockMetadata"],[3,"DiemBlockResource"],[3,"NewBlockEvent"],[4,"NamedChain"],[3,"ChainId"],[4,"ContractEvent"],[3,"EventWithProof"],[3,"EventByVersionWithProof"],[3,"ContractEventHasher"],[3,"ContractEventV0"],[3,"ContractEventV0Hasher"],[13,"V0"],[3,"DiemIdUserIdentifier"],[3,"DiemIdVaspDomainIdentifier"],[3,"DiemId"],[3,"DiemIdParseError"],[3,"DiemTimestampResource"],[3,"DiemTimestamp"],[3,"EpochChangeProof"],[8,"Verifier"],[3,"EpochState"],[3,"EventKey"],[3,"EventHandle"],[3,"EventKeyParseError"],[4,"LedgerInfoWithSignatures"],[3,"LedgerInfoWithV0"],[3,"LedgerInfo"],[3,"LedgerInfoHasher"],[13,"V0"],[4,"MempoolStatusCode"],[3,"MempoolStatus"],[8,"MoveStorage"],[4,"IpFilter"],[4,"ParseError"],[4,"Protocol"],[3,"NetworkAddress"],[3,"DnsName"],[3,"EmptyError"],[13,"UnknownProtocolType"],[13,"ParseAddrError"],[13,"ParseIntError"],[13,"ParseX25519PubkeyError"],[13,"DnsNameTooLong"],[13,"BCSError"],[13,"Ip4"],[13,"Ip6"],[13,"Dns"],[13,"Dns4"],[13,"Dns6"],[13,"Tcp"],[13,"Memory"],[13,"NoiseIK"],[13,"Handshake"],[3,"EncNetworkAddress"],[3,"Nibble"],[3,"NibblePath"],[3,"NibbleIterator"],[3,"BitIterator"],[8,"Peekable"],[8,"OnChainConfig"],[4,"OnChainConsensusConfig"],[3,"ConfigID"],[3,"ValidatorSet"],[3,"ConsensusConfigV2"],[3,"ConsensusConfigV1"],[3,"DiemVersion"],[3,"RegisteredCurrencies"],[3,"VMConfig"],[3,"VMPublishingOption"],[3,"OnChainConfigPayload"],[3,"ConfigurationResource"],[8,"ConfigStorage"],[13,"V1"],[13,"V2"],[3,"AccumulatorProof"],[3,"SparseMerkleProof"],[3,"TransactionAccumulatorSummary"],[3,"AccumulatorConsistencyProof"],[3,"AccumulatorRangeProof"],[3,"SparseMerkleRangeProof"],[3,"TransactionInfoWithProof"],[3,"AccountStateProof"],[3,"EventProof"],[3,"TransactionInfoListWithProof"],[3,"SparseMerkleLeafNode"],[3,"MerkleTreeInternalNode"],[3,"AccumulatorExtensionProof"],[3,"SparseMerkleLeafNodeHasher"],[3,"InMemoryAccumulator"],[3,"MockTransactionAccumulator"],[4,"NodeDirection"],[3,"FrozenSubTreeIterator"],[3,"FrozenSubtreeSiblingIterator"],[3,"Position"],[3,"AncestorSiblingIterator"],[3,"AncestorIterator"],[3,"AccountInfoUniverse"],[3,"RawTransactionGen"],[3,"SignatureCheckedTransactionGen"],[3,"ContractEventGen"],[3,"AccountResourceGen"],[3,"BalanceResourceGen"],[3,"AccountStateBlobGen"],[3,"TransactionToCommitGen"],[3,"BlockInfoGen"],[3,"LedgerInfoGen"],[3,"LedgerInfoWithSignaturesGen"],[8,"ProtocolSpec"],[3,"DpnProto"],[3,"StateProof"],[3,"AccountTransactionsWithProof"],[4,"Transaction"],[4,"GovernanceRole"],[4,"WriteSetPayload"],[4,"TransactionStatus"],[4,"TransactionPayload"],[4,"RawTransactionWithData"],[3,"TransactionToCommit"],[3,"ChangeSet"],[3,"Module"],[3,"Script"],[3,"RawTransaction"],[3,"SignedTransaction"],[3,"SignatureCheckedTransaction"],[3,"TransactionWithProof"],[3,"TransactionInfo"],[3,"TransactionListWithProof"],[3,"ScriptFunction"],[3,"RawTransactionHasher"],[3,"RawTransactionWithDataHasher"],[3,"VMValidatorResult"],[3,"TransactionOutput"],[3,"TransactionInfoHasher"],[3,"TransactionOutputListWithProof"],[3,"TransactionHasher"],[8,"TransactionInfoTrait"],[13,"MultiAgent"],[13,"UserTransaction"],[13,"GenesisTransaction"],[13,"BlockMetadata"],[13,"WriteSet"],[13,"Script"],[13,"Module"],[13,"ScriptFunction"],[13,"Discard"],[13,"Keep"],[13,"Direct"],[13,"Script"],[4,"TransactionAuthenticator"],[4,"Scheme"],[4,"AccountAuthenticator"],[3,"AuthenticationKey"],[4,"AuthenticationError"],[3,"AuthenticationKeyPreimage"],[3,"AuthenticationKeyHasher"],[13,"Ed25519"],[13,"MultiEd25519"],[13,"Ed25519"],[13,"MultiEd25519"],[13,"MultiAgent"],[8,"TransactionSigner"],[4,"Metadata"],[4,"CoinTradeMetadata"],[4,"GeneralMetadata"],[4,"RefundReason"],[4,"PaymentMetadata"],[4,"RefundMetadata"],[4,"TravelRuleMetadata"],[3,"GeneralMetadataV0"],[3,"TravelRuleMetadataV0"],[3,"UnstructuredBytesMetadata"],[3,"RefundMetadataV0"],[3,"CoinTradeMetadataV0"],[3,"PaymentMetadataV0"],[13,"CoinTradeMetadataV0"],[13,"GeneralMetadataVersion0"],[13,"GeneralMetadata"],[13,"TravelRuleMetadata"],[13,"UnstructuredBytesMetadata"],[13,"RefundMetadata"],[13,"CoinTradeMetadata"],[13,"PaymentMetadata"],[13,"PaymentMetadataVersion0"],[13,"RefundMetadataV0"],[13,"TravelRuleMetadataVersion0"],[4,"TrustedStateChange"],[4,"TrustedState"],[3,"TrustedStateHasher"],[13,"EpochWaypoint"],[13,"EpochState"],[13,"Epoch"],[13,"Version"],[3,"ValidatorConfig"],[3,"ValidatorConfigResource"],[3,"ValidatorOperatorConfigResource"],[3,"ValidatorInfo"],[3,"ValidatorSigner"],[4,"VerifyError"],[3,"ValidatorConsensusInfo"],[3,"ValidatorVerifier"],[13,"TooManySignatures"],[13,"TooLittleVotingPower"],[3,"Waypoint"],[3,"Ledger2WaypointConverterHasher"],[4,"WriteOp"],[3,"WriteSet"],[3,"WriteSetMut"],[13,"Value"]]},\
"diem_secure_net":{"doc":"This provides a simple networking substrate between a …","t":[13,13,4,3,13,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12],"n":["AlreadyShutdown","DataTooLarge","Error","NetworkClient","NetworkError","NetworkServer","NoActiveStream","OverflowError","RemoteStreamClosed","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","from","from","from","from","into","into","into","new","new","read","read","shutdown","shutdown","source","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write","write","0","0","0"],"q":["diem_secure_net","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_secure_net::Error","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","Blocking read until able to successfully read an entire …","If there isn’t already a downstream client, it accepts. …","Shutdown the internal network stream","Shutdown the internal network stream","","","","","","","","","","","","Blocking write until able to successfully send an entire …","If there isn’t already a downstream client, it accepts. …","","",""],"i":[1,1,0,0,1,0,1,1,1,2,3,1,2,3,1,1,1,2,3,1,1,2,3,1,2,3,2,3,2,3,1,1,2,3,1,2,3,1,2,3,1,2,3,4,5,6],"f":[null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["error",3]]],[[]],[[]],[[]],[[]],[[["socketaddr",4],["u64",15],["str",15]]],[[["socketaddr",4],["u64",15],["str",15]]],[[],[["vec",3,["u8"]],["result",4,["vec","error"]],["error",4]]],[[],[["vec",3,["u8"]],["result",4,["vec","error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[],[["option",4,["error"]],["error",8]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],null,null,null],"p":[[4,"Error"],[3,"NetworkClient"],[3,"NetworkServer"],[13,"DataTooLarge"],[13,"NetworkError"],[13,"OverflowError"]]},\
"diem_secure_push_metrics":{"doc":"","t":[3,3,6,6,6,6,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,14,14,14,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Histogram","HistogramTimer","HistogramVec","IntCounter","IntCounterVec","IntGauge","IntGaugeVec","MetricsPusher","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","collect","desc","drop","drop","fmt","fmt","from","from","from","get_sample_count","get_sample_sum","into","into","into","join","local","metric","observe","observe_closure_duration","observe_duration","register_histogram","register_histogram_vec","register_int_counter","register_int_counter_vec","register_int_gauge","register_int_gauge_vec","start","start_timer","stop_and_discard","stop_and_record","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_opts"],"q":["diem_secure_push_metrics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A <code>Metric</code> counts individual observations from an event or …","Timer to measure and record the duration of an event.","A <code>Collector</code> that bundles a set of Histograms that all …","The integer version of <code>Counter</code>. Provides better …","The integer version of <code>CounterVec</code>. Provides better …","The integer version of <code>Gauge</code>. Provides better performance …","The integer version of <code>GaugeVec</code>. Provides better …","MetricsPusher provides a function to push a list of …","","","","","","","","","","","","","","","","","","Return count of all samples.","Return accumulated sum of all samples.","","","","","Return a <code>LocalHistogram</code> for single thread usage.","","Add a single observation to the <code>Histogram</code>.","Observe execution time of a closure, in second.","Observe and record timer duration (in seconds).","Create a [<code>Histogram</code>] and registers to default registry.","Create a [<code>HistogramVec</code>] and registers to default registry.","Create an [<code>IntCounter</code>] and registers to default registry.","Create an [<code>IntCounterVec</code>] and registers to default …","Create an [<code>IntGauge</code>] and registers to default registry.","Create an [<code>IntGaugeVec</code>] and registers to default registry.","start starts a new thread and periodically pushes the …","Return a <code>HistogramTimer</code> to track a duration.","Observe and return timer duration (in seconds).","Observe, record and return timer duration (in seconds).","","","","","","","","","","","<code>with_opts</code> creates a <code>Histogram</code> with the <code>opts</code> options."],"i":[0,0,0,0,0,0,0,0,1,2,3,1,2,3,3,3,3,3,1,2,2,3,1,2,3,3,3,1,2,3,1,3,3,3,3,2,0,0,0,0,0,0,1,3,2,2,3,1,2,3,1,2,3,1,2,3,3],"f":[null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["histogram",3]],[[]],[[],[["vec",3,["metricfamily","global"]],["metricfamily",3],["global",3]]],[[],[["global",3],["desc",3],["vec",3,["desc","global"]]]],[[]],[[]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[],["u64",15]],[[],["f64",15]],[[]],[[]],[[]],[[]],[[],["localhistogram",3]],[[],["metric",3]],[[["f64",15]]],[[]],[[]],null,null,null,null,null,null,[[]],[[],["histogramtimer",3]],[[],["f64",15]],[[],["f64",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["histogramopts",3]],[["histogram",3],["error",4],["result",4,["histogram","error"]]]]],"p":[[3,"MetricsPusher"],[3,"HistogramTimer"],[3,"Histogram"]]},\
"diem_secure_storage":{"doc":"","t":[13,4,8,8,13,4,13,3,3,13,4,3,13,13,8,13,13,13,3,13,13,3,13,3,13,3,3,13,13,13,13,4,13,3,13,13,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,10,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["Anyone","Capability","CryptoKVStorage","CryptoStorage","EntropyError","Error","Export","GetResponse","GitHubStorage","GitHubStorage","Identity","InMemoryStorage","InMemoryStorage","InternalError","KVStorage","KeyAlreadyExists","KeyNotSet","KeyVersionNotFound","Namespaced","NamespacedStorage","NoOne","OnDiskStorage","OnDiskStorage","Permission","PermissionDenied","Policy","PublicKeyResponse","Read","Rotate","SerializationError","Sign","Storage","User","VaultStorage","VaultStorage","Write","available","available","available","available","available","available","available","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capabilities","create_key","create_key","create_key","create_key","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","export_private_key","export_private_key","export_private_key","export_private_key","export_private_key_for_version","export_private_key_for_version","export_private_key_for_version","export_private_key_for_version","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_base64","get","get","get","get","get","get","get","get","get_all_key_versions","get_public_key","get_public_key","get_public_key","get_public_key","get_public_key_previous_version","get_public_key_previous_version","get_public_key_previous_version","get_public_key_previous_version","id","import_private_key","import_private_key","import_private_key","import_private_key","inner","inner_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","last_update","last_update","namespace","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","new","new","new_with_time_service","permissions","public","public_key","reset_and_clear","reset_and_clear","reset_and_clear","reset_and_clear","reset_and_clear","reset_and_clear","reset_and_clear","revoke_token_self","rotate_key","rotate_key","rotate_key","rotate_key","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set","set","set","set","set","set","set","sign","sign","sign","sign","sign_using_version","sign_using_version","sign_using_version","sign_using_version","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_base64","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","1","0","0","0","0","0","0"],"q":["diem_secure_storagediem_secure_storage::Error","","","","","","","diem_secure_storage::Identity","diem_secure_storage::Storage","","","",""],"d":["","Represents actions","CryptoKVStorage offers a CryptoStorage implementation by …","CryptoStorage provides an abstraction for secure …","","","","A container for a get response that contains relevant …","GitHubStorage leverages a GitHub repository to provide a …","","Id represents a Diem internal identifier for a given …","InMemoryStorage represents a key value store that is …","","","A secure key/value storage engine. Create takes a policy …","","","","This provides a light wrapper around KV storages to …","","","OnDiskStorage represents a key value store that is …","","Maps an identity to a set of capabilities","","Dictates a set of permissions","","","","","","This is the Diem interface into secure storage. Any …","","VaultStorage utilizes Vault for maintaining encrypted, …","","","Returns an error if the backend service is not online and …","","","","","","Returns an error if the backend service is not online and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Securely generates a new named Ed25519 private key. The …","","","Securely generates a new named Ed25519 private key. The …","","","","","","","","","","","","","","","","","","","","","","","","Returns the Ed25519 private key stored at ‘name’.","","","Returns the Ed25519 private key stored at ‘name’.","Returns the Ed25519 private key stored at ‘name’ and …","","","Returns the Ed25519 private key stored at ‘name’ and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieves a value from storage and fails if the backend is …","","","This is a small hack in order to allow for calling …","","","","Retrieves a value from storage and fails if the backend is …","","Returns the Ed25519 public key stored at ‘name’.","","","Returns the Ed25519 public key stored at ‘name’.","Returns the previous version of the Ed25519 public key …","","","Returns the previous version of the Ed25519 public key …","","An optional API that allows importing private keys and …","","","An optional API that allows importing private keys and …","","","","","","","","","","","","","","","","","Time since Unix Epoch in seconds.","Time since Unix Epoch in seconds.","","","","","","","","","","","","","Creates a GetResponse","","","","","","Ed25519PublicKey stored at the provided key","Resets and clears all data held in the storage engine. …","","Note: This is not a namespace function","","","","Resets and clears all data held in the storage engine. …","","Rotates an Ed25519 private key. Future calls without …","","","Rotates an Ed25519 private key. Future calls without …","","","","","","","","Sets a value in storage and fails if the backend is …","","","","","","Sets a value in storage and fails if the backend is …","Signs the provided securely-hashable struct, using the ‘…","","","Signs the provided securely-hashable struct, using the ‘…","Signs the provided securely-hashable struct, using the ‘…","","","Signs the provided securely-hashable struct, using the ‘…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Value stored at the provided key","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,0,0,0,2,0,3,0,0,4,0,0,4,2,0,2,2,2,0,4,1,0,4,0,2,0,0,3,3,2,3,0,1,0,4,3,5,6,7,8,9,10,4,6,7,8,9,11,2,10,12,13,14,1,3,4,6,7,8,9,11,2,10,12,13,14,1,3,4,14,15,7,9,4,10,13,11,2,12,13,14,1,3,11,2,12,13,14,1,3,11,2,12,13,14,1,3,15,7,9,4,15,7,9,4,11,2,2,12,13,14,1,3,6,7,8,9,11,2,2,2,2,2,2,2,2,10,12,13,14,1,3,4,4,4,4,4,4,0,5,6,7,7,8,9,10,4,9,15,7,9,4,15,7,9,4,14,15,7,9,4,7,7,6,7,8,9,11,2,10,12,13,14,1,3,4,7,11,12,7,11,2,12,13,14,1,6,7,8,9,10,12,13,14,10,13,13,11,5,6,7,8,9,10,4,9,15,7,9,4,11,2,12,13,14,1,3,5,6,7,8,9,10,4,15,7,9,4,15,7,9,4,11,2,12,13,14,1,3,0,2,6,7,8,9,11,2,10,12,13,14,1,3,4,6,7,8,9,11,2,10,12,13,14,1,3,4,4,4,4,4,4,6,7,8,9,11,2,10,12,13,14,1,3,4,12,6,7,8,9,11,2,10,12,13,14,1,3,4,16,17,18,19,20,21,21,22,23,24,25,26,27],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["str",15]],[["result",4,["ed25519publickey","error"]],["ed25519publickey",3],["error",4]]],[[["str",15]],[["result",4,["ed25519publickey","error"]],["ed25519publickey",3],["error",4]]],[[["str",15]],[["result",4,["ed25519publickey","error"]],["ed25519publickey",3],["error",4]]],[[["str",15]],[["result",4,["ed25519publickey","error"]],["ed25519publickey",3],["error",4]]],[[],["inmemorystorage",3]],[[],["policy",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["publickeyresponse",3]],["bool",15]],[[["error",4]],["bool",15]],[[["getresponse",3]],["bool",15]],[[["policy",3]],["bool",15]],[[["permission",3]],["bool",15]],[[["identity",4]],["bool",15]],[[["capability",4]],["bool",15]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[["str",15]],[["result",4,["ed25519privatekey","error"]],["ed25519privatekey",3],["error",4]]],[[["str",15]],[["result",4,["ed25519privatekey","error"]],["ed25519privatekey",3],["error",4]]],[[["str",15]],[["result",4,["ed25519privatekey","error"]],["ed25519privatekey",3],["error",4]]],[[["str",15]],[["result",4,["ed25519privatekey","error"]],["ed25519privatekey",3],["error",4]]],[[["str",15],["ed25519publickey",3]],[["result",4,["ed25519privatekey","error"]],["ed25519privatekey",3],["error",4]]],[[["str",15],["ed25519publickey",3]],[["result",4,["ed25519privatekey","error"]],["ed25519privatekey",3],["error",4]]],[[["str",15],["ed25519publickey",3]],[["result",4,["ed25519privatekey","error"]],["ed25519privatekey",3],["error",4]]],[[["str",15],["ed25519publickey",3]],[["result",4,["ed25519privatekey","error"]],["ed25519privatekey",3],["error",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["error",4]]],[[["error",4]]],[[["error",3]]],[[["error",4]]],[[["error",3]]],[[["parseerror",3]]],[[["decodeerror",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["inmemorystorage",3]],["storage",4]],[[]],[[["vaultstorage",3]],["storage",4]],[[["githubstorage",3]],["storage",4]],[[["ondiskstorage",3]],["storage",4]],[[["box",3,["storage"]],["namespaced",3,["box"]]],["storage",4]],[[],[["vec",3,["u8"]],["result",4,["vec"]]]],[[["str",15]],[["result",4,["getresponse","error"]],["getresponse",3],["error",4]]],[[["str",15]],[["result",4,["getresponse","error"]],["getresponse",3],["error",4]]],[[["str",15]],[["result",4,["getresponse","error"]],["getresponse",3],["error",4]]],[[["str",15]],[["result",4,["getresponse","error"]],["getresponse",3],["error",4]]],[[["str",15]],[["error",4],["getresponse",3],["result",4,["getresponse","error"]]]],[[["str",15]],[["result",4,["getresponse","error"]],["getresponse",3],["error",4]]],[[["str",15]],[["error",4],["getresponse",3],["result",4,["getresponse","error"]]]],[[["str",15]],[["result",4,["getresponse","error"]],["getresponse",3],["error",4]]],[[["str",15]],[["vec",3,["readresponse"]],["error",4],["result",4,["vec","error"]]]],[[["str",15]],[["result",4,["publickeyresponse","error"]],["error",4],["publickeyresponse",3]]],[[["str",15]],[["result",4,["publickeyresponse","error"]],["error",4],["publickeyresponse",3]]],[[["str",15]],[["result",4,["publickeyresponse","error"]],["error",4],["publickeyresponse",3]]],[[["str",15]],[["result",4,["publickeyresponse","error"]],["error",4],["publickeyresponse",3]]],[[["str",15]],[["result",4,["ed25519publickey","error"]],["ed25519publickey",3],["error",4]]],[[["str",15]],[["result",4,["ed25519publickey","error"]],["ed25519publickey",3],["error",4]]],[[["str",15]],[["result",4,["ed25519publickey","error"]],["ed25519publickey",3],["error",4]]],[[["str",15]],[["result",4,["ed25519publickey","error"]],["ed25519publickey",3],["error",4]]],null,[[["str",15],["ed25519privatekey",3]],[["result",4,["error"]],["error",4]]],[[["str",15],["ed25519privatekey",3]],[["result",4,["error"]],["error",4]]],[[["str",15],["ed25519privatekey",3]],[["result",4,["error"]],["error",4]]],[[["str",15],["ed25519privatekey",3]],[["result",4,["error"]],["error",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["str",15]],[[["publickeyresponse",3]],["bool",15]],[[["error",4]],["bool",15]],[[["getresponse",3]],["bool",15]],[[["policy",3]],["bool",15]],[[["permission",3]],["bool",15]],[[["identity",4]],["bool",15]],[[["string",3]]],[[["string",3],["into",8,["string"]]]],[[["pathbuf",3]]],[[["u64",15],["option",4,["u64"]],["option",4,["string"]],["string",3],["option",4,["u32"]],["u32",15],["bool",15]]],[[]],[[["u64",15]]],[[["vec",3,["permission"]],["permission",3]]],[[["identity",4],["capability",4],["vec",3,["capability"]]]],[[["timeservice",4]]],null,[[]],null,[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[["str",15]],[["result",4,["ed25519publickey","error"]],["ed25519publickey",3],["error",4]]],[[["str",15]],[["result",4,["ed25519publickey","error"]],["ed25519publickey",3],["error",4]]],[[["str",15]],[["result",4,["ed25519publickey","error"]],["ed25519publickey",3],["error",4]]],[[["str",15]],[["result",4,["ed25519publickey","error"]],["ed25519publickey",3],["error",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["serialize",8],["str",15]],[["result",4,["error"]],["error",4]]],[[["serialize",8],["str",15]],[["result",4,["error"]],["error",4]]],[[["serialize",8],["str",15]],[["result",4,["error"]],["error",4]]],[[["serialize",8],["str",15]],[["result",4,["error"]],["error",4]]],[[["serialize",8],["str",15]],[["result",4,["error"]],["error",4]]],[[["serialize",8],["str",15]],[["result",4,["error"]],["error",4]]],[[["serialize",8],["str",15]],[["result",4,["error"]],["error",4]]],[[["str",15]],[["error",4],["result",4,["ed25519signature","error"]],["ed25519signature",3]]],[[["str",15]],[["error",4],["result",4,["ed25519signature","error"]],["ed25519signature",3]]],[[["str",15]],[["error",4],["result",4,["ed25519signature","error"]],["ed25519signature",3]]],[[["str",15]],[["error",4],["result",4,["ed25519signature","error"]],["ed25519signature",3]]],[[["str",15],["ed25519publickey",3]],[["error",4],["result",4,["ed25519signature","error"]],["ed25519signature",3]]],[[["str",15],["ed25519publickey",3]],[["error",4],["result",4,["ed25519signature","error"]],["ed25519signature",3]]],[[["str",15],["ed25519publickey",3]],[["error",4],["result",4,["ed25519signature","error"]],["ed25519signature",3]]],[[["str",15],["ed25519publickey",3]],[["error",4],["result",4,["ed25519signature","error"]],["ed25519signature",3]]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["result",4]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["githubstorage"]],["githubstorage",3]]],[[],[["vaultstorage",3],["result",4,["vaultstorage"]]]],[[],[["result",4,["inmemorystorage"]],["inmemorystorage",3]]],[[],[["result",4,["namespaced"]],["namespaced",3,["box"]]]],[[],[["ondiskstorage",3],["result",4,["ondiskstorage"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"Identity"],[4,"Error"],[4,"Capability"],[4,"Storage"],[8,"KVStorage"],[3,"GitHubStorage"],[3,"Namespaced"],[3,"OnDiskStorage"],[3,"VaultStorage"],[3,"InMemoryStorage"],[3,"PublicKeyResponse"],[3,"GetResponse"],[3,"Policy"],[3,"Permission"],[8,"CryptoStorage"],[13,"EntropyError"],[13,"InternalError"],[13,"KeyAlreadyExists"],[13,"KeyNotSet"],[13,"SerializationError"],[13,"KeyVersionNotFound"],[13,"User"],[13,"GitHubStorage"],[13,"VaultStorage"],[13,"InMemoryStorage"],[13,"NamespacedStorage"],[13,"OnDiskStorage"]]},\
"diem_state_view":{"doc":"This crate defines <code>trait StateView</code>.","t":[13,13,13,8,4,13,11,11,11,11,11,10,11,11,10,11,11,11,11,11,12,12,12],"n":["BlockExecution","ChunkExecution","Miscellaneous","StateView","StateViewId","TransactionValidation","borrow","borrow_mut","clone","clone_into","from","get","id","into","is_genesis","to_owned","try_from","try_into","type_id","vzip","base_version","block_id","first_version"],"q":["diem_state_view","","","","","","","","","","","","","","","","","","","","diem_state_view::StateViewId","",""],"d":["LEC applying a block.","State-sync applying a chunk of transactions.","For test, db-bootstrapper, etc. Usually not aimed to pass …","<code>StateView</code> is a trait that defines a read-only snapshot of …","","VmValidator verifying incoming transaction.","","","","","","Gets the state for a single access path.","For logging and debugging purpose, identifies what this …","","VM needs this method to know whether the current state …","","","","","","","",""],"i":[1,1,1,0,0,1,1,1,1,1,1,2,2,1,2,1,1,1,1,1,3,4,5],"f":[null,null,null,null,null,null,[[]],[[]],[[],["stateviewid",4]],[[]],[[]],[[["accesspath",3]],[["option",4,["vec"]],["result",6,["option"]]]],[[],["stateviewid",4]],[[]],[[],["bool",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null],"p":[[4,"StateViewId"],[8,"StateView"],[13,"TransactionValidation"],[13,"BlockExecution"],[13,"ChunkExecution"]]},\
"diem_swarm":{"doc":"","t":[0,3,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["faucet","Process","borrow","borrow_mut","drop","from","health_check_url","into","mint_url","start","try_from","try_into","type_id","vzip","wait_for_connectivity"],"q":["diem_swarm","diem_swarm::faucet","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,null,[[]],[[]],[[]],[[]],[[],["url",3]],[[]],[[],["string",3]],[[["u16",15],["path",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["result",6]]],"p":[[3,"Process"]]},\
"diem_temppath":{"doc":"","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["TempPath","as_ref","borrow","borrow_mut","create_as_dir","create_as_file","default","drop","eq","fmt","from","into","ne","new","new_with_temp_dir","path","persist","try_from","try_into","type_id","vzip"],"q":["diem_temppath","","","","","","","","","","","","","","","","","","","",""],"d":["A simple wrapper for creating a temporary directory that …","","","","","","","","","","","","","Create new, uninitialized temporary path in the system …","Create new, uninitialized temporary path in the specified …","Return the underlying path to this temporary directory.","Keep the temp path","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[],["path",3]],[[]],[[]],[[],["result",6]],[[],["result",6]],[[]],[[]],[[["temppath",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[["temppath",3]],["bool",15]],[[]],[[["pathbuf",3]]],[[],["path",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"TempPath"]]},\
"diem_time_service":{"doc":"Abstract time service","t":[13,13,13,13,4,8,4,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,10,11,11,0,11,10,11,11,11,10,11,11,0,11,10,11,11,10,11,11,10,11,10,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["MockSleep","MockTimeService","RealSleep","RealTimeService","Sleep","SleepTrait","TimeService","TimeServiceTrait","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","fmt","fmt","from","from","from","from","from","from","interval","interval","interval","interval_at","interval_at","into","into","into_future","into_mock","is_elapsed","is_elapsed","is_elapsed","mock","mock","now","now","now_secs","now_secs","now_unix_time","now_unix_time","poll","real","real","reset","reset","reset","reset_until","reset_until","reset_until","sleep","sleep","sleep_blocking","sleep_blocking","sleep_until","sleep_until","timeout","timeout","timeout","timeout_at","timeout_at","to_owned","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","0","0","0","0","Interval","borrow","borrow_mut","fmt","from","into","is_terminated","new","poll_next","try_from","try_into","type_id","MockSleep","MockTimeService","advance","advance_async","advance_ms","advance_ms_async","advance_next","advance_next_async","advance_secs","advance_secs_async","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","drop","fmt","fmt","from","from","into","into","into_future","is_elapsed","new","new_auto_advance","new_auto_advance_for","now","now_unix_time","num_waiters","poll","reset","reset_until","sleep","sleep_blocking","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","RealSleep","RealTimeService","borrow","borrow_mut","clone","clone_into","default","fmt","from","into","new","now","now_unix_time","sleep","sleep_blocking","to_owned","try_from","try_into","type_id","Elapsed","Timeout","borrow","borrow","borrow_mut","borrow_mut","eq","fmt","fmt","from","from","into","into","into_future","into_inner","new","poll","to_string","try_from","try_from","try_into","try_into","try_poll","type_id","type_id"],"q":["diem_time_service","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_time_service::Sleep","","diem_time_service::TimeService","","diem_time_service::interval","","","","","","","","","","","","diem_time_service::mock","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_time_service::real","","","","","","","","","","","","","","","","","","","diem_time_service::timeout","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","A <code>Future</code> that resolves after some time has elapsed (either …","","<code>TimeService</code> abstracts all time-related operations in one …","","","","","","","","","","","","","","","","","","Creates a new <code>Interval</code> that yields with interval of <code>period</code>…","Creates a new <code>Interval</code> that yields with interval of <code>period</code>…","Creates a new <code>Interval</code> that yields with interval of <code>period</code>…","Creates a new <code>Interval</code> that yields with interval of <code>period</code>…","","","","","Returns <code>true</code> if this <code>Sleep</code>’s requested wait duration has …","","","","Create a mock, simulated time service that does not query …","Query a monotonically nondecreasing clock. Returns an …","Query a monotonically nondecreasing clock. Returns an …","Query the current unix timestamp in seconds.","Query the current unix timestamp in seconds.","Query the current unix timestamp as a <code>Duration</code>.","Query the current unix timestamp as a <code>Duration</code>.","","","Create a new real, production time service that actually …","Resets this <code>Sleep</code> to wait again for <code>duration</code>.","","","Reset this <code>Sleep</code> to wait again until the <code>deadline</code>.","","","Return a <code>Future</code> that waits until <code>duration</code> has passed.","Return a <code>Future</code> that waits until <code>duration</code> has passed.","Blocks the current thread until <code>duration</code> time has passed.","Blocks the current thread until <code>duration</code> time has passed.","Return a <code>Future</code> that waits until the <code>deadline</code>.","Return a <code>Future</code> that waits until the <code>deadline</code>.","","Require a <code>Future</code> to complete before the specified duration …","Require a <code>Future</code> to complete before the specified duration …","Require a <code>Future</code> to complete before the <code>deadline</code>.","Require a <code>Future</code> to complete before the <code>deadline</code>.","","","","","","","","","","","","","","Stream returned by <code>TimeService::interval</code>.","","","","","","We implement <code>FusedStream</code> here to make it more convenient …","","","","","","A <code>Future</code> that resolves when the simulated time in the …","A <code>TimeService</code> that simulates time and allows for …","Advance time by <code>duration</code> and wake any pending waiters …","Advance time by <code>duration</code> and wake any pending waiters …","Advance time by <code>duration</code> milliseconds. See <code>advance</code>.","Advance time by <code>duration</code> milliseconds. See <code>advance_async</code>.","Advance time to the next pending waiter, wake it up, and …","Advance time to the next pending waiter, wake it up, and …","Advance time by <code>duration</code> seconds. See <code>advance</code>.","Advance time by <code>duration</code> seconds. See <code>advance_async</code>.","","","","","","","","","","","","","","","","Create a new <code>MockTimeService</code> with no auto advance. Time …","Create a new <code>MockTimeService</code> that will auto advance …","Create a new <code>MockTimeService</code> that will auto advance until …","","","Return the number of pending <code>Sleep</code> waiters.","","","","","","","","","","","","","","The real production tokio <code>TimeService</code>.","","","","","","","","","","","","","","","","","","Error returned by <code>Timeout</code>.","Future returned by <code>TimeService::timeout</code>.","","","","","","","","","","","","","Consumes this timeout, returning the underlying value.","","","","","","","","","",""],"i":[1,2,1,2,0,0,0,0,2,1,2,1,2,2,2,2,1,2,2,2,1,1,1,0,2,3,2,3,2,1,1,2,4,5,1,0,2,3,2,2,3,3,2,1,0,2,4,5,1,4,5,1,3,2,3,2,2,3,0,2,3,2,3,2,2,1,2,2,2,1,2,1,6,7,8,9,0,10,10,10,10,10,10,10,10,10,10,10,0,0,11,11,11,11,11,11,11,11,11,12,11,12,11,11,12,11,12,11,12,11,12,12,12,11,11,11,11,11,11,12,12,12,11,11,11,11,12,11,12,11,12,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,14,15,14,15,14,14,14,14,15,14,15,15,15,15,15,14,14,15,14,15,15,14,15],"f":[null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["timeservice",4]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["mocktimeservice",3]],["timeservice",4]],[[["realtimeservice",3]],["timeservice",4]],[[]],[[["mocksleep",3]]],[[["realsleep",6]]],[[]],null,[[["duration",3]],["interval",3]],[[["duration",3]],["interval",3]],[[["duration",3],["instant",3]],["interval",3]],[[["duration",3],["instant",3]],["interval",3]],[[]],[[]],[[]],[[],["mocktimeservice",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[]],[[],["instant",3]],[[],["instant",3]],[[],["u64",15]],[[],["u64",15]],[[],["duration",3]],[[],["duration",3]],[[["pin",3],["context",3]],["poll",4]],null,[[]],[[["pin",3],["duration",3]]],[[["pin",3],["duration",3]]],[[["pin",3],["duration",3]]],[[["pin",3],["instant",3]]],[[["pin",3],["instant",3]]],[[["pin",3],["instant",3]]],[[["duration",3]],["sleep",4]],[[["duration",3]],["sleep",4]],[[["duration",3]]],[[["duration",3]]],[[["instant",3]],["sleep",4]],[[["instant",3]],["sleep",4]],null,[[["future",8],["duration",3]],[["future",8],["timeout",3]]],[[["future",8],["duration",3]],[["future",8],["timeout",3]]],[[["future",8],["instant",3]],[["future",8],["timeout",3]]],[[["future",8],["instant",3]],[["future",8],["timeout",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["realtimeservice"]],["realtimeservice",3]]],[[],[["mocktimeservice",3],["result",4,["mocktimeservice"]]]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["bool",15]],[[["duration",3],["sleep",4]]],[[["pin",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,[[["duration",3]],["usize",15]],[[["duration",3]]],[[["u64",15]],["usize",15]],[[["u64",15]]],[[],[["option",4,["duration"]],["duration",3]]],[[]],[[["u64",15]],["usize",15]],[[["u64",15]]],[[]],[[]],[[]],[[]],[[],["mocktimeservice",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[["duration",3]]],[[],["instant",3]],[[],["duration",3]],[[],["usize",15]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["duration",3]]],[[["pin",3],["instant",3]]],[[["duration",3]],["sleep",4]],[[["duration",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[],["realtimeservice",3]],[[]],[[],["realtimeservice",3]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["instant",3]],[[],["duration",3]],[[["duration",3]],["sleep",4]],[[["duration",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[]],[[["elapsed",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["sleep",4]]],[[["pin",3],["context",3]],["poll",4]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],["poll",4]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[4,"Sleep"],[4,"TimeService"],[8,"TimeServiceTrait"],[8,"SleepTrait"],[6,"RealSleep"],[13,"RealSleep"],[13,"MockSleep"],[13,"RealTimeService"],[13,"MockTimeService"],[3,"Interval"],[3,"MockTimeService"],[3,"MockSleep"],[3,"RealTimeService"],[3,"Elapsed"],[3,"Timeout"]]},\
"diem_transaction_benchmarks":{"doc":"","t":[0,0,5,5,18,18,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["measurement","transactions","cpu_time_measurement","wall_time_measurement","DEFAULT_NUM_ACCOUNTS","DEFAULT_NUM_TRANSACTIONS","TransactionBencher","bench","bench_parallel","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","new","num_accounts","num_transactions","to_owned","try_from","try_into","type_id","vzip"],"q":["diem_transaction_benchmarks","","diem_transaction_benchmarks::measurement","","diem_transaction_benchmarks::transactions","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","The number of accounts created by default.","The number of transactions created by default.","Benchmarking support for transactions.","Runs the bencher.","Runs the bencher.","","","","","","","","","","","","Creates a new transaction bencher with default settings.","Sets a custom number of accounts.","Sets a custom number of transactions.","","","","",""],"i":[0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,null,[[],[["criterion",3,["posixtime"]],["posixtime",4]]],[[],["criterion",3]],null,null,null,[[["bencher",3]]],[[["bencher",3]]],[[]],[[]],[[],["transactionbencher",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"TransactionBencher"]]},\
"diem_transaction_builder":{"doc":"","t":[0,0,5,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["error_explain","stdlib","get_explanation","AddCurrencyToAccount","AddCurrencyToAccount","AddRecoveryRotationCapability","AddRecoveryRotationCapability","AddValidatorAndReconfigure","AddValidatorAndReconfigure","AddVaspDomain","Burn","BurnTxnFees","BurnTxnFees","BurnWithAmount","CancelBurn","CancelBurnWithAmount","CreateChildVaspAccount","CreateChildVaspAccount","CreateDesignatedDealer","CreateDesignatedDealer","CreateParentVaspAccount","CreateParentVaspAccount","CreateRecoveryAddress","CreateRecoveryAddress","CreateValidatorAccount","CreateValidatorAccount","CreateValidatorOperatorAccount","CreateValidatorOperatorAccount","CreateVaspDomains","ForceExpire","FreezeAccount","FreezeAccount","GcBallots","InitializeDiemConsensusConfig","OptInToCrsn","PeerToPeerBySigners","PeerToPeerWithMetadata","PeerToPeerWithMetadata","Preburn","Preburn","PublishSharedEd25519PublicKey","PublishSharedEd25519PublicKey","RegisterValidatorConfig","RegisterValidatorConfig","RemoveValidatorAndReconfigure","RemoveValidatorAndReconfigure","RemoveVaspDomain","RotateAuthenticationKey","RotateAuthenticationKey","RotateAuthenticationKeyWithNonce","RotateAuthenticationKeyWithNonce","RotateAuthenticationKeyWithNonceAdmin","RotateAuthenticationKeyWithNonceAdmin","RotateAuthenticationKeyWithRecoveryAddress","RotateAuthenticationKeyWithRecoveryAddress","RotateDualAttestationInfo","RotateDualAttestationInfo","RotateSharedEd25519PublicKey","RotateSharedEd25519PublicKey","ScriptCall","ScriptFunctionCall","SetGasConstants","SetValidatorConfigAndReconfigure","SetValidatorConfigAndReconfigure","SetValidatorOperator","SetValidatorOperator","SetValidatorOperatorWithNonceAdmin","SetValidatorOperatorWithNonceAdmin","TieredMint","TieredMint","UnfreezeAccount","UnfreezeAccount","UpdateDiemConsensusConfig","UpdateDiemVersion","UpdateDiemVersion","UpdateDualAttestationLimit","UpdateDualAttestationLimit","UpdateExchangeRate","UpdateExchangeRate","UpdateMintingAbility","UpdateMintingAbility","arbitrary_with","arbitrary_with","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decode","decode","encode","encode","encode_add_currency_to_account_script","encode_add_currency_to_account_script_function","encode_add_recovery_rotation_capability_script","encode_add_recovery_rotation_capability_script_function","encode_add_validator_and_reconfigure_script","encode_add_validator_and_reconfigure_script_function","encode_add_vasp_domain_script_function","encode_burn_script","encode_burn_txn_fees_script","encode_burn_txn_fees_script_function","encode_burn_with_amount_script_function","encode_cancel_burn_script","encode_cancel_burn_with_amount_script_function","encode_create_child_vasp_account_script","encode_create_child_vasp_account_script_function","encode_create_designated_dealer_script","encode_create_designated_dealer_script_function","encode_create_parent_vasp_account_script","encode_create_parent_vasp_account_script_function","encode_create_recovery_address_script","encode_create_recovery_address_script_function","encode_create_validator_account_script","encode_create_validator_account_script_function","encode_create_validator_operator_account_script","encode_create_validator_operator_account_script_function","encode_create_vasp_domains_script_function","encode_force_expire_script_function","encode_freeze_account_script","encode_freeze_account_script_function","encode_gc_ballots_script_function","encode_initialize_diem_consensus_config_script_function","encode_opt_in_to_crsn_script_function","encode_peer_to_peer_by_signers_script_function","encode_peer_to_peer_with_metadata_script","encode_peer_to_peer_with_metadata_script_function","encode_preburn_script","encode_preburn_script_function","encode_publish_shared_ed25519_public_key_script","encode_publish_shared_ed25519_public_key_script_function","encode_register_validator_config_script","encode_register_validator_config_script_function","encode_remove_validator_and_reconfigure_script","encode_remove_validator_and_reconfigure_script_function","encode_remove_vasp_domain_script_function","encode_rotate_authentication_key_script","encode_rotate_authentication_key_script_function","encode_rotate_authentication_key_with_nonce_admin_script","encode_rotate_authentication_key_with_nonce_admin_script_function","encode_rotate_authentication_key_with_nonce_script","encode_rotate_authentication_key_with_nonce_script_function","encode_rotate_authentication_key_with_recovery_address_script","encode_rotate_authentication_key_with_recovery_address_script_function","encode_rotate_dual_attestation_info_script","encode_rotate_dual_attestation_info_script_function","encode_rotate_shared_ed25519_public_key_script","encode_rotate_shared_ed25519_public_key_script_function","encode_set_gas_constants_script_function","encode_set_validator_config_and_reconfigure_script","encode_set_validator_config_and_reconfigure_script_function","encode_set_validator_operator_script","encode_set_validator_operator_script_function","encode_set_validator_operator_with_nonce_admin_script","encode_set_validator_operator_with_nonce_admin_script_function","encode_tiered_mint_script","encode_tiered_mint_script_function","encode_unfreeze_account_script","encode_unfreeze_account_script_function","encode_update_diem_consensus_config_script_function","encode_update_diem_version_script","encode_update_diem_version_script_function","encode_update_dual_attestation_limit_script","encode_update_dual_attestation_limit_script_function","encode_update_exchange_rate_script","encode_update_exchange_rate_script_function","encode_update_minting_ability_script","encode_update_minting_ability_script_function","eq","eq","fmt","fmt","from","from","into","into","name","ne","ne","partial_cmp","partial_cmp","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","add_all_currencies","add_all_currencies","add_all_currencies","addr","allow_minting","amount","amount","auth_key_prefix","auth_key_prefix","auth_key_prefix","auth_key_prefix","auth_key_prefix","child_address","child_initial_balance","coin_type","coin_type","coin_type","coin_type","consensus_pubkey","consensus_pubkey","currency","currency","currency","currency","currency","designated_dealer_address","fullnode_network_addresses","fullnode_network_addresses","human_name","human_name","human_name","human_name","major","metadata","metadata_signature","mint_amount","new_account_address","new_account_address","new_account_address","new_exchange_rate_denominator","new_exchange_rate_numerator","new_key","new_key","new_key","new_key","new_key","new_micro_xdx_limit","new_url","operator_account","operator_account","operator_name","operator_name","payee","preburn_address","preburn_address","public_key","public_key","recovery_address","recovery_address","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","tier_index","to_freeze_account","to_recover","to_unfreeze_account","token","token","token","validator_account","validator_account","validator_address","validator_address","validator_name","validator_name","validator_network_addresses","validator_network_addresses","add_all_currencies","add_all_currencies","add_all_currencies","addr","addr","address","address","allow_minting","amount","amount","amount","amount","amount","auth_key_prefix","auth_key_prefix","auth_key_prefix","auth_key_prefix","auth_key_prefix","child_address","child_initial_balance","coin_type","coin_type","coin_type","coin_type","config","consensus_pubkey","consensus_pubkey","crsn_size","currency","currency","currency","currency","currency","currency","default_account_size","designated_dealer_address","domain","domain","fullnode_network_addresses","fullnode_network_addresses","gas_unit_scaling_factor","global_memory_per_byte_cost","global_memory_per_byte_write_cost","human_name","human_name","human_name","human_name","intrinsic_gas_per_byte","large_transaction_cutoff","major","max_price_per_gas_unit","max_transaction_size_in_bytes","maximum_number_of_gas_units","metadata","metadata","metadata_signature","min_price_per_gas_unit","min_transaction_gas_units","mint_amount","new_account_address","new_account_address","new_account_address","new_exchange_rate_denominator","new_exchange_rate_numerator","new_key","new_key","new_key","new_key","new_key","new_micro_xdx_limit","new_url","operator_account","operator_account","operator_name","operator_name","payee","preburn_address","preburn_address","proposal","public_key","public_key","recovery_address","recovery_address","shift_amount","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","tier_index","to_freeze_account","to_recover","to_unfreeze_account","token","token","token","validator_account","validator_account","validator_address","validator_address","validator_name","validator_name","validator_network_addresses","validator_network_addresses"],"q":["diem_transaction_builder","","diem_transaction_builder::error_explain","diem_transaction_builder::stdlibdiem_transaction_builder::stdlib::ScriptCall","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_transaction_builder::stdlib::ScriptFunctionCall","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A module for looking up the human-readable explanation of …","Conversion library between a structured representation of …","Given the module ID and the abort code raised from that …","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","gc_ballots deletes all the expired ballots of the type …","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Structured representation of a call into a known Move …","Structured representation of a call into a known Move …","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","","","","","","","","","","","Try to recognize a Diem <code>Script</code> and convert it into a …","Try to recognize a Diem <code>TransactionPayload</code> and convert it …","Build a Diem <code>Script</code> from a structured object <code>ScriptCall</code>.","Build a Diem <code>TransactionPayload</code> from a structured object …","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","gc_ballots deletes all the expired ballots of the type …","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","","","","","","","","","Return the name of a Diem <code>Script</code> from a structured object …i":[0,0,0,1,2,1,2,1,2,2,1,1,2,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,2,2,1,2,2,2,2,2,1,2,1,2,1,2,1,2,1,2,2,1,2,1,2,1,2,1,2,1,2,1,2,0,0,2,1,2,1,2,1,2,1,2,1,2,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,2,1,2,1,2,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,3,4,5,4,6,7,8,3,4,5,9,10,3,3,11,3,5,12,13,14,15,4,7,16,6,12,13,14,4,5,9,10,17,7,7,12,5,9,10,16,16,18,19,20,21,22,23,22,24,25,24,25,7,26,27,28,29,30,21,31,26,4,5,9,10,32,33,19,20,25,12,34,17,23,16,12,32,21,34,26,27,8,13,14,31,33,31,33,13,14,35,36,37,36,38,39,40,41,42,43,44,45,46,35,36,37,47,48,35,35,49,35,37,50,51,52,53,54,55,36,44,45,56,41,57,50,39,40,52,53,57,57,57,36,37,47,48,57,57,58,57,57,57,44,45,45,57,57,50,37,47,48,56,56,59,60,61,62,63,64,63,65,66,65,66,45,42,43,38,67,68,69,62,70,71,42,36,37,47,48,72,73,74,60,61,57,66,50,75,51,58,64,56,50,72,62,75,42,43,46,52,53,71,74,71,74,52,53],"f":[null,null,[[["u64",15],["moduleid",3]],[["errorcontext",3],["option",4,["errorcontext"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["scriptcall",4]],[[],["scriptfunctioncall",4]],[[]],[[]],[[["script",3]],[["scriptcall",4],["option",4,["scriptcall"]]]],[[["transactionpayload",4]],[["option",4,["scriptfunctioncall"]],["scriptfunctioncall",4]]],[[],["script",3]],[[],["transactionpayload",4]],[[["typetag",4]],["script",3]],[[["typetag",4]],["transactionpayload",4]],[[["accountaddress",3]],["script",3]],[[["accountaddress",3]],["transactionpayload",4]],[[["u64",15],["u8",15],["accountaddress",3],["vec",3,["u8"]]],["script",3]],[[["u64",15],["u8",15],["accountaddress",3],["vec",3,["u8"]]],["transactionpayload",4]],[[["vec",3,["u8"]],["u8",15],["accountaddress",3]],["transactionpayload",4]],[[["u64",15],["typetag",4],["accountaddress",3]],["script",3]],[[["typetag",4]],["script",3]],[[["typetag",4]],["transactionpayload",4]],[[["u64",15],["typetag",4],["accountaddress",3]],["transactionpayload",4]],[[["typetag",4],["accountaddress",3]],["script",3]],[[["u64",15],["typetag",4],["accountaddress",3]],["transactionpayload",4]],[[["u64",15],["u8",15],["typetag",4],["accountaddress",3],["vec",3,["u8"]],["bool",15]],["script",3]],[[["u64",15],["u8",15],["typetag",4],["accountaddress",3],["vec",3,["u8"]],["bool",15]],["transactionpayload",4]],[[["u64",15],["u8",15],["typetag",4],["accountaddress",3],["vec",3,["u8"]],["bool",15]],["script",3]],[[["u64",15],["u8",15],["typetag",4],["accountaddress",3],["vec",3,["u8"]],["bool",15]],["transactionpayload",4]],[[["u64",15],["u8",15],["typetag",4],["accountaddress",3],["vec",3,["u8"]],["bool",15]],["script",3]],[[["u64",15],["u8",15],["typetag",4],["accountaddress",3],["vec",3,["u8"]],["bool",15]],["transactionpayload",4]],[[],["script",3]],[[],["transactionpayload",4]],[[["u64",15],["u8",15],["accountaddress",3],["vec",3,["u8"]]],["script",3]],[[["u64",15],["u8",15],["accountaddress",3],["vec",3,["u8"]]],["transactionpayload",4]],[[["u64",15],["u8",15],["accountaddress",3],["vec",3,["u8"]]],["script",3]],[[["u64",15],["u8",15],["accountaddress",3],["vec",3,["u8"]]],["transactionpayload",4]],[[],["transactionpayload",4]],[[["u64",15]],["transactionpayload",4]],[[["u64",15],["accountaddress",3]],["script",3]],[[["u64",15],["accountaddress",3]],["transactionpayload",4]],[[["typetag",4],["accountaddress",3]],["transactionpayload",4]],[[["u64",15]],["transactionpayload",4]],[[["u64",15]],["transactionpayload",4]],[[["u64",15],["u8",15],["typetag",4],["vec",3,["u8"]]],["transactionpayload",4]],[[["u64",15],["u8",15],["typetag",4],["accountaddress",3],["vec",3,["u8"]]],["script",3]],[[["u64",15],["u8",15],["typetag",4],["accountaddress",3],["vec",3,["u8"]]],["transactionpayload",4]],[[["u64",15],["typetag",4]],["script",3]],[[["u64",15],["typetag",4]],["transactionpayload",4]],[[["vec",3,["u8"]],["u8",15]],["script",3]],[[["vec",3,["u8"]],["u8",15]],["transactionpayload",4]],[[["u8",15],["accountaddress",3],["vec",3,["u8"]]],["script",3]],[[["u8",15],["accountaddress",3],["vec",3,["u8"]]],["transactionpayload",4]],[[["u64",15],["u8",15],["accountaddress",3],["vec",3,["u8"]]],["script",3]],[[["u64",15],["u8",15],["accountaddress",3],["vec",3,["u8"]]],["transactionpayload",4]],[[["vec",3,["u8"]],["u8",15],["accountaddress",3]],["transactionpayload",4]],[[["vec",3,["u8"]],["u8",15]],["script",3]],[[["vec",3,["u8"]],["u8",15]],["transactionpayload",4]],[[["u64",15],["vec",3,["u8"]],["u8",15]],["script",3]],[[["u64",15],["vec",3,["u8"]],["u8",15]],["transactionpayload",4]],[[["u64",15],["vec",3,["u8"]],["u8",15]],["script",3]],[[["u64",15],["vec",3,["u8"]],["u8",15]],["transactionpayload",4]],[[["vec",3,["u8"]],["u8",15],["accountaddress",3]],["script",3]],[[["vec",3,["u8"]],["u8",15],["accountaddress",3]],["transactionpayload",4]],[[["vec",3,["u8"]],["u8",15]],["script",3]],[[["vec",3,["u8"]],["u8",15]],["transactionpayload",4]],[[["vec",3,["u8"]],["u8",15]],["script",3]],[[["vec",3,["u8"]],["u8",15]],["transactionpayload",4]],[[["u64",15]],["transactionpayload",4]],[[["u8",15],["accountaddress",3],["vec",3,["u8"]]],["script",3]],[[["u8",15],["accountaddress",3],["vec",3,["u8"]]],["transactionpayload",4]],[[["vec",3,["u8"]],["u8",15],["accountaddress",3]],["script",3]],[[["vec",3,["u8"]],["u8",15],["accountaddress",3]],["transactionpayload",4]],[[["u64",15],["u8",15],["accountaddress",3],["vec",3,["u8"]]],["script",3]],[[["u64",15],["u8",15],["accountaddress",3],["vec",3,["u8"]]],["transactionpayload",4]],[[["u64",15],["typetag",4],["accountaddress",3]],["script",3]],[[["u64",15],["typetag",4],["accountaddress",3]],["transactionpayload",4]],[[["u64",15],["accountaddress",3]],["script",3]],[[["u64",15],["accountaddress",3]],["transactionpayload",4]],[[["u64",15],["vec",3,["u8"]],["u8",15]],["transactionpayload",4]],[[["u64",15]],["script",3]],[[["u64",15]],["transactionpayload",4]],[[["u64",15]],["script",3]],[[["u64",15]],["transactionpayload",4]],[[["u64",15],["typetag",4]],["script",3]],[[["u64",15],["typetag",4]],["transactionpayload",4]],[[["typetag",4],["bool",15]],["script",3]],[[["typetag",4],["bool",15]],["transactionpayload",4]],[[["scriptcall",4]],["bool",15]],[[["scriptfunctioncall",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["str",15]],[[["scriptcall",4]],["bool",15]],[[["scriptfunctioncall",4]],["bool",15]],[[["scriptcall",4]],[["option",4,["ordering"]],["ordering",4]]],[[["scriptfunctioncall",4]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"ScriptCall"],[4,"ScriptFunctionCall"],[13,"CreateChildVaspAccount"],[13,"CreateDesignatedDealer"],[13,"CreateParentVaspAccount"],[13,"UpdateMintingAbility"],[13,"PeerToPeerWithMetadata"],[13,"Preburn"],[13,"CreateValidatorAccount"],[13,"CreateValidatorOperatorAccount"],[13,"BurnTxnFees"],[13,"TieredMint"],[13,"RegisterValidatorConfig"],[13,"SetValidatorConfigAndReconfigure"],[13,"AddCurrencyToAccount"],[13,"UpdateExchangeRate"],[13,"UpdateDiemVersion"],[13,"RotateAuthenticationKey"],[13,"RotateAuthenticationKeyWithNonce"],[13,"RotateAuthenticationKeyWithNonceAdmin"],[13,"RotateAuthenticationKeyWithRecoveryAddress"],[13,"RotateDualAttestationInfo"],[13,"UpdateDualAttestationLimit"],[13,"SetValidatorOperator"],[13,"SetValidatorOperatorWithNonceAdmin"],[13,"Burn"],[13,"CancelBurn"],[13,"PublishSharedEd25519PublicKey"],[13,"RotateSharedEd25519PublicKey"],[13,"AddRecoveryRotationCapability"],[13,"AddValidatorAndReconfigure"],[13,"FreezeAccount"],[13,"RemoveValidatorAndReconfigure"],[13,"UnfreezeAccount"],[13,"CreateChildVaspAccount"],[13,"CreateDesignatedDealer"],[13,"CreateParentVaspAccount"],[13,"GcBallots"],[13,"AddVaspDomain"],[13,"RemoveVaspDomain"],[13,"UpdateMintingAbility"],[13,"BurnWithAmount"],[13,"CancelBurnWithAmount"],[13,"PeerToPeerBySigners"],[13,"PeerToPeerWithMetadata"],[13,"Preburn"],[13,"CreateValidatorAccount"],[13,"CreateValidatorOperatorAccount"],[13,"BurnTxnFees"],[13,"TieredMint"],[13,"UpdateDiemConsensusConfig"],[13,"RegisterValidatorConfig"],[13,"SetValidatorConfigAndReconfigure"],[13,"OptInToCrsn"],[13,"AddCurrencyToAccount"],[13,"UpdateExchangeRate"],[13,"SetGasConstants"],[13,"UpdateDiemVersion"],[13,"RotateAuthenticationKey"],[13,"RotateAuthenticationKeyWithNonce"],[13,"RotateAuthenticationKeyWithNonceAdmin"],[13,"RotateAuthenticationKeyWithRecoveryAddress"],[13,"RotateDualAttestationInfo"],[13,"UpdateDualAttestationLimit"],[13,"SetValidatorOperator"],[13,"SetValidatorOperatorWithNonceAdmin"],[13,"PublishSharedEd25519PublicKey"],[13,"RotateSharedEd25519PublicKey"],[13,"AddRecoveryRotationCapability"],[13,"ForceExpire"],[13,"AddValidatorAndReconfigure"],[13,"FreezeAccount"],[13,"InitializeDiemConsensusConfig"],[13,"RemoveValidatorAndReconfigure"],[13,"UnfreezeAccount"]]},\
"diem_transaction_replay":{"doc":"","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["DiemDebugger","annotate_account_state_at_version","annotate_events","annotate_key_accounts_at_version","bisect_transactions_by_script","borrow","borrow_mut","db","deref","deref_mut","drop","execute_past_transactions","execute_transactions_at_version","execute_transactions_by_epoch","execute_writeset_at_version","from","get_diem_framework_modules_at_version","get_latest_version","get_version_by_account_sequence","init","into","json_rpc","new","pretty_print_events","run_session_at_version","try_from","try_into","type_id","vzip"],"q":["diem_transaction_replay","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[["bool",15],["version",6],["accountaddress",3]],[["option",4,["annotatedaccountstateblob"]],["result",6,["option"]]]],[[],[["result",6,["vec"]],["vec",3,["annotatedmovestruct"]]]],[[["version",6],["bool",15]],[["result",6,["vec"]],["vec",3]]],[[["option",4,["movechanges"]],["movechanges",3],["str",15],["version",6],["accountaddress",3]],[["option",4,["version"]],["result",6,["option"]]]],[[]],[[]],[[["asref",8,["path"]],["path",3],["clone",8]],["result",6]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["u64",15],["version",6],["bool",15]],[["result",6,["vec"]],["vec",3,["transactionoutput"]]]],[[["transaction",4],["version",6],["vec",3,["transaction"]]],[["result",6,["vec"]],["vec",3,["transactionoutput"]]]],[[["vec",3,["transaction"]],["transaction",4],["version",6],["bool",15]],[["result",6,["vec"]],["vec",3,["transactionoutput"]]]],[[["version",6],["writesetpayload",4],["bool",15]],[["result",6,["transactionoutput"]],["transactionoutput",3]]],[[]],[[["version",6],["bool",15]],[["result",6,["vec"]],["vec",3,["compiledmodule"]]]],[[],[["result",6,["version"]],["version",6]]],[[["u64",15],["accountaddress",3]],[["option",4,["version"]],["result",6,["option"]]]],[[],["usize",15]],[[]],[[["str",15]],["result",6]],[[["box",3,["diemvalidatorinterface"]],["diemvalidatorinterface",8]]],[[["u64",15],["eventkey",3]],["result",6]],[[["version",6],["movechanges",3],["option",4,["movechanges"]]],[["changeset",3],["result",6,["changeset"]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"DiemDebugger"]]},\
"diem_transactional_test_harness":{"doc":"","t":[5],"n":["run_test"],"q":["diem_transactional_test_harness"],"d":["Run the Diem transactional test flow, using the given file …"],"i":[0],"f":[[[["path",3]],[["result",6,["box"]],["box",3,["error"]]]]],"p":[]},\
"diem_types":{"doc":"","t":[18,3,18,0,0,0,0,0,11,11,0,0,11,11,0,11,11,11,0,11,11,0,0,11,11,0,0,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,11,0,11,0,0,11,0,0,0,11,0,11,11,0,0,11,11,11,11,11,11,0,0,11,11,11,11,11,11,0,0,0,0,0,11,0,0,3,13,4,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,8,5,5,10,0,0,0,0,0,0,0,0,0,7,17,17,5,5,5,5,5,17,7,17,17,17,5,5,5,7,17,7,7,17,5,5,5,5,7,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,4,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,6,3,17,17,17,17,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,7,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,13,13,4,13,13,13,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,3,3,3,3,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,6,6,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,3,8,11,11,11,11,11,11,11,10,11,11,11,11,11,10,12,12,11,11,11,11,11,11,11,11,10,11,11,3,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,3,3,3,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,13,13,13,3,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,10,10,10,13,13,13,13,13,13,3,13,13,3,13,13,13,13,13,13,4,13,3,13,13,13,13,4,13,13,4,13,13,13,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,17,17,3,17,17,6,6,17,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,3,3,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,3,8,3,3,3,17,17,17,17,3,18,17,8,3,4,3,13,13,3,3,3,11,5,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,6,3,6,3,3,6,6,0,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,6,3,6,17,17,3,3,6,6,6,6,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,6,6,6,3,3,3,3,13,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,3,3,3,3,3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,18,8,16,11,11,11,11,11,11,11,11,11,11,11,11,0,5,5,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,5,5,5,5,5,5,5,5,12,3,13,3,13,13,3,13,13,13,13,13,4,13,3,13,13,13,17,3,3,4,3,13,3,13,13,4,3,13,13,3,3,3,4,4,3,3,3,8,3,3,3,4,13,3,4,3,3,13,3,13,13,13,13,13,3,13,13,3,6,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,12,12,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,4,4,3,3,3,13,13,13,18,17,13,13,13,13,13,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,6,6,6,6,6,8,5,5,10,4,13,3,13,4,13,3,13,13,13,4,13,4,13,3,13,4,13,3,13,4,4,13,3,13,13,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,4,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,5,5,5,5,5,13,13,13,13,13,3,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,6,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,7,17,7,17,7,17,5,5,5,17,17,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,4,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["LENGTH","PeerId","ZERO","access_path","account_address","account_config","account_state","account_state_blob","arbitrary_with","as_ref","block_info","block_metadata","borrow","borrow_mut","chain_id","clone","clone_into","cmp","contract_event","deref","deserialize","diem_id_identifier","diem_timestamp","encode_hex","encode_hex_upper","epoch_change","epoch_state","eq","equivalent","event","fmt","fmt","fmt","fmt","from","from","from_bytes","from_hex","from_hex_literal","from_str","hash","hash","into","into_bytes","ledger_info","mempool_status","move_resource","ne","network_address","new","nibble","on_chain_config","partial_cmp","proof","proptest_types","protocol_spec","random","serde_helper","serialize","short_str_lossless","state_proof","test_helpers","test_only_hash","to_hex","to_hex_literal","to_owned","to_string","to_vec","transaction","trusted_state","try_from","try_from","try_from","try_from","try_into","type_id","validator_config","validator_info","validator_signer","validator_verifier","vm_status","vzip","waypoint","write_set","AccessPath","Code","Path","Resource","address","arbitrary_with","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","code_access_path","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","get_path","get_struct_tag","hash","hash","into","into","ne","ne","new","partial_cmp","partial_cmp","path","resource_access_path","resource_access_vec","serialize","serialize","test_only_hash","test_only_hash","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","AccountAddress","HashAccountAddress","from_identity_public_key","from_public_key","hash","constants","events","resources","account","addresses","coins","designated_dealer","diem","event","ACCOUNT_MODULE","ACCOUNT_MODULE_IDENTIFIER","CORE_CODE_ADDRESS","diem_root_address","reserved_vm_address","testnet_dd_account_address","treasury_compliance_account_address","validator_set_address","XDX_IDENTIFIER","XDX_MODULE","XDX_NAME","XUS_IDENTIFIER","XUS_NAME","coin_name","xdx_type_tag","xus_tag","DESIGNATED_DEALER_MODULE","DESIGNATED_DEALER_MODULE_IDENTIFIER","COIN_MODULE","DIEM_MODULE","DIEM_MODULE_IDENTIFIER","allowed_currency_code_string","currency_code_from_type_tag","from_currency_code_string","type_tag_for_currency_code","EVENT_MODULE","EVENT_MODULE_IDENTIFIER","admin_transaction","base_url_rotation","burn","cancel_burn","compliance_key_rotation","create_account","exchange_rate_update","force_shift","mint","new_block","new_epoch","preburn","received_mint","received_payment","sent_payment","AdminTransactionEvent","borrow","borrow_mut","committed_timestamp_secs","deserialize","fmt","from","into","serialize","test_only_hash","try_from","try_from","try_from_bytes","try_into","type_id","vzip","BaseUrlRotationEvent","borrow","borrow_mut","deserialize","fmt","from","into","new_base_url","serialize","test_only_hash","time_rotated_seconds","try_from","try_from","try_from_bytes","try_into","type_id","vzip","BurnEvent","amount","borrow","borrow_mut","currency_code","deserialize","fmt","from","into","preburn_address","serialize","test_only_hash","try_from","try_from","try_from_bytes","try_into","type_id","vzip","CancelBurnEvent","amount","borrow","borrow_mut","currency_code","deserialize","fmt","from","into","preburn_address","serialize","test_only_hash","try_from","try_from","try_from_bytes","try_into","type_id","vzip","ComplianceKeyRotationEvent","borrow","borrow_mut","deserialize","fmt","from","into","new_compliance_public_key","serialize","test_only_hash","time_rotated_seconds","try_from","try_from","try_from_bytes","try_into","type_id","vzip","CreateAccountEvent","borrow","borrow_mut","created","deserialize","event_key","fmt","from","into","role_id","serialize","test_only_hash","try_from","try_from","try_from_bytes","try_into","type_id","vzip","ToXDXExchangeRateUpdateEvent","borrow","borrow_mut","currency_code","deserialize","fmt","from","into","new_to_xdx_exchange_rate","serialize","test_only_hash","try_from","try_from","try_from_bytes","try_into","type_id","vzip","ForceShiftEvent","bits_at_shift","borrow","borrow_mut","current_min_nonce","deserialize","fmt","from","into","serialize","shift_amount","test_only_hash","try_from","try_from_bytes","try_into","type_id","vzip","MintEvent","amount","borrow","borrow_mut","currency_code","deserialize","fmt","from","into","serialize","test_only_hash","try_from","try_from","try_from_bytes","try_into","type_id","vzip","NewBlockEvent","borrow","borrow_mut","deserialize","fmt","from","into","new","proposed_time","proposer","round","serialize","test_only_hash","try_from","try_from","try_from_bytes","try_into","type_id","vzip","NewEpochEvent","borrow","borrow_mut","deserialize","epoch","event_key","fmt","from","into","serialize","test_only_hash","try_from","try_from","try_from_bytes","try_into","type_id","vzip","PreburnEvent","amount","borrow","borrow_mut","currency_code","deserialize","fmt","from","into","preburn_address","serialize","test_only_hash","try_from","try_from","try_from_bytes","try_into","type_id","vzip","ReceivedMintEvent","amount","borrow","borrow_mut","currency_code","deserialize","destination_address","fmt","from","into","serialize","test_only_hash","try_from","try_from","try_from_bytes","try_into","type_id","vzip","ReceivedPaymentEvent","amount","borrow","borrow_mut","currency_code","deserialize","fmt","from","into","metadata","sender","serialize","test_only_hash","try_from","try_from","try_from_bytes","try_into","type_id","vzip","SentPaymentEvent","amount","borrow","borrow_mut","currency_code","deserialize","fmt","from","into","metadata","new","receiver","serialize","test_only_hash","try_from","try_from","try_from_bytes","try_into","type_id","vzip","account","balance","chain_id","crsn","currency_info","designated_dealer","dual_attestation","freezing_bit","key_rotation_capability","preburn_balance","preburn_queue","preburn_with_metadata","role","role_id","vasp","vasp_domain","withdraw_capability","AccountResource","arbitrary_with","authentication_key","borrow","borrow_mut","deserialize","fmt","from","has_delegated_key_rotation_capability","has_delegated_withdrawal_capability","into","new","received_events","sent_events","sequence_number","serialize","test_only_hash","try_from","try_from","try_into","type_id","vzip","BalanceResource","access_path_for","arbitrary_with","borrow","borrow_mut","coin","deserialize","fmt","from","into","new","serialize","struct_tag_for_currency","test_only_hash","try_from","try_into","type_id","type_params","vzip","ChainIdResource","borrow","borrow_mut","chain_id","deserialize","from","into","try_from","try_into","type_id","vzip","AccountSequenceInfo","CRSN","CRSNResource","Sequential","arbitrary_with","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","eq","equivalent","fmt","fmt","from","from","hash","into","into","min_nonce","min_seq","ne","serialize","size","test_only_hash","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","min_nonce","size","CurrencyInfoResource","borrow","borrow_mut","burn_events","cancel_burn_events","clone","clone_into","convert_to_xdx","currency_code","deserialize","exchange_rate","exchange_rate_update_events","fmt","fractional_part","from","into","mint_events","new","preburn_events","preburn_value","resource_path_for","scaling_factor","serialize","struct_tag_for","test_only_hash","to_owned","total_value","try_from","try_from_bytes","try_into","type_id","vzip","DesignatedDealer","DesignatedDealerPreburns","Preburn","PreburnQueue","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","fmt","fmt","from","from","into","into","received_mint_events","serialize","serialize","test_only_hash","test_only_hash","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","Credential","Limit","base_url","base_url_rotation_events","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compliance_key_rotation_events","compliance_public_key","deserialize","deserialize","eq","expiration_date","fmt","fmt","from","from","human_name","into","into","micro_xdx_limit","ne","serialize","serialize","test_only_hash","test_only_hash","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","FreezingBit","borrow","borrow_mut","deserialize","fmt","from","into","is_frozen","serialize","test_only_hash","try_from","try_into","type_id","vzip","KeyRotationCapabilityResource","arbitrary_with","borrow","borrow_mut","deserialize","fmt","from","into","serialize","test_only_hash","try_from","try_into","type_id","vzip","PreburnResource","access_path_for","arbitrary_with","borrow","borrow_mut","coin","deserialize","fmt","from","into","new","serialize","struct_tag_for_currency","test_only_hash","try_from","try_into","type_id","type_params","vzip","PreburnQueueResource","access_path_for","arbitrary_with","borrow","borrow_mut","deserialize","fmt","from","into","preburns","serialize","struct_tag_for_currency","test_only_hash","try_from","try_into","type_id","type_params","vzip","PreburnWithMetadataResource","access_path_for","arbitrary_with","borrow","borrow_mut","deserialize","fmt","from","into","metadata","new","preburn","serialize","struct_tag_for_currency","test_only_hash","try_from","try_into","type_id","type_params","vzip","AccountRole","ChildVASP","DesignatedDealer","ParentVASP","TreasuryCompliance","Unknown","borrow","borrow_mut","deserialize","fmt","from","into","serialize","test_only_hash","try_from","try_into","type_id","vzip","0","credential","dd_credential","designated_dealer","preburn_balances","vasp","vasp_domain_manager","vasp_domains","RoleId","borrow","borrow_mut","deserialize","fmt","from","into","role_id","serialize","test_only_hash","try_from","try_into","type_id","vzip","ChildVASP","ParentVASP","arbitrary_with","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","fmt","fmt","from","from","into","into","num_children","parent_vasp_addr","serialize","serialize","test_only_hash","test_only_hash","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","VASPDomain","VASPDomainEvent","VASPDomainManager","VASPDomains","VASP_DOMAIN_MODULE_IDENTIFIER","address","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","domain","domain","domain","domains","domains","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","get_domains_list","into","into","into","into","ne","ne","removed","serialize","serialize","serialize","serialize","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from_bytes","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vasp_domain_events","vzip","vzip","vzip","vzip","WithdrawCapabilityResource","arbitrary_with","borrow","borrow_mut","deserialize","fmt","from","into","serialize","test_only_hash","try_from","try_into","type_id","vzip","AccountState","borrow","borrow_mut","default","deserialize","eq","fmt","from","get","get_account_address","get_account_resource","get_account_role","get_balance_resources","get_chain_id_resource","get_config","get_configuration_resource","get_crsn_resource","get_diem_block_resource","get_diem_timestamp_resource","get_diem_version","get_freezing_bit","get_modules","get_preburn_balances","get_preburn_queue_balances","get_registered_currency_info_resources","get_resource","get_resource_impl","get_resources","get_resources_with_type","get_validator_config_resource","get_validator_operator_config_resource","get_validator_set","get_vm_publishing_option","insert","into","into_modules","iter","ne","remove","serialize","test_only_hash","try_from","try_from","try_from","try_into","type_id","vzip","AccountStateBlob","AccountStateBlobHasher","AccountStateWithProof","AccountStatesChunkWithProof","account_blobs","arbitrary_with","arbitrary_with","as_ref","blob","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default_protocol","deserialize","deserialize","deserialize","encode_hex","encode_hex_upper","eq","eq","eq","equivalent","equivalent","equivalent","finish","first_index","first_key","flush","fmt","fmt","fmt","from","from","from","from","from","hash","into","into","into","into","last_index","last_key","ne","ne","ne","new","proof","proof","seed","serialize","serialize","serialize","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update","verify","version","vzip","vzip","vzip","vzip","write","AccountStateWithProof","BlockInfo","GENESIS_EPOCH","GENESIS_ROUND","GENESIS_TIMESTAMP_USECS","GENESIS_VERSION","Round","arbitrary_with","borrow","borrow_mut","change_timestamp","clone","clone_into","deserialize","empty","epoch","eq","equivalent","executed_state_id","fmt","fmt","from","genesis","has_reconfiguration","id","into","is_ordered_only","match_ordered_only","mock_genesis","ne","new","next_block_epoch","next_epoch_state","random","round","serialize","test_only_hash","timestamp_usecs","to_owned","to_string","try_from","try_into","type_id","version","vzip","BlockMetadata","DiemBlockResource","NEW_BLOCK_EVENT_PATH","NewBlockEvent","arbitrary_with","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","deserialize","eq","equivalent","fmt","from","from","from","height","id","into","into","into","into_inner","ne","new","new","new_block_event_key","new_block_events","previous_block_votes","proposer","proposer","round","round","serialize","serialize","serialize","test_only_hash","test_only_hash","test_only_hash","timestamp_usec","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","votes","vzip","vzip","vzip","ChainId","DEVNET","MAINNET","NamedChain","PREMAINNET","TESTING","TESTNET","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deserialize","deserialize_config_chain_id","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from_chain_id","from_str","hash","id","id","into","into","ne","new","serialize","test","test_only_hash","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ContractEvent","ContractEventHasher","ContractEventV0","ContractEventV0Hasher","EventByVersionWithProof","EventWithProof","V0","arbitrary_with","arbitrary_with","arbitrary_with","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default_protocol","deref","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","event","event_data","event_index","finish","finish","flush","flush","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","hash","hash","into","into","into","into","into","into","key","lower_bound_incl","ne","ne","ne","ne","new","new","new","new","proof","seed","seed","sequence_number","serialize","serialize","serialize","serialize","strategy_impl","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","transaction_version","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_tag","update","update","upper_bound_excl","verify","verify","vzip","vzip","vzip","vzip","vzip","vzip","write","write","0","EventByVersionWithProof","EventWithProof","DiemId","DiemIdParseError","DiemIdUserIdentifier","DiemIdVaspDomainIdentifier","as_str","as_str","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_str","into","into","into","into","ne","ne","ne","ne","new","new","new","serialize","serialize","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","user_identifier","vasp_domain_identifier","vzip","vzip","vzip","vzip","DiemTimestamp","DiemTimestampResource","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deserialize","deserialize","diem_timestamp","fmt","fmt","from","from","into","into","microseconds","serialize","serialize","test_only_hash","test_only_hash","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","EpochChangeProof","Verifier","arbitrary_with","borrow","borrow_mut","clone","clone_into","deserialize","epoch","epoch_change_verification_required","eq","equivalent","fmt","from","into","is_ledger_info_stale","ledger_info_with_sigs","more","ne","new","serialize","test_only_hash","to_owned","try_from","try_into","type_id","verify","verify","vzip","EpochState","arbitrary_with","borrow","borrow_mut","clone","clone_into","deserialize","empty","epoch","epoch_change_verification_required","eq","equivalent","fmt","fmt","from","into","is_ledger_info_stale","ne","serialize","test_only_hash","to_owned","to_string","try_from","try_into","type_id","verifier","verify","vzip","EventHandle","EventKey","EventKeyParseError","LENGTH","arbitrary_with","arbitrary_with","as_bytes","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","count","count_mut","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bytes","from_hex","from_str","get_creation_number","get_creator_address","hash","into","into","into","key","ne","ne","new","new","new_from_address","new_from_address","partial_cmp","random","random_handle","serialize","serialize","strategy_impl","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_string","to_string","to_vec","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","LedgerInfo","LedgerInfoHasher","LedgerInfoWithSignatures","LedgerInfoWithV0","V0","add_signature","arbitrary_with","arbitrary_with","arbitrary_with","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_voting_power","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","commit_info","commit_info","consensus_block_id","consensus_data_hash","default","deref","deref_mut","deserialize","deserialize","deserialize","ends_epoch","epoch","eq","eq","eq","equivalent","equivalent","equivalent","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","genesis","genesis","genesis","hash","into","into","into","into","ledger_info","mock_genesis","ne","ne","ne","new","new","new","next_block_epoch","next_epoch_state","remove_signature","round","seed","serialize","serialize","serialize","set_consensus_data_hash","signatures","test_only_hash","test_only_hash","test_only_hash","timestamp_usecs","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","transaction_accumulator_hash","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update","verify_signatures","version","vzip","vzip","vzip","vzip","write","0","Accepted","InvalidSeqNumber","InvalidUpdate","MempoolIsFull","MempoolStatus","MempoolStatusCode","TooManyTransactions","UnknownStatus","VmError","arbitrary_with","arbitrary_with","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","code","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","hash","hash","into","into","message","ne","new","partial_cmp","partial_cmp","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_message","MoveStorage","batch_fetch_resources","batch_fetch_resources_by_version","fetch_synced_version","Any","BCSError","DecryptError","Dns","Dns4","Dns6","DnsName","DnsNameTooLong","EmptyDnsNameString","EmptyError","EmptyProtocolString","Handshake","InvalidDnsNameCharacter","InvalidProtocolString","Ip4","Ip6","IpFilter","Memory","NetworkAddress","NoiseIK","OnlyIp4","OnlyIp6","ParseAddrError","ParseError","ParseIntError","ParseX25519PubkeyError","Protocol","Tcp","UnexpectedEnd","UnknownProtocolType","append_prod_protos","arb_diemnet_addr","arbitrary_with","arbitrary_with","arbitrary_with","as_ref","as_slice","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","encrypt","encrypted","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","extend_from_slice","find_ip_addr","find_noise_proto","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","from_str","hash","hash","hash","into","into","into","into","into","into","into_iter","is_diemnet_addr","matches","mock","ne","ne","ne","parse_dns_tcp","parse_handshake","parse_ip_tcp","parse_memory","parse_noise_ik","parse_tcp","push","rotate_noise_public_key","serialize","serialize","serialize","source","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_socket_addrs","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","AES_GCM_NONCE_LEN","AES_GCM_TAG_LEN","EncNetworkAddress","HKDF_SALT","KEY_LEN","Key","KeyVersion","TEST_SHARED_VAL_NETADDR_KEY","TEST_SHARED_VAL_NETADDR_KEY_VERSION","arbitrary_with","borrow","borrow_mut","clone","clone_into","decrypt","deserialize","encrypt","eq","equivalent","fmt","from","into","key_version","ne","seq_num","serialize","test_only_hash","to_owned","try_from","try_into","type_id","vzip","Nibble","ROOT_NIBBLE_HEIGHT","arbitrary_with","borrow","borrow_mut","clone","clone_into","cmp","deserialize","eq","equivalent","fmt","fmt","from","from","hash","into","ne","nibble_path","partial_cmp","serialize","test_only_hash","to_owned","try_from","try_into","type_id","vzip","BitIterator","NibbleIterator","NibblePath","Peekable","arbitrary_with","bits","bits","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bytes","clone","clone_into","cmp","deserialize","eq","equivalent","fmt","fmt","from","from","from","from_iter","get_nibble","get_nibble_path","hash","into","into","into","into_iter","into_iter","is_empty","is_finished","last","ne","new","new_odd","next","next","next_back","nibbles","num_nibbles","num_nibbles","partial_cmp","peek","peek","peek","pop","push","remaining_nibbles","serialize","skip_common_prefix","test_only_hash","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","visited_nibbles","vzip","vzip","vzip","ADDRESS","CONFIG_ID","ConfigID","ConfigStorage","ConfigurationResource","ConsensusConfigV1","ConsensusConfigV2","DIEM_MAX_KNOWN_VERSION","DIEM_VERSION_2","DIEM_VERSION_3","DIEM_VERSION_4","DiemVersion","IDENTIFIER","ON_CHAIN_CONFIG_REGISTRY","OnChainConfig","OnChainConfigPayload","OnChainConsensusConfig","RegisteredCurrencies","V1","V2","VMConfig","VMPublishingOption","ValidatorSet","access_path","access_path_for_config","arbitrary_with","back_pressure_limit","back_pressure_limit","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bump_epoch_for_test","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","config_address","configs","currency_codes","custom_scripts","decoupled_execution","decoupled_execution","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_default_impl","deserialize_into_config","deserialize_into_config","deserialize_into_config","empty","epoch","epoch","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","events","exclude_round","fetch_config","fetch_config","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","gas_schedule","get","hash","into","into","into","into","into","into","into","into","into","into","into","into_iter","is_open_module","is_open_module","is_open_script","last_reconfiguration_time","leader_reputation_exclude_round","locked","major","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new_epoch_event_key","open","partial_cmp","payload","script_allow_list","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","two_chain","two_chain","two_chain","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","EventAccumulatorInternalNode","MerkleTreeInternalNode","SparseMerkleInternalNode","SparseMerkleLeafNode","SparseMerkleLeafNodeHasher","TestAccumulatorInternalNode","TransactionAccumulatorInternalNode","accumulator","arbitrary_with","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default_protocol","definition","deserialize","eq","equivalent","finish","flush","fmt","from","from","from","hash","hash","into","into","into","key","ne","new","new","position","proptest_proof","seed","serialize","test_only_hash","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update","value_hash","vzip","vzip","vzip","write","InMemoryAccumulator","append","append_subtrees","borrow","borrow_mut","clone","clone_into","default","deserialize","eq","equivalent","fmt","from","from_leaves","frozen_subtree_roots","into","is_empty","mock","new","num_leaves","root_hash","serialize","test_only_hash","to_owned","try_from","try_into","type_id","version","vzip","MockTransactionAccumulator","borrow","borrow_mut","clone","clone_into","fmt","from","from_leaves","get_accumulator_summary","get_consistency_proof","get_root_hash","into","to_owned","try_from","try_into","type_id","version","vzip","with_version","AccountStateProof","AccumulatorConsistencyProof","AccumulatorExtensionProof","AccumulatorProof","AccumulatorRangeProof","EventAccumulatorProof","EventProof","LeafCount","MAX_ACCUMULATOR_LEAVES","MAX_ACCUMULATOR_PROOF_DEPTH","SparseMerkleProof","SparseMerkleRangeProof","TestAccumulatorProof","TestAccumulatorRangeProof","TransactionAccumulatorProof","TransactionAccumulatorRangeProof","TransactionAccumulatorSummary","TransactionInfoListWithProof","TransactionInfoWithProof","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default_protocol","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into_subtrees","is_empty","leaf","ledger_info_to_transaction_info_proof","ledger_info_to_transaction_info_proof","ledger_info_to_transaction_infos_proof","left_siblings","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_empty","right_siblings","right_siblings","root_hash","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","siblings","siblings","subtrees","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transaction_info","transaction_info","transaction_info_to_account_proof","transaction_info_with_proof","transaction_info_with_proof","transaction_infos","try_extend_with_proof","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_genesis_proof","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify","verify","verify","verify","verify","verify","verify","verify","verify","verify_consistency","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AccountStateProof","EventProof","TransactionInfoListWithProof","TransactionInfoWithProof","AncestorIterator","AncestorSiblingIterator","FrozenSubTreeIterator","FrozenSubtreeSiblingIterator","Left","NodeDirection","Position","Right","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_inorder_index","from_leaf_index","from_level_and_pos","from_postorder_index","hash","inorder_to_postorder","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","is_freezable","is_leaf","is_left_child","is_placeholder","is_right_child","iter_ancestor","iter_ancestor_sibling","left_child","left_most_child","level","ne","new","new","next","next","next","next","parent","partial_cmp","postorder_to_inorder","right_child","right_most_child","root_from_leaf_count","root_from_leaf_index","root_level_from_leaf_count","sibling","to_inorder_index","to_owned","to_postorder_index","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","AccountInfoUniverse","AccountResourceGen","AccountStateBlobGen","BalanceResourceGen","BlockInfoGen","ContractEventGen","LedgerInfoGen","LedgerInfoWithSignaturesGen","RawTransactionGen","SignatureCheckedTransactionGen","TransactionToCommitGen","arb_json_value","arbitrary","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","get_validator_set","into","into","into","into","into","into","into","into","into","into","into","materialize","materialize","materialize","materialize","materialize","materialize","materialize","materialize","materialize","materialize","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","DpnProto","NAME","ProtocolSpec","TransactionInfo","borrow","borrow_mut","clone","clone_into","fmt","from","into","to_owned","try_from","try_into","type_id","vzip","vec_bytes","deserialize","serialize","StateProof","arbitrary_with","as_inner","borrow","borrow_mut","clone","clone_into","consistency_proof","deserialize","epoch_changes","eq","equivalent","fmt","from","into","into_inner","latest_ledger_info","latest_ledger_info_w_sigs","ne","new","serialize","test_only_hash","to_owned","try_from","try_into","type_id","vzip","transaction_test_helpers","get_test_signed_module_publishing_transaction","get_test_signed_transaction","get_test_signed_txn","get_test_txn_with_chain_id","get_test_unchecked_multi_agent_txn","get_test_unchecked_transaction","get_test_unchecked_txn","get_write_set_txn","0","AccountTransactionsWithProof","Address","ArgumentABI","BlockMetadata","Bool","ChangeSet","DesignatedDealer","DiemRoot","Direct","Discard","GenesisTransaction","GovernanceRole","Keep","Module","Module","MultiAgent","NonGovernanceRole","PRE_GENESIS_VERSION","RawTransaction","RawTransactionHasher","RawTransactionWithData","RawTransactionWithDataHasher","Retry","Script","Script","Script","ScriptABI","ScriptFunction","ScriptFunction","ScriptFunction","ScriptFunctionABI","SignatureCheckedTransaction","SignedTransaction","Transaction","TransactionArgument","TransactionHasher","TransactionInfo","TransactionInfoHasher","TransactionInfoTrait","TransactionListWithProof","TransactionOutput","TransactionOutputListWithProof","TransactionPayload","TransactionScript","TransactionScriptABI","TransactionStatus","TransactionToCommit","TransactionWithProof","TreasuryCompliance","TypeArgumentABI","U128","U64","U8","U8Vector","UserTransaction","VMValidatorResult","Validator","ValidatorOperator","VecBytes","Version","WriteSet","WriteSetPayload","account_states","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","args","args","args","args","args","as_signed_user_txn","authenticator","authenticator","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_id","check_signature","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","code","code","code","committed_hash","contains_duplicate_signers","default","default","default","default","default_protocol","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","doc","doc","doc","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","event_root_hash","event_root_hash","events","events","events","events","events","expiration_timestamp_secs","finish","finish","finish","finish","first_transaction_output_version","first_transaction_version","flush","flush","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format_for_client","format_for_client","format_for_client","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_role_id","function","gas_currency_code","gas_unit_price","gas_used","gas_used","gas_used","gas_used","genesis_strategy","genesis_strategy","governance_role","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","helpers","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_payload","into_raw_transaction","into_raw_transaction","into_script_function","into_vec","is_discarded","is_empty","is_multi_agent","is_script_fun_abi","is_transaction_script_abi","jf_node_hashes","len","max_gas_amount","metadata","module","module_name","module_strategy","module_strategy","multi_sign_for_testing","name","name","name","name","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_change_set","new_empty","new_empty","new_empty","new_module","new_multi_agent","new_multi_agent","new_multisig","new_script","new_script_function","new_with_authenticator","new_write_set","new_writeset_script","parse_transaction_argument","partial_cmp","payload","priority","proof","proof","proof","raw_txn_bytes_len","score","script_strategy","script_strategy","seed","seed","seed","seed","sender","sender","sequence_number","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","should_trigger_reconfiguration_by_default","should_trigger_reconfiguration_by_default","sign","sign_multi_agent","signing_message","state_root_hash","state_root_hash","status","status","status","status","status","status","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transaction","transaction","transaction_hash","transaction_hash","transactions","transactions_and_outputs","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty_args","ty_args","ty_args","ty_args","ty_args","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_tag","update","update","update","update","verify","verify","verify","verify_user_txn","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write","write","write","write","write_set","write_set","write_set","write_set_strategy","write_set_strategy","raw_txn","secondary_signer_addresses","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","execute_as","script","AccountAuthenticator","AuthenticationError","AuthenticationKey","AuthenticationKeyHasher","AuthenticationKeyPreimage","Ed25519","Ed25519","Ed25519","LENGTH","MAX_NUM_OF_SIGS","MaxSignaturesExceeded","MultiAgent","MultiEd25519","MultiEd25519","MultiEd25519","Scheme","TransactionAuthenticator","arbitrary_with","as_ref","authentication_key","authentication_key_preimage","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","derived_address","deserialize","deserialize","deserialize","ed25519","ed25519","ed25519","ed25519","encode_hex","encode_hex_upper","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_preimage","from_str","hash","hash","hash","into","into","into","into","into","into","into","into_vec","multi_agent","multi_ed25519","multi_ed25519","multi_ed25519","multi_ed25519","ne","ne","ne","new","number_of_signatures","partial_cmp","prefix","public_key_bytes","random","scheme","secondary_signer_addreses","secondary_signers","seed","sender","serialize","serialize","serialize","signature_bytes","test_only_hash","test_only_hash","test_only_hash","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_vec","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","verify","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write","zero","public_key","public_key","signature","signature","public_key","public_key","secondary_signer_addresses","secondary_signers","sender","signature","signature","AccountTransactionsWithProof","TransactionInfoWithProof","TransactionListWithProof","TransactionOutputListWithProof","TransactionWithProof","TransactionSigner","create_unsigned_txn","create_user_txn","sign_txn","CoinTradeMetadata","CoinTradeMetadata","CoinTradeMetadataV0","CoinTradeMetadataV0","GeneralMetadata","GeneralMetadata","GeneralMetadataV0","GeneralMetadataVersion0","InvalidReferenceId","InvalidSubaddress","Metadata","OtherReason","PaymentMetadata","PaymentMetadata","PaymentMetadataV0","PaymentMetadataVersion0","RefundMetadata","RefundMetadata","RefundMetadataV0","RefundMetadataV0","RefundReason","TravelRuleMetadata","TravelRuleMetadata","TravelRuleMetadataV0","TravelRuleMetadataVersion0","Undefined","UnstructuredBytesMetadata","UnstructuredBytesMetadata","UserInitiatedFullRefund","UserInitiatedPartialRefund","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_subaddress","into","into","into","into","into","into","into","into","into","into","into","into","into","metadata","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","off_chain_reference_id","reason","reference_id","referenced_event","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subaddress","trade_ids","transaction_version","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","Epoch","EpochState","EpochWaypoint","NoChange","TrustedState","TrustedStateChange","TrustedStateHasher","Version","accumulator_root_hash","accumulator_summary","arbitrary_with","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","deserialize","epoch_change_verification_required","eq","equivalent","finish","flush","fmt","fmt","from","from","from","from_epoch_waypoint","hash","into","into","into","is_epoch_change","is_epoch_waypoint","is_ledger_info_stale","is_no_change","ne","need_accumulator","new_state","seed","serialize","test_only_hash","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from_epoch_change_li","try_into","try_into","try_into","type_id","type_id","type_id","update","verify","verify_and_ratchet","verify_and_ratchet_inner","version","vzip","vzip","vzip","waypoint","write","0","accumulator","epoch_state","waypoint","latest_epoch_change_li","new_state","new_state","ValidatorConfig","ValidatorConfigResource","ValidatorOperatorConfigResource","arbitrary_with","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","consensus_public_key","default","default","delegated_account","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","fullnode_network_addresses","fullnode_network_addresses","human_name","human_name","into","into","into","ne","ne","ne","new","serialize","serialize","serialize","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validator_config","validator_network_addresses","validator_network_addresses","vzip","vzip","vzip","ValidatorInfo","account_address","arbitrary_with","borrow","borrow_mut","clone","clone_into","config","consensus_public_key","consensus_voting_power","deserialize","eq","equivalent","fmt","fmt","from","into","into_config","ne","new","new_with_test_network_keys","serialize","test_only_hash","to_owned","to_string","try_from","try_into","type_id","vzip","ValidatorSigner","author","borrow","borrow_mut","clone","clone_into","fmt","from","from_int","into","new","private_key","proptests","public_key","random","sign","to_owned","try_from","try_into","type_id","vzip","arb_signer","arb_signing_key","mostly_in_keypair_pool","rand_signer","signer_strategy","InconsistentBlockInfo","InvalidSignature","TooLittleVotingPower","TooManySignatures","UnknownAuthor","ValidatorConsensusInfo","ValidatorVerifier","VerifyError","arbitrary_with","arbitrary_with","batch_verify_aggregated_signatures","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_voting_power","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","get_ordered_account_addresses_iter","get_public_key","get_voting_power","into","into","into","is_empty","len","ne","ne","ne","new","new","new_for_testing","new_single","new_with_quorum_voting_power","quorum_voting_power","random_validator_verifier","serialize","serialize","test_only_hash","test_only_hash","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verify","verify_aggregated_struct_signature","vzip","vzip","vzip","num_of_authors","num_of_signatures","quorum_voting_power","voting_power","ABORTED","ABORT_TYPE_MISMATCH_ERROR","ARITHMETIC_ERROR","AbortLocation","BACKWARD_INCOMPATIBLE_MODULE_UPDATE","BAD_CHAIN_ID","BAD_HEADER_TABLE","BAD_MAGIC","BAD_TRANSACTION_FEE_CURRENCY","BAD_U128","BAD_U64","BOOLEAN_OP_TYPE_MISMATCH_ERROR","BORROWFIELD_BAD_FIELD_ERROR","BORROWFIELD_EXISTS_MUTABLE_BORROW_ERROR","BORROWFIELD_TYPE_MISMATCH_ERROR","BORROWGLOBAL_TYPE_MISMATCH_ERROR","BORROWGLOBAL_WITHOUT_KEY_ABILITY","BORROWLOC_EXISTS_BORROW_ERROR","BORROWLOC_REFERENCE_ERROR","BORROWLOC_UNAVAILABLE_ERROR","BR_TYPE_MISMATCH_ERROR","CALLED_SCRIPT_VISIBLE_FROM_NON_SCRIPT_VISIBLE","CALL_BORROWED_MUTABLE_REFERENCE_ERROR","CALL_STACK_OVERFLOW","CALL_TYPE_MISMATCH_ERROR","CODE_DESERIALIZATION_ERROR","CONSTRAINT_NOT_SATISFIED","COPYLOC_EXISTS_BORROW_ERROR","COPYLOC_UNAVAILABLE_ERROR","COPYLOC_WITHOUT_COPY_ABILITY","CURRENCY_INFO_DOES_NOT_EXIST","CYCLIC_MODULE_DEPENDENCY","CYCLIC_MODULE_FRIENDSHIP","DATA_FORMAT_ERROR","DUPLICATE_ACQUIRES_ANNOTATION","DUPLICATE_ELEMENT","DUPLICATE_MODULE_NAME","DUPLICATE_NATIVE_FUNCTION","DUPLICATE_TABLE","Deserialization","DiscardedVMStatus","EMPTY_CODE_UNIT","EMPTY_VALUE_STACK","EQUALITY_OP_TYPE_MISMATCH_ERROR","EVENT_KEY_MISMATCH","EXCEEDED_MAX_TRANSACTION_SIZE","EXECUTED","EXECUTE_SCRIPT_FUNCTION_CALLED_ON_NON_SCRIPT_VISIBLE","EXECUTION_STACK_OVERFLOW","EXISTS_WITHOUT_KEY_ABILITY_OR_BAD_ARGUMENT","EXTRANEOUS_ACQUIRES_ANNOTATION","Error","Executed","Executed","Execution","ExecutionFailure","ExecutionFailure","FAILED_TO_DESERIALIZE_ARGUMENT","FAILED_TO_DESERIALIZE_RESOURCE","FAILED_TO_SERIALIZE_WRITE_SET_CHANGES","FEATURE_UNDER_GATING","FIELD_MISSING_TYPE_ABILITY","FREEZEREF_EXISTS_MUTABLE_BORROW_ERROR","FREEZEREF_TYPE_MISMATCH_ERROR","FUNCTION_RESOLUTION_FAILURE","GAS_UNIT_PRICE_ABOVE_MAX_BOUND","GAS_UNIT_PRICE_BELOW_MIN_BOUND","GENERIC_MEMBER_OPCODE_MISMATCH","GLOBAL_REFERENCE_ERROR","INDEX_OUT_OF_BOUNDS","INSUFFICIENT_BALANCE_FOR_TRANSACTION_FEE","INTEGER_OP_TYPE_MISMATCH_ERROR","INTERNAL_TYPE_ERROR","INVALID_ACQUIRES_ANNOTATION","INVALID_AUTH_KEY","INVALID_CONSTANT_TYPE","INVALID_FALL_THROUGH","INVALID_FLAG_BITS","INVALID_FRIEND_DECL_WITH_MODULES_IN_DEPENDENCIES","INVALID_FRIEND_DECL_WITH_MODULES_OUTSIDE_ACCOUNT_ADDRESS","INVALID_FRIEND_DECL_WITH_SELF","INVALID_GAS_SPECIFIER","INVALID_LOOP_BREAK","INVALID_LOOP_CONTINUE","INVALID_LOOP_SPLIT","INVALID_MAIN_FUNCTION_SIGNATURE","INVALID_MODULE_HANDLE","INVALID_MODULE_PUBLISHER","INVALID_OPERATION_IN_SCRIPT","INVALID_PARAM_TYPE_FOR_DESERIALIZATION","INVALID_PHANTOM_TYPE_PARAM_POSITION","INVALID_SIGNATURE","INVALID_SIGNATURE_TOKEN","INVALID_WRITE_SET","InvariantViolation","KeptVMStatus","LINKER_ERROR","LOOKUP_FAILED","LOOP_IN_INSTANTIATION_GRAPH","MALFORMED","MALFORMED_CONSTANT_DATA","MAX_GAS_UNITS_BELOW_MIN_TRANSACTION_GAS_UNITS","MAX_GAS_UNITS_EXCEEDS_MAX_GAS_UNITS_BOUND","MISSING_ACQUIRES_ANNOTATION","MISSING_DATA","MISSING_DEPENDENCY","MODULE_ADDRESS_DOES_NOT_MATCH_SENDER","MOVEFROM_TYPE_MISMATCH_ERROR","MOVEFROM_WITHOUT_KEY_ABILITY","MOVELOC_EXISTS_BORROW_ERROR","MOVELOC_UNAVAILABLE_ERROR","MOVETO_TYPE_MISMATCH_ERROR","MOVETO_WITHOUT_KEY_ABILITY","MiscellaneousError","Module","MoveAbort","MoveAbort","NEGATIVE_STACK_SIZE_WITHIN_BLOCK","NO_ACCOUNT_ROLE","NO_MODULE_HANDLES","NUMBER_OF_ARGUMENTS_MISMATCH","NUMBER_OF_SIGNER_ARGUMENTS_MISMATCH","NUMBER_OF_TYPE_ARGUMENTS_MISMATCH","OUT_OF_GAS","OutOfGas","PACK_TYPE_MISMATCH_ERROR","PC_OVERFLOW","POP_WITHOUT_DROP_ABILITY","POSITIVE_STACK_SIZE_AT_BLOCK_END","READREF_EXISTS_MUTABLE_BORROW_ERROR","READREF_TYPE_MISMATCH_ERROR","READREF_WITHOUT_COPY_ABILITY","RECURSIVE_STRUCT_DEFINITION","REJECTED_WRITE_SET","RESOURCE_ALREADY_EXISTS","RESOURCE_DOES_NOT_EXIST","RET_BORROWED_MUTABLE_REFERENCE_ERROR","RET_TYPE_MISMATCH_ERROR","SECONDARY_KEYS_ADDRESSES_COUNT_MISMATCH","SENDING_ACCOUNT_DOES_NOT_EXIST","SENDING_ACCOUNT_FROZEN","SEQUENCE_NONCE_INVALID","SEQUENCE_NUMBER_TOO_BIG","SEQUENCE_NUMBER_TOO_NEW","SEQUENCE_NUMBER_TOO_OLD","SIGNERS_CONTAIN_DUPLICATES","STLOC_TYPE_MISMATCH_ERROR","STLOC_UNSAFE_TO_DESTROY_ERROR","STORAGE_ERROR","Script","StatusCode","StatusType","TOO_MANY_LOCALS","TRANSACTION_EXPIRED","TYPE_MISMATCH","TYPE_RESOLUTION_FAILURE","UNABLE_TO_DESERIALIZE_ACCOUNT","UNEXPECTED_DESERIALIZATION_ERROR","UNEXPECTED_ERROR_FROM_KNOWN_MOVE_FUNCTION","UNEXPECTED_SIGNATURE_TYPE","UNEXPECTED_VERIFIER_ERROR","UNIMPLEMENTED_HANDLE","UNKNOWN_ABILITY","UNKNOWN_BINARY_ERROR","UNKNOWN_INVARIANT_VIOLATION_ERROR","UNKNOWN_MODULE","UNKNOWN_NATIVE_STRUCT_FLAG","UNKNOWN_OPCODE","UNKNOWN_RUNTIME_STATUS","UNKNOWN_SCRIPT","UNKNOWN_SERIALIZED_TYPE","UNKNOWN_SIGNATURE_TYPE","UNKNOWN_STATUS","UNKNOWN_TABLE_TYPE","UNKNOWN_VALIDATION_STATUS","UNKNOWN_VERIFICATION_ERROR","UNKNOWN_VERSION","UNPACK_TYPE_MISMATCH_ERROR","UNREACHABLE","UNSAFE_RET_LOCAL_OR_RESOURCE_STILL_BORROWED","UNSAFE_RET_UNUSED_VALUES_WITHOUT_DROP","Unknown","VALUE_DESERIALIZATION_ERROR","VALUE_SERIALIZATION_ERROR","VEC_BORROW_ELEMENT_EXISTS_MUTABLE_BORROW_ERROR","VEC_UPDATE_EXISTS_MUTABLE_BORROW_ERROR","VERIFICATION_ERROR","VERIFIER_INVARIANT_VIOLATION","VMStatus","VM_MAX_TYPE_DEPTH_REACHED","VM_MAX_VALUE_DEPTH_REACHED","VM_STARTUP_FAILURE","Validation","Verification","WRITEREF_EXISTS_BORROW_ERROR","WRITEREF_NO_MUTABLE_REFERENCE_ERROR","WRITEREF_TYPE_MISMATCH_ERROR","WRITEREF_WITHOUT_DROP_ABILITY","ZERO_SIZED_STRUCT","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","hash","hash","into","into","into","into","into","is_success","keep_or_discard","known_locations","move_abort_code","ne","ne","ne","partial_cmp","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","serialize","serialize","status_code","status_type","status_type","sub_status","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","0","0","1","code_offset","function","location","0","0","1","code_offset","function","location","status_code","ACCOUNT_MODULE","ACCOUNT_MODULE_IDENTIFIER","DESIGNATED_DEALER_MODULE","DESIGNATED_DEALER_MODULE_IDENTIFIER","DIEM_MODULE","DIEM_MODULE_IDENTIFIER","account_module_abort","designated_dealer_module_abort","diem_module_abort","NFE_BCS_SERIALIZATION_FAILURE","NFE_VECTOR_ERROR_BASE","Ledger2WaypointConverterHasher","Waypoint","arbitrary_with","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deserialize","epoch_change_verification_required","eq","equivalent","finish","flush","fmt","fmt","from","from","from_str","into","into","is_ledger_info_stale","ne","new_any","new_epoch_boundary","seed","serialize","test_only_hash","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update","value","verify","verify","version","vzip","vzip","write","Deletion","Value","WriteOp","WriteSet","WriteSetMut","arbitrary_with","arbitrary_with","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","deletion_strategy","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","freeze","from","from","from","from_iter","hash","hash","hash","into","into","into","into_iter","into_mut","is_deletion","is_empty","is_empty","iter","ne","ne","ne","new","push","serialize","serialize","serialize","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","value_strategy","vzip","vzip","vzip","0"],"q":["diem_types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::access_path","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::access_path::Path","","diem_types::account_address","","","","","diem_types::account_config","","","diem_types::account_config::constants","","","","","","diem_types::account_config::constants::account","","diem_types::account_config::constants::addresses","","","","","","diem_types::account_config::constants::coins","","","","","","","","diem_types::account_config::constants::designated_dealer","","diem_types::account_config::constants::diem","","","","","","","diem_types::account_config::constants::event","","diem_types::account_config::events","","","","","","","","","","","","","","","diem_types::account_config::events::admin_transaction","","","","","","","","","","","","","","","","diem_types::account_config::events::base_url_rotation","","","","","","","","","","","","","","","","","diem_types::account_config::events::burn","","","","","","","","","","","","","","","","","","diem_types::account_config::events::cancel_burn","","","","","","","","","","","","","","","","","","diem_types::account_config::events::compliance_key_rotation","","","","","","","","","","","","","","","","","diem_types::account_config::events::create_account","","","","","","","","","","","","","","","","","","diem_types::account_config::events::exchange_rate_update","","","","","","","","","","","","","","","","","diem_types::account_config::events::force_shift","","","","","","","","","","","","","","","","","diem_types::account_config::events::mint","","","","","","","","","","","","","","","","","diem_types::account_config::events::new_block","","","","","","","","","","","","","","","","","","","diem_types::account_config::events::new_epoch","","","","","","","","","","","","","","","","","diem_types::account_config::events::preburn","","","","","","","","","","","","","","","","","","diem_types::account_config::events::received_mint","","","","","","","","","","","","","","","","","","diem_types::account_config::events::received_payment","","","","","","","","","","","","","","","","","","","diem_types::account_config::events::sent_payment","","","","","","","","","","","","","","","","","","","","diem_types::account_config::resources","","","","","","","","","","","","","","","","","diem_types::account_config::resources::account","","","","","","","","","","","","","","","","","","","","","","diem_types::account_config::resources::balance","","","","","","","","","","","","","","","","","","","diem_types::account_config::resources::chain_id","","","","","","","","","","","diem_types::account_config::resources::crsn","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::account_config::resources::crsn::AccountSequenceInfo","","","diem_types::account_config::resources::currency_info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::account_config::resources::designated_dealer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::account_config::resources::designated_dealer::DesignatedDealerPreburns","","diem_types::account_config::resources::dual_attestation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::account_config::resources::freezing_bit","","","","","","","","","","","","","","diem_types::account_config::resources::key_rotation_capability","","","","","","","","","","","","","","diem_types::account_config::resources::preburn_balance","","","","","","","","","","","","","","","","","","","diem_types::account_config::resources::preburn_queue","","","","","","","","","","","","","","","","","","diem_types::account_config::resources::preburn_with_metadata","","","","","","","","","","","","","","","","","","","","diem_types::account_config::resources::role","","","","","","","","","","","","","","","","","","diem_types::account_config::resources::role::AccountRole","","","","","","","","diem_types::account_config::resources::role_id","","","","","","","","","","","","","","diem_types::account_config::resources::vasp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::account_config::resources::vasp_domain","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::account_config::resources::withdraw_capability","","","","","","","","","","","","","","diem_types::account_state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::account_state_blob","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::account_state_blob::default_protocol","diem_types::block_info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::block_metadata","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::chain_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::contract_event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::contract_event::ContractEvent","diem_types::contract_event::default_protocol","","diem_types::diem_id_identifier","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::diem_timestamp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::epoch_change","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::epoch_state","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::ledger_info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::ledger_info::LedgerInfoWithSignatures","diem_types::mempool_status","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::move_resource","","","","diem_types::network_address","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::network_address::ParseError","","","","","","diem_types::network_address::Protocol","","","","","","","","","diem_types::network_address::encrypted","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::nibble","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::nibble::nibble_path","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::on_chain_config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::on_chain_config::OnChainConsensusConfig","","diem_types::proof","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::proof::accumulator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::proof::accumulator::mock","","","","","","","","","","","","","","","","","","","diem_types::proof::definitiondiem_types::proof::definition::default_protocol","","","","diem_types::proof::position","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::proptest_types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::protocol_spec","","","","","","","","","","","","","","","","diem_types::serde_helper","diem_types::serde_helper::vec_bytes","","diem_types::state_proof","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::test_helpers","diem_types::test_helpers::transaction_test_helpers","","","","","","","","diem_types::transactiondiem_types::transaction::RawTransactionWithData","","diem_types::transaction::ScriptABI","","diem_types::transaction::Transaction","","","diem_types::transaction::TransactionArgument","","","","","","diem_types::transaction::TransactionPayload","","","","diem_types::transaction::TransactionStatus","","diem_types::transaction::WriteSetPayload","","","diem_types::transaction::authenticatordiem_types::transaction::authenticator::AccountAuthenticator","","","","diem_types::transaction::authenticator::TransactionAuthenticator","","","","","","","diem_types::transaction::default_protocol","","","","","diem_types::transaction::helpers","","","","diem_types::transaction::metadatadiem_types::transaction::metadata::CoinTradeMetadata","diem_types::transaction::metadata::GeneralMetadata","diem_types::transaction::metadata::Metadata","","","","","","diem_types::transaction::metadata::PaymentMetadata","diem_types::transaction::metadata::RefundMetadata","diem_types::transaction::metadata::TravelRuleMetadata","diem_types::trusted_state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::trusted_state::TrustedState","","","","diem_types::trusted_state::TrustedStateChange","","","diem_types::validator_config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::validator_info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::validator_signer","","","","","","","","","","","","","","","","","","","","","diem_types::validator_signer::proptests","","","","","diem_types::validator_verifier","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::validator_verifier::VerifyError","","","","diem_types::vm_statusdiem_types::vm_status::AbortLocation","diem_types::vm_status::KeptVMStatus","","","","","diem_types::vm_status::VMStatus","","","","","","","diem_types::vm_status::known_locations","","","","","","","","","diem_types::vm_status::sub_status","","diem_types::waypoint","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::write_set","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_types::write_set::WriteOp"],"d":["The number of bytes in an address.","A struct that represents an account address.","Hex address: 0x0","Suppose we have the following data structure in a smart …","","","","","","","","","","","","","","","","","","This file implements length and character set limited …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>Nibble</code> represents a four-bit unsigned integer.","","","","","","","","","","","","","","","","","","","","","Tries to convert the provided byte buffer into Address.","Tries to convert the provided byte array into Address.","","","","","","","","","","","For each transaction the VM executes, the VM will output a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extract the structured resource or module <code>Path</code> from <code>self</code>","Extract a StructTag from <code>self</code>. Returns Some if this is a …","","","","","","","","","","","Convert Accesses into a byte offset which would be used by …","","","","","","","","","","","","","","","","","","","","","A struct that represents an account address.","","","","","","","","","","","","","","The ModuleId for the Account module.","The Identifier for the Account module.","","","","","","","","","","","","Return <code>Some(struct_name)</code> if <code>t</code> is a <code>StructTag</code> representing …","","","The ModuleId for the Designated Dealer module.","The Identifier for the Designated Dealer module.","","The ModuleId for the Diem module.","The Identifier for the Diem module.","In addition to the constraints for valid Move identifiers, …","","","","","","","","","","","","","","","","","","","","","Struct that represents a AdminEvent.","","","Get the applied writeset.","","","","","","","","","","","","","Struct that represents a BaseUrlRotationEvent.","","","","","","","Get the new base url","","","Get the (blockchain) time in seconds when the url was …","","","","","","","Struct that represents a BurnEvent.","Get the amount burned","","","Return the code for the currency that was burned","","","","","Return the address whose Preburn resource formerly held …","","","","","","","","","Struct that represents a CancelBurnEvent.","Get the amount canceled","","","Return the code for the currency that was returned","","","","","Return the address whose Preburn resource formerly held …","","","","","","","","","Struct that represents a ComplianceKeyRotationEvent.","","","","","","","Get the new compliance public key","","","Get the (blockchain) time in seconds when the url was …","","","","","","","","","","","","","","","","","","","","","","","","","Struct that represents a ToXDXExchangeRateUpdateEvent","","","Return the code for the currency whose exchange rate was …","","","","","Exchange rates are represented as 32|32 fixed-point …","","","","","","","","","Struct that represents a ForceShiftEvent.","","","","Get the min nonce at the time of the force shift","","","","","","Get the amount that the CRSN window was shifted","","","","","","","Struct that represents a MintEvent.","Get the amount minted","","","Return the code for the currency that was minted","","","","","","","","","","","","","Struct that represents a NewBlockEvent.","","","","","","","","","","","","","","","","","","","Struct that represents a NewEpochEvent.","","","","","","","","","","","","","","","","","Struct that represents a PreburnEvent.","Get the amount preburned","","","Return the code for the currency that was preburned","","","","","Return the address whose Preburn now holds the funds","","","","","","","","","Struct that represents a ReceivedMintEvent.","Get the amount minted","","","Return the code for the currency that was minted","","Return the address who received the mint","","","","","","","","","","","","Struct that represents a ReceivedPaymentEvent.","Get the amount sent or received","","","Return the currency code that the payment was made in.","","","","","Get the metadata associated with this event","Get the receiver of this transaction event.","","","","","","","","","Struct that represents a SentPaymentEvent.","Get the amount sent or received","","","Return the currency currency_code symbol that the payment …","","","","","Get the metadata associated with this event","","Get the sender of this transaction event.","","","","","","","","","","","","","","","","","","","","","","","","","","A Rust representation of an Account resource. This is not …","","Return the authentication_key field for the given …","","","","","","Returns if this account has delegated its key rotation …","Returns if this account has delegated its withdrawal …","","Constructs an Account resource.","Return the received_events handle for the given …","Return the sent_events handle for the given AccountResource","Return the sequence_number field for the given …","","","","","","","","The balance resource held under an account.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Struct that represents a CurrencyInfo resource","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the received_mint_events handle for the given …","","","","","","","","","","","","","","","","Defines the dual attest limit in microDiem XDX","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The preburn balance held under an account.","","","","","","","","","","","","","","","","","","","The preburn balance held under an account.","","","","","","","","","","","","","","","","","","The preburn along with metadata held in a preburn queue.","","","","","","","","","","","","","","","","","","","","A enum that captures the collection of role-specific …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The Identifier for the VASPDomain module.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return an iterator over the module values stored under …","","","","","","Return an iterator over all resources stored under this …","Given a particular <code>MoveResource</code>, return an iterator with …","","","","","","","Into an iterator over the module values stored under this …","","","","","","","","","","","","","Cryptographic hasher for an BCS-serializable #item","","TODO(joshlind): add a proof implementation (e.g., …","","","","","Blob value representing the account state. If this field …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructor.","The proof the client can use to authenticate the value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verifies the the account state blob with the proof, both …","The transaction version at which this account state is …","","","","","","","This structure contains all the information needed for …","","","","","The round of a block is a consensus-internal counter, …","","","","","","","","","","","","","","","","Create a new genesis block. The genesis block is …","","","","This function checks if the current BlockInfo is consistent","This function checks if the current BlockInfo has exactly …","Create a mock genesis <code>BlockInfo</code> with an empty state tree …","","","The epoch after this block committed","","","","","","","","","","","","","","Struct that will be persisted on chain to store the …","","The path to the new block event handle under a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Note: u7 in a u8 is uleb-compatible, and any usage of this …","","Users might accidentally initialize the ChainId field to …","A registry of named chain IDs Its main purpose is to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Support versioning of the data structure.","Cryptographic hasher for an BCS-serializable #item","Entry produced via a call to the <code>emit_event</code> builtin.","Cryptographic hasher for an BCS-serializable #item","The response type for <code>get_event_by_version_with_proof</code>, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructor.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verifies the event with the proof, both carried by <code>self</code>.","Verify that the <code>lower_bound_incl</code> <code>EventWithProof</code> is the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A vector of LedgerInfo with contiguous increasing epoch …","The verification of the epoch change proof starts with …","","","","","","","The first/lowest epoch of the proof to indicate which …","Returns true in case the given epoch is larger than the …","","","","","","Returns true if the given <code>LedgerInfo</code> is stale and probably …","","","","","","","","","","","Verify if the ledger_info is trust worthy.","Verify the proof is correctly chained with known epoch and …","","EpochState represents a trusted validator set to validate …","","","","","","","","","","","","","","","","","","","","","","","","","","","","A Rust representation of an Event Handle Resource.","A struct that represents a globally unique id for an Event …","","The number of bytes in an EventKey.","","","Get the byte representation of the event key.","","","","","","","","","","","","","","Return the counter for the handle","","","","","","","","","","","","","","","","","","","","If this is the <code>ith</code> EventKey<code>created by</code>get_creator_address()…","Get the account address part in this event key","","","","","Return the key to where this event is stored in EventStore.","","","Construct a new EventKey from a byte array slice.","Constructs a new Event Handle","Create a unique handle by using an AccountAddress and a …","Derive a unique handle by using an AccountAddress and a …","","Create a random event key for testing","Create a random event handle for testing","","","","","","","","","","","Convert event key into a byte array.","Tries to convert the provided byte array into Event Key.","","","","","","","","","","","","","This structure serves a dual purpose.","Cryptographic hasher for an BCS-serializable #item","Wrapper around LedgerInfoWithScheme to support future …","The validator node returns this structure which includes …","","","","","","","","","","","","","","","","","","","","","","","The <code>BlockInfo</code> of a committed block.","","","Returns hash of consensus voting data in this <code>LedgerInfo</code>.","","","","","","","","A series of wrapper functions for the data stored in the …","","","","","","","","","","","","","","","","","","","Create a new LedgerInfo at genesis with the given genesis …","","Create a new <code>LedgerInfoWithEd25519</code> at genesis with the …","","","","","","","","","","","Constructs a <code>LedgerInfo</code> object based on the given commit …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A <code>MempoolStatus</code> is represented as a required status code …","","","","","","","","","","","","","","","","","insertion status code","","","","","","","","","","","","","","","optional message","","","","","","","","","","","","","","","","","","Adds a message to the Mempool status.","","Returns a vector of Move resources as serialized byte array","Returns a vector of Move resources as serialized byte …","Get the version on the latest transaction info.","","","","","","","A minimally parsed DNS name. We don’t really do any …","","","","","","","","","","","","Overview","","","","","Possible errors when parsing a human-readable …","","","A single protocol in the <code>NetworkAddress</code> protocol stack.","","","","Given a base <code>NetworkAddress</code>, append production protocols …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>EncNetworkAddress::encrypt</code>.","","","","","","","","","","","Retrieves the IP address from the network address","A temporary, hacky function to parse out the first …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check that a <code>NetworkAddress</code> looks like a typical DiemNet …","","","","","","parse the <code>&amp;[Protocol]</code> into the <code>&quot;/dns/&lt;domain&gt;/tcp/&lt;port&gt;&quot;</code>, …","parse the <code>&amp;[Protocol]</code> into the <code>&quot;/ln-handshake/&lt;version&gt;&quot;</code> …","parse the <code>&amp;[Protocol]</code> into the <code>&quot;/ip4/&lt;addr&gt;/tcp/&lt;port&gt;&quot;</code> or …","parse the <code>&amp;[Protocol]</code> into the <code>&quot;/memory/&lt;port&gt;&quot;</code> prefix and …","parse the <code>&amp;[Protocol]</code> into the <code>&quot;/ln-noise-ik/&lt;pubkey&gt;&quot;</code> …","","","A function to rotate public keys for <code>NoiseIK</code> protocols","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The length in bytes of the AES-256-GCM nonce.","The length in bytes of the AES-256-GCM authentication tag.","An encrypted <code>NetworkAddress</code>.","We salt the HKDF for deriving the account keys to provide …","The length in bytes of the <code>shared_val_netaddr_key</code> and …","Convenient type alias for the <code>shared_val_netaddr_key</code> as an …","","Constant key + version so we can push <code>EncNetworkAddress</code> …","","","","","","","","","Panics","","","","","","","","","","","","","","","","","The hardcoded maximum height of a state merkle tree in …","","","","","","","","","","","","","","","","","NibblePath library simplify operations with nibbles in a …","","","","","","","","","BitIterator iterates a nibble path by bit.","NibbleIterator iterates a nibble path by nibble.","NibblePath defines a path in Merkle tree in the unit of …","","","Get a bit iterator iterates over the whole nibble path.","Turn it into a <code>BitIterator</code>.","","","","","","","Get the underlying bytes storing nibbles.","","","","","","","","","","","","","Get the i-th nibble.","Cut and return the range of the underlying <code>nibble_path</code> …","","","","","","","Returns <code>true</code> if the nibbles contains no elements.","Return <code>true</code> if the iteration is over.","Returns the last nibble.","","Creates a new <code>NibblePath</code> from a vector of bytes assuming …","Similar to <code>new()</code> but assumes that the bytes have one less …","","","","Get a nibble iterator iterates over the whole nibble path.","Get the total number of nibbles stored.","Get the number of nibbles that this iterator covers.","","Returns the <code>next()</code> value without advancing the iterator.","Returns the <code>next()</code> value without advancing the iterator.","Returns the <code>next()</code> value without advancing the iterator.","Pops a nibble from the end of the nibble path.","Adds a nibble to the end of the nibble path.","Returns a nibble iterator that iterates all remaining …","","Advance both iterators if their next nibbles are the same …","","","","","","","","","","","","Returns a nibble iterator that iterates all visited …","","","","","","To register an on-chain config in Rust:","Trait to be implemented by a storage type from which to …","","","","","","","","Defines the version of Diem Validator software.","","State sync will panic if the value of any config in this …","Trait to be implemented by a Rust struct representation of …","","The on-chain consensus config, in order to be able to add …","","","","Defines all the on chain configuration data needed by VM.","Defines and holds the publishing policies for the VM. …","","","","","Backpressure controls","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decouple execution from consensus or not.","","","","","","","","","","","","","","","","The Move resource is","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The number of recent rounds that don’t count into …","","","","","","","","","","","","","Constructs a ValidatorSet resource.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2-chain commit rule or 3-chain commit rule.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cryptographic hasher for an BCS-serializable #item","","","This module implements an in-memory Merkle Accumulator …","","","","","","","","","","","","","","This module has definition of various proofs.","","","","","","","","","","","","","","","","","","","This module provides an abstraction for positioning a node …","All proofs generated in this module are not valid proofs. …","","","","","","","","","","","","","","","","","","","","","The Accumulator implementation.","Appends a list of new leaves to an existing accumulator. …","Appends a list of new subtrees to the existing …","","","","","","","","","","","Constructs a new accumulator with given leaves.","Returns the set of frozen subtree roots in this accumulator","","Returns true if this accumulator is empty and has no …","","Constructs a new accumulator with roots of existing frozen …","Returns the total number of leaves in this accumulator.","Returns the root hash of the accumulator.","","","","","","","","","An immutable transaction accumulator (not a summary, since …","","","","","","","Create a full transaction accumulator from a list of leaf …","","","Get the accumulator root hash at a specific version. Note …","","","","","","","","Create an accumulator with some mock leaf hash values at …","The complete proof used to authenticate the state of an …","A proof that can be used to show that two Merkle …","A proof that first verifies that establishes correct …","A proof that can be used authenticate an element in an …","A proof that is similar to <code>AccumulatorProof</code>, but can be …","","The complete proof used to authenticate a contract event. …","Because leaves can only take half the space in the tree, …","","","A proof that can be used to authenticate an element in a …","Note: this is not a range proof in the sense that a range …","","","","","An in-memory accumulator for storing a summary of the core …","The proof used to authenticate a list of consecutive …","<code>TransactionInfo</code> and a <code>TransactionAccumulatorProof</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the leaf node in this proof.","Returns the <code>ledger_info_to_transaction_info_proof</code> object …","The accumulator proof from ledger info root to leaf that …","","Get all the left siblngs.","","","","","","","","","","Constructs a new <code>AccumulatorProof</code> using a list of siblings.","Constructs a new <code>SparseMerkleProof</code> using leaf and a list …","","Constructs a new <code>AccumulatorConsistencyProof</code> using given …","Constructs a new <code>AccumulatorRangeProof</code> using <code>left_siblings</code> …","Constructs a new <code>SparseMerkleRangeProof</code>.","Constructs a new <code>TransactionWithProof</code> object using given …","Constructs a new <code>AccountStateProof</code> using given …","Constructs a new <code>EventProof</code> using given …","","","Constructs a new <code>AccumulatorRangeProof</code> for an empty list …","Constructs a proof for an empty list of transaction infos. …","Get all the right siblngs.","Returns the right siblings.","","","","","","","","","","","","","Returns the list of siblings in this proof.","Returns the list of siblings in this proof.","Returns the subtrees.","","","","","","","","","","","","","","","","","","","","","","","Returns the <code>transaction_info</code> object in this proof.","The <code>TransactionInfo</code> object at the leaf of the accumulator.","Returns the <code>transaction_info_to_account_proof</code> object in …","Returns the <code>transaction_info_with_proof</code> object in this …","Returns the <code>transaction_info_with_proof</code> object in this …","","Try to extend an existing accumulator summary with a …","","","","","","","","","","","","Try to build an accumulator summary using a consistency …","","","","","","","","","","","","","","","","","","","","","","","Verifies an element whose hash is <code>element_hash</code> and version …","If <code>element_value</code> is present, verifies an element whose key …","Verifies the proof is correct. The verifier needs to have …","Verifies that the rightmost known leaf exists in the tree …","Verifies that the <code>TransactionInfo</code> exists in the ledger …","Verifies that the state of an account at version …","Verifies that a given event is correct using provided …","Verifies the list of transaction infos are correct using …","","Verify that this accumulator summary is “consistent” …","","","","","","","","","","","","","","","","","<code>AncestorIterator</code> generates current position and moves …","<code>AncestorSiblingIterator</code> generates current sibling position …","Traverse leaves from left to right in groups that forms …","Given an accumulator of size <code>current_num_leaves</code>, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pos count start from 0 on each level","","","Given <code>node</code>, an index in an in-order traversal of a perfect …","","","","","","","","","","","","","Whether this position is a left child of its parent.  The …","","","Creates an <code>AncestorIterator</code> using this position.","Creates an <code>AncestorSiblingIterator</code> using this position.","What is the left node of this node? Will overflow if the …","Given a node, find its left most child in its subtree Left …","What level is this node in the tree, 0 if the node is a …","","","Constructs a new <code>FrozenSubtreeSiblingIterator</code> given the …","","","","","What is the parent of this node?","","","What is the right node of this node? Will overflow if the …","Given a node, find its right most child in its subtree. …","","This method calculates the index of the smallest root …","","This method takes in a node position and return its …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents information already determined for generating a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Materialize considering current states in the universe.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Default Protocol Spec","","","","","","","","","","","","","","","","","","","A convenience type for the collection of sub-proofs that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A list of transactions under an account that are …","","The description of a (regular) argument in a script.","Transaction to update the block metadata resource at the …","","","","","Directly passing in the WriteSet.","Discard the transaction output","Transaction that applies a WriteSet to the current …","","Keep the transaction output","","A transaction that publishes code.","","","","RawTransaction is the portion of a transaction that a …","Cryptographic hasher for an BCS-serializable #item","","Cryptographic hasher for an BCS-serializable #item","Retry the transaction, e.g., after a reconfiguration","Call a Move script.","A transaction that executes code.","Generate the WriteSet by running a script.","How to call a particular Move script (aka. an “ABI”).","Call a Move script function.","A transaction that executes an existing script function …","","","A transaction for which the signature has been verified. …","A transaction that has been signed.","<code>Transaction</code> will be the transaction type used internally …","","Cryptographic hasher for an BCS-serializable #item","<code>TransactionInfo</code> is the object we store in the transaction …","Cryptographic hasher for an BCS-serializable #item","","","The output of executing a transaction.","This differs from TransactionListWithProof in that …","Different kinds of transactions.","","","The status of executing a transaction. The VM decides …","","","","The description of a type argument in a script.","","","","","Transaction submitted by the user. e.g: P2P payment …","The result of running the transaction through the VM …","","","Struct for encoding vector&lt;vector&gt; arguments for script …","","A system maintenance transaction.","Two different kinds of WriteSet transactions.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks that the signature of given transaction. Returns …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the hash when the transaction is commited onchain.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the root hash of Merkle Accumulator storing all …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the amount of gas used by this transaction.","","","","Similar to <code>write_set_strategy</code> except generates a valid …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the <code>SignedTransaction</code> within.","","","","Returns the <code>RawTransaction</code> within.","","","","","","","","","","","This file implements Diem transaction metadata types to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructs a new <code>TransactionInfo</code> object using transaction …","","","","","Create a new <code>RawTransaction</code> with a payload.","","","","","","","Constructor.","","","","","","","","A convenience function to create an empty proof. Mostly …","A convenience function to create an empty proof. Mostly …","","Create a new <code>RawTransaction</code> with a module to publish.","","","","Create a new <code>RawTransaction</code> with a script.","Create a new <code>RawTransaction</code> with a script function.","","","","","","","The higher the number that is returned, the greater …","","","","","","","","","","","","Return the sender of this transaction.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Signs the given <code>RawTransaction</code>. Note that this consumes …","Signs the given multi-agent <code>RawTransaction</code>, which is a …","Return the signing message for creating transaction …","Returns root hash of Sparse Merkle Tree describing the …","","Resturns the Status from the VM for this transaction.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the hash of this transaction.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verifies the transaction list with proof using the given …","Verifies the transaction output list with proof using the …","Verify all transactions are consistent with the given …","Verifies the transaction with the proof, both carried by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Execute the script as the designated signer.","Script body that gets executed.","","An error enum for issues related to transaction or account …","A struct that represents an account authentication key. An …","Cryptographic hasher for an BCS-serializable #item","A value that can be hashed to produce an authentication key","Single signature","","Single signature","The number of bytes in an authentication key.","Maximum number of signatures supported in …","The number of signatures exceeds the maximum supported.","Multi-agent transaction.","K-of-N multisignature","","K-of-N multisignature","An <code>AccountAuthenticator</code> is an an abstraction of a …","Each transaction submitted to the Diem blockchain contains …","","","Return an authentication key derived from <code>self</code>’s public …","Return an authentication key preimage derived from <code>self</code>’…","","","","","","","","","","","","","","","","","","","","","","","","","","","Return an address derived from the last …","","","","Construct a preimage from an Ed25519 public key","Create a single-signature ed25519 authenticator","Create a single-signature ed25519 authenticator","Create an authentication key from an Ed25519 public key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create an authentication key from a preimage by taking its …","","","","","","","","","","","","Construct a vector from this authentication key","Create a multi-agent authenticator","Construct a preimage from a MultiEd25519 public key","Create a multisignature ed25519 authenticator","Create a multisignature ed25519 authenticator","Create an authentication key from a MultiEd25519 public key","","","","Create an authentication key from <code>bytes</code>","Return the number of signatures included in this account …","","Return the first AccountAddress::LENGTH bytes of this …","Return the raw bytes of <code>self.public_key</code>","Create a random authentication key. For testing only","Unique identifier for the signature scheme","","","","","","","","Return the raw bytes of <code>self.signature</code>","","","","","","","","","","","","","","","Construct a vector from this authentication key","","","","","","","","","","","","","","","","","","","","","","","","","Return Ok if all AccountAuthenticator’s public keys …","Return Ok if the authenticator’s public key matches its …","","","","","","","","","Return an authentication key that is impossible (in …","","","","","","","","","","","","","","","","","","","Craft a transaction request.","","List of supported transaction metadata format versions for …","","Transaction metadata format for coin trades …","","List of supported transaction metadata format versions for …","","Transaction metadata for regular addressing with optional …","","","","List of all supported metadata types","","List of supported transaction metadata format versions for …","","Transaction metadata format for transactions for payments","","List of supported transaction metadata format versions for …","","Transaction metadata format for transactions subject to …","","","List of supported transaction metadata format versions for …","","Transaction metadata format for transactions subject to …","","","Opaque binary transaction metadata","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unstructured byte vector metadata","","","","","","","","","","","","","","Off-chain reference_id.  Used when off-chain APIs are used.","The reason of the refund","Reference ID needed for off-chain reference ID exchange.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A list of trade_ids this transaction wants to settle","Transaction version that is refunded","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","We have a newer <code>TrustedState</code> and there was at least one …","The current trusted state is inside a verified epoch …","The current trusted state is an epoch waypoint, which is a …","The latest ledger info is at the same version as the …","<code>TrustedState</code> keeps track of light clients’ latest, …","<code>TrustedStateChange</code> is the result of attempting to ratchet …","Cryptographic hasher for an BCS-serializable #item","We have a newer <code>TrustedState</code> but it’s still in the same …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create an initial trusted state from a trusted epoch …","","","","","","","","","","","","","","","","","","","","","Try to create a trusted state from an epoch-change ledger …","","","","","","","","","Verify and ratchet forward our trusted state using an …","","","","","","","","","The current verified view of the transaction accumulator. …","The current epoch and validator set inside that epoch.","The current trusted version and a commitment to a ledger …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is an bcs serialized Vec","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is an bcs serialized Vec","","","","After executing a special transaction indicates a change …","Returns the id of this validator (hash of the current …","","","","","","Returns the validator’s config","Returns the key for validating signed messages from this …","Returns the voting power for this validator","","","","","","","","Returns the validator’s config, consuming self","","","","","","","","","","","","ValidatorSigner associates an author with public and …","Returns the author associated with this signer.","","","","","","","For test only - makes signer with nicely looking account …","","","Returns the private key associated with this signer. Only …","","Returns the public key associated with this signer.","Generate a random set of public and private keys and author","Constructs a signature for <code>message</code> using <code>private_key</code>.","","","","","","","","","","","","The signature does not match the hash.","","","The author for this signature is unknown by this validator.","Helper struct to manage validator information for …","Supports validation of signatures for known authors with …","Errors possible during signature verification.","","","This function will try batch signature verification and …","","","","","","","Ensure there is at least quorum_voting_power in the …","","","","","","","","","","","","","","","","","","","","","Returns an ordered list of account addresses as an <code>Iterator</code>…","Returns the public key for this address.","Returns the voting power for this address.","","","","Is there at least one author?","Returns the number of authors to be validated.","","","","","Initialize with a map of account address to validator info …","Initializes a validator verifier with a specified quorum …","Helper method to initialize with a single author and …","Initializes a validator verifier with a specified quorum …","Returns quorum voting power.","Helper function to get random validator signers and a …","","","","","","","","","","","","","","","","","","Verify the correctness of a signature of a message by a …","This function will successfully return when at least …","","","","","","","","","","","An <code>AbortLocation</code> specifies where a Move program <code>abort</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates an error from the VM, e.g. OUT_OF_GAS, …","The VM status corresponding to an EXECUTED status code","","","Indicates an failure from inside Move code, where the VM …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates <code>abort</code> occurred in the specified module","Indicates an <code>abort</code> from inside Move code. Contains the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates the <code>abort</code> occurred in a script","We don’t derive Arbitrary on this enum because it is too …","A status type is one of 5 different variants, along with a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A <code>VMStatus</code> is represented as either","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>Ok</code> with a recorded status if it should be kept, <code>Err</code>…","","Returns the Move abort code if the status is <code>MoveAbort</code>, …","","","","","","","","","","","","Return the status code for the <code>VMStatus</code>","Return the status type for this <code>VMStatus</code>. This is solely …","Return the status type for this status code","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The ModuleId for the Account module.","The Identifier for the Account module.","The ModuleId for the Designated Dealer module.","The Identifier for the Designated Dealer module.","The ModuleId for the Diem module.","The Identifier for the Diem module.","Location for an abort in the Account module","","","","","Cryptographic hasher for an BCS-serializable #item","Waypoint keeps information about the LedgerInfo on a given …","","","","","","","","","","","","","","","","","","","","","","","","","","","Generate a new waypoint given any LedgerInfo.","Generates a new waypoint given the epoch change LedgerInfo.","","","","","","","","","","","","","","","Errors in case the given ledger info does not match the …","","","","","","","","","<code>WriteSet</code> contains all access paths that one transaction …","A mutable version of <code>WriteSet</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,0,1,0,0,0,0,0,1,1,0,0,1,1,0,1,1,1,0,1,1,0,0,1,1,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,1,0,0,1,0,0,0,1,0,1,1,0,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,0,0,0,0,0,1,0,0,0,2,0,2,3,3,3,2,3,2,3,2,3,2,3,2,3,3,2,3,2,3,2,3,3,3,3,2,3,3,3,2,3,2,3,2,3,3,2,3,3,3,3,2,3,2,3,2,3,3,2,2,2,3,2,3,2,3,2,4,5,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,24,24,24,24,24,24,24,24,24,24,0,25,0,25,26,25,26,25,26,25,26,25,26,26,25,25,25,26,25,26,25,25,26,26,25,25,26,26,26,25,26,25,26,25,26,25,26,25,26,27,28,28,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,0,30,30,31,30,31,30,31,30,31,30,31,30,31,30,31,31,30,31,30,31,30,31,30,31,30,31,30,32,33,0,0,34,34,34,35,34,35,35,35,34,34,34,35,35,34,34,35,34,35,34,34,35,35,35,34,35,34,35,35,34,35,34,35,34,35,34,35,0,36,36,36,36,36,36,36,36,36,36,36,36,36,0,37,37,37,37,37,37,37,37,37,37,37,37,37,0,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,42,43,44,44,44,43,45,43,0,46,46,46,46,46,46,46,46,46,46,46,46,46,0,0,47,48,47,48,47,48,47,48,47,48,47,48,47,48,47,48,47,48,47,48,47,48,47,48,47,48,47,0,0,0,0,0,49,50,51,49,52,50,51,49,52,50,51,50,51,50,51,49,52,51,49,51,50,50,50,51,50,51,50,51,49,52,50,51,49,52,50,50,51,49,52,50,51,49,50,51,49,52,50,51,49,52,50,51,50,51,49,49,52,49,50,51,49,52,50,51,49,52,52,50,51,49,52,0,53,53,53,53,53,53,53,53,53,53,53,53,53,0,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,0,0,0,0,55,56,57,56,57,56,58,57,55,56,58,57,55,56,58,57,55,56,58,57,55,58,0,56,57,55,56,56,56,57,55,56,57,55,58,55,55,58,56,57,55,56,56,58,57,55,56,56,58,57,55,55,55,56,57,55,57,57,55,58,56,57,55,56,57,55,56,58,57,55,56,56,56,58,57,55,56,58,57,55,56,58,57,55,58,57,57,56,58,57,55,58,0,0,0,0,0,0,0,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,0,0,0,0,60,60,61,62,60,61,62,60,62,60,62,60,61,62,60,60,60,60,61,62,61,60,60,61,62,60,60,60,62,0,61,60,60,62,60,62,60,61,62,60,61,62,60,60,62,60,61,62,60,61,62,60,61,62,62,60,61,62,0,63,63,0,63,63,63,63,64,63,64,63,64,63,64,64,64,0,64,64,63,63,64,64,63,64,63,64,64,63,64,63,64,64,64,64,64,64,63,64,63,64,63,64,63,64,63,64,63,64,0,0,0,0,0,0,65,65,66,67,65,68,69,70,66,67,65,68,69,70,66,67,65,68,69,70,66,67,65,68,69,70,66,67,68,70,0,65,65,69,66,67,65,69,66,67,65,69,66,67,66,69,66,68,70,68,70,65,65,66,66,67,65,68,69,70,66,67,65,65,69,65,68,69,70,66,67,69,67,65,69,66,67,65,69,66,67,66,68,70,69,65,69,66,67,65,65,69,66,67,65,68,69,70,66,67,65,66,66,65,68,69,70,66,67,65,68,69,70,66,67,65,68,69,70,66,67,69,68,70,67,66,67,65,68,69,70,66,67,68,70,71,0,0,0,0,0,0,72,73,74,72,73,75,74,72,73,75,74,72,73,75,74,72,73,75,72,73,74,72,73,75,74,72,73,75,74,74,72,73,75,75,74,72,73,75,74,74,72,73,75,74,72,73,75,74,72,73,72,73,72,73,74,72,73,75,74,75,74,72,73,75,74,72,73,75,74,72,73,75,74,74,74,72,73,75,0,0,76,77,76,77,77,77,76,77,76,76,77,76,77,76,77,77,76,77,76,77,77,76,77,76,77,76,77,76,77,0,0,78,78,78,78,78,78,78,79,78,78,78,78,78,79,78,78,78,78,78,78,78,78,78,78,79,78,78,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,0,0,0,81,81,82,81,81,83,82,81,83,82,81,83,82,81,83,82,81,82,82,81,82,81,82,81,82,81,81,81,83,83,82,81,83,82,81,81,81,81,81,81,81,83,82,82,81,82,81,82,81,82,81,81,82,81,82,82,81,82,81,83,82,81,83,81,81,81,83,82,81,83,82,81,83,82,81,83,82,0,0,0,0,84,85,86,84,85,87,86,84,85,87,86,84,85,85,87,86,84,85,87,86,84,85,86,85,86,86,87,84,84,86,84,85,86,86,86,84,85,86,84,85,87,87,86,86,84,84,85,85,87,86,84,85,86,84,85,86,87,86,84,85,85,86,86,84,85,86,84,85,86,86,85,86,87,86,84,85,86,85,86,84,85,86,87,86,84,85,86,84,85,86,87,86,84,85,87,86,84,85,87,86,84,85,87,85,86,87,86,84,85,87,88,89,89,89,89,0,0,89,89,89,90,89,90,89,90,89,90,89,90,89,90,89,90,90,89,90,89,90,90,89,89,90,89,90,89,90,89,90,90,90,90,89,90,89,90,89,90,89,89,90,89,90,89,90,89,90,0,91,91,91,92,93,93,94,94,94,0,93,93,0,93,94,93,93,94,94,0,94,0,94,92,92,93,0,93,93,0,94,93,93,95,0,95,94,96,96,95,95,94,96,93,97,92,95,94,96,93,97,92,95,94,96,92,95,94,96,92,95,94,96,95,0,95,94,96,92,95,94,96,92,95,95,95,95,95,94,94,96,96,93,93,97,97,92,95,95,95,94,94,96,93,93,93,93,93,97,92,95,96,95,94,96,95,94,96,93,97,92,95,95,92,95,95,94,96,0,0,0,0,0,0,95,95,95,94,96,93,95,94,96,95,94,96,92,95,95,94,96,93,97,95,95,94,96,96,93,97,92,95,94,96,93,97,92,95,94,96,93,97,92,95,94,96,93,97,92,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,0,0,0,0,0,0,0,0,0,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,0,0,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,0,114,114,114,114,114,114,114,114,0,0,0,0,115,115,116,117,115,116,117,115,116,115,115,115,115,115,115,115,115,116,117,115,116,115,115,116,115,117,115,116,117,116,115,116,115,115,115,115,117,116,117,115,115,116,115,118,117,116,115,115,116,115,0,115,115,117,115,116,117,115,116,117,115,116,116,117,115,116,119,119,0,0,0,0,0,0,0,0,0,0,119,0,0,0,0,0,120,120,0,0,0,121,0,122,120,123,120,124,123,125,126,122,127,128,121,129,130,120,124,123,125,126,122,127,128,121,129,130,130,120,124,123,125,126,122,127,128,121,129,120,124,123,125,126,122,127,128,121,129,125,0,129,126,128,120,123,120,124,130,120,124,123,125,126,122,127,128,130,119,119,120,127,122,129,130,120,124,123,125,126,122,127,128,121,129,125,126,122,121,130,123,131,119,120,124,123,125,126,126,122,122,127,128,121,121,129,129,130,120,124,123,125,126,122,122,127,128,121,129,130,126,127,129,121,120,124,123,125,126,122,127,128,121,129,130,122,128,128,128,130,120,128,125,120,124,123,125,126,122,127,128,121,129,122,129,0,128,125,122,128,120,124,123,125,126,122,127,128,130,120,124,123,125,126,122,127,128,130,120,124,123,125,126,122,127,128,121,129,126,122,121,129,120,124,123,125,126,122,127,128,121,129,130,120,124,123,125,126,122,127,128,121,129,130,120,124,123,120,124,123,125,126,122,127,128,121,129,130,120,124,123,125,126,122,127,128,121,129,130,132,133,0,0,0,0,0,0,0,0,134,135,136,134,135,136,134,136,134,136,134,136,0,0,134,134,134,136,136,134,135,136,134,135,134,135,136,134,134,134,135,134,0,0,136,134,134,136,134,135,136,134,135,136,134,135,136,134,136,134,135,136,134,136,0,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,0,137,137,137,137,137,137,137,137,137,137,137,0,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,139,140,141,142,143,144,145,146,147,148,139,140,141,142,143,144,145,146,147,148,149,139,140,141,142,143,144,145,146,147,148,149,139,140,141,142,143,144,145,146,147,148,149,139,140,141,142,143,144,145,146,147,148,149,0,139,140,141,142,143,144,145,146,147,148,149,139,140,141,142,143,144,145,146,147,148,149,139,140,141,142,143,144,145,146,147,148,149,139,140,141,142,143,144,145,146,147,148,149,139,140,141,142,143,144,145,146,147,148,149,139,140,141,142,143,144,145,146,147,148,149,142,142,140,145,145,148,143,140,141,142,144,145,146,147,148,149,139,140,141,142,143,144,145,146,147,148,149,143,148,143,144,141,139,140,141,142,143,144,145,146,147,148,149,139,140,142,139,140,141,142,143,144,145,146,147,148,149,139,140,141,142,143,144,145,146,147,148,149,145,145,146,146,147,148,141,139,140,141,142,143,144,145,146,147,148,149,141,139,140,141,142,143,144,145,146,147,148,149,139,140,141,142,143,144,145,146,147,148,149,139,140,143,144,145,146,147,148,149,141,141,139,140,141,142,143,144,145,146,147,148,149,0,0,0,0,0,0,0,0,150,0,0,150,151,152,153,150,154,155,151,152,153,150,154,155,153,153,153,153,150,153,150,153,153,150,154,155,151,152,153,150,154,155,153,153,153,153,153,0,151,152,153,150,154,155,151,152,154,155,153,153,153,153,153,153,153,153,153,153,153,151,152,151,152,154,155,153,153,0,153,153,153,153,153,153,153,153,153,153,151,152,153,150,154,155,151,152,153,150,154,155,151,152,153,150,154,155,151,152,153,150,154,155,0,0,0,0,0,0,0,0,0,0,0,0,156,156,157,158,159,160,161,162,163,164,165,166,156,157,158,159,160,161,162,163,164,165,166,156,157,158,159,160,161,162,163,164,165,166,156,157,158,159,160,161,162,163,164,165,166,156,157,158,159,160,161,162,163,164,165,166,156,156,157,158,159,160,161,162,163,164,165,166,157,158,159,160,161,162,163,164,165,166,156,157,158,159,160,161,162,163,164,165,166,156,157,158,159,160,161,162,163,164,165,166,156,157,158,159,160,161,162,163,164,165,166,156,157,158,159,160,161,162,163,164,165,166,0,167,0,167,168,168,168,168,168,168,168,168,168,168,168,168,0,0,0,0,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,0,0,0,0,0,0,0,0,0,170,0,171,0,172,171,0,173,173,174,175,172,0,175,0,176,177,173,0,0,0,0,0,175,0,176,174,0,0,176,178,0,0,0,0,0,0,0,0,0,0,0,0,0,178,0,0,0,0,173,0,171,171,171,171,172,0,173,173,0,0,176,0,179,180,181,182,183,176,174,184,185,186,175,187,179,188,170,172,171,182,189,178,190,191,172,0,184,180,181,182,189,183,192,177,193,176,174,184,185,186,175,173,194,195,196,187,179,188,197,170,172,198,178,190,191,199,200,171,201,180,181,182,189,183,192,177,193,176,174,184,185,186,175,173,194,195,196,187,179,188,197,170,172,198,178,190,191,199,200,171,201,184,184,180,181,182,189,183,192,177,193,176,174,184,185,186,175,173,194,195,196,187,179,188,197,170,172,198,178,190,191,199,200,171,201,180,181,182,189,183,192,177,193,176,174,184,185,186,175,173,194,195,196,187,179,188,197,170,172,198,178,190,191,199,200,171,201,173,181,182,191,184,184,192,193,196,198,0,185,180,181,182,189,183,177,176,174,184,186,175,195,187,179,188,197,170,172,178,190,191,199,200,171,201,178,190,191,180,181,182,189,183,177,176,174,184,185,186,175,173,194,195,187,179,188,197,170,172,178,190,191,199,200,171,201,180,181,182,189,183,177,176,174,184,185,186,175,173,194,195,187,179,188,197,170,172,178,190,191,199,200,171,201,194,202,187,180,195,179,186,188,184,192,193,196,198,197,188,192,193,196,198,180,181,182,189,183,177,176,174,184,185,186,175,173,194,195,187,187,179,188,197,170,172,178,190,191,199,200,171,183,184,172,180,181,182,189,183,192,177,193,176,174,184,185,186,175,175,175,173,194,195,196,187,179,188,197,170,172,198,178,190,191,199,200,171,201,201,173,189,184,184,202,195,187,179,176,185,194,180,181,182,189,183,183,177,177,176,174,184,185,173,187,172,178,190,191,199,200,171,201,0,170,180,181,182,189,183,192,177,193,176,174,184,185,186,175,173,194,195,195,196,187,179,188,197,170,172,198,178,190,191,199,200,171,201,180,181,182,189,185,170,183,184,185,176,201,175,170,184,178,178,179,170,184,0,189,190,176,185,183,178,190,191,199,200,180,181,182,189,183,177,176,174,184,185,186,175,194,195,187,179,188,197,170,172,178,190,191,199,200,171,201,202,180,181,182,189,183,184,186,194,195,187,179,188,197,170,190,191,199,200,183,188,197,170,183,177,184,184,183,183,184,183,183,0,173,184,173,186,188,197,184,194,176,185,192,193,196,198,183,184,184,180,181,182,189,183,177,176,174,184,186,175,195,187,179,188,197,170,172,178,190,191,199,200,171,176,174,183,183,183,202,187,202,175,194,195,187,179,180,181,182,189,183,177,176,174,184,186,175,195,187,179,188,197,170,172,178,190,191,199,200,171,180,181,182,189,183,192,177,193,176,174,184,185,186,175,173,194,195,196,187,179,188,197,170,172,198,178,190,191,199,200,171,201,187,179,186,202,187,188,197,180,181,182,189,183,192,177,193,176,174,184,184,185,186,175,173,194,195,196,187,179,188,197,170,172,198,178,190,191,199,200,171,171,201,180,181,182,189,183,192,177,193,176,174,184,185,186,175,173,194,195,196,187,179,188,197,170,172,198,178,190,191,199,200,171,201,182,189,178,190,191,180,181,182,189,183,192,177,193,176,174,184,185,186,175,173,194,195,196,187,179,188,197,170,172,198,178,190,191,199,200,171,201,199,192,193,196,198,188,197,170,186,186,180,181,182,189,183,192,177,193,176,174,184,185,186,175,173,194,195,196,187,179,188,197,170,172,198,178,190,191,199,200,171,201,192,193,196,198,180,195,179,176,185,203,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,222,0,0,0,0,0,223,224,225,226,0,227,223,223,224,225,0,0,226,226,225,225,228,227,223,224,225,229,226,228,227,223,224,225,229,226,227,223,225,229,226,227,223,225,229,226,226,229,226,223,225,226,228,223,225,226,226,226,227,223,225,226,227,223,225,226,229,229,227,227,223,223,224,224,225,225,226,226,226,228,227,223,224,225,229,226,226,226,223,225,226,228,227,223,224,225,229,226,228,223,228,223,225,226,223,225,226,226,225,226,226,225,226,225,223,223,229,223,223,225,226,225,223,225,226,226,227,223,225,229,226,227,223,224,225,226,226,228,227,223,224,225,229,226,226,226,228,227,223,224,225,229,226,228,227,223,224,225,229,226,229,223,225,228,227,223,224,225,229,226,229,226,230,231,230,231,232,233,234,234,234,232,233,0,0,0,0,0,0,0,0,235,0,236,0,237,0,236,0,238,239,239,0,239,0,236,0,240,0,236,0,241,0,0,236,0,242,236,0,236,239,239,236,238,243,242,244,245,241,246,239,237,247,240,248,236,238,243,242,244,245,241,246,239,237,247,240,248,236,238,243,242,244,245,241,246,239,237,247,240,248,236,238,243,242,244,245,241,246,239,237,247,240,248,236,238,243,242,244,245,241,246,239,237,247,240,248,236,238,243,242,244,245,241,246,239,237,247,240,248,236,238,243,242,244,245,241,246,239,237,247,240,248,236,238,243,242,244,245,241,246,239,237,247,240,248,236,238,243,242,244,245,241,246,239,237,247,240,248,243,236,238,243,242,244,245,241,246,239,237,247,240,248,245,236,238,243,242,244,245,241,246,237,247,240,248,243,244,246,248,243,236,238,243,242,244,245,241,246,239,237,247,240,248,236,238,243,242,244,245,241,246,239,237,247,240,248,236,238,243,242,244,245,241,246,239,237,247,240,248,243,247,246,236,238,243,242,244,245,241,246,239,237,247,240,248,236,238,243,242,244,245,241,246,239,237,247,240,248,236,238,243,242,244,245,241,246,239,237,247,240,248,236,238,243,242,244,245,241,246,239,237,247,240,248,249,250,251,252,253,254,255,256,257,258,259,260,261,261,260,0,0,0,260,261,261,261,262,261,260,262,261,260,262,261,260,262,261,260,262,261,261,261,261,262,262,261,260,262,261,260,261,261,262,261,260,260,261,261,260,261,261,260,262,261,261,262,261,260,262,261,260,261,262,261,260,262,261,260,262,261,261,261,261,262,261,260,261,262,263,264,264,264,265,266,265,0,0,0,267,268,269,267,268,269,267,268,269,267,268,269,267,267,268,269,268,268,269,267,268,269,267,268,269,267,268,269,267,268,269,267,267,267,268,269,268,269,267,268,269,267,267,268,269,267,268,269,267,268,269,267,268,269,267,268,269,267,268,269,267,268,267,267,268,269,267,0,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,0,271,271,271,271,271,271,271,271,271,271,271,0,271,271,271,271,271,271,271,271,0,0,0,0,0,272,272,272,272,272,0,0,0,273,274,274,272,273,274,272,273,274,274,273,274,273,274,273,274,272,273,274,273,274,272,272,273,274,274,272,273,274,274,274,274,274,272,273,274,274,274,272,273,274,273,274,274,274,274,274,0,273,274,273,274,273,274,272,274,272,273,274,272,273,274,272,273,274,274,274,272,273,274,275,275,276,276,277,277,277,0,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,278,0,277,277,277,277,277,277,277,277,277,277,279,279,280,278,279,280,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,278,0,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,280,281,279,280,277,277,277,277,277,277,277,280,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,281,0,0,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,278,277,277,277,277,277,277,0,277,277,277,278,278,277,277,277,277,277,279,280,281,277,279,280,281,278,277,279,280,281,278,277,279,280,281,278,277,279,280,281,278,277,279,280,281,277,279,280,281,277,279,280,281,278,277,279,280,281,278,277,279,279,280,280,281,281,278,278,277,279,280,281,278,277,279,280,281,278,277,279,280,281,278,277,280,279,0,279,279,280,281,279,280,281,277,279,280,281,277,279,279,277,0,279,280,281,277,279,280,281,278,277,279,280,281,278,279,280,281,278,277,277,279,280,281,278,277,279,280,281,278,277,279,280,281,278,277,282,283,283,284,284,284,285,286,286,287,287,287,287,0,0,0,0,0,0,0,0,0,0,0,0,0,288,288,289,288,289,288,289,288,289,288,289,288,288,288,288,289,289,288,288,288,289,288,288,289,288,288,288,288,289,288,288,288,289,288,288,289,288,289,288,289,289,288,288,288,288,288,289,289,290,290,0,0,0,290,291,290,291,292,290,291,292,290,291,292,290,291,292,291,292,290,290,291,292,290,291,292,290,291,292,290,291,292,292,290,291,292,292,290,291,292,290,291,292,291,291,290,291,292,291,290,291,292,292,292,290,291,292,290,291,292,290,291,292,290,291,292,290,291,292,290,291,292,290,290,291,292,293],"f":[null,null,null,null,null,null,null,null,[[]],[[]],null,null,[[]],[[]],null,[[],["accountaddress",3]],[[]],[[["accountaddress",3]],["ordering",4]],null,[[]],[[],[["accountaddress",3],["result",4,["accountaddress"]]]],null,null,[[]],[[]],null,null,[[["accountaddress",3]],["bool",15]],[[],["bool",15]],null,[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[],["accountaddress",3]],[[]],[[],[["accountaddress",3],["result",4,["accountaddress","accountaddressparseerror"]],["accountaddressparseerror",3]]],[[],[["accountaddress",3],["result",4,["accountaddress","accountaddressparseerror"]],["accountaddressparseerror",3]]],[[["str",15]],[["accountaddress",3],["result",4,["accountaddress","accountaddressparseerror"]],["accountaddressparseerror",3]]],[[["str",15]],[["accountaddress",3],["result",4,["accountaddress","accountaddressparseerror"]],["accountaddressparseerror",3]]],[[],["hashvalue",3]],[[]],[[]],[[]],null,null,null,[[["accountaddress",3]],["bool",15]],null,[[],["accountaddress",3]],null,null,[[["accountaddress",3]],[["option",4,["ordering"]],["ordering",4]]],null,null,null,[[],["accountaddress",3]],null,[[],["result",4]],[[],["string",3]],null,null,[[],["hashvalue",3]],[[],["string",3]],[[],["string",3]],[[]],[[],["string",3]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],null,null,[[],["result",4]],[[["vec",3,["u8","global"]],["u8",15],["global",3]],[["accountaddress",3],["result",4,["accountaddress","accountaddressparseerror"]],["accountaddressparseerror",3]]],[[],[["accountaddress",3],["result",4,["accountaddress","accountaddressparseerror"]],["accountaddressparseerror",3]]],[[["string",3]],[["accountaddress",3],["result",4,["accountaddress","accountaddressparseerror"]],["accountaddressparseerror",3]]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,[[]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["accesspath",3]],[[],["path",4]],[[]],[[]],[[["accesspath",3]],["ordering",4]],[[["path",4]],["ordering",4]],[[["moduleid",3]],["accesspath",3]],[[],["result",4]],[[],["result",4]],[[["accesspath",3]],["bool",15]],[[["path",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["moduleid",3]],["accesspath",3]],[[]],[[]],[[],["path",4]],[[],[["structtag",3],["option",4,["structtag"]]]],[[]],[[]],[[]],[[]],[[["accesspath",3]],["bool",15]],[[["path",4]],["bool",15]],[[["vec",3,["u8"]],["u8",15],["accountaddress",3]]],[[["accesspath",3]],[["option",4,["ordering"]],["ordering",4]]],[[["path",4]],[["option",4,["ordering"]],["ordering",4]]],null,[[["resourcekey",3]],["accesspath",3]],[[["structtag",3]],[["vec",3,["u8"]],["u8",15]]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["vec",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,[[["publickey",3]],["accountaddress",3]],[[["ed25519publickey",3]],["accountaddress",3]],[[],["hashvalue",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["accountaddress",3]],[[],["accountaddress",3]],[[],["accountaddress",3]],[[],["accountaddress",3]],[[],["accountaddress",3]],null,null,null,null,null,[[["typetag",4]],[["string",3],["option",4,["string"]]]],[[],["typetag",4]],[[],["typetag",4]],null,null,null,null,null,[[["str",15]],["bool",15]],[[["typetag",4]],[["result",6,["identifier"]],["identifier",3]]],[[["str",15]],[["result",6,["identifier"]],["identifier",3]]],[[["identifier",3]],["typetag",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["u64",15]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["result",4]],[[],["hashvalue",3]],[[["contractevent",4]],["result",6]],[[],["result",4]],[[],["result",6]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["result",4]],[[],["hashvalue",3]],[[],["u64",15]],[[["contractevent",4]],["result",6]],[[],["result",4]],[[],["result",6]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[],["u64",15]],[[]],[[]],[[],["identstr",3]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["accountaddress",3]],[[],["result",4]],[[],["hashvalue",3]],[[["contractevent",4]],["result",6]],[[],["result",4]],[[],["result",6]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[],["u64",15]],[[]],[[]],[[],["identstr",3]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["accountaddress",3]],[[],["result",4]],[[],["hashvalue",3]],[[],["result",4]],[[["contractevent",4]],["result",6]],[[],["result",6]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["result",4]],[[],["hashvalue",3]],[[],["u64",15]],[[["contractevent",4]],["result",6]],[[],["result",4]],[[],["result",6]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[],["accountaddress",3]],[[],["result",4]],[[],["eventkey",3]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["u64",15]],[[],["result",4]],[[],["hashvalue",3]],[[],["result",4]],[[["contractevent",4]],["result",6]],[[],["result",6]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[],["identstr",3]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["f32",15]],[[],["result",4]],[[],["hashvalue",3]],[[],["result",4]],[[["contractevent",4]],["result",6]],[[],["result",6]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[]],[[],["u64",15]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["result",4]],[[],["u64",15]],[[],["hashvalue",3]],[[],["result",4]],[[],["result",6]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[],["u64",15]],[[]],[[]],[[],["identstr",3]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["result",4]],[[],["hashvalue",3]],[[],["result",4]],[[["contractevent",4]],["result",6]],[[],["result",6]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[]],[[["u64",15],["vec",3,["accountaddress"]],["accountaddress",3]]],[[],["u64",15]],[[],["accountaddress",3]],[[],["u64",15]],[[],["result",4]],[[],["hashvalue",3]],[[["contractevent",4]],["result",6]],[[],["result",4]],[[],["result",6]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[],["result",4]],[[],["u64",15]],[[],["eventkey",3]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["result",4]],[[],["hashvalue",3]],[[["contractevent",4]],["result",6]],[[],["result",4]],[[],["result",6]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[],["u64",15]],[[]],[[]],[[],["identstr",3]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["accountaddress",3]],[[],["result",4]],[[],["hashvalue",3]],[[],["result",4]],[[["contractevent",4]],["result",6]],[[],["result",6]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[],["u64",15]],[[]],[[]],[[],["identstr",3]],[[],["result",4]],[[],["accountaddress",3]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["result",4]],[[],["hashvalue",3]],[[],["result",4]],[[["contractevent",4]],["result",6]],[[],["result",6]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[],["u64",15]],[[]],[[]],[[],["identstr",3]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["accountaddress",3]],[[],["result",4]],[[],["hashvalue",3]],[[],["result",4]],[[["contractevent",4]],["result",6]],[[],["result",6]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[],["u64",15]],[[]],[[]],[[],["identstr",3]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["u64",15],["u8",15],["accountaddress",3],["identifier",3],["vec",3,["u8"]]]],[[],["accountaddress",3]],[[],["result",4]],[[],["hashvalue",3]],[[],["result",4]],[[["contractevent",4]],["result",6]],[[],["result",6]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[["u64",15],["u8",15],["vec",3,["u8"]],["keyrotationcapabilityresource",3],["withdrawcapabilityresource",3],["eventhandle",3],["option",4,["keyrotationcapabilityresource"]],["option",4,["withdrawcapabilityresource"]]]],[[],["eventhandle",3]],[[],["eventhandle",3]],[[],["u64",15]],[[],["result",4]],[[],["hashvalue",3]],[[["accountstateblob",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[["typetag",4]],[["vec",3,["u8"]],["u8",15]]],[[]],[[]],[[]],[[],["u64",15]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[]],[[["u64",15]]],[[],["result",4]],[[["typetag",4]],["structtag",3]],[[],["hashvalue",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],[["vec",3,["typetag"]],["typetag",4]]],[[]],null,[[]],[[]],[[],["chainid",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["accountsequenceinfo",4]],[[],["crsnresource",3]],[[]],[[]],[[],["result",4]],[[["accountsequenceinfo",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],[[["accountsequenceinfo",4]],["bool",15]],[[],["result",4]],[[],["u64",15]],[[],["hashvalue",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,[[]],[[]],[[],["eventhandle",3]],[[],["eventhandle",3]],[[],["currencyinforesource",3]],[[]],[[["u64",15]],["u64",15]],[[],["identstr",3]],[[],["result",4]],[[],["f32",15]],[[],["eventhandle",3]],[[["formatter",3]],["result",6]],[[],["u64",15]],[[]],[[]],[[],["eventhandle",3]],[[["u64",15],["bool",15],["identifier",3],["eventhandle",3],["u128",15]]],[[],["eventhandle",3]],[[],["u64",15]],[[["identifier",3]],["accesspath",3]],[[],["u64",15]],[[],["result",4]],[[["identifier",3]],["structtag",3]],[[],["hashvalue",3]],[[]],[[],["u128",15]],[[],["result",4]],[[],["result",6]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["eventhandle",3]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,[[],["str",15]],[[],["eventhandle",3]],[[]],[[]],[[]],[[]],[[],["limit",3]],[[]],[[],["eventhandle",3]],[[]],[[],["result",4]],[[],["result",4]],[[["limit",3]],["bool",15]],[[],["u64",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["str",15]],[[]],[[]],null,[[["limit",3]],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[]],[[]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["bool",15]],[[],["result",4]],[[],["hashvalue",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["result",4]],[[],["hashvalue",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[["typetag",4]],[["vec",3,["u8"]],["u8",15]]],[[]],[[]],[[]],[[],["u64",15]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[]],[[["u64",15]]],[[],["result",4]],[[["typetag",4]],["structtag",3]],[[],["hashvalue",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],[["vec",3,["typetag"]],["typetag",4]]],[[]],null,[[["typetag",4]],[["vec",3,["u8"]],["u8",15]]],[[]],[[]],[[]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["result",4]],[[["typetag",4]],["structtag",3]],[[],["hashvalue",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],[["vec",3,["typetag"]],["typetag",4]]],[[]],null,[[["typetag",4]],[["vec",3,["u8"]],["u8",15]]],[[]],[[]],[[]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["vec",3,["u8"]],["u8",15],["preburnresource",3]]],[[],["preburnresource",3]],[[],["result",4]],[[["typetag",4]],["structtag",3]],[[],["hashvalue",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],[["vec",3,["typetag"]],["typetag",4]]],[[]],null,null,null,null,null,null,[[]],[[]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["result",4]],[[],["hashvalue",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["u64",15]],[[],["result",4]],[[],["hashvalue",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[],["accountaddress",3]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,[[],["accountaddress",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["vaspdomains",3]],[[],["vaspdomain",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["diemidvaspdomainidentifier",3]],[[],["vaspdomain",3]],null,[[]],null,[[["vaspdomains",3]],["bool",15]],[[["vaspdomain",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],[["vec",3,["diemidvaspdomainidentifier"]],["diemidvaspdomainidentifier",3]]],[[]],[[]],[[]],[[]],[[["vaspdomains",3]],["bool",15]],[[["vaspdomain",3]],["bool",15]],[[],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["contractevent",4]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["eventhandle",3]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["result",4]],[[],["hashvalue",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[],["accountstate",3]],[[],["result",4]],[[["accountstate",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[],[["option",4,["vec"]],["vec",3]]],[[],[["result",6,["option"]],["option",4,["accountaddress"]]]],[[],[["result",6,["option"]],["option",4,["accountresource"]]]],[[],[["result",6,["option"]],["option",4,["accountrole"]]]],[[],[["result",6,["btreemap"]],["btreemap",3,["identifier","balanceresource"]]]],[[],[["option",4,["chainidresource"]],["result",6,["option"]]]],[[],[["result",6,["option"]],["option",4]]],[[],[["result",6,["option"]],["option",4,["configurationresource"]]]],[[],[["result",6,["option"]],["option",4,["crsnresource"]]]],[[],[["option",4,["diemblockresource"]],["result",6,["option"]]]],[[],[["result",6,["option"]],["option",4,["diemtimestampresource"]]]],[[],[["result",6,["option"]],["option",4,["diemversion"]]]],[[],[["option",4,["freezingbit"]],["result",6,["option"]]]],[[]],[[],[["result",6,["btreemap"]],["btreemap",3,["identifier","preburnresource"]]]],[[],[["btreemap",3,["identifier","preburnqueueresource"]],["result",6,["btreemap"]]]],[[],[["result",6,["vec"]],["vec",3,["currencyinforesource"]]]],[[],[["result",6,["option"]],["option",4]]],[[],[["result",6,["option"]],["option",4]]],[[]],[[]],[[],[["result",6,["option"]],["option",4,["validatorconfigresource"]]]],[[],[["option",4,["validatoroperatorconfigresource"]],["result",6,["option"]]]],[[],[["option",4,["validatorset"]],["result",6,["option"]]]],[[],[["result",6,["option"]],["option",4,["vmpublishingoption"]]]],[[["vec",3,["u8"]],["u8",15]],[["option",4,["vec"]],["vec",3,["u8"]]]],[[]],[[]],[[]],[[["accountstate",3]],["bool",15]],[[],[["option",4,["vec"]],["vec",3,["u8"]]]],[[],["result",4]],[[],["hashvalue",3]],[[],["result",6]],[[["accountstateblob",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["accountstateblob",3]],[[],["accountstateblobhasher",3]],[[],["accountstatewithproof",3]],[[],["accountstateschunkwithproof",3]],[[]],[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[["accountstateblob",3]],["bool",15]],[[["accountstatewithproof",3]],["bool",15]],[[["accountstateschunkwithproof",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["hashvalue",3]],null,null,[[],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["vec",3,["u8"]],["u8",15]],["accountstateblob",3]],[[]],[[]],[[]],[[]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],null,null,[[["accountstateblob",3]],["bool",15]],[[["accountstatewithproof",3]],["bool",15]],[[["accountstateschunkwithproof",3]],["bool",15]],[[["option",4,["accountstateblob"]],["version",6],["accountstateproof",3],["accountstateblob",3]]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[["accountstate",3]],["result",6]],[[],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[["version",6],["ledgerinfo",3],["accountaddress",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[],[["usize",15],["result",6,["usize"]]]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[["u64",15]]],[[],["blockinfo",3]],[[]],[[],["result",4]],[[]],[[],["u64",15]],[[["blockinfo",3]],["bool",15]],[[],["bool",15]],[[],["hashvalue",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["validatorset",3],["hashvalue",3]]],[[],["bool",15]],[[],["hashvalue",3]],[[]],[[],["bool",15]],[[["blockinfo",3]],["bool",15]],[[["option",4,["validatorset"]],["validatorset",3]]],[[["blockinfo",3]],["bool",15]],[[["u64",15],["option",4,["epochstate"]],["epochstate",3],["hashvalue",3],["round",6],["version",6]]],[[],["u64",15]],[[],[["epochstate",3],["option",4,["epochstate"]]]],[[["round",6]]],[[],["round",6]],[[],["result",4]],[[],["hashvalue",3]],[[],["u64",15]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["version",6]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["blockmetadata",3]],[[],["newblockevent",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["blockmetadata",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["u64",15]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[["blockmetadata",3]],["bool",15]],[[["u64",15],["vec",3,["accountaddress"]],["accountaddress",3],["hashvalue",3]]],[[["u64",15],["vec",3,["accountaddress"]],["accountaddress",3]]],[[],["eventkey",3]],[[],["eventhandle",3]],[[],["vec",3]],[[],["accountaddress",3]],[[],["accountaddress",3]],[[],["u64",15]],[[],["u64",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["u64",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["vec",3,["accountaddress"]],["accountaddress",3]]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["namedchain",4]],[[],["chainid",3]],[[]],[[]],[[]],[[],["result",4]],[[],[["result",4,["chainid"]],["chainid",3]]],[[["chainid",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["chainid",3]],[["string",3],["result",6,["namedchain","string"]],["namedchain",4]]],[[["str",15]],["result",6]],[[]],[[],["u8",15]],[[],["u8",15]],[[]],[[]],[[["chainid",3]],["bool",15]],[[["u8",15]]],[[],["result",4]],[[]],[[],["hashvalue",3]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["contractevent",4]],[[],["contracteventhasher",3]],[[],["contracteventv0",3]],[[],["contracteventv0hasher",3]],[[],["eventwithproof",3]],[[],["eventbyversionwithproof",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["contractevent",4]],["bool",15]],[[["contracteventv0",3]],["bool",15]],[[["eventwithproof",3]],["bool",15]],[[["eventbyversionwithproof",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[]],null,[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["result",6]],[[],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["eventkey",3]],null,[[["contractevent",4]],["bool",15]],[[["contracteventv0",3]],["bool",15]],[[["eventwithproof",3]],["bool",15]],[[["eventbyversionwithproof",3]],["bool",15]],[[["u64",15],["u8",15],["eventkey",3],["vec",3,["u8"]],["typetag",4]]],[[["u64",15],["u8",15],["eventkey",3],["vec",3,["u8"]],["typetag",4]]],[[["u64",15],["contractevent",4],["version",6],["eventproof",3]]],[[["eventwithproof",3],["option",4,["eventwithproof"]]]],null,[[]],[[]],[[],["u64",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typetag",4]],[[]],[[]],null,[[["u64",15],["ledgerinfo",3],["version",6],["eventkey",3]],["result",6]],[[["u64",15],["ledgerinfo",3],["option",4,["u64"]],["version",6],["eventkey",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["usize",15],["result",6,["usize"]]]],[[],[["usize",15],["result",6,["usize"]]]],null,null,null,null,null,null,null,[[],["str",15]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["diemid",3]],[[],["diemiduseridentifier",3]],[[],["diemidvaspdomainidentifier",3]],[[],["diemidparseerror",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["diemid",3]],["bool",15]],[[["diemiduseridentifier",3]],["bool",15]],[[["diemidvaspdomainidentifier",3]],["bool",15]],[[["diemidparseerror",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["str",15]],[["result",4,["diemidparseerror"]],["diemidparseerror",3]]],[[]],[[]],[[]],[[]],[[["diemid",3]],["bool",15]],[[["diemiduseridentifier",3]],["bool",15]],[[["diemidvaspdomainidentifier",3]],["bool",15]],[[["diemidparseerror",3]],["bool",15]],[[["diemidvaspdomainidentifier",3],["diemiduseridentifier",3]]],[[["str",15]],[["result",4,["diemidparseerror"]],["diemidparseerror",3]]],[[["str",15]],[["result",4,["diemidparseerror"]],["diemidparseerror",3]]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["diemiduseridentifier",3]],[[],["diemidvaspdomainidentifier",3]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[],["diemtimestamp",3]],[[]],[[],["result",4]],[[],["result",4]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,[[]],[[]],[[]],[[],["epochchangeproof",3]],[[]],[[],["result",4]],[[],[["u64",15],["result",6,["u64"]]]],[[["u64",15]],["bool",15]],[[["epochchangeproof",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[["ledgerinfo",3]],["bool",15]],null,null,[[["epochchangeproof",3]],["bool",15]],[[["ledgerinfowithsignatures",4],["bool",15],["vec",3,["ledgerinfowithsignatures"]]]],[[],["result",4]],[[],["hashvalue",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["ledgerinfowithsignatures",4]],["result",6]],[[["verifier",8]],[["ledgerinfowithsignatures",4],["result",6,["ledgerinfowithsignatures"]]]],[[]],null,[[]],[[]],[[]],[[],["epochstate",3]],[[]],[[],["result",4]],[[]],null,[[["u64",15]],["bool",15]],[[["epochstate",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["ledgerinfo",3]],["bool",15]],[[["epochstate",3]],["bool",15]],[[],["result",4]],[[],["hashvalue",3]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[["ledgerinfowithsignatures",4]],["result",6]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["eventkey",3]],[[],["eventkeyparseerror",3]],[[],["eventhandle",3]],[[]],[[]],[[]],[[["eventkey",3]],["ordering",4]],[[],["u64",15]],[[],["u64",15]],[[],["result",4]],[[],["result",4]],[[["eventkey",3]],["bool",15]],[[["eventhandle",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["asref",8]],[["result",4,["eventkeyparseerror"]],["eventkeyparseerror",3]]],[[["asref",8]],[["result",4,["eventkeyparseerror"]],["eventkeyparseerror",3]]],[[["str",15]],[["result",4,["eventkeyparseerror"]],["eventkeyparseerror",3]]],[[],["u64",15]],[[],["accountaddress",3]],[[]],[[]],[[]],[[]],[[],["eventkey",3]],[[["eventkey",3]],["bool",15]],[[["eventhandle",3]],["bool",15]],[[]],[[["u64",15],["eventkey",3]]],[[["accountaddress",3],["u64",15]]],[[["accountaddress",3],["u64",15]]],[[["eventkey",3]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[["u64",15]]],[[],["result",4]],[[],["result",4]],[[]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],[["vec",3,["u8"]],["u8",15]]],[[],[["eventkeyparseerror",3],["result",4,["eventkey","eventkeyparseerror"]],["eventkey",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,[[["accountaddress",3],["ed25519signature",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["validatorverifier",3]],[["verifyerror",4],["result",4,["verifyerror"]]]],[[],["ledgerinfohasher",3]],[[],["ledgerinfo",3]],[[],["ledgerinfowithsignatures",4]],[[],["ledgerinfowithv0",3]],[[]],[[]],[[]],[[]],[[],["blockinfo",3]],[[],["blockinfo",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[],["ledgerinfowithv0",3]],[[],["ledgerinfowithv0",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["bool",15]],[[],["u64",15]],[[["ledgerinfo",3]],["bool",15]],[[["ledgerinfowithsignatures",4]],["bool",15]],[[["ledgerinfowithv0",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["hashvalue",3]],[[],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["validatorset",3],["hashvalue",3]]],[[["validatorset",3],["hashvalue",3]]],[[["validatorset",3],["hashvalue",3]]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[],["ledgerinfo",3]],[[["option",4,["validatorset"]],["validatorset",3]]],[[["ledgerinfo",3]],["bool",15]],[[["ledgerinfowithsignatures",4]],["bool",15]],[[["ledgerinfowithv0",3]],["bool",15]],[[["hashvalue",3],["blockinfo",3]]],[[["ledgerinfo",3],["accountaddress",3],["btreemap",3,["accountaddress","ed25519signature"]],["ed25519signature",3]]],[[["ledgerinfo",3],["accountaddress",3],["btreemap",3,["accountaddress","ed25519signature"]],["ed25519signature",3]]],[[],["u64",15]],[[],[["epochstate",3],["option",4,["epochstate"]]]],[[["accountaddress",3]]],[[],["round",6]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["hashvalue",3]]],[[],["btreemap",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["hashvalue",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[["validatorverifier",3]],[["verifyerror",4],["result",4,["verifyerror"]]]],[[],["version",6]],[[]],[[]],[[]],[[]],[[],[["usize",15],["result",6,["usize"]]]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["mempoolstatus",3]],[[],["mempoolstatuscode",4]],[[]],[[]],[[["mempoolstatus",3]],["ordering",4]],[[["mempoolstatuscode",4]],["ordering",4]],null,[[["mempoolstatus",3]],["bool",15]],[[["mempoolstatuscode",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["mempoolstatus",3]],["bool",15]],[[["mempoolstatuscode",4]]],[[["mempoolstatus",3]],[["option",4,["ordering"]],["ordering",4]]],[[["mempoolstatuscode",4]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[["u64",15]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[["string",3]]],null,[[["vec",3,["accesspath"]],["accesspath",3]],[["vec",3,["vec"]],["result",6,["vec"]]]],[[["vec",3,["accesspath"]],["version",6],["accesspath",3]],[["vec",3,["vec"]],["result",6,["vec"]]]],[[],[["version",6],["result",6,["version"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u8",15],["publickey",3]]],[[]],[[]],[[]],[[]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["networkaddress",3]],[[],["protocol",4]],[[],["dnsname",3]],[[],["ipfilter",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u64",15],["key",6],["u32",15],["accountaddress",3],["keyversion",6]],[["parseerror",4],["encnetworkaddress",3],["result",4,["encnetworkaddress","parseerror"]]]],null,[[["networkaddress",3]],["bool",15]],[[["protocol",4]],["bool",15]],[[["dnsname",3]],["bool",15]],[[["ipfilter",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[],[["option",4,["ipaddr"]],["ipaddr",4]]],[[],[["option",4,["publickey"]],["publickey",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["socketaddr",4]],["networkaddress",3]],[[["protocol",4]],["networkaddress",3]],[[]],[[["ipaddr",4]],["protocol",4]],[[]],[[]],[[["parseinterror",3]]],[[["error",4]]],[[]],[[["cryptomaterialerror",4]]],[[["addrparseerror",3]]],[[]],[[]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["ipaddr",4]],["bool",15]],[[]],[[["networkaddress",3]],["bool",15]],[[["protocol",4]],["bool",15]],[[["dnsname",3]],["bool",15]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["protocol",4]]],[[["publickey",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["error",8],["option",4,["error"]]]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[],[["result",4,["error"]],["error",3]]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[["vec",3,["protocol"]],["protocol",4]],["result",4]],[[],["result",4]],[[],["result",4]],[[["string",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[],["encnetworkaddress",3]],[[]],[[["accountaddress",3],["key",6],["u32",15]],[["result",4,["networkaddress","parseerror"]],["networkaddress",3],["parseerror",4]]],[[],["result",4]],[[["u64",15],["key",6],["u32",15],["networkaddress",3],["accountaddress",3],["keyversion",6]],[["result",4,["parseerror"]],["parseerror",4]]],[[["encnetworkaddress",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["keyversion",6]],[[["encnetworkaddress",3]],["bool",15]],[[],["u64",15]],[[],["result",4]],[[],["hashvalue",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[]],[[],["nibble",3]],[[]],[[["nibble",3]],["ordering",4]],[[],["result",4]],[[["nibble",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["u8",15]]],[[]],[[]],[[["nibble",3]],["bool",15]],null,[[["nibble",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["result",4]],[[],["hashvalue",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,[[]],[[],["bititerator",3]],[[],["bititerator",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["nibblepath",3]],[[]],[[["nibblepath",3]],["ordering",4]],[[],["result",4]],[[["nibblepath",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["intoiterator",8]]],[[["usize",15]],["nibble",3]],[[],["nibblepath",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],[["nibble",3],["option",4,["nibble"]]]],[[["nibblepath",3]],["bool",15]],[[["vec",3,["u8"]],["u8",15]]],[[["vec",3,["u8"]],["u8",15]]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["nibbleiterator",3]],[[],["usize",15]],[[],["usize",15]],[[["nibblepath",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],[["nibble",3],["option",4,["nibble"]]]],[[["nibble",3]]],[[],["nibbleiterator",3]],[[],["result",4]],[[],["usize",15]],[[],["hashvalue",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["nibbleiterator",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["accesspath",3]],[[["identifier",3],["accountaddress",3]],["accesspath",3]],[[]],[[],["u64",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["onchainconsensusconfig",4]],[[],["consensusconfigv1",3]],[[],["consensusconfigv2",3]],[[],["diemversion",3]],[[],["registeredcurrencies",3]],[[],["validatorset",3]],[[],["vmconfig",3]],[[],["vmpublishingoption",3]],[[],["configid",3]],[[],["onchainconfigpayload",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["diemversion",3]],["ordering",4]],[[],["accountaddress",3]],[[],["hashmap",3]],[[]],[[]],[[],["bool",15]],null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[]],[[],["u64",15]],[[],["u64",15]],[[["onchainconsensusconfig",4]],["bool",15]],[[["consensusconfigv1",3]],["bool",15]],[[["consensusconfigv2",3]],["bool",15]],[[["diemversion",3]],["bool",15]],[[["registeredcurrencies",3]],["bool",15]],[[["validatorset",3]],["bool",15]],[[["vmconfig",3]],["bool",15]],[[["vmpublishingoption",3]],["bool",15]],[[["configid",3]],["bool",15]],[[["onchainconfigpayload",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["eventhandle",3]],null,[[["accesspath",3]],[["option",4,["vec"]],["vec",3,["u8"]]]],[[],["option",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["validatorverifier",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",6]],null,[[],[["result",6],["onchainconfig",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],null,[[],["bool",15]],[[],["u64",15]],[[],["u64",15]],[[["vec",3,["hashvalue"]],["hashvalue",3]]],null,[[["onchainconsensusconfig",4]],["bool",15]],[[["consensusconfigv1",3]],["bool",15]],[[["consensusconfigv2",3]],["bool",15]],[[["diemversion",3]],["bool",15]],[[["registeredcurrencies",3]],["bool",15]],[[["validatorset",3]],["bool",15]],[[["vmconfig",3]],["bool",15]],[[["vmpublishingoption",3]],["bool",15]],[[["configid",3]],["bool",15]],[[["onchainconfigpayload",3]],["bool",15]],[[["vec",3,["validatorinfo"]],["validatorinfo",3]]],[[["u64",15],["arc",3,["hashmap"]],["hashmap",3,["configid","vec"]]]],[[],["eventkey",3]],[[]],[[["diemversion",3]],[["option",4,["ordering"]],["ordering",4]]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["bool",15]],null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["sparsemerkleleafnodehasher",3]],[[],["sparsemerkleleafnode",3]],[[]],[[]],[[]],null,null,[[],["result",4]],[[["sparsemerkleleafnode",3]],["bool",15]],[[],["bool",15]],[[],["hashvalue",3]],[[],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[],["hashvalue",3]],[[["sparsemerkleleafnode",3]],["bool",15]],[[["hashvalue",3]]],[[["hashvalue",3]]],null,null,[[]],[[],["result",4]],[[],["hashvalue",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[],["hashvalue",3]],[[]],[[]],[[]],[[],[["usize",15],["result",6,["usize"]]]],null,[[]],[[["leafcount",6]],["result",6]],[[]],[[]],[[],["inmemoryaccumulator",3]],[[]],[[]],[[],["result",4]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["vec",3]],[[]],[[],["bool",15]],null,[[["vec",3,["hashvalue"]],["leafcount",6],["hashvalue",3]],["result",6]],[[],["leafcount",6]],[[],["hashvalue",3]],[[],["result",4]],[[],["hashvalue",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["u64",15]],[[]],null,[[]],[[]],[[],["mocktransactionaccumulator",3]],[[]],[[["formatter",3]],["result",6]],[[]],[[["vec",3,["hashvalue"]],["hashvalue",3]]],[[["version",6]],["transactionaccumulatorsummary",3]],[[["option",4,["version"]],["version",6]],["accumulatorconsistencyproof",3]],[[["version",6]],["hashvalue",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["version",6]],[[]],[[["version",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["accumulatorproof",3]],[[],["sparsemerkleproof",3]],[[],["transactionaccumulatorsummary",3]],[[],["accumulatorconsistencyproof",3]],[[],["accumulatorrangeproof",3]],[[],["sparsemerklerangeproof",3]],[[],["transactioninfowithproof",3]],[[],["accountstateproof",3]],[[],["eventproof",3]],[[],["transactioninfolistwithproof",3]],[[],["accumulatorextensionproof",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["bool",15]],[[["sparsemerkleproof",3]],["bool",15]],[[["transactionaccumulatorsummary",3]],["bool",15]],[[["accumulatorconsistencyproof",3]],["bool",15]],[[],["bool",15]],[[["sparsemerklerangeproof",3]],["bool",15]],[[["transactioninfowithproof",3]],["bool",15]],[[["accountstateproof",3]],["bool",15]],[[["eventproof",3]],["bool",15]],[[["transactioninfolistwithproof",3]],["bool",15]],[[["accumulatorextensionproof",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["hashvalue",3],["vec",3,["hashvalue"]]]],[[],["bool",15]],[[],[["option",4,["sparsemerkleleafnode"]],["sparsemerkleleafnode",3]]],[[],["transactionaccumulatorproof",6]],null,null,[[],["vec",3]],[[["sparsemerkleproof",3]],["bool",15]],[[["transactionaccumulatorsummary",3]],["bool",15]],[[["accumulatorconsistencyproof",3]],["bool",15]],[[["sparsemerklerangeproof",3]],["bool",15]],[[["transactioninfowithproof",3]],["bool",15]],[[["accountstateproof",3]],["bool",15]],[[["eventproof",3]],["bool",15]],[[["transactioninfolistwithproof",3]],["bool",15]],[[["accumulatorextensionproof",3]],["bool",15]],[[["vec",3,["hashvalue"]],["hashvalue",3]]],[[["vec",3,["hashvalue"]],["option",4,["sparsemerkleleafnode"]],["hashvalue",3],["sparsemerkleleafnode",3]]],[[["transactionaccumulatorhasher",3],["inmemoryaccumulator",3,["transactionaccumulatorhasher"]]],["result",6]],[[["vec",3,["hashvalue"]],["hashvalue",3]]],[[["vec",3,["hashvalue"]],["hashvalue",3]]],[[["vec",3,["hashvalue"]],["hashvalue",3]]],[[["transactionaccumulatorproof",6]]],[[["sparsemerkleproof",3,["accountstateblob"]],["transactioninfowithproof",3],["accountstateblob",3]]],[[["transactioninfowithproof",3],["eventaccumulatorproof",6]]],[[["transactionaccumulatorrangeproof",6],["vec",3]]],[[["leafcount",6],["hashvalue",3],["vec",3,["hashvalue"]]]],[[]],[[]],[[],["vec",3]],[[]],[[],["hashvalue",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["sparsemerkleproof",3]],[[],["transactioninfowithproof",3]],[[],["transactioninfowithproof",3]],null,[[["accumulatorconsistencyproof",3],["ledgerinfo",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["accumulatorconsistencyproof",3],["version",6]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["u64",15],["hashvalue",3]],["result",6]],[[["option",4],["hashvalue",3]],["result",6]],[[["u64",15],["option",4,["u64"]],["hashvalue",3]],["result",6]],[[["sparsemerkleleafnode",3],["vec",3,["hashvalue"]],["hashvalue",3]],["result",6]],[[["version",6],["ledgerinfo",3]],["result",6]],[[["ledgerinfo",3],["hashvalue",3],["accountstateblob",3],["version",6],["option",4,["accountstateblob"]]],["result",6]],[[["ledgerinfo",3],["hashvalue",3],["version",6]],["result",6]],[[["option",4,["version"]],["ledgerinfo",3],["version",6]],["result",6]],[[["hashvalue",3]],[["inmemoryaccumulator",3],["result",6,["inmemoryaccumulator"]]]],[[["ledgerinfo",3]],["result",6]],[[],["version",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["position",3]],[[]],[[["position",3]],["ordering",4]],[[["position",3]],["bool",15]],[[["nodedirection",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",15]]],[[["u64",15]]],[[["u64",15],["u32",15]]],[[["u64",15]],["result",6]],[[]],[[["u64",15]],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",15]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["u64",15]],["bool",15]],[[],["bool",15]],[[],["ancestoriterator",3]],[[],["ancestorsiblingiterator",3]],[[]],[[]],[[],["u32",15]],[[["position",3]],["bool",15]],[[["leafcount",6]]],[[["leafcount",6]]],[[],[["option",4,["position"]],["position",3]]],[[],["option",4]],[[],[["option",4,["position"]],["position",3]]],[[],[["option",4,["position"]],["position",3]]],[[]],[[["position",3]],[["option",4,["ordering"]],["ordering",4]]],[[["u64",15]],["u64",15]],[[]],[[]],[[["leafcount",6]]],[[["u64",15]]],[[["leafcount",6]],["u32",15]],[[]],[[],["u64",15]],[[]],[[],["u64",15]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["index",3],["accountinfouniverse",3]],["rawtransaction",3]],[[["index",3],["accountinfouniverse",3]],["signaturecheckedtransaction",3]],[[["index",3],["accountinfouniverse",3]],["contractevent",4]],[[["index",3],["accountinfouniverse",3]],["accountresource",3]],[[],["balanceresource",3]],[[["index",3],["accountinfouniverse",3]],["accountstateblob",3]],[[["accountinfouniverse",3]],["transactiontocommit",3]],[[["usize",15],["accountinfouniverse",3]],["blockinfo",3]],[[["usize",15],["accountinfouniverse",3]],["ledgerinfo",3]],[[["usize",15],["accountinfouniverse",3]],["ledgerinfowithsignatures",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[],["dpnproto",3]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[],[["vec",3,["vec"]],["result",4,["vec"]]]],[[],["result",4]],null,[[]],[[]],[[]],[[]],[[],["stateproof",3]],[[]],[[],["accumulatorconsistencyproof",3]],[[],["result",4]],[[],["epochchangeproof",3]],[[["stateproof",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["ledgerinfo",3]],[[],["ledgerinfowithsignatures",4]],[[["stateproof",3]],["bool",15]],[[["ledgerinfowithsignatures",4],["epochchangeproof",3],["accumulatorconsistencyproof",3]]],[[],["result",4]],[[],["hashvalue",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[["u64",15],["accountaddress",3],["ed25519privatekey",3],["ed25519publickey",3],["module",3]],["signedtransaction",3]],[[["u64",15],["option",4,["u64"]],["string",3],["accountaddress",3],["ed25519privatekey",3],["ed25519publickey",3],["transactionpayload",4],["option",4,["transactionpayload"]]],["signedtransaction",3]],[[["u64",15],["accountaddress",3],["ed25519privatekey",3],["ed25519publickey",3],["transactionpayload",4],["option",4,["transactionpayload"]]],["signedtransaction",3]],[[["u64",15],["chainid",3],["accountaddress",3],["ed25519privatekey",3],["ed25519publickey",3]],["signedtransaction",3]],[[["vec",3,["accountaddress"]],["u64",15],["vec",3,["ed25519privatekey"]],["vec",3,["ed25519publickey"]],["script",3],["accountaddress",3],["ed25519privatekey",3],["ed25519publickey",3],["option",4,["script"]]],["signedtransaction",3]],[[["u64",15],["option",4,["u64"]],["script",3],["string",3],["accountaddress",3],["ed25519privatekey",3],["ed25519publickey",3],["option",4,["script"]]],["signedtransaction",3]],[[["u64",15],["accountaddress",3],["ed25519privatekey",3],["ed25519publickey",3],["script",3],["option",4,["script"]]],["signedtransaction",3]],[[["u64",15],["option",4,["writeset"]],["accountaddress",3],["ed25519privatekey",3],["ed25519publickey",3],["writeset",3]],["signaturecheckedtransaction",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["hashmap",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["signedtransaction",3],["result",6,["signedtransaction"]]]],null,[[],["transactionauthenticator",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["chainid",3]],[[],[["result",6,["signaturecheckedtransaction"]],["signaturecheckedtransaction",3]]],[[],["changeset",3]],[[],["module",3]],[[],["script",3]],[[],["scriptfunction",3]],[[],["rawtransaction",3]],[[],["rawtransactionhasher",3]],[[],["rawtransactionwithdata",4]],[[],["rawtransactionwithdatahasher",3]],[[],["transactionpayload",4]],[[],["writesetpayload",4]],[[],["signedtransaction",3]],[[],["signaturecheckedtransaction",3]],[[],["transactionwithproof",3]],[[],["transactionstatus",4]],[[],["governancerole",4]],[[],["vmvalidatorresult",3]],[[],["transactionoutput",3]],[[],["transactioninfohasher",3]],[[],["transactioninfo",3]],[[],["transactiontocommit",3]],[[],["transactionlistwithproof",3]],[[],["transactionoutputlistwithproof",3]],[[],["accounttransactionswithproof",3]],[[],["transaction",4]],[[],["transactionhasher",3]],[[],["scriptabi",4]],[[],["scriptfunctionabi",3]],[[],["transactionscriptabi",3]],[[],["argumentabi",3]],[[],["typeargumentabi",3]],[[],["transactionargument",4]],[[],["vecbytes",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["governancerole",4]],["ordering",4]],[[]],[[]],[[]],[[],["hashvalue",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["scriptabi"]],["scriptabi",4]]],[[],[["result",4,["scriptfunctionabi"]],["scriptfunctionabi",3]]],[[],[["transactionscriptabi",3],["result",4,["transactionscriptabi"]]]],[[],[["argumentabi",3],["result",4,["argumentabi"]]]],[[],[["result",4,["typeargumentabi"]],["typeargumentabi",3]]],[[],[["transactionargument",4],["result",4,["transactionargument"]]]],[[],[["vecbytes",3],["result",4,["vecbytes"]]]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[["changeset",3]],["bool",15]],[[["module",3]],["bool",15]],[[["script",3]],["bool",15]],[[["scriptfunction",3]],["bool",15]],[[["rawtransaction",3]],["bool",15]],[[["rawtransactionwithdata",4]],["bool",15]],[[["transactionpayload",4]],["bool",15]],[[["writesetpayload",4]],["bool",15]],[[["signedtransaction",3]],["bool",15]],[[["signaturecheckedtransaction",3]],["bool",15]],[[["transactionwithproof",3]],["bool",15]],[[["transactionstatus",4]],["bool",15]],[[["governancerole",4]],["bool",15]],[[["vmvalidatorresult",3]],["bool",15]],[[["transactionoutput",3]],["bool",15]],[[["transactioninfo",3]],["bool",15]],[[["transactiontocommit",3]],["bool",15]],[[["transactionlistwithproof",3]],["bool",15]],[[["transactionoutputlistwithproof",3]],["bool",15]],[[["accounttransactionswithproof",3]],["bool",15]],[[["transaction",4]],["bool",15]],[[["scriptabi",4]],["bool",15]],[[["scriptfunctionabi",3]],["bool",15]],[[["transactionscriptabi",3]],["bool",15]],[[["argumentabi",3]],["bool",15]],[[["typeargumentabi",3]],["bool",15]],[[["transactionargument",4]],["bool",15]],[[["vecbytes",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["discardedvmstatus",6]]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],null,null,[[],["u64",15]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],null,null,[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["vmstatus",4]]],[[["keptvmstatus",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["vec",3,["u8","global"]],["vec",3,["vec","global"]],["global",3]],["vecbytes",3]],[[["u64",15]]],[[],["identstr",3]],[[],["str",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[],["governancerole",4]],[[]],[[]],[[]],[[]],[[],["hashvalue",3]],[[]],[[]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["vec",3,["u8"]],["u8",15]]],[[]],[[]],[[],["signedtransaction",3]],[[],[["vec",3,["transactionwithproof"]],["transactionwithproof",3]]],[[],["transactionpayload",4]],[[],["rawtransaction",3]],[[],["rawtransaction",3]],[[],["scriptfunction",3]],[[],[["vec",3,["u8","global"]],["vec",3,["vec","global"]],["global",3]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["option",4,["hashmap"]],["hashmap",3]]],[[],["usize",15]],[[],["u64",15]],null,[[],["moduleid",3]],[[],["moduleid",3]],[[]],[[]],[[["ed25519publickey",3],["ed25519privatekey",3]],[["result",6,["signaturecheckedtransaction"]],["signaturecheckedtransaction",3]]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[["changeset",3]],["bool",15]],[[["module",3]],["bool",15]],[[["script",3]],["bool",15]],[[["scriptfunction",3]],["bool",15]],[[["rawtransaction",3]],["bool",15]],[[["rawtransactionwithdata",4]],["bool",15]],[[["transactionpayload",4]],["bool",15]],[[["writesetpayload",4]],["bool",15]],[[["signedtransaction",3]],["bool",15]],[[["signaturecheckedtransaction",3]],["bool",15]],[[["transactionwithproof",3]],["bool",15]],[[["transactionstatus",4]],["bool",15]],[[["vmvalidatorresult",3]],["bool",15]],[[["transactionoutput",3]],["bool",15]],[[["transactioninfo",3]],["bool",15]],[[["transactiontocommit",3]],["bool",15]],[[["transactionlistwithproof",3]],["bool",15]],[[["transactionoutputlistwithproof",3]],["bool",15]],[[["accounttransactionswithproof",3]],["bool",15]],[[["transaction",4]],["bool",15]],[[["scriptabi",4]],["bool",15]],[[["scriptfunctionabi",3]],["bool",15]],[[["transactionscriptabi",3]],["bool",15]],[[["argumentabi",3]],["bool",15]],[[["typeargumentabi",3]],["bool",15]],[[["transactionargument",4]],["bool",15]],[[["vecbytes",3]],["bool",15]],[[["u64",15],["keptvmstatus",4],["hashvalue",3]]],[[["vec",3,["contractevent"]],["writeset",3],["contractevent",4]]],[[["vec",3,["u8"]],["u8",15]],["module",3]],[[["vec",3,["transactionargument"]],["u8",15],["vec",3,["u8"]],["transactionargument",4],["vec",3,["typetag"]],["typetag",4]]],[[["vec",3,["vec"]],["vec",3,["u8"]],["moduleid",3],["identifier",3],["vec",3,["typetag"]],["typetag",4]]],[[["u64",15],["string",3],["accountaddress",3],["chainid",3],["transactionpayload",4]]],[[["ed25519publickey",3],["rawtransaction",3],["ed25519signature",3]],["signedtransaction",3]],[[["transaction",4],["option",4,["vec"]],["vec",3,["contractevent"]],["version",6],["transactioninfowithproof",3]]],[[["u64",15],["option",4,["discardedvmstatus"]],["discardedvmstatus",6],["governancerole",4]]],[[["u64",15],["contractevent",4],["transactionstatus",4],["vec",3,["contractevent"]],["writeset",3]]],[[["u64",15],["keptvmstatus",4],["hashvalue",3]],["transactioninfo",3]],[[["u64",15],["contractevent",4],["hashmap",3,["accountaddress","accountstateblob"]],["keptvmstatus",4],["writeset",3],["hashmap",3,["nibblepath","hashvalue"]],["transaction",4],["accountaddress",3],["option",4,["hashmap"]],["vec",3,["contractevent"]],["accountstateblob",3]]],[[["vec",3,["transaction"]],["transaction",4],["option",4,["vec"]],["transactioninfolistwithproof",3],["option",4,["version"]],["version",6],["vec",3,["vec"]]]],[[["vec",3],["transactioninfolistwithproof",3],["option",4,["version"]],["version",6]]],[[["vec",3,["transactionwithproof"]],["transactionwithproof",3]]],[[["moduleid",3],["string",3],["vec",3,["argumentabi","global"]],["global",3],["argumentabi",3],["typeargumentabi",3],["vec",3,["typeargumentabi","global"]]],["scriptfunctionabi",3]],[[["vec",3,["argumentabi","global"]],["string",3],["u8",15],["argumentabi",3],["vec",3,["u8","global"]],["global",3],["typeargumentabi",3],["vec",3,["typeargumentabi","global"]]],["transactionscriptabi",3]],[[["typetag",4],["string",3]],["argumentabi",3]],[[["string",3]],["typeargumentabi",3]],[[["u64",15],["chainid",3],["accountaddress",3],["changeset",3]]],[[]],[[]],[[]],[[["u64",15],["string",3],["accountaddress",3],["chainid",3],["module",3]]],[[["vec",3,["accountaddress"]],["rawtransaction",3],["accountaddress",3]]],[[["accountauthenticator",4],["vec",3,["accountaddress"]],["accountaddress",3],["vec",3,["accountauthenticator"]],["rawtransaction",3]]],[[["rawtransaction",3],["multied25519signature",3],["multied25519publickey",3]],["signedtransaction",3]],[[["u64",15],["string",3],["accountaddress",3],["chainid",3],["script",3]]],[[["u64",15],["string",3],["accountaddress",3],["chainid",3],["scriptfunction",3]]],[[["rawtransaction",3],["transactionauthenticator",4]]],[[["u64",15],["chainid",3],["accountaddress",3],["writeset",3]]],[[["u64",15],["chainid",3],["accountaddress",3],["script",3]]],[[["str",15]],[["transactionargument",4],["error",3],["result",4,["transactionargument","error"]]]],[[["governancerole",4]],[["option",4,["ordering"]],["ordering",4]]],[[],["transactionpayload",4]],[[],["u64",15]],null,null,null,[[],["usize",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["accountaddress",3]],[[],["accountaddress",3]],[[],["u64",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["bool",15]],[[],["bool",15]],[[["ed25519publickey",3],["ed25519privatekey",3]],[["result",6,["signaturecheckedtransaction"]],["signaturecheckedtransaction",3]]],[[["vec",3,["accountaddress"]],["vec",3,["ed25519privatekey"]],["ed25519privatekey",3],["accountaddress",3]],[["result",6,["signaturecheckedtransaction"]],["signaturecheckedtransaction",3]]],[[],[["vec",3,["u8"]],["u8",15]]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["keptvmstatus",4]],[[],[["keptvmstatus",4],["result",6,["keptvmstatus","statuscode"]],["statuscode",4]]],[[],[["option",4,["discardedvmstatus"]],["discardedvmstatus",6]]],[[],["transactionstatus",4]],[[],["keptvmstatus",4]],[[],["keptvmstatus",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["transaction",4]],null,[[],["hashvalue",3]],[[],["hashvalue",3]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["transaction",4]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["movevalue",4]],[["transactionargument",4],["error",3],["result",4,["transactionargument","error"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typetag",4]],[[]],[[]],[[]],[[]],[[["option",4,["version"]],["ledgerinfo",3],["version",6]],["result",6]],[[["option",4,["version"]],["ledgerinfo",3],["version",6]],["result",6]],[[["u64",15],["ledgerinfo",3],["accountaddress",3],["bool",15],["version",6]],["result",6]],[[["u64",15],["ledgerinfo",3],["accountaddress",3],["version",6]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["usize",15],["result",6,["usize"]]]],[[],[["usize",15],["result",6,["usize"]]]],[[],[["usize",15],["result",6,["usize"]]]],[[],[["usize",15],["result",6,["usize"]]]],[[],["writeset",3]],[[],["writeset",3]],[[],["writeset",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["authenticationkey",3]],[[],["authenticationkeypreimage",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["authenticationerror",4]],[[],["transactionauthenticator",4]],[[],["accountauthenticator",4]],[[],["authenticationkeyhasher",3]],[[],["authenticationkey",3]],[[]],[[]],[[]],[[]],[[]],[[["authenticationkey",3]],["ordering",4]],[[]],[[],["accountaddress",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["ed25519publickey",3]],["authenticationkeypreimage",3]],[[["ed25519publickey",3],["ed25519signature",3]]],[[["ed25519publickey",3],["ed25519signature",3]]],[[["ed25519publickey",3]],["authenticationkey",3]],[[]],[[]],[[["authenticationerror",4]],["bool",15]],[[["transactionauthenticator",4]],["bool",15]],[[["accountauthenticator",4]],["bool",15]],[[["authenticationkey",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["hashvalue",3]],[[],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["authenticationkeypreimage",3]],["authenticationkey",3]],[[["str",15]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["vec",3,["u8"]],["u8",15]]],[[["accountauthenticator",4],["vec",3,["accountaddress"]],["accountaddress",3],["vec",3,["accountauthenticator"]]]],[[["multied25519publickey",3]],["authenticationkeypreimage",3]],[[["multied25519signature",3],["multied25519publickey",3]]],[[["multied25519signature",3],["multied25519publickey",3]]],[[["multied25519publickey",3]]],[[["transactionauthenticator",4]],["bool",15]],[[["accountauthenticator",4]],["bool",15]],[[["authenticationkey",3]],["bool",15]],[[]],[[],["usize",15]],[[["authenticationkey",3]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[],[["vec",3,["u8"]],["u8",15]]],[[]],[[],["scheme",4]],[[],[["vec",3,["accountaddress"]],["accountaddress",3]]],[[],[["vec",3,["accountauthenticator"]],["accountauthenticator",4]]],[[]],[[],["accountauthenticator",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["vec",3,["u8"]],["u8",15]]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],[["vec",3,["u8"]],["u8",15]]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],[["vec",3,["u8"]],["u8",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["authenticationkey","cryptomaterialerror"]],["authenticationkey",3],["cryptomaterialerror",4]]],[[["vec",3,["u8"]],["u8",15]],[["result",4,["authenticationkey","cryptomaterialerror"]],["authenticationkey",3],["cryptomaterialerror",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[["rawtransaction",3]],["result",6]],[[],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["usize",15],["result",6,["usize"]]]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u64",15],["string",3],["accountaddress",3],["chainid",3],["transactionpayload",4],["i64",15]],["rawtransaction",3]],[[["u64",15],["string",3],["accountaddress",3],["chainid",3],["transactionpayload",4],["i64",15]],[["signedtransaction",3],["result",6,["signedtransaction"]]]],[[["rawtransaction",3]],[["signedtransaction",3],["result",6,["signedtransaction"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["metadata",4]],[[],["generalmetadata",4]],[[],["generalmetadatav0",3]],[[],["travelrulemetadata",4]],[[],["travelrulemetadatav0",3]],[[],["unstructuredbytesmetadata",3]],[[],["refundmetadata",4]],[[],["refundmetadatav0",3]],[[],["refundreason",4]],[[],["cointrademetadata",4]],[[],["cointrademetadatav0",3]],[[],["paymentmetadata",4]],[[],["paymentmetadatav0",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["metadata",4]],["bool",15]],[[["generalmetadata",4]],["bool",15]],[[["generalmetadatav0",3]],["bool",15]],[[["travelrulemetadata",4]],["bool",15]],[[["travelrulemetadatav0",3]],["bool",15]],[[["unstructuredbytesmetadata",3]],["bool",15]],[[["refundmetadata",4]],["bool",15]],[[["refundmetadatav0",3]],["bool",15]],[[["refundreason",4]],["bool",15]],[[["cointrademetadata",4]],["bool",15]],[[["cointrademetadatav0",3]],["bool",15]],[[["paymentmetadata",4]],["bool",15]],[[["paymentmetadatav0",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["metadata",4]],["bool",15]],[[["generalmetadata",4]],["bool",15]],[[["generalmetadatav0",3]],["bool",15]],[[["travelrulemetadata",4]],["bool",15]],[[["travelrulemetadatav0",3]],["bool",15]],[[["unstructuredbytesmetadata",3]],["bool",15]],[[["refundmetadata",4]],["bool",15]],[[["refundmetadatav0",3]],["bool",15]],[[["cointrademetadata",4]],["bool",15]],[[["cointrademetadatav0",3]],["bool",15]],[[["paymentmetadata",4]],["bool",15]],[[["paymentmetadatav0",3]],["bool",15]],[[["u64",15],["option",4,["u64"]],["option",4,["vec"]],["vec",3,["u8"]]]],null,null,null,[[],["option",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["option",4,["hashvalue"]],["hashvalue",3]]],[[],[["transactionaccumulatorsummary",3],["option",4,["transactionaccumulatorsummary"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["trustedstatehasher",3]],[[],["trustedstate",4]],[[],["trustedstatechange",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[["u64",15]],["bool",15]],[[["trustedstate",4]],["bool",15]],[[],["bool",15]],[[],["hashvalue",3]],[[],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["waypoint",3]]],[[],["hashvalue",3]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["ledgerinfo",3]],["bool",15]],[[],["bool",15]],[[["trustedstate",4]],["bool",15]],[[],["bool",15]],[[],[["trustedstate",4],["option",4,["trustedstate"]]]],[[]],[[],["result",4]],[[],["hashvalue",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["ledgerinfo",3],["transactionaccumulatorsummary",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[["ledgerinfowithsignatures",4]],["result",6]],[[["option",4,["transactionaccumulatorsummary"]],["transactionaccumulatorsummary",3],["stateproof",3]],[["trustedstatechange",4],["result",6,["trustedstatechange"]]]],[[["epochchangeproof",3],["transactionaccumulatorsummary",3],["option",4,["transactionaccumulatorsummary"]],["ledgerinfowithsignatures",4],["accumulatorconsistencyproof",3]],[["trustedstatechange",4],["result",6,["trustedstatechange"]]]],[[],["version",6]],[[]],[[]],[[]],[[],["waypoint",3]],[[],[["usize",15],["result",6,["usize"]]]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["validatorconfigresource",3]],[[],["validatoroperatorconfigresource",3]],[[],["validatorconfig",3]],[[]],[[]],[[]],null,[[],["validatorconfigresource",3]],[[],["validatoroperatorconfigresource",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["validatorconfigresource",3]],["bool",15]],[[["validatoroperatorconfigresource",3]],["bool",15]],[[["validatorconfig",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],[["result",4,["vec","error"]],["error",4],["vec",3,["networkaddress"]]]],null,null,null,[[]],[[]],[[]],[[["validatorconfigresource",3]],["bool",15]],[[["validatoroperatorconfigresource",3]],["bool",15]],[[["validatorconfig",3]],["bool",15]],[[["u8",15],["ed25519publickey",3],["vec",3,["u8"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[],[["result",4,["vec","error"]],["error",4],["vec",3,["encnetworkaddress"]]]],null,[[]],[[]],[[]],null,[[],["accountaddress",3]],[[]],[[]],[[]],[[],["validatorinfo",3]],[[]],[[],["validatorconfig",3]],[[],["ed25519publickey",3]],[[],["u64",15]],[[],["result",4]],[[["validatorinfo",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["validatorconfig",3]],[[["validatorinfo",3]],["bool",15]],[[["u64",15],["validatorconfig",3],["accountaddress",3]]],[[["ed25519publickey",3],["u64",15],["accountaddress",3]]],[[],["result",4]],[[],["hashvalue",3]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[],["accountaddress",3]],[[]],[[]],[[],["validatorsigner",3]],[[]],[[["formatter",3]],["result",6]],[[]],[[["u8",15]]],[[]],[[["accountaddress",3],["ed25519privatekey",3]]],[[],["ed25519privatekey",3]],null,[[],["ed25519publickey",3]],[[]],[[],["ed25519signature",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[["vec",3,["ed25519privatekey"]],["ed25519privatekey",3]]],[[]],[[]],null,null,null,null,null,null,null,null,[[]],[[]],[[["btreemap",3]],[["result",4,["verifyerror"]],["verifyerror",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4,["verifyerror"]],["verifyerror",4]]],[[],["validatorconsensusinfo",3]],[[],["validatorverifier",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["verifyerror",4]],["bool",15]],[[["validatorconsensusinfo",3]],["bool",15]],[[["validatorverifier",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["validatorset",3]]],[[]],[[]],[[["accountaddress",3]],[["option",4,["ed25519publickey"]],["ed25519publickey",3]]],[[["accountaddress",3]],[["u64",15],["option",4,["u64"]]]],[[]],[[]],[[]],[[],["bool",15]],[[],["usize",15]],[[["verifyerror",4]],["bool",15]],[[["validatorconsensusinfo",3]],["bool",15]],[[["validatorverifier",3]],["bool",15]],[[["ed25519publickey",3],["u64",15]]],[[["btreemap",3,["accountaddress","validatorconsensusinfo"]],["accountaddress",3],["validatorconsensusinfo",3]]],[[["u64",15],["btreemap",3,["accountaddress","validatorconsensusinfo"]],["accountaddress",3],["validatorconsensusinfo",3]]],[[["ed25519publickey",3],["accountaddress",3]]],[[["u64",15],["btreemap",3,["accountaddress","validatorconsensusinfo"]],["accountaddress",3],["validatorconsensusinfo",3]],["result",6]],[[],["u64",15]],[[["usize",15],["u64",15],["option",4,["u64"]],["bool",15]]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["ed25519signature",3],["accountaddress",3]],[["result",4,["verifyerror"]],["verifyerror",4]]],[[["btreemap",3]],[["result",4,["verifyerror"]],["verifyerror",4]]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["vmstatus",4]],[[],["keptvmstatus",4]],[[],["abortlocation",4]],[[],["statustype",4]],[[],["statuscode",4]],[[]],[[]],[[]],[[]],[[]],[[["vmstatus",4]],["ordering",4]],[[["keptvmstatus",4]],["ordering",4]],[[["abortlocation",4]],["ordering",4]],[[["statuscode",4]],["ordering",4]],[[],[["result",4,["vmstatus"]],["vmstatus",4]]],[[],[["keptvmstatus",4],["result",4,["keptvmstatus"]]]],[[],[["abortlocation",4],["result",4,["abortlocation"]]]],[[],[["result",4,["statuscode"]],["statuscode",4]]],[[["vmstatus",4]],["bool",15]],[[["keptvmstatus",4]],["bool",15]],[[["abortlocation",4]],["bool",15]],[[["statustype",4]],["bool",15]],[[["statuscode",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],[["keptvmstatus",4],["statuscode",4],["result",4,["keptvmstatus","statuscode"]]]],null,[[],[["option",4,["u64"]],["u64",15]]],[[["vmstatus",4]],["bool",15]],[[["keptvmstatus",4]],["bool",15]],[[["abortlocation",4]],["bool",15]],[[["vmstatus",4]],[["option",4,["ordering"]],["ordering",4]]],[[["keptvmstatus",4]],[["option",4,["ordering"]],["ordering",4]]],[[["abortlocation",4]],[["option",4,["ordering"]],["ordering",4]]],[[["statuscode",4]],[["option",4,["ordering"]],["ordering",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["statuscode",4]],[[],["statustype",4]],[[],["statustype",4]],null,[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u64",15]],[["result",4,["statuscode"]],["statuscode",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["abortlocation",4]],[[],["abortlocation",4]],[[],["abortlocation",4]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["waypoint",3]],[[],["ledger2waypointconverterhasher",3]],[[]],[[]],[[],["waypoint",3]],[[]],[[],["result",4]],[[["u64",15]],["bool",15]],[[["waypoint",3]],["bool",15]],[[],["bool",15]],[[],["hashvalue",3]],[[],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["str",15]],["result",6]],[[]],[[]],[[["ledgerinfo",3]],["bool",15]],[[["waypoint",3]],["bool",15]],[[["ledgerinfo",3]]],[[["ledgerinfo",3]],["result",6]],[[]],[[],["result",4]],[[],["hashvalue",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[],["hashvalue",3]],[[["ledgerinfo",3]],["result",6]],[[["ledgerinfowithsignatures",4]],["result",6]],[[],["version",6]],[[]],[[]],[[],[["usize",15],["result",6,["usize"]]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["writeop",4]],[[],["writeset",3]],[[],["writesetmut",3]],[[]],[[]],[[]],[[],["writeset",3]],[[],["writesetmut",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["writeop",4]],["bool",15]],[[["writeset",3]],["bool",15]],[[["writesetmut",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],[["result",6,["writeset"]],["writeset",3]]],[[]],[[]],[[]],[[["intoiterator",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["writesetmut",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["iter",3]],[[["writeop",4]],["bool",15]],[[["writeset",3]],["bool",15]],[[["writesetmut",3]],["bool",15]],[[["vec",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null],"p":[[3,"PeerId"],[4,"Path"],[3,"AccessPath"],[13,"Code"],[13,"Resource"],[8,"HashAccountAddress"],[3,"AdminTransactionEvent"],[3,"BaseUrlRotationEvent"],[3,"BurnEvent"],[3,"CancelBurnEvent"],[3,"ComplianceKeyRotationEvent"],[3,"CreateAccountEvent"],[3,"ToXDXExchangeRateUpdateEvent"],[3,"ForceShiftEvent"],[3,"MintEvent"],[3,"NewBlockEvent"],[3,"NewEpochEvent"],[3,"PreburnEvent"],[3,"ReceivedMintEvent"],[3,"ReceivedPaymentEvent"],[3,"SentPaymentEvent"],[3,"AccountResource"],[3,"BalanceResource"],[3,"ChainIdResource"],[4,"AccountSequenceInfo"],[3,"CRSNResource"],[13,"Sequential"],[13,"CRSN"],[3,"CurrencyInfoResource"],[4,"DesignatedDealerPreburns"],[3,"DesignatedDealer"],[13,"Preburn"],[13,"PreburnQueue"],[3,"Credential"],[3,"Limit"],[3,"FreezingBit"],[3,"KeyRotationCapabilityResource"],[3,"PreburnResource"],[3,"PreburnQueueResource"],[3,"PreburnWithMetadataResource"],[4,"AccountRole"],[13,"ChildVASP"],[13,"ParentVASP"],[13,"DesignatedDealer"],[13,"TreasuryCompliance"],[3,"RoleId"],[3,"ChildVASP"],[3,"ParentVASP"],[3,"VASPDomainEvent"],[3,"VASPDomains"],[3,"VASPDomain"],[3,"VASPDomainManager"],[3,"WithdrawCapabilityResource"],[3,"AccountState"],[3,"AccountStatesChunkWithProof"],[3,"AccountStateBlob"],[3,"AccountStateWithProof"],[3,"AccountStateBlobHasher"],[3,"BlockInfo"],[3,"BlockMetadata"],[3,"DiemBlockResource"],[3,"NewBlockEvent"],[4,"NamedChain"],[3,"ChainId"],[4,"ContractEvent"],[3,"EventWithProof"],[3,"EventByVersionWithProof"],[3,"ContractEventHasher"],[3,"ContractEventV0"],[3,"ContractEventV0Hasher"],[13,"V0"],[3,"DiemIdUserIdentifier"],[3,"DiemIdVaspDomainIdentifier"],[3,"DiemId"],[3,"DiemIdParseError"],[3,"DiemTimestampResource"],[3,"DiemTimestamp"],[3,"EpochChangeProof"],[8,"Verifier"],[3,"EpochState"],[3,"EventKey"],[3,"EventHandle"],[3,"EventKeyParseError"],[4,"LedgerInfoWithSignatures"],[3,"LedgerInfoWithV0"],[3,"LedgerInfo"],[3,"LedgerInfoHasher"],[13,"V0"],[4,"MempoolStatusCode"],[3,"MempoolStatus"],[8,"MoveStorage"],[4,"IpFilter"],[4,"ParseError"],[4,"Protocol"],[3,"NetworkAddress"],[3,"DnsName"],[3,"EmptyError"],[13,"UnknownProtocolType"],[13,"ParseAddrError"],[13,"ParseIntError"],[13,"ParseX25519PubkeyError"],[13,"DnsNameTooLong"],[13,"BCSError"],[13,"Ip4"],[13,"Ip6"],[13,"Dns"],[13,"Dns4"],[13,"Dns6"],[13,"Tcp"],[13,"Memory"],[13,"NoiseIK"],[13,"Handshake"],[3,"EncNetworkAddress"],[3,"Nibble"],[3,"NibblePath"],[3,"NibbleIterator"],[3,"BitIterator"],[8,"Peekable"],[8,"OnChainConfig"],[4,"OnChainConsensusConfig"],[3,"ConfigID"],[3,"ValidatorSet"],[3,"ConsensusConfigV2"],[3,"ConsensusConfigV1"],[3,"DiemVersion"],[3,"RegisteredCurrencies"],[3,"VMConfig"],[3,"VMPublishingOption"],[3,"OnChainConfigPayload"],[3,"ConfigurationResource"],[8,"ConfigStorage"],[13,"V1"],[13,"V2"],[3,"SparseMerkleLeafNode"],[3,"MerkleTreeInternalNode"],[3,"SparseMerkleLeafNodeHasher"],[3,"InMemoryAccumulator"],[3,"MockTransactionAccumulator"],[3,"AccumulatorProof"],[3,"SparseMerkleProof"],[3,"TransactionAccumulatorSummary"],[3,"AccumulatorConsistencyProof"],[3,"AccumulatorRangeProof"],[3,"SparseMerkleRangeProof"],[3,"TransactionInfoWithProof"],[3,"AccountStateProof"],[3,"EventProof"],[3,"TransactionInfoListWithProof"],[3,"AccumulatorExtensionProof"],[4,"NodeDirection"],[3,"FrozenSubTreeIterator"],[3,"FrozenSubtreeSiblingIterator"],[3,"Position"],[3,"AncestorSiblingIterator"],[3,"AncestorIterator"],[3,"AccountInfoUniverse"],[3,"RawTransactionGen"],[3,"SignatureCheckedTransactionGen"],[3,"ContractEventGen"],[3,"AccountResourceGen"],[3,"BalanceResourceGen"],[3,"AccountStateBlobGen"],[3,"TransactionToCommitGen"],[3,"BlockInfoGen"],[3,"LedgerInfoGen"],[3,"LedgerInfoWithSignaturesGen"],[8,"ProtocolSpec"],[3,"DpnProto"],[3,"StateProof"],[3,"AccountTransactionsWithProof"],[4,"TransactionArgument"],[4,"Transaction"],[4,"GovernanceRole"],[4,"WriteSetPayload"],[4,"TransactionStatus"],[4,"TransactionPayload"],[4,"RawTransactionWithData"],[4,"ScriptABI"],[3,"TransactionToCommit"],[3,"ChangeSet"],[3,"Module"],[3,"Script"],[3,"RawTransaction"],[3,"SignedTransaction"],[3,"SignatureCheckedTransaction"],[3,"TransactionWithProof"],[3,"TransactionInfo"],[3,"TransactionListWithProof"],[3,"ScriptFunction"],[3,"ScriptFunctionABI"],[3,"TransactionScriptABI"],[3,"RawTransactionHasher"],[3,"RawTransactionWithDataHasher"],[3,"VMValidatorResult"],[3,"TransactionOutput"],[3,"TransactionInfoHasher"],[3,"TransactionOutputListWithProof"],[3,"TransactionHasher"],[3,"ArgumentABI"],[3,"TypeArgumentABI"],[3,"VecBytes"],[8,"TransactionInfoTrait"],[13,"MultiAgent"],[13,"TransactionScript"],[13,"ScriptFunction"],[13,"UserTransaction"],[13,"GenesisTransaction"],[13,"BlockMetadata"],[13,"U8"],[13,"U64"],[13,"U128"],[13,"Address"],[13,"U8Vector"],[13,"Bool"],[13,"WriteSet"],[13,"Script"],[13,"Module"],[13,"ScriptFunction"],[13,"Discard"],[13,"Keep"],[13,"Direct"],[13,"Script"],[4,"TransactionAuthenticator"],[4,"Scheme"],[4,"AccountAuthenticator"],[3,"AuthenticationKey"],[4,"AuthenticationError"],[3,"AuthenticationKeyPreimage"],[3,"AuthenticationKeyHasher"],[13,"Ed25519"],[13,"MultiEd25519"],[13,"Ed25519"],[13,"MultiEd25519"],[13,"MultiAgent"],[8,"TransactionSigner"],[4,"Metadata"],[4,"CoinTradeMetadata"],[4,"GeneralMetadata"],[4,"RefundReason"],[4,"PaymentMetadata"],[4,"RefundMetadata"],[4,"TravelRuleMetadata"],[3,"GeneralMetadataV0"],[3,"TravelRuleMetadataV0"],[3,"UnstructuredBytesMetadata"],[3,"RefundMetadataV0"],[3,"CoinTradeMetadataV0"],[3,"PaymentMetadataV0"],[13,"CoinTradeMetadataV0"],[13,"GeneralMetadataVersion0"],[13,"GeneralMetadata"],[13,"TravelRuleMetadata"],[13,"UnstructuredBytesMetadata"],[13,"RefundMetadata"],[13,"CoinTradeMetadata"],[13,"PaymentMetadata"],[13,"PaymentMetadataVersion0"],[13,"RefundMetadataV0"],[13,"TravelRuleMetadataVersion0"],[4,"TrustedStateChange"],[4,"TrustedState"],[3,"TrustedStateHasher"],[13,"EpochWaypoint"],[13,"EpochState"],[13,"Epoch"],[13,"Version"],[3,"ValidatorConfig"],[3,"ValidatorConfigResource"],[3,"ValidatorOperatorConfigResource"],[3,"ValidatorInfo"],[3,"ValidatorSigner"],[4,"VerifyError"],[3,"ValidatorConsensusInfo"],[3,"ValidatorVerifier"],[13,"TooManySignatures"],[13,"TooLittleVotingPower"],[4,"StatusCode"],[4,"StatusType"],[4,"VMStatus"],[4,"KeptVMStatus"],[4,"AbortLocation"],[13,"Module"],[13,"MoveAbort"],[13,"ExecutionFailure"],[13,"Error"],[13,"MoveAbort"],[13,"ExecutionFailure"],[3,"Waypoint"],[3,"Ledger2WaypointConverterHasher"],[4,"WriteOp"],[3,"WriteSet"],[3,"WriteSetMut"],[13,"Value"]]},\
"diem_validator_interface":{"doc":"","t":[3,3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,10,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["DBDebuggerInterface","DebuggerStateView","DiemValidatorInterface","JsonRpcDebuggerInterface","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","get","get_account_state_by_version","get_account_state_by_version","get_account_state_by_version","get_admin_accounts","get_committed_transactions","get_committed_transactions","get_committed_transactions","get_diem_framework_modules_by_version","get_events","get_events","get_events","get_latest_version","get_latest_version","get_latest_version","get_version_by_account_sequence","get_version_by_account_sequence","get_version_by_account_sequence","init","init","init","into","into","into","is_genesis","new","new","open","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["diem_validator_interface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","Get the account states of the most critical accounts, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,3,4,1,2,4,4,1,2,4,4,1,2,4,1,2,4,1,2,1,2,3,1,2,3,3,1,3,2,1,2,3,1,2,3,1,2,3,1,2,3],"f":[null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[["accesspath",3]],[["option",4,["vec"]],["result",6,["option"]]]],[[["version",6],["accountaddress",3]],[["result",6,["option"]],["option",4,["accountstate"]]]],[[["version",6],["accountaddress",3]],[["result",6,["option"]],["option",4,["accountstate"]]]],[[["version",6],["accountaddress",3]],[["result",6,["option"]],["option",4,["accountstate"]]]],[[["version",6]],[["result",6,["vec"]],["vec",3]]],[[["version",6],["u64",15]],[["result",6,["vec"]],["vec",3,["transaction"]]]],[[["version",6],["u64",15]],[["result",6,["vec"]],["vec",3,["transaction"]]]],[[["version",6],["u64",15]],[["result",6,["vec"]],["vec",3,["transaction"]]]],[[["version",6]],[["vec",3,["compiledmodule"]],["result",6,["vec"]]]],[[["eventkey",3],["u64",15]],[["result",6,["vec"]],["vec",3,["eventwithproof"]]]],[[["eventkey",3],["u64",15]],[["result",6,["vec"]],["vec",3,["eventwithproof"]]]],[[["eventkey",3],["u64",15]],[["result",6,["vec"]],["vec",3,["eventwithproof"]]]],[[],[["version",6],["result",6,["version"]]]],[[],[["version",6],["result",6,["version"]]]],[[],[["version",6],["result",6,["version"]]]],[[["u64",15],["accountaddress",3]],[["result",6,["option"]],["option",4,["version"]]]],[[["u64",15],["accountaddress",3]],[["result",6,["option"]],["option",4,["version"]]]],[[["u64",15],["accountaddress",3]],[["result",6,["option"]],["option",4,["version"]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[],["bool",15]],[[["str",15]],["result",6]],[[["diemvalidatorinterface",8],["version",6]]],[[["asref",8,["path"]],["path",3],["clone",8]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]]],"p":[[3,"JsonRpcDebuggerInterface"],[3,"DBDebuggerInterface"],[3,"DebuggerStateView"],[8,"DiemValidatorInterface"]]},\
"diem_vault_client":{"doc":"","t":[3,4,3,13,13,13,4,13,13,3,3,3,13,13,13,13,3,3,3,13,3,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,17,3,11,11,11,11,11,11,11,11,5,5,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5],"n":["BackupInfo","Capability","Client","Create","Delete","Deny","Error","HttpError","InternalError","KeyBackup","KeyBackupInfo","KeyBackupPolicy","List","MissingField","NotFound","OverflowError","PathPolicy","Policy","PolicyPaths","Read","ReadKey","ReadResponse","SerializationError","Sudo","SyntheticError","Update","add_policy","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","create_ed25519_key","create_token","creation_time","default","default","default","default","default","default","delete_key","delete_policy","delete_secret","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dev","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","export_ed25519_key","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fuzzing","import_ed25519_key","into","into","into","into","into","into","into","into","into","into","into","into","list_keys","list_policies","list_secrets","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","process_generic_response","process_policy_list_response","process_policy_read_response","process_secret_list_response","process_secret_read_response","process_token_create_response","process_token_renew_response","process_transit_create_response","process_transit_export_response","process_transit_list_response","process_transit_read_response","process_transit_restore_response","process_transit_sign_response","process_unsealed_response","read_ed25519_key","read_policy","read_secret","renew_token_self","revoke_token_self","rotate_key","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_policy","sign_ed25519","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_string","trim_key_versions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unsealed","value","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_secret","0","0","0","0","0","0","0","1","1","2","ROOT_TOKEN","VaultRunner","borrow","borrow_mut","client","from","host","into","root_token","run","test_host","test_host_safe","try_from","try_into","type_id","vzip","arb_generic_response","arb_policy_list_response","arb_secret_list_response","arb_secret_read_response","arb_token_create_response","arb_token_renew_response","arb_transit_create_response","arb_transit_export_response","arb_transit_list_response","arb_transit_read_key","arb_transit_read_response","arb_transit_sign_response","arb_unsealed_response"],"q":["diem_vault_clientdiem_vault_client::Error","","","","","","","","","","diem_vault_client::dev","","","","","","","","","","","","","","","","diem_vault_client::fuzzing","","","","","","","","","","","",""],"d":["","The various set of capabilities available to a policy …","Client provides a client around the restful interface to a …","","","","","","","Key backup / restore format Example: { “policy”:{ “…","","","","","","","Represents the set of capabilities used within a policy.","This data structure is used to represent both policies …","Represents the policy for a given path.","","","Provides a simple wrapper for all read APIs.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new token or identity for accessing Vault. The …","","","","","","","","","","Delete a specific secret store","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","List all stored secrets","","","","","","","","","","","","","","Processes a generic response returned by a vault request. …","Processes the response returned by a policy list vault …","Processes the response returned by a policy read vault …","Processes the response returned by a secret list vault …","Processes the response returned by a secret read vault …","Processes the response returned by a token create vault …","Processes the response returned by a token renew vault …","Processes the response returned by a transit key create …","Processes the response returned by a transit key export …","Processes the response returned by a transit key list …","Processes the response returned by a transit key read …","Processes the response returned by a transit key restore …","Processes the response returned by a transit key sign …","Processes the response returned by a seal-status() vault …","","Retrieves the policy at the given policy name.","Read a key/value pair from a given secret store.","","","","","","","","","","","","","Create a new policy in Vault, see the explanation for …","","","","","","","","","","","","","","","","Trims the number of key versions held in vault storage. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns whether or not the vault is unsealed (can be read …","","","","","","","","","","","","","","","Create or update a key/value pair in a given secret store.","","","","","","","","","","","","Provide an instance of Vault if vault is installed on the …","","","","","","","","Instantiates a new instance of Vault if one is available …","This will return the vault host or panic.","This will return the vault host, if vault was started …","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,1,1,0,2,2,0,0,0,1,2,2,2,0,0,0,1,0,0,2,1,2,1,3,4,2,5,6,7,8,9,10,3,11,12,1,4,2,5,6,7,8,9,10,3,11,12,1,3,11,12,1,3,11,12,1,4,4,9,6,7,8,3,11,12,4,4,4,5,6,7,8,10,3,11,12,1,0,2,5,6,7,8,10,3,11,12,1,4,2,2,5,6,7,8,9,10,3,11,12,1,4,2,2,2,2,2,2,5,6,7,8,9,10,3,11,12,1,0,4,4,2,5,6,7,8,9,10,3,11,12,1,4,4,4,2,5,6,7,8,10,3,11,12,4,5,9,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,4,4,4,5,6,7,8,10,3,11,12,1,4,4,5,6,7,8,10,3,11,12,1,3,11,12,1,2,4,4,2,5,6,7,8,9,10,3,3,11,12,1,4,2,5,6,7,8,9,10,3,11,12,1,4,2,5,6,7,8,9,10,3,11,12,1,4,9,9,4,2,5,6,7,8,9,10,3,11,12,1,4,13,14,15,16,17,18,19,13,16,13,0,0,20,20,20,20,20,20,20,20,0,0,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["vec",3,["capability"]],["str",15],["capability",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["policy",3]],[[],["policypaths",3]],[[],["pathpolicy",3]],[[],["capability",4]],[[]],[[]],[[]],[[]],[[["str",15],["bool",15]],[["result",4,["error"]],["error",4]]],[[["vec",3,["str"]],["str",15]],[["string",3],["result",4,["string","error"]],["error",4]]],null,[[],["keybackuppolicy",3]],[[],["keybackupinfo",3]],[[],["backupinfo",3]],[[],["policy",3]],[[],["policypaths",3]],[[],["pathpolicy",3]],[[["str",15]],[["result",4,["error"]],["error",4]]],[[["str",15]],[["result",4,["error"]],["error",4]]],[[["str",15]],[["result",4,["error"]],["error",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["error",4]],["bool",15]],[[["keybackup",3]],["bool",15]],[[["keybackuppolicy",3]],["bool",15]],[[["keybackupinfo",3]],["bool",15]],[[["backupinfo",3]],["bool",15]],[[["readkey",3]],["bool",15]],[[["policy",3]],["bool",15]],[[["policypaths",3]],["bool",15]],[[["pathpolicy",3]],["bool",15]],[[["capability",4]],["bool",15]],[[["option",4,["u32"]],["str",15],["u32",15]],[["error",4],["result",4,["ed25519privatekey","error"]],["ed25519privatekey",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["cryptomaterialerror",4]]],[[["error",3]]],[[["decodeerror",4]]],[[["response",3]]],[[]],[[["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["ed25519privatekey",3],["str",15]],[["result",4,["error"]],["error",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4,["vec","error"]],["vec",3,["string"]],["error",4]]],[[],[["result",4,["vec","error"]],["vec",3,["string"]],["error",4]]],[[["str",15]],[["result",4,["vec","error"]],["vec",3,["string"]],["error",4]]],[[["error",4]],["bool",15]],[[["keybackup",3]],["bool",15]],[[["keybackuppolicy",3]],["bool",15]],[[["keybackupinfo",3]],["bool",15]],[[["backupinfo",3]],["bool",15]],[[["readkey",3]],["bool",15]],[[["policy",3]],["bool",15]],[[["policypaths",3]],["bool",15]],[[["pathpolicy",3]],["bool",15]],[[["string",3],["u64",15],["option",4,["u64"]],["option",4,["string"]]]],[[["ed25519privatekey",3]]],[[["string",3],["u32",15]]],[[]],[[["response",3]],[["result",4,["error"]],["error",4]]],[[["response",3]],[["result",4,["vec","error"]],["vec",3,["string"]],["error",4]]],[[["response",3]],[["policy",3],["result",4,["policy","error"]],["error",4]]],[[["response",3]],[["result",4,["vec","error"]],["vec",3,["string"]],["error",4]]],[[["str",15],["response",3]],[["readresponse",3,["value"]],["error",4],["result",4,["readresponse","error"]]]],[[["response",3]],[["string",3],["result",4,["string","error"]],["error",4]]],[[["response",3]],[["result",4,["u32","error"]],["u32",15],["error",4]]],[[["str",15],["response",3]],[["result",4,["error"]],["error",4]]],[[["option",4,["u32"]],["u32",15],["str",15],["response",3]],[["error",4],["result",4,["ed25519privatekey","error"]],["ed25519privatekey",3]]],[[["response",3]],[["result",4,["vec","error"]],["vec",3,["string"]],["error",4]]],[[["str",15],["response",3]],[["error",4],["result",4,["vec","error"]],["vec",3,["readresponse"]]]],[[["response",3]],[["result",4,["error"]],["error",4]]],[[["response",3]],[["ed25519signature",3],["error",4],["result",4,["ed25519signature","error"]]]],[[["response",3]],[["bool",15],["error",4],["result",4,["bool","error"]]]],[[["str",15]],[["error",4],["result",4,["vec","error"]],["vec",3,["readresponse"]]]],[[["str",15]],[["policy",3],["result",4,["policy","error"]],["error",4]]],[[["str",15]],[["readresponse",3,["value"]],["error",4],["result",4,["readresponse","error"]]]],[[["option",4,["u32"]],["u32",15]],[["result",4,["u32","error"]],["u32",15],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[["str",15]],[["result",4,["error"]],["error",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15],["policy",3]],[["result",4,["error"]],["error",4]]],[[["option",4,["u32"]],["u32",15],["str",15]],[["ed25519signature",3],["error",4],["result",4,["ed25519signature","error"]]]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[["str",15]],[["result",4,["ed25519publickey","error"]],["error",4],["ed25519publickey",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["value",4]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["bool",15],["error",4],["result",4,["bool","error"]]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["value",4],["option",4,["u32"]],["u32",15],["str",15]],[["result",4,["u32","error"]],["u32",15],["error",4]]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["client",3]],[[]],[[],["str",15]],[[]],[[],["str",15]],[[],[["string",3],["result",4,["string"]]]],[[],["string",3]],[[],[["string",3],["option",4,["string"]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[4,"Capability"],[4,"Error"],[3,"Policy"],[3,"Client"],[3,"KeyBackup"],[3,"KeyBackupPolicy"],[3,"KeyBackupInfo"],[3,"BackupInfo"],[3,"ReadResponse"],[3,"ReadKey"],[3,"PolicyPaths"],[3,"PathPolicy"],[13,"HttpError"],[13,"InternalError"],[13,"MissingField"],[13,"NotFound"],[13,"OverflowError"],[13,"SerializationError"],[13,"SyntheticError"],[3,"VaultRunner"]]},\
"diem_vm":{"doc":"The VM runtime","t":[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,8,8,5,0,0,10,0,0,0,0,0,0,0,10,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,3,11,11,11,11,11,11,11,11,11,11,11,11,11,3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,17,7,17,17,17,17,17,17,3,11,12,11,11,11,12,11,11,11,11,11,12,11,11,12,11,11,11,11,12,11,12,12,11,12,11,12,11,12,11,12,11,11,11,11],"n":["ADD_CURRENCY_TO_ACCOUNT_BYTES","ADD_RECOVERY_ROTATION_CAPABILITY_BYTES","ADD_TO_SCRIPT_ALLOW_LIST_BYTES","ADD_VALIDATOR_AND_RECONFIGURE_BYTES","BURN_BYTES","BURN_TXN_FEES_BYTES","CANCEL_BURN_BYTES","CREATE_CHILD_VASP_ACCOUNT_BYTES","CREATE_DESIGNATED_DEALER_BYTES","CREATE_PARENT_VASP_ACCOUNT_BYTES","CREATE_RECOVERY_ADDRESS_BYTES","CREATE_VALIDATOR_ACCOUNT_BYTES","CREATE_VALIDATOR_OPERATOR_ACCOUNT_BYTES","FREEZE_ACCOUNT_BYTES","PEER_TO_PEER_WITH_METADATA_BYTES","PREBURN_BYTES","PUBLISH_SHARED_ED25519_PUBLIC_KEY_BYTES","REGISTER_VALIDATOR_CONFIG_BYTES","REMOVE_VALIDATOR_AND_RECONFIGURE_BYTES","ROTATE_AUTHENTICATION_KEY_BYTES","ROTATE_AUTHENTICATION_KEY_WITH_NONCE_ADMIN_BYTES","ROTATE_AUTHENTICATION_KEY_WITH_NONCE_BYTES","ROTATE_AUTHENTICATION_KEY_WITH_RECOVERY_ADDRESS_BYTES","ROTATE_DUAL_ATTESTATION_INFO_BYTES","ROTATE_SHARED_ED25519_PUBLIC_KEY_BYTES","SET_VALIDATOR_CONFIG_AND_RECONFIGURE_BYTES","SET_VALIDATOR_OPERATOR_BYTES","SET_VALIDATOR_OPERATOR_WITH_NONCE_ADMIN_BYTES","TIERED_MINT_BYTES","UNFREEZE_ACCOUNT_BYTES","UPDATE_DIEM_VERSION_BYTES","UPDATE_DUAL_ATTESTATION_LIMIT_BYTES","UPDATE_EXCHANGE_RATE_BYTES","UPDATE_MINTING_ABILITY_BYTES","VMExecutor","VMValidator","convert_changeset_and_events","data_cache","diem_vm","execute_block","logging","natives","parallel_executor","read_write_set_analysis","script_to_script_function","system_module_names","transaction_metadata","validate_transaction","RemoteStorage","StateViewCache","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fetch_config","fetch_config","from","from","get","get","get_module","get_module","get_resource","get_resource","id","init","init","into","into","is_genesis","new","new","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","DiemVM","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","execute_block","execute_block_and_keep_vm_status","execute_writeset_transaction","failed_transaction_cleanup","from","init","init_with_config","internals","into","new","new_for_validation","to_owned","try_from","try_into","type_id","validate_transaction","vzip","AdapterLogSchema","Execution","LogEntry","Miscellaneous","Validation","alert","base_version","block_id","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","erased_serialize","first_version","from","from","init","init","into","into","name","new","serialize","test_only_hash","to_owned","to_owned","try_from","try_from","try_into","try_into","txn_id","type_id","type_id","visit","vzip","vzip","diem_natives","ParallelDiemVM","borrow","borrow_mut","deref","deref_mut","drop","execute_block","from","init","into","try_from","try_into","type_id","vzip","ReadWriteSetAnalysis","add_on_functions_list","borrow","borrow_mut","deref","deref","deref_mut","drop","from","get_keys_read","get_keys_user_transaction","get_keys_written","get_partial_keys_user_transaction","init","into","new","try_from","try_into","type_id","vzip","remapping","BLOCK_PROLOGUE","DIEM_BLOCK_MODULE","MODULE_PROLOGUE_NAME","MULTI_AGENT_SCRIPT_PROLOGUE_NAME","SCRIPT_PROLOGUE_NAME","USER_EPILOGUE_NAME","WRITESET_EPILOGUE_NAME","WRITESET_PROLOGUE_NAME","TransactionMetadata","authentication_key_preimage","authentication_key_preimage","borrow","borrow_mut","chain_id","chain_id","default","deref","deref_mut","drop","expiration_timestamp_secs","expiration_timestamp_secs","from","gas_unit_price","gas_unit_price","init","into","is_multi_agent","max_gas_amount","max_gas_amount","new","script_hash","secondary_authentication_key_preimages","secondary_signers","secondary_signers","sender","sender","sequence_number","sequence_number","transaction_size","transaction_size","try_from","try_into","type_id","vzip"],"q":["diem_vm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_vm::data_cache","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_vm::diem_vm","","","","","","","","","","","","","","","","","","","","","","","","","diem_vm::logging","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_vm::natives","diem_vm::parallel_executor","","","","","","","","","","","","","","diem_vm::read_write_set_analysis","","","","","","","","","","","","","","","","","","","","diem_vm::script_to_script_function","diem_vm::system_module_names","","","","","","","","diem_vm::transaction_metadata","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This trait describes the VM’s execution interface.","This trait describes the VM’s validation interfaces.","","Scratchpad for on chain values during the execution.","","Executes a block of transactions and returns output for …","","","","","Module containing remapping information between script …","Names of modules, functions, and types used by Diem System.","","Executes the prologue of the Diem Account and verifies …","","A local cache for a given a <code>StateView</code>. The cache is …","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a <code>StateViewCache</code> give a <code>StateView</code>. Hold updates to …","","","","","","","","","","","","","","","","","","Execute a block of <code>transactions</code>. The output vector will …","Alternate form of ‘execute_block’ that keeps the …","","Generates a transaction output for a transaction that …","","","","","","","","","","","","Determine if a transaction is valid. Will return <code>None</code> if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an overapproximation of the <code>ResourceKey</code>’s in …","Returns an overapproximation of the <code>ResourceKey</code>’s in …","Returns an overapproximation of the <code>ResourceKey</code>’s in …","Returns an overapproximation of the <code>ResourceKey</code>’s in …","","","Create a Diem transaction read/write set analysis from a …","","","","","","","The ModuleId for the diem writeset manager module The …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,3,4,3,4,3,3,4,3,4,3,4,3,4,3,4,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,6,0,6,6,7,7,7,7,6,7,6,7,6,7,6,7,6,7,6,7,6,6,7,7,6,7,6,7,6,7,7,6,6,7,6,7,6,7,6,7,7,6,7,7,6,0,0,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["moveevent",6],["movechangeset",3],["vec",3,["moveevent"]]],[["vmstatus",4],["result",4,["vmstatus"]]]],null,null,[[["vec",3,["transaction"]],["transaction",4]],[["vmstatus",4],["vec",3,["transactionoutput"]],["result",4,["vec","vmstatus"]]]],null,null,null,null,null,null,null,[[["signedtransaction",3]],["vmvalidatorresult",3]],null,null,[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["accesspath",3]],[["option",4,["vec"]],["vec",3,["u8"]]]],[[["accesspath",3]],[["option",4,["vec"]],["vec",3,["u8"]]]],[[]],[[]],[[["accesspath",3]],[["option",4,["vec"]],["result",6,["option"]]]],[[["accesspath",3]],[["option",4,["vec"]],["partialvmresult",6,["option"]]]],[[["moduleid",3]],[["option",4,["vec"]],["result",4,["option"]]]],[[["moduleid",3]],[["option",4,["vec"]],["result",4,["option"]]]],[[["structtag",3],["accountaddress",3]],[["option",4,["vec"]],["result",4,["option"]]]],[[["structtag",3],["accountaddress",3]],[["option",4,["vec"]],["result",4,["option"]]]],[[],["stateviewid",4]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[]],[[]],[[],["diemvm",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["vec",3,["transaction"]],["transaction",4]],[["result",6,["vec","vmstatus"]],["vec",3,["transactionoutput"]],["vmstatus",4]]],[[["vec",3,["transaction"]],["transaction",4]],[["result",6,["vec","vmstatus"]],["vec",3],["vmstatus",4]]],[[["writesetpayload",4],["transactionmetadata",3],["adapterlogschema",3]],[["vmstatus",4],["result",6,["vmstatus"]]]],[[["gasstatus",3],["transactionmetadata",3],["identstr",3],["vmstatus",4],["adapterlogschema",3]],["transactionoutput",3]],[[]],[[],["usize",15]],[[["vmconfig",3],["diemversion",3],["vmpublishingoption",3]]],[[],["diemvminternals",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["signedtransaction",3]],["vmvalidatorresult",3]],[[]],null,null,null,null,null,[[]],[[["version",6]]],[[["hashvalue",3]]],[[]],[[]],[[]],[[]],[[],["adapterlogschema",3]],[[],["logentry",4]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["serializer",8]],[["error",3],["ok",3],["result",4,["ok","error"]]]],[[["version",6]]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["logentry",4]]],[[["usize",15],["stateviewid",4]]],[[],["result",4]],[[],["hashvalue",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[],["typeid",3]],[[],["typeid",3]],[[["visitor",8]]],[[]],[[]],[[],["nativefunctiontable",6]],null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["normalizedreadwritesetanalysis",3],["vec",3,["transaction"]],["transaction",4]],[["vmstatus",4],["result",4,["vmstatus"]]]],[[]],[[],["usize",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[],["vec",3]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["signedtransaction",3]],[["vec",3,["resourcekey"]],["result",6,["vec"]]]],[[["signedtransaction",3]],["result",6]],[[["signedtransaction",3]],[["vec",3,["resourcekey"]],["result",6,["vec"]]]],[[["signedtransaction",3]],["result",6]],[[],["usize",15]],[[]],[[["normalizedreadwritesetanalysis",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["option",4]],null,null,null,null,null,null,null,null,null,[[]],null,[[]],[[]],[[],["chainid",3]],null,[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["u64",15]],null,[[]],[[],[["gascarrier",6],["gasprice",3,["gascarrier"]]]],null,[[],["usize",15]],[[]],[[],["bool",15]],[[],[["gascarrier",6],["gasunits",3,["gascarrier"]]]],null,[[["signedtransaction",3]]],null,null,[[],[["vec",3,["accountaddress"]],["accountaddress",3]]],null,[[],["accountaddress",3]],null,[[],["u64",15]],null,[[],[["gascarrier",6],["abstractmemorysize",3,["gascarrier"]]]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[8,"VMExecutor"],[8,"VMValidator"],[3,"StateViewCache"],[3,"RemoteStorage"],[3,"DiemVM"],[4,"LogEntry"],[3,"AdapterLogSchema"],[3,"ParallelDiemVM"],[3,"ReadWriteSetAnalysis"],[3,"TransactionMetadata"]]},\
"diem_wallet":{"doc":"","t":[3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,5,5],"n":["Mnemonic","WalletLibrary","borrow","borrow","borrow_mut","borrow_mut","from","from","from","generate_addresses","get_addresses","get_authentication_key","get_private_key","into","into","io_utils","key_leaf","mnemonic","mnemonic","new","new_address","new_address_at_child_number","new_from_mnemonic","read","recover","sign_txn","sign_txn","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write","write_recovery","DELIMITER","recover","write_recovery"],"q":["diem_wallet","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_wallet::io_utils","",""],"d":["Mnemonic seed for deterministic key derivation based on …","WalletLibrary contains all the information needed to …","","","","","","Generate mnemonic from string.","","Function that iterates from the current key_leaf until the …","Returns a list of all addresses controlled by this wallet …","Return authentication key (AuthenticationKey) for an …","Return private key for an address in the wallet","","","Utils for read/write A module to generate, store and load …","Get the current ChildNumber in u64 format","Generate mnemonic from entropy byte-array.","Function that returns the string representation of the …","Constructor that generates a Mnemonic from OS randomness …","Function that generates a new key and adds it to the …","Function that allows to get the address of a particular …","Constructor that instantiates a new WalletLibrary from …","Read mnemonic from input_file_path.","Recover wallet from input_file_path","Simple public function that allows to sign a Diem …","","","","","","","","","","","Write mnemonic to output_file_path.","Function that writes the wallet Mnemonic to file NOTE: …","Delimiter used to ser/deserialize account data.","Recover wallet from the path specified.","Write wallet seed to file."],"i":[0,0,1,2,1,2,1,1,2,2,2,2,2,1,2,0,2,1,2,2,2,2,2,1,2,2,2,1,1,2,1,2,1,2,1,2,1,2,0,0,0],"f":[null,null,[[]],[[]],[[]],[[]],[[]],[[["str",15]],[["mnemonic",3],["result",6,["mnemonic"]]]],[[]],[[["u64",15]],["result",6]],[[],[["result",6,["vec"]],["vec",3,["accountaddress"]]]],[[["accountaddress",3]],[["authenticationkey",3],["result",6,["authenticationkey"]]]],[[["accountaddress",3]],[["result",6,["ed25519privatekey"]],["ed25519privatekey",3]]],[[]],[[]],null,[[],["u64",15]],[[],[["mnemonic",3],["result",6,["mnemonic"]]]],[[],["string",3]],[[]],[[],["result",6]],[[["childnumber",3]],[["accountaddress",3],["result",6,["accountaddress"]]]],[[["mnemonic",3]]],[[["path",3]],["result",6]],[[["path",3]],[["result",6,["walletlibrary"]],["walletlibrary",3]]],[[["rawtransaction",3]],[["signedtransaction",3],["result",6,["signedtransaction"]]]],[[["rawtransaction",3]],[["result",6,["signedtransaction","error"]],["signedtransaction",3],["error",3]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[["path",3]],["result",6]],[[["path",3]],["result",6]],null,[[],[["result",6,["walletlibrary"]],["walletlibrary",3]]],[[["walletlibrary",3]],["result",6]]],"p":[[3,"Mnemonic"],[3,"WalletLibrary"]]},\
"diem_workspace_hack":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"diem_writeset_generator":{"doc":"","t":[3,11,11,5,5,11,11,11,5,5,5,11,11,11,11,11,0,0,11,11,11,11,5,11,17,17,5,5,0,5,0,5,3,11,11,12,11,11,12,11,11,11,12,11,11,11,5,5,11,11,5,12,5,11,12,11,11,11,11,11,12,11,5],"n":["GenesisSession","borrow","borrow_mut","build_changeset","create_release","deref","deref_mut","drop","encode_custom_script","encode_halt_network_payload","encode_remove_validators_payload","exec_func","exec_script","from","init","into","old_releases","release_flow","set_diem_version","try_from","try_into","type_id","verify_release","vzip","RELEASE_1_2_0_PATCH","RELEASE_1_4_0_PATCH","release_1_2_0_writeset","release_1_4_0_writeset","artifacts","create_release","test_utils","verify_release","ReleaseArtifact","borrow","borrow_mut","chain_id","clone","clone_into","commit_hash","deref","deref_mut","deserialize","diem_version","drop","erased_serialize","from","get_commit_hash","hash_for_modules","init","into","load_latest_artifact","release_name","save_release_artifact","serialize","stdlib_hash","test_only_hash","to_owned","try_from","try_into","type_id","version","vzip","release_modules"],"q":["diem_writeset_generator","","","","","","","","","","","","","","","","","","","","","","","","diem_writeset_generator::old_releases","","","","diem_writeset_generator::release_flow","","","","diem_writeset_generator::release_flow::artifacts","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diem_writeset_generator::release_flow::test_utils"],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checkin the release artifact to a local file to make sure …","","","","","","","","","","","","","","","Generate a unique hash for a list of modules","","","","","","","","","","","","","","",""],"i":[0,1,1,0,0,1,1,1,0,0,0,1,1,1,1,1,0,0,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,2,2,0,2,0,2,2,2,2,2,2,2,2,2,0],"f":[null,[[]],[[]],[[],["changeset",3]],[[["u64",15],["chainid",3],["string",3],["bool",15],["option",4,["u64"]],["str",15]],[["result",6,["writesetpayload"]],["writesetpayload",4]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["str",15],["option",4,["accountaddress"]],["accountaddress",3]],["writesetpayload",4]],[[],["writesetpayload",4]],[[["accountaddress",3],["vec",3,["accountaddress"]]],["writesetpayload",4]],[[["vec",3,["vec"]],["typetag",4],["vec",3,["u8"]],["str",15],["vec",3,["typetag"]]]],[[["script",3],["accountaddress",3]]],[[]],[[],["usize",15]],[[]],null,null,[[["version",6]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["writesetpayload",4],["chainid",3],["string",3],["bool",15]],["result",6]],[[]],null,null,[[],["transactionpayload",4]],[[],["transactionpayload",4]],null,[[["u64",15],["chainid",3],["string",3],["bool",15],["option",4,["u64"]],["str",15]],[["result",6,["writesetpayload"]],["writesetpayload",4]]],null,[[["writesetpayload",4],["chainid",3],["string",3],["bool",15]],["result",6]],null,[[]],[[]],null,[[],["releaseartifact",3]],[[]],null,[[["usize",15]]],[[["usize",15]]],[[],["result",4]],null,[[["usize",15]]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[]],[[],[["result",6,["string"]],["string",3]]],[[],[["hashvalue",3],["result",6,["hashvalue"]]]],[[],["usize",15]],[[]],[[["chainid",3]],[["result",6,["releaseartifact"]],["releaseartifact",3]]],null,[[["releaseartifact",3]],["result",6]],[[],["result",4]],null,[[],["hashvalue",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[],["vec",3]]],"p":[[3,"GenesisSession"],[3,"ReleaseArtifact"]]},\
"diemdb":{"doc":"This crate provides <code>DiemDB</code> which represents physical …","t":[3,8,0,11,11,11,11,11,0,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,0,11,11,11,11,0,0,5,11,11,11,11,11,0,0,3,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,7,7,7,7,7,7,7,7,7,7,7,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,5,5,5,5],"n":["DiemDB","GetRestoreHandler","backup","borrow","borrow_mut","create_checkpoint","deref","deref_mut","diemsum","drop","errors","fmt","from","get_account_state_with_proof","get_account_state_with_proof_by_version","get_account_transaction","get_account_transactions","get_accumulator_consistency_proof","get_accumulator_root_hash","get_backup_handler","get_block_timestamp","get_epoch_ending_ledger_info","get_epoch_ending_ledger_infos","get_event_by_version_with_proof","get_events","get_events_with_proofs","get_last_version_before_timestamp","get_latest_account_state","get_latest_ledger_info","get_latest_state_root","get_latest_transaction_info_option","get_latest_tree_state","get_module","get_resource","get_restore_handler","get_startup_info","get_state_proof","get_state_proof_with_ledger_info","get_transaction_by_hash","get_transaction_by_version","get_transaction_outputs","get_transactions","init","into","metrics","new_for_test","open","open_as_secondary","save_transactions","schema","test_helper","test_save_blocks_impl","try_from","try_into","type_id","update_rocksdb_properties","vzip","backup_handler","restore_handler","BackupHandler","DbState","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","committed_version","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","epoch","erased_serialize","fmt","fmt","from","from","get_account_iter","get_account_state_range_proof","get_db_state","get_epoch_ending_ledger_info_iter","get_state_root_proof","get_transaction_iter","get_transaction_range_proof","init","init","into","into","serialize","synced_version","test_only_hash","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","RestoreHandler","borrow","borrow_mut","clone","clone_into","confirm_or_save_frozen_subtrees","deref","deref_mut","diemdb","drop","from","get_next_expected_transaction_version","get_state_restore_receiver","get_tree_state","init","into","save_ledger_infos","save_transactions","to_owned","try_from","try_into","type_id","vzip","Diemsum","borrow","borrow_mut","deref","deref_mut","drop","from","get_account_state_by_version","get_committed_version","get_events_by_version","get_startup_info","get_txn_by_version","init","into","new","scan_events_by_seq","scan_txn_by_version","try_from","try_into","type_id","vzip","DiemDbError","NotFound","TooManyRequested","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","init","into","to_string","try_from","try_into","type_id","vzip","0","0","1","DIEM_STORAGE_API_LATENCY_SECONDS","DIEM_STORAGE_COMMITTED_TXNS","DIEM_STORAGE_LATEST_ACCOUNT_COUNT","DIEM_STORAGE_LATEST_TXN_VERSION","DIEM_STORAGE_LEDGER","DIEM_STORAGE_LEDGER_VERSION","DIEM_STORAGE_NEXT_BLOCK_EPOCH","DIEM_STORAGE_OTHER_TIMERS_SECONDS","DIEM_STORAGE_PRUNER_LEAST_READABLE_STATE_VERSION","DIEM_STORAGE_PRUNE_WINDOW","DIEM_STORAGE_ROCKSDB_PROPERTIES","EPOCH_BY_VERSION_CF_NAME","EVENT_ACCUMULATOR_CF_NAME","EVENT_BY_KEY_CF_NAME","EVENT_BY_VERSION_CF_NAME","EVENT_CF_NAME","JELLYFISH_MERKLE_NODE_CF_NAME","LEDGER_COUNTERS_CF_NAME","STALE_NODE_INDEX_CF_NAME","TRANSACTION_ACCUMULATOR_CF_NAME","TRANSACTION_BY_ACCOUNT_CF_NAME","TRANSACTION_BY_HASH_CF_NAME","TRANSACTION_CF_NAME","TRANSACTION_INFO_CF_NAME","WRITE_SET_CF_NAME","fuzzing","fuzz_decode","arb_blocks_to_commit","arb_blocks_to_commit_impl","arb_mock_genesis"],"q":["diemdb","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diemdb::backup","","diemdb::backup::backup_handler","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diemdb::backup::restore_handler","","","","","","","","","","","","","","","","","","","","","","","diemdb::diemsum","","","","","","","","","","","","","","","","","","","","","diemdb::errors","","","","","","","","","","","","","","","","","","diemdb::errors::DiemDbError","","","diemdb::metrics","","","","","","","","","","","diemdb::schema","","","","","","","","","","","","","","","diemdb::schema::fuzzing","diemdb::test_helper","",""],"d":["This holds a handle to the underlying DB responsible for …","","","","","Creates new physical DB checkpoint in directory specified …","","","","","This module defines error types used by <code>DiemDB</code>.","","","","","","","","","Gets an instance of <code>BackupHandler</code> for data backup purpose.","","Gets ledger info at specified version and ensures it’s …","","","","","","","","","","","","","Gets an instance of <code>RestoreHandler</code> for data restore …","","","","This API is best-effort in that it CANNOT provide absense …","Get transaction by version, delegates to …","Gets a batch of transactions for the purpose of …","Gets a batch of transactions for the purpose of …","","","","This opens db in non-readonly mode, without the pruner.","","","<code>first_version</code> is the version of the first transaction in …","This module defines representation of Diem core data …","This module provides reusable helpers in tests.","","","","","This force the db to update rocksdb properties immediately.","","","","<code>BackupHandler</code> provides functionalities for DiemDB data …","","","","","","","","","","","","","","","","","","","","","","","","Gets an iterator which can yield all accounts in the state …","Gets the proof that proves a range of accounts.","Gets the epoch, commited version, and synced version of …","","Gets the proof of the state root at specified version. …","Gets an iterator that yields a range of transactions.","Gets the proof for a transaction chunk. N.B. the <code>LedgerInfo</code>…","","","","","","","","","","","","","","","","","","","Provides functionalities for DiemDB data restore.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This enum defines errors commonly used among <code>DiemDB</code> APIs.","A requested item is not found.","Requested too many items.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Rocksdb metrics","","","","","","","","","","","","","","","","","","This returns a <code>proptest</code> <code>Strategy</code> that yields an arbitrary …",""],"i":[0,0,0,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,3,4,3,4,3,4,3,4,4,3,4,3,4,4,3,4,4,4,4,4,3,4,3,3,3,3,3,3,3,3,4,3,4,4,4,4,3,4,4,3,4,3,4,3,4,3,4,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,null,null,[[]],[[]],[[["asref",8,["path"]],["path",3]],["result",6]],[[["usize",15]]],[[["usize",15]]],null,[[["usize",15]]],null,[[["formatter",3]],["result",6]],[[]],[[["accountaddress",3],["version",6]],[["result",6,["accountstatewithproof"]],["accountstatewithproof",6]]],[[["accountaddress",3],["version",6]],["result",6]],[[["u64",15],["bool",15],["version",6],["accountaddress",3]],[["result",6,["option"]],["option",4,["transactionwithproof"]]]],[[["u64",15],["bool",15],["version",6],["accountaddress",3]],[["result",6,["accounttransactionswithproof"]],["accounttransactionswithproof",6]]],[[["option",4,["version"]],["version",6]],[["result",6,["accumulatorconsistencyproof"]],["accumulatorconsistencyproof",3]]],[[["version",6]],[["hashvalue",3],["result",6,["hashvalue"]]]],[[],["backuphandler",3]],[[["u64",15]],[["u64",15],["result",6,["u64"]]]],[[["u64",15]],[["ledgerinfowithsignatures",4],["result",6,["ledgerinfowithsignatures"]]]],[[["u64",15]],[["result",6,["epochchangeproof"]],["epochchangeproof",3]]],[[["eventkey",3],["u64",15]],[["result",6,["eventbyversionwithproof"]],["eventbyversionwithproof",6]]],[[["eventkey",3],["u64",15],["order",4]],[["result",6,["vec"]],["vec",3]]],[[["eventkey",3],["u64",15],["option",4,["u64"]],["order",4]],[["vec",3,["eventwithproof"]],["result",6,["vec"]]]],[[["u64",15],["version",6]],[["result",6,["version"]],["version",6]]],[[["accountaddress",3]],[["option",4,["accountstateblob"]],["result",6,["option"]]]],[[],[["ledgerinfowithsignatures",4],["result",6,["ledgerinfowithsignatures"]]]],[[],["result",6]],[[],[["result",6,["option"]],["option",4]]],[[],[["treestate",3],["result",6,["treestate"]]]],[[["moduleid",3]],[["option",4,["vec"]],["result",6,["option"]]]],[[["accountaddress",3],["structtag",3]],[["option",4,["vec"]],["result",6,["option"]]]],[[],["restorehandler",3]],[[],[["result",6,["option"]],["option",4,["startupinfo"]]]],[[["u64",15]],[["result",6,["stateproof"]],["stateproof",3]]],[[["u64",15],["ledgerinfowithsignatures",4]],[["result",6,["stateproof"]],["stateproof",3]]],[[["bool",15],["hashvalue",3],["version",6]],[["result",6,["option"]],["option",4,["transactionwithproof"]]]],[[["bool",15],["version",6]],[["transactionwithproof",6],["result",6,["transactionwithproof"]]]],[[["u64",15],["version",6]],[["result",6,["transactionoutputlistwithproof"]],["transactionoutputlistwithproof",6]]],[[["u64",15],["bool",15],["version",6]],[["transactionlistwithproof",6],["result",6,["transactionlistwithproof"]]]],[[],["usize",15]],[[]],null,[[["asref",8,["path"]],["path",3],["clone",8]]],[[["asref",8,["path"]],["u64",15],["clone",8],["option",4,["u64"]],["path",3],["bool",15],["rocksdbconfig",3]],["result",6]],[[["asref",8,["path"]],["clone",8],["path",3],["rocksdbconfig",3]],["result",6]],[[["version",6],["option",4,["ledgerinfowithsignatures"]],["ledgerinfowithsignatures",4]],["result",6]],null,null,[[["vec",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["result",6]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[],["backuphandler",3]],[[],["dbstate",3]],[[]],[[]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],null,[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["version",6]],[["result",6,["box"]],["box",3,["iterator"]]]],[[["hashvalue",3],["version",6]],[["result",6,["sparsemerklerangeproof"]],["sparsemerklerangeproof",3]]],[[],[["result",6,["option"]],["option",4,["dbstate"]]]],[[["u64",15]],["result",6]],[[["version",6]],["result",6]],[[["usize",15],["version",6]],["result",6]],[[["version",6]],["result",6]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["result",4]],null,[[],["hashvalue",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[]],[[]],[[],["restorehandler",3]],[[]],[[["leafcount",6]],["result",6]],[[["usize",15]]],[[["usize",15]]],null,[[["usize",15]]],[[]],[[],[["result",6,["version"]],["version",6]]],[[["bool",15],["hashvalue",3],["version",6]],[["result",6,["jellyfishmerklerestore"]],["jellyfishmerklerestore",3,["accountstateblob"]]]],[[["leafcount",6]],[["treestate",3],["result",6,["treestate"]]]],[[],["usize",15]],[[]],[[],["result",6]],[[["version",6]],["result",6]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["accountaddress",3],["version",6]],[["option",4,["accountstateblob"]],["result",6,["option"]]]],[[],[["result",6,["version"]],["version",6]]],[[["version",6]],[["result",6,["vec"]],["vec",3,["contractevent"]]]],[[],[["result",6,["startupinfo"]],["startupinfo",3]]],[[["version",6]],[["transaction",4],["result",6,["transaction"]]]],[[],["usize",15]],[[]],[[["asref",8,["path"]],["path",3],["clone",8]],["result",6]],[[["eventkey",3],["u64",15]],[["vec",3],["result",6,["vec"]]]],[[["version",6]],[["result",6,["vec"]],["vec",3,["transaction"]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["usize",15]]],[[]]],"p":[[3,"DiemDB"],[8,"GetRestoreHandler"],[3,"BackupHandler"],[3,"DbState"],[3,"RestoreHandler"],[3,"Diemsum"],[4,"DiemDbError"],[13,"NotFound"],[13,"TooManyRequested"]]},\
"disassembler":{"doc":"","t":[0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11],"n":["disassembler","Disassembler","DisassemblerOptions","add_coverage_map","borrow","borrow","borrow_mut","borrow_mut","default","disassemble","disassemble_function_def","disassemble_struct_def","fmt","from","from","from_view","into","into","new","new","only_externally_visible","print_basic_blocks","print_code","print_locals","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["disassembler","disassembler::disassembler","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","Holds the various options that we support while …","","","","","","","","","","","","","","","","","","Only print non-private functions","Print the basic blocks of the bytecode.","Print the bytecode for the instructions within the …","Print the locals inside each function body.","","","","","","","",""],"i":[0,0,0,1,1,2,1,2,2,1,1,1,2,1,2,1,1,2,1,2,2,2,2,2,1,2,1,2,1,2,1,2],"f":[null,null,null,[[["execcoveragemap",3]]],[[]],[[]],[[]],[[]],[[],["disassembleroptions",3]],[[],[["result",6,["string"]],["string",3]]],[[["functiondefinitionindex",3]],[["result",6,["string"]],["string",3]]],[[["structdefinitionindex",3]],[["result",6,["string"]],["string",3]]],[[["formatter",3]],["result",6]],[[]],[[]],[[["binaryindexedview",4],["loc",3]],["result",6]],[[]],[[]],[[["sourcemapping",3],["disassembleroptions",3]]],[[]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]]],"p":[[3,"Disassembler"],[3,"DisassemblerOptions"]]},\
"docgen":{"doc":"","t":[3,3,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,12,12,12,12,12,11,11,11,12,12,12,12,11,12,11,12,11,11,11,11,11,11,11,11],"n":["Docgen","DocgenOptions","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","collapsed_sections","compile_relative_to_output_dir","default","deserialize","doc_path","fmt","from","from","gen","include_call_diagrams","include_dep_diagrams","include_impl","include_private_fun","include_specs","into","into","new","output_directory","references_file","root_doc_templates","section_level_start","serialize","specs_inlined","to_owned","toc_depth","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["docgen","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The documentation generator.","Options passed into the documentation generator.","","","","","","","Whether to use collapsed sections () for impl and specs","If this is being compiled relative to a different place …","","","In which directories to look for references.","","","","Generate document contents, returning pairs of output file …","Whether to include call diagrams in the generated docs.","Whether to include dependency diagrams in the generated …","Whether to include Move implementations.","Whether to include private functions in the generated docs.","Whether to include specifications in the generated docs.","","","Creates a new documentation generator.","In which directory to store output.","An optional file containing reference definitions. The …","A list of paths to files containing templates for root …","The level where we start sectioning. Often markdown …","","Whether to put specifications in the same section as a …","","Max depth to which sections are displayed in …","","","","","","","",""],"i":[0,0,1,2,1,2,2,2,2,2,2,2,2,2,1,2,1,2,2,2,2,2,1,2,1,2,2,2,2,2,2,2,2,1,2,1,2,1,2,1,2],"f":[null,null,[[]],[[]],[[]],[[]],[[],["docgenoptions",3]],[[]],null,null,[[]],[[],["result",4]],null,[[["formatter",3]],["result",6]],[[]],[[]],[[],["vec",3]],null,null,null,null,null,[[]],[[]],[[["globalenv",3],["docgenoptions",3]]],null,null,null,null,[[],["result",4]],null,[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]]],"p":[[3,"Docgen"],[3,"DocgenOptions"]]},\
"errmapgen":{"doc":"","t":[3,3,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11],"n":["ErrmapGen","ErrmapOptions","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deserialize","error_category_module","error_prefix","fmt","from","from","gen","into","into","new","output_file","save_result","serialize","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["errmapgen","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","The module ID of the error category module","The constant prefix that determines if a constant is an …","","","","","","","","In which file to store the output","","","","","","","","","","",""],"i":[0,0,1,2,1,2,2,2,2,2,2,2,2,1,2,1,1,2,1,2,1,2,2,1,2,1,2,1,2,1,2],"f":[null,null,[[]],[[]],[[]],[[]],[[],["errmapoptions",3]],[[]],[[]],[[],["result",4]],null,null,[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["errmapoptions",3],["globalenv",3]]],null,[[]],[[],["result",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]]],"p":[[3,"ErrmapGen"],[3,"ErrmapOptions"]]},\
"event_notifications":{"doc":"","t":[13,4,3,6,8,3,13,3,3,6,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,10,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,12,12,12],"n":["CannotSubscribeToZeroEventKeys","Error","EventNotification","EventNotificationListener","EventNotificationSender","EventSubscriptionService","MissingEventSubscription","NotificationListener","ReconfigNotification","ReconfigNotificationListener","UnableToSendEventNotification","UnexpectedErrorEncountered","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","eq","erased_serialize","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","init","init","init","init","init","into","into","into","into","into","is_terminated","ne","new","notification_receiver","notify_events","notify_events","notify_initial_configs","notify_initial_configs","on_chain_configs","poll_next","serialize","subscribe_to_events","subscribe_to_reconfigurations","subscribed_events","test_only_hash","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","type_id","type_id","version","version","vzip","vzip","vzip","vzip","vzip","0","0","0"],"q":["event_notifications","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","event_notifications::Error","",""],"d":["","","A notification for events.","A subscription listener for on-chain events.","The interface between state sync and the subscription …","The subscription service offered by state sync, …","","The component responsible for listening to subscription …","A notification for reconfigurations.","A subscription listener for reconfigurations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Notify the subscription service of the events at the …","","Forces the subscription service to notify subscribers of …","","","","","Returns an EventNotificationListener that can be monitored …","Returns a ReconfigNotificationListener that can be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,0,0,0,0,0,1,0,0,0,1,1,2,1,3,4,5,2,1,3,4,5,1,1,2,1,3,4,5,2,1,3,4,5,1,2,1,3,4,5,1,1,1,1,3,4,5,2,1,1,3,4,5,2,1,3,4,5,2,1,3,4,5,5,1,2,5,6,2,6,2,4,5,1,2,2,3,1,1,1,2,1,3,4,5,2,1,3,4,5,5,2,1,3,4,5,3,4,2,1,3,4,5,7,8,9],"f":[null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["error",4]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["error",4]],["bool",15]],[[["serializer",8]],[["ok",3],["error",3],["result",4,["ok","error"]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["senderror",3]]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["error",4]],["bool",15]],[[["arc",3,["rwlock"]],["rwlock",3,["dbreaderwriter"]]]],null,[[["vec",3,["contractevent"]],["contractevent",4],["version",6]],[["result",4,["error"]],["error",4]]],[[["vec",3,["contractevent"]],["contractevent",4],["version",6]],[["result",4,["error"]],["error",4]]],[[["version",6]],[["result",4,["error"]],["error",4]]],[[["version",6]],[["result",4,["error"]],["error",4]]],null,[[["pin",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[],["result",4]],[[["vec",3,["eventkey"]],["eventkey",3]],[["result",4,["eventnotificationlistener","error"]],["eventnotificationlistener",6],["error",4]]],[[],[["error",4],["result",4,["reconfignotificationlistener","error"]],["reconfignotificationlistener",6]]],null,[[],["hashvalue",3]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[]],[[]],null,null,null],"p":[[4,"Error"],[3,"EventSubscriptionService"],[3,"EventNotification"],[3,"ReconfigNotification"],[3,"NotificationListener"],[8,"EventNotificationSender"],[13,"MissingEventSubscription"],[13,"UnableToSendEventNotification"],[13,"UnexpectedErrorEncountered"]]},\
"execution_correctness":{"doc":"","t":[8,3,3,11,11,11,11,11,10,10,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11],"n":["ExecutionCorrectness","ExecutionCorrectnessManager","Process","borrow","borrow","borrow_mut","borrow_mut","client","commit_blocks","committed_block_id","deref","deref","deref_mut","deref_mut","drop","drop","execute_block","from","from","init","init","into","into","new","new","new_local","new_process","new_serializer","new_thread","reset","start","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["execution_correctness","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Interface for ExecutionCorrectness. It is basically the …","","","","","","","","","","","","","","","","Executes a block.","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,2,1,2,1,3,3,1,2,1,2,1,2,3,1,2,1,2,1,2,1,2,1,1,1,1,3,2,1,2,1,2,1,2,1,2],"f":[null,null,null,[[]],[[]],[[]],[[]],[[],[["box",3,["executioncorrectness"]],["executioncorrectness",8]]],[[["vec",3,["hashvalue"]],["ledgerinfowithsignatures",4],["hashvalue",3]],[["result",4,["error"]],["error",4]]],[[],[["hashvalue",3],["error",4],["result",4,["hashvalue","error"]]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["block",3],["hashvalue",3]],[["statecomputeresult",3],["error",4],["result",4,["statecomputeresult","error"]]]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["nodeconfig",3],["dbreaderwriter",6]]],[[["nodeconfig",3]]],[[["option",4,["ed25519privatekey"]],["dbreaderwriter",6],["ed25519privatekey",3]]],[[["u64",15],["socketaddr",4]]],[[["option",4,["ed25519privatekey"]],["u64",15],["ed25519privatekey",3],["socketaddr",4]]],[[["option",4,["ed25519privatekey"]],["u64",15],["ed25519privatekey",3],["socketaddr",4]]],[[],[["result",4,["error"]],["error",4]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]]],"p":[[3,"ExecutionCorrectnessManager"],[3,"Process"],[8,"ExecutionCorrectness"]]},\
"executor":{"doc":"","t":[3,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,0,11,11,0,11,11,5,11,11,11,11,11,11,3,11,11,5,11,11,11,11,11,5,11,11,5,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,7,7,7,7,7,7,7,7,7],"n":["Executor","apply_chunk","borrow","borrow_mut","commit_blocks","commit_chunk","committed_block_id","committed_block_id","db_bootstrapper","deref","deref_mut","drop","execute_block","execute_chunk","execute_or_apply_chunk","expecting_version","from","fuzzing","init","into","metrics","new","new_on_unbootstrapped_db","process_write_set","replay_chunk","reset","try_from","try_into","type_id","vzip","GenesisCommitter","borrow","borrow_mut","calculate_genesis","commit","deref","deref_mut","drop","from","generate_waypoint","init","into","maybe_bootstrap","new","try_from","try_into","type_id","vzip","waypoint","FakeDb","FakeVM","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","execute_block","from","from","fuzz_execute_and_commit_blocks","fuzz_execute_and_commit_chunk","get_account_state_with_proof","get_account_state_with_proof_by_version","get_account_transaction","get_account_transactions","get_block_timestamp","get_epoch_ending_ledger_info","get_epoch_ending_ledger_infos","get_event_by_version_with_proof","get_events","get_events_with_proofs","get_latest_account_state","get_latest_commit_metadata","get_latest_ledger_info","get_latest_state_root","get_latest_tree_state","get_latest_version","get_startup_info","get_state_proof","get_state_proof_with_ledger_info","get_transaction_by_hash","get_transaction_by_version","get_transaction_outputs","get_transactions","init","init","into","into","save_transactions","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","DIEM_EXECUTOR_APPLY_CHUNK_SECONDS","DIEM_EXECUTOR_COMMIT_BLOCKS_SECONDS","DIEM_EXECUTOR_COMMIT_CHUNK_SECONDS","DIEM_EXECUTOR_ERRORS","DIEM_EXECUTOR_EXECUTE_BLOCK_SECONDS","DIEM_EXECUTOR_EXECUTE_CHUNK_SECONDS","DIEM_EXECUTOR_SAVE_TRANSACTIONS_SECONDS","DIEM_EXECUTOR_TRANSACTIONS_SAVED","DIEM_EXECUTOR_VM_EXECUTE_BLOCK_SECONDS"],"q":["executor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","executor::db_bootstrapper","","","","","","","","","","","","","","","","","","","executor::fuzzing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","executor::metrics","","","","","","","",""],"d":["<code>Executor</code> implements all functionalities the execution …","","","","","","","","","","","","","","","","","","","","","Constructs an <code>Executor</code>.","","For all accounts modified by this transaction, find the …","","","","","","","","","","","","","","","","","","","If current version + 1 != waypoint.version(), return …","","","","","","","A fake database implementing DbReader and DbWriter","A fake VM implementing VMExecutor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,0,2,2,0,2,2,2,2,2,0,2,2,0,2,2,2,2,2,2,0,0,3,4,3,4,3,4,3,4,3,4,3,3,4,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,4,3,4,4,3,4,3,4,3,4,3,4,0,0,0,0,0,0,0,0,0],"f":[null,[[["transactionoutputlistwithproof",6],["ledgerinfowithsignatures",4]],["result",6]],[[]],[[]],[[["vec",3,["hashvalue"]],["ledgerinfowithsignatures",4],["hashvalue",3]],[["result",6,["error"]],["error",4]]],[[["transactiontocommit",3],["processedvmoutput",3],["vec",3,["contractevent"]],["contractevent",4],["vec",3,["transactiontocommit"]],["ledgerinfowithsignatures",4],["option",4,["ledgerinfowithsignatures"]]],[["vec",3,["contractevent"]],["result",6,["vec"]]]],[[],["hashvalue",3]],[[],[["error",4],["result",6,["hashvalue","error"]],["hashvalue",3]]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["hashvalue",3]],[["statecomputeresult",3],["result",6,["statecomputeresult","error"]],["error",4]]],[[["transactionlistwithproof",6],["ledgerinfowithsignatures",4]],["result",6]],[[["version",6],["transactioninfo",3],["vec",3,["transaction"]],["vec",3,["transactionoutput"]],["vec",3,["transactioninfo"]],["transaction",4],["option",4,["vec"]]],["result",6]],[[],["version",6]],[[]],null,[[],["usize",15]],[[]],null,[[["dbreaderwriter",6]]],[[["dbreaderwriter",6],["treestate",3]]],[[["hashmap",3],["transaction",4],["writeset",3]],[["result",6,["hashmap"]],["hashmap",3,["accountaddress","accountstateblob"]]]],[[["version",6],["vec",3,["transaction"]],["vec",3,["transactioninfo"]],["transaction",4],["transactioninfo",3]],["result",6]],[[],[["result",6,["error"]],["error",4]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[["transaction",4],["treestate",3],["dbreaderwriter",6]],[["result",6,["genesiscommitter"]],["genesiscommitter",3]]],[[],["result",6]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["transaction",4],["dbreaderwriter",6]],[["result",6,["waypoint"]],["waypoint",3]]],[[],["usize",15]],[[]],[[["waypoint",3],["transaction",4],["dbreaderwriter",6]],[["result",6,["bool"]],["bool",15]]],[[["executor",3,["dpnproto"]],["dpnproto",3],["ledgerinfowithsignatures",4]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["waypoint",3]],null,null,[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["vec",3,["transaction"]],["transaction",4]],[["result",6,["vec","vmstatus"]],["vmstatus",4],["vec",3,["transactionoutput"]]]],[[]],[[]],[[["ledgerinfowithsignatures",4],["vec",3]]],[[["transactionlistwithproof",6],["ledgerinfowithsignatures",4]]],[[["accountaddress",3],["version",6]],[["result",6,["accountstatewithproof"]],["accountstatewithproof",6]]],[[["accountaddress",3],["version",6]],["result",6]],[[["u64",15],["version",6],["bool",15],["accountaddress",3]],[["option",4,["transactionwithproof"]],["result",6,["option"]]]],[[["u64",15],["version",6],["bool",15],["accountaddress",3]],[["result",6,["accounttransactionswithproof"]],["accounttransactionswithproof",6]]],[[["u64",15]],[["u64",15],["result",6,["u64"]]]],[[["u64",15]],[["result",6,["ledgerinfowithsignatures"]],["ledgerinfowithsignatures",4]]],[[["u64",15]],[["epochchangeproof",3],["result",6,["epochchangeproof"]]]],[[["u64",15],["eventkey",3]],[["result",6,["eventbyversionwithproof"]],["eventbyversionwithproof",6]]],[[["u64",15],["order",4],["eventkey",3]],[["result",6,["vec"]],["vec",3]]],[[["u64",15],["order",4],["eventkey",3],["option",4,["u64"]]],[["result",6,["vec"]],["vec",3,["eventwithproof"]]]],[[["accountaddress",3]],[["result",6,["option"]],["option",4,["accountstateblob"]]]],[[],["result",6]],[[],[["result",6,["ledgerinfowithsignatures"]],["ledgerinfowithsignatures",4]]],[[],["result",6]],[[],[["treestate",3],["result",6,["treestate"]]]],[[],[["version",6],["result",6,["version"]]]],[[],[["option",4,["startupinfo"]],["result",6,["option"]]]],[[["u64",15]],[["stateproof",3],["result",6,["stateproof"]]]],[[["u64",15],["ledgerinfowithsignatures",4]],[["stateproof",3],["result",6,["stateproof"]]]],[[["version",6],["bool",15],["hashvalue",3]],[["option",4,["transactionwithproof"]],["result",6,["option"]]]],[[["u64",15],["version",6],["bool",15]],[["result",6,["transactionwithproof"]],["transactionwithproof",6]]],[[["version",6],["u64",15]],[["transactionoutputlistwithproof",6],["result",6,["transactionoutputlistwithproof"]]]],[[["version",6],["u64",15],["bool",15]],[["transactionlistwithproof",6],["result",6,["transactionlistwithproof"]]]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["version",6],["option",4,["ledgerinfowithsignatures"]],["ledgerinfowithsignatures",4]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null],"p":[[3,"Executor"],[3,"GenesisCommitter"],[3,"FakeVM"],[3,"FakeDb"]]},\
"executor_benchmark":{"doc":"","t":[5,0,5,0,0,0,5,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["create_storage_service_and_executor","db_generator","run_benchmark","transaction_committer","transaction_executor","transaction_generator","run","TransactionCommitter","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","new","run","try_from","try_into","type_id","vzip","TransactionExecutor","borrow","borrow_mut","deref","deref_mut","drop","execute_block","from","init","into","new","try_from","try_into","type_id","vzip","TransactionGenerator","TransactionGeneratorBase","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","drop_sender","erased_serialize","from","from","from","gen_account_creations","gen_mint_transactions","gen_transfer_transactions","init","init","into","into","new","new_with_metafile","new_with_sender","run_mint","run_transfer","serialize","test_only_hash","try_from","try_from","try_into","try_into","type_id","type_id","verify_sequence_number","version","vzip","vzip","write_meta"],"q":["executor_benchmark","","","","","","executor_benchmark::db_generator","executor_benchmark::transaction_committer","","","","","","","","","","","","","","","executor_benchmark::transaction_executor","","","","","","","","","","","","","","","executor_benchmark::transaction_generator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","Runs the benchmark with given parameters.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The base can be tranferred across different sessions to …","","","","","","","","","","","","Drops the sender to notify the receiving end of the …","","","","","","Generates transactions that allocate <code>init_account_balance</code> …","Generates transactions for random pairs of accounts.","","","","","","","","","","","","","","","","","","Verifies the sequence numbers in storage match what we …","","","",""],"i":[0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,3,4,3,4,3,4,3,4,4,3,4,3,4,3,4,4,3,3,3,3,4,3,4,3,3,3,3,3,4,4,3,4,3,4,3,4,3,3,3,4,3],"f":[[[["nodeconfig",3]]],null,[[["usize",15],["bool",15]]],null,null,null,[[["usize",15],["u64",15],["option",4,["u64"]]]],null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[["receiver",3],["version",6],["arc",3,["executor"]],["executor",3,["dpnproto","diemvm"]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["transaction",4],["vec",3,["transaction"]]]],[[]],[[],["usize",15]],[[]],[[["hashvalue",3],["version",6],["arc",3,["executor"]],["executor",3,["dpnproto","diemvm"]],["option",4,["sender"]],["sender",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[]],[[["transactiongenerator",3]]],[[]],[[["usize",15]],[["vec",3,["transaction"]],["vec",3,["vec"]]]],[[["u64",15],["usize",15]],[["vec",3,["transaction"]],["vec",3,["vec"]]]],[[["usize",15]],[["vec",3,["transaction"]],["vec",3,["vec"]]]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["usize",15],["ed25519privatekey",3]]],[[["asref",8,["path"]],["syncsender",3,["vec"]],["ed25519privatekey",3],["path",3],["vec",3,["transaction"]]]],[[["usize",15],["syncsender",3,["vec"]],["ed25519privatekey",3],["vec",3,["transaction"]]]],[[["u64",15],["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["hashvalue",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["dbreader",8]]],[[],["version",6]],[[]],[[]],[[]]],"p":[[3,"TransactionCommitter"],[3,"TransactionExecutor"],[3,"TransactionGenerator"],[3,"TransactionGeneratorBase"]]},\
"executor_test_helpers":{"doc":"","t":[5,5,5,5,5,5,0,5,5,5,5,5,5],"n":["bootstrap_genesis","extract_signer","gen_block_id","gen_block_metadata","gen_ledger_info_with_sigs","get_test_signed_transaction","integration_test_impl","start_storage_service","create_db_and_executor","test_execution_with_storage_impl","verify_account_balance","verify_committed_txn_status","verify_transactions"],"q":["executor_test_helpers","","","","","","","","executor_test_helpers::integration_test_impl","","","",""],"d":["Helper function for test to blindly bootstrap without …","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[[[["dbreaderwriter",6],["transaction",4]],[["result",6,["waypoint"]],["waypoint",3]]],[[["nodeconfig",3]],["validatorsigner",3]],[[["u8",15]],["hashvalue",3]],[[["u8",15],["accountaddress",3]],["blockmetadata",3]],[[["u64",15],["vec",3,["validatorsigner"]],["validatorsigner",3],["statecomputeresult",3],["hashvalue",3]],["ledgerinfowithsignatures",4]],[[["u64",15],["transactionpayload",4],["option",4,["transactionpayload"]],["ed25519privatekey",3],["accountaddress",3],["ed25519publickey",3]],["transaction",4]],null,[[]],[[["path",3],["transaction",4],["asref",8,["path"]]]],[[],[["arc",3,["diemdb"]],["diemdb",3]]],[[["accountstatewithproof",6]],["result",6]],[[["transactionwithproof",6],["transaction",4],["option",4,["transactionwithproof"]]],["result",6]],[[["transactionlistwithproof",6]],["result",6]]],"p":[]},\
"executor_types":{"doc":"","t":[8,13,8,13,4,3,13,3,3,13,3,3,8,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12],"n":["BlockExecutor","BlockNotFound","ChunkExecutor","EmptyBlocks","Error","ExecutedTrees","InternalError","ProcessedVMOutput","ProofReader","SerializationError","StateComputeResult","TransactionData","TransactionReplayer","account_blobs","accu_root","apply_and_commit_chunk","apply_chunk","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","commit_blocks","commit_chunk","committed_block_id","compute_result","compute_status","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","drop","epoch_state","epoch_state","eq","eq","equivalent","erased_serialize","erased_serialize","event_root_hash","events","execute_and_commit_chunk","execute_block","execute_chunk","execute_or_apply_chunk","executed_trees","expecting_version","extension_proof","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","frozen_subtree_roots","gas_used","get_proof","has_reconfiguration","has_reconfiguration","init","init","init","init","init","init","into","into","into","into","into","into","jf_node_hashes","ne","ne","new","new","new","new","new","new_copy","new_dummy","new_dummy_with_root_hash","new_empty","num_leaves","parent_frozen_subtree_roots","parent_num_leaves","reconfig_events","replay_chunk","reset","root_hash","serialize","serialize","set_signature","signature","state_id","state_root","state_root_hash","state_tree","status","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_string","transaction_data","transaction_info_hashes","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","txn_accumulator","txn_info_hash","type_id","type_id","type_id","type_id","type_id","type_id","version","version","version","vzip","vzip","vzip","vzip","vzip","vzip","write_set","0","0","error"],"q":["executor_typesexecutor_types::Error","",""],"d":["","","","","Different reasons for proposal rejection","A wrapper of the in-memory state sparse merkle tree and …","","The output of Processing the vm output of a series of …","","","A structure that summarizes the result of the execution …","The entire set of data associated with a transaction. In …","","","","","Similar to <code>execute_chunk</code>, but instead of executing …","","","","","","","","","","","","","","","","","","","","","Saves eligible blocks to persistent storage. If we have …","Commit a previously executed chunks, returns a vector of …","Get the latest committed block id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Executes a block.","Verifies the transactions based on the provided proofs and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","generate a new dummy state compute result with …","generate a new dummy state compute result with a given …","","","","","","","Reset the internal state including cache with newly …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,0,1,0,0,1,0,0,1,0,0,0,2,3,4,4,5,1,6,7,2,3,5,1,6,7,2,3,6,7,2,3,6,7,2,3,8,4,8,3,6,5,1,6,7,2,3,5,1,6,7,2,3,1,6,5,1,6,7,2,3,6,3,1,6,6,1,6,2,2,4,8,4,4,3,9,6,1,1,6,7,2,3,5,1,1,1,1,6,7,7,2,3,6,2,5,6,3,5,1,6,7,2,3,5,1,6,7,2,3,2,1,6,5,6,7,2,3,7,6,6,7,6,6,6,6,9,8,6,1,6,6,6,7,7,2,7,2,1,6,6,7,2,3,1,3,6,5,1,6,7,2,3,5,1,6,7,2,3,7,2,5,1,6,7,2,3,6,7,3,5,1,6,7,2,3,2,10,11,12],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["hashmap",3]],[[],["hashvalue",3]],[[["ledgerinfowithsignatures",4],["option",4,["ledgerinfowithsignatures"]],["transactionoutputlistwithproof",6]],[["result",6,["vec"]],["vec",3,["contractevent"]]]],[[["ledgerinfowithsignatures",4],["transactionoutputlistwithproof",6]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["statecomputeresult",3]],[[],["executedtrees",3]],[[],["transactiondata",3]],[[],["processedvmoutput",3]],[[]],[[]],[[]],[[]],[[["hashvalue",3],["ledgerinfowithsignatures",4],["vec",3,["hashvalue"]]],[["result",6,["error"]],["error",4]]],[[["vec",3,["contractevent"]],["ledgerinfowithsignatures",4],["option",4,["ledgerinfowithsignatures"]],["transactiontocommit",3],["contractevent",4],["vec",3,["transactiontocommit"]],["processedvmoutput",3]],[["result",6,["vec"]],["vec",3,["contractevent"]]]],[[],[["hashvalue",3],["error",4],["result",6,["hashvalue","error"]]]],[[["hashvalue",3],["u64",15],["vec",3,["hashvalue"]]],["statecomputeresult",3]],[[],["vec",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["option",4]],[[],["option",4]],[[["error",4]],["bool",15]],[[["statecomputeresult",3]],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["error",3],["ok",3]]],[[],["hashvalue",3]],[[]],[[["transactionlistwithproof",6],["ledgerinfowithsignatures",4],["option",4,["ledgerinfowithsignatures"]]],[["result",6,["vec"]],["vec",3,["contractevent"]]]],[[["hashvalue",3]],[["statecomputeresult",3],["error",4],["result",6,["statecomputeresult","error"]]]],[[["transactionlistwithproof",6],["ledgerinfowithsignatures",4]],["result",6]],[[["u64",15],["transaction",4],["option",4,["vec"]],["transactioninfo",3],["vec",3,["transactionoutput"]],["vec",3,["transactioninfo"]],["vec",3,["transaction"]]],["result",6]],[[],["executedtrees",3]],[[],["version",6]],[[],[["accumulatorextensionproof",3,["transactionaccumulatorhasher"]],["transactionaccumulatorhasher",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["error",3]]],[[["error",4]]],[[["error",4]]],[[]],[[]],[[]],[[["treestate",3]]],[[]],[[]],[[],["vec",3]],[[],["u64",15]],[[["hashvalue",3]],[["option",4,["sparsemerkleproof"]],["sparsemerkleproof",3]]],[[],["bool",15]],[[],["bool",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["hashmap",3]],[[["error",4]],["bool",15]],[[["statecomputeresult",3]],["bool",15]],[[["hashvalue",3],["hashmap",3,["hashvalue","sparsemerkleproof"]],["sparsemerkleproof",3,["accountstateblob"]]]],[[["u64",15],["vec",3,["hashvalue"]],["epochstate",3],["hashvalue",3],["option",4,["epochstate"]],["contractevent",4],["vec",3,["transactionstatus"]],["transactionstatus",4],["vec",3,["contractevent"]]]],[[["hashvalue",3],["u64",15],["vec",3,["hashvalue"]]],["executedtrees",3]],[[["vec",3,["contractevent"]],["u64",15],["inmemoryaccumulator",3,["eventaccumulatorhasher"]],["accountaddress",3],["accountstateblob",3],["hashvalue",3],["writeset",3],["nibblepath",3],["contractevent",4],["arc",3,["inmemoryaccumulator"]],["option",4,["hashvalue"]],["hashmap",3,["accountaddress","accountstateblob"]],["transactionstatus",4],["hashmap",3,["nibblepath","hashvalue"]]]],[[["transactiondata",3],["epochstate",3],["executedtrees",3],["vec",3,["transactiondata"]],["option",4,["epochstate"]]]],[[["inmemoryaccumulator",3,["transactionaccumulatorhasher"]],["arc",3,["sparsemerkletree"]],["arc",3,["inmemoryaccumulator"]],["sparsemerkletree",3,["accountstateblob"]]]],[[]],[[["hashvalue",3]]],[[],["executedtrees",3]],[[],["u64",15]],[[],["vec",3]],[[],["u64",15]],[[]],[[["transaction",4],["transactioninfo",3],["version",6],["vec",3,["transactioninfo"]],["vec",3,["transaction"]]],["result",6]],[[],[["result",6,["error"]],["error",4]]],[[],["hashvalue",3]],[[],["result",4]],[[],["result",4]],[[["ed25519signature",3]]],[[],["option",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["arc",3]],[[],["transactionstatus",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[],["vec",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["arc",3]],[[],[["hashvalue",3],["option",4,["hashvalue"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["version",6]],[[],[["version",6],["option",4,["version"]]]],[[],[["version",6],["option",4,["version"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["writeset",3]],null,null,null],"p":[[4,"Error"],[3,"TransactionData"],[3,"ProcessedVMOutput"],[8,"ChunkExecutor"],[3,"ProofReader"],[3,"StateComputeResult"],[3,"ExecutedTrees"],[8,"BlockExecutor"],[8,"TransactionReplayer"],[13,"BlockNotFound"],[13,"SerializationError"],[13,"InternalError"]]},\
"fallible":{"doc":"","t":[0,3,11,11,5,11,11,11,11,11,11,11,11],"n":["copy_from_slice","CopySliceError","borrow","borrow_mut","copy_slice_to_vec","fmt","fmt","from","into","to_string","try_from","try_into","type_id"],"q":["fallible","fallible::copy_from_slice","","","","","","","","","","",""],"d":["","","","","A fallible wrapper around [<code>std::vec::Vec::copy_from_slice</code>]","","","","","","","",""],"i":[0,0,1,1,0,1,1,1,1,1,1,1,1],"f":[null,null,[[]],[[]],[[],[["result",4,["copysliceerror"]],["copysliceerror",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"CopySliceError"]]},\
"forge":{"doc":"Forge is a framework for writing and running end-to-end …","t":[3,8,3,4,3,3,3,3,8,13,3,3,4,8,8,4,4,13,3,3,3,3,3,3,3,3,3,3,3,3,8,13,13,8,8,13,13,3,13,13,3,3,8,3,6,13,4,3,8,4,8,13,13,8,3,13,3,3,3,13,8,3,13,13,12,10,11,11,10,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,10,11,11,11,11,11,11,11,11,5,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,10,11,11,11,11,11,11,11,10,11,11,11,5,10,11,11,11,5,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,10,11,11,10,11,11,11,11,10,11,11,11,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,12,12,12,12,11,10,11,11,11,12,11,11,11,11,11,10,11,11,12,11,10,10,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,12,11,10,11,11,11,11,11,11,5,11,11,11,10,11,11,10,11,11,12,12,12,11,11,11,10,11,11,11,12,11,11,11,11,11,11,11,12,10,10,10,11,5,11,11,11,5,5,11,11,10,11,11,11,11,10,11,11,11,11,12,12,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,10,11,11,11,10,11,11,11,10,11,11,11,10,11,11,11,10,11,11,11,12,11,10,11,11,11,12,12,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AdminContext","AdminTest","ChainInfo","Coffer","CoreContext","EmitJob","EmitJobRequest","EmitThreadParams","Factory","Faucet","Forge","ForgeConfig","Format","FullNode","Fund","HealthCheckError","InitialVersion","Json","K8sFactory","K8sNode","K8sNode","K8sSwarm","KubeService","LocalFactory","LocalNode","LocalNode","LocalSwarm","LocalSwarmBuilder","LocalVersion","NetworkContext","NetworkTest","Newest","No","Node","NodeExt","NotRunning","Oldest","Options","Persistent","Pretty","PublicInfo","PublicUsageContext","PublicUsageTest","ReportedMetric","Result","RpcFailure","ShouldFail","SlackClient","Swarm","SwarmDirectory","SwarmExt","Temporary","Terse","Test","TestReport","TreasuryCompliance","TxnEmitter","TxnStats","TxnStatsRate","Unknown","Validator","Version","Yes","YesWithMessage","accounts_per_client","add_full_node","add_full_node","add_full_node","add_validator","add_validator","add_validator","add_validator_fullnode","all_tests","as_ref","async_json_rpc_client","async_json_rpc_client","atomic_histogram","bin","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","chain_id","chain_id","chain_id","chain_id","chain_id","chain_info","chain_info","chain_info","chain_info","check_connectivity","check_connectivity","check_connectivity","check_connectivity","clap","clean_k8s_cluster","clear_storage","clear_storage","clear_storage","client","client","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","committed","committed","config","config","config","config","config_path","core","core","core","create_designated_dealer_account","create_designated_dealer_account","create_designated_dealer_account","create_designated_dealer_account","create_k8s_client","create_parent_vasp_account","create_parent_vasp_account","create_parent_vasp_account","create_parent_vasp_account","create_parent_vasp_request","debug_client","debug_client","debug_endpoint","debug_endpoint","debug_endpoint","debug_port","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","designated_dealer_account","designated_dealer_account","dir","dir","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","emit_txn_for","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","execute_and_wait_transactions","expired","expired","fixed_tps","fixed_tps_params","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forge_main","fork_check","fork_check","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_args","from_clap","from_revision","from_rng","from_rng","from_str","from_workspace","full_node","full_node","full_node","full_node_mut","full_node_mut","full_node_mut","full_nodes","full_nodes","full_nodes","full_nodes_mut","full_nodes_mut","full_nodes_mut","fullnode","fullnode_mut","fund","fund","fund","fund","gas_price","gen_transfer_txn_request","genesis_version","get_connected_peers","get_connected_peers","get_hash","get_hash","get_log_contents","get_metric","get_metric","get_metric_with_fields","get_metric_with_fields","get_money_source","get_seed_accounts","hash","hash","health_check","health_check","health_check","health_check","health_check","health_check","health_check","host_ip","ignored","ignored","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initial_version","initial_version","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_persistent","into_public_info","json_rpc","json_rpc_client","json_rpc_client","json_rpc_client","json_rpc_clients","json_rpc_endpoint","json_rpc_endpoint","json_rpc_endpoint","json_rpc_url","latency","latency","latency_buckets","launch","launch_swarm","launch_swarm","launch_swarm","list","list","liveness_check","liveness_check","liveness_check","liveness_check","log_path","logs_location","logs_location","logs_location","metric","mint_accounts","name","name","name","name","name","name","ne","ne","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_swarm","new_swarm_with_version","nodes_healthcheck","number_of_tests","number_of_validators","p99_latency","partial_cmp","peer_id","peer_id","peer_id","peer_id","persist","port","print_report","query_sequence_numbers","random_account","random_account","rate","remove_full_node","remove_full_node","remove_full_node","remove_validator","remove_validator","remove_validator","report","report","report","report_metric","report_text","report_txn_stats","rest_api_endpoint","rest_api_endpoint","rest_api_endpoint","rest_api_url","rest_api_url","restart","restart","rng","rng","rng","rng","root_account","root_account","run","run","run","run","scale_sts_replica","send_message","serialize","serialize","set_eks_nodegroup_size","set_validator_image_tag","should_fail","should_fail","start","start","start","start","start_job","stop","stop","stop","stop","stop_job","submitted","submitted","swarm","template","test_name","test_only_hash","test_only_hash","thread_params","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","transaction_factory","transaction_factory","transfer_coins","treasury_compliance_account","treasury_compliance_account","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uninstall_from_k8s_cluster","upgrade","upgrade_validator","upgrade_validator","upgrade_validator","url","validator","validator","validator","validator","validator_mut","validator_mut","validator_mut","validator_mut","validators","validators","validators","validators","validators_mut","validators_mut","validators_mut","validators_mut","value","variants","version","version","version","version","version","version","versions","versions","versions","versions","versions","versions","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_committed","wait_for_all_nodes_to_catchup","wait_for_all_nodes_to_catchup","wait_for_all_nodes_to_catchup_to_version","wait_for_all_nodes_to_catchup_to_version","wait_for_connectivity","wait_for_connectivity","wait_for_connectivity","wait_for_connectivity","wait_for_connectivity","wait_for_connectivity","wait_millis","wait_until_healthy","wait_until_healthy","with_admin_tests","with_initial_validator_count","with_initial_version","with_network_tests","with_public_usage_tests","with_revision_and_workspace","with_upstream_and_workspace","with_upstream_merge_base_and_workspace","workers_per_endpoint","0","designated_dealer_account","json_rpc_client","transaction_factory","treasury_compliance_account","0","0","0","0","0","AtomicHistogramAccumulator","AtomicHistogramSnapshot","borrow","borrow","borrow_mut","borrow_mut","default","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","init","init","into","into","new","percentile","record_data_point","snapshot","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["forgeforge::Coffer","","","","","forge::HealthCheckError","","forge::ShouldFail","forge::SwarmDirectory","","forge::atomic_histogram","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","The testing interface which defines a test written from …","","","","","","","Trait used to represent a interface for constructing a …","","","","","Trait used to represent a running FullNode","","","","","","","","","","","","","","","","","The testing interface which defines a test written with …","","","Trait used to represent a running Validator or FullNode","","","","","","","","","The testing interface which defines a test written from …","","<code>Result&lt;T, Error&gt;</code>","","Whether a test is expected to fail or not","","Trait used to represent a running network comprised of …","","","","","Represents a Test in Forge","","","","","","","Trait used to represent a running Validator","A wrapper around a usize in order to represent an opaque …","","","","Adds a FullNode to the swarm with the provided PeerId","","","Adds a Validator to the swarm with the provided PeerId","","","","","","Return JSON-RPC client of this Node","Return JSON-RPC client of this Node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a ChainInfo from this Swarm","","","","","","","","","","Clears this Node’s Storage","","","","","","","","","","","","","","","","","","","","Return a reference to the Config this Node is using","","","","","","","","","","","","","","","","","","Return a NodeDebugClient for this Node","Return a NodeDebugClient for this Node","Return the URL for the debug-interface for this Node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Perform a safety check, ensuring that no forks have …","Perform a safety check, ensuring that no forks have …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the FullNode with the provided …","","","Returns a mutable reference to the FullNode with the …","","","Returns an Iterator of references to all the FullNodes in …","","","Returns an Iterator of mutable references to all the …","","","","","","","","","","","","","","","","","Query a Metric for from this Node","Query a Metric for from this Node","","","","","","","Performs a health check on the entire swarm, ensuring all …","Performs a Health Check on the Node","","","","","","","Indicates if the Test should be ignored","Indicates if the Test should be ignored","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return JSON-RPC client of this Node","Return JSON-RPC client of this Node","","","Return the URL for the JSON-RPC endpoint of this Node","","","","","","","","","","","","List all tests","","","","","","","","","","workflow of mint accounts:","Returns the name of the Test","Return the human readable name of this Node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the PeerId of this Node","","","","","","","","","","","Removes the FullNode with the provided PeerId","","","Removes the Validator with the provided PeerId","","","","","","","","","Return the URL for the REST API endpoint of this Node","","","","","Restarts this Node by calling Node::Stop followed by …","Restarts this Node by calling Node::Stop followed by …","","","","","","","Executes the test against the given context.","Executes the test against the given context.","Executes the test against the given context.","","","","","","","","Indicates if the Test should fail","Indicates if the Test should fail","Start this Node. This should be a noop if the Node is …","","","","","Stop this Node. This should be a noop if the Node isn’t …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Upgrade a Validator to run specified <code>Version</code>","","","","Returns a reference to the Validator with the provided …","","","","Returns a mutable reference to the Validator with the …","","","","Returns an Iterator of references to all the Validators in …","","","","Returns an Iterator of mutable references to all the …","","","","","","Return the version this node is running","","","","","","","Return a list of supported Versions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wait for all nodes in the network to be caught up. This is …","Wait for all nodes in the network to be caught up. This is …","Waits for all nodes to have caught up to the specified …","Waits for all nodes to have caught up to the specified …","Waits for the swarm to achieve connectivity","Waits for the swarm to achieve connectivity","","","","","","","","","","","","","","Create a LocalFactory with a diem-node version built at …","Create a LocalFactory with a diem-node version built at …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,0,0,5,3,0,6,2,0,0,0,0,0,5,0,0,0,0,0,6,2,0,0,1,0,0,0,5,0,0,4,4,7,8,9,10,8,9,10,10,11,6,12,12,0,13,14,15,1,16,11,17,18,19,20,9,21,7,22,23,24,4,25,5,26,27,28,2,3,29,6,10,13,30,31,32,33,34,35,36,14,15,1,16,11,17,18,19,20,9,21,7,22,23,24,4,25,5,26,27,28,2,3,29,6,10,13,30,31,32,33,34,35,36,18,10,15,26,10,9,26,8,9,24,10,37,37,38,38,28,0,39,20,29,15,24,4,27,3,13,30,31,4,27,3,13,30,31,27,32,33,39,20,29,29,29,14,15,24,40,15,1,26,0,40,15,1,26,0,12,12,39,20,29,29,11,7,23,2,31,32,33,35,14,15,1,16,11,17,18,19,20,9,21,7,22,23,24,4,25,5,26,27,28,2,3,29,6,6,10,13,30,31,32,33,34,35,36,14,15,1,16,11,17,18,19,20,9,21,7,22,23,24,4,25,5,26,27,28,2,3,29,6,10,13,30,31,32,33,34,35,36,26,26,18,10,14,15,1,16,11,17,18,19,20,9,21,21,7,22,23,24,4,25,5,26,27,28,2,3,29,6,10,10,13,30,31,32,33,34,35,36,34,4,27,2,3,4,27,2,3,35,36,0,32,33,7,7,20,24,4,25,5,5,26,27,27,28,2,2,3,29,6,10,13,30,32,33,34,35,35,36,0,41,41,14,15,1,16,11,17,18,19,20,9,21,7,22,23,24,4,25,5,26,27,28,2,3,29,6,10,13,30,31,32,33,34,35,36,28,28,19,25,34,2,19,8,9,10,8,9,10,8,9,10,8,9,10,10,10,40,15,1,26,7,0,17,12,12,4,27,29,12,12,12,12,34,34,4,27,8,39,20,9,29,29,10,30,42,42,14,15,1,16,11,17,18,19,20,9,21,7,22,23,24,4,25,5,26,27,28,2,3,29,6,10,13,30,31,32,33,34,35,36,17,18,14,15,1,16,11,17,18,19,20,9,21,7,22,23,24,4,25,5,26,27,28,2,3,29,6,10,13,30,31,32,33,34,35,36,6,26,26,12,12,26,7,39,20,29,26,32,33,32,10,43,19,21,17,28,41,41,12,12,29,8,9,10,36,34,42,39,20,29,29,30,4,27,14,15,16,11,17,18,19,9,21,23,24,25,26,27,29,13,34,35,19,19,0,11,18,33,27,39,20,29,29,6,29,35,0,15,24,32,8,9,10,8,9,10,14,15,24,35,35,35,39,20,29,15,26,12,12,15,24,25,34,26,26,44,45,46,17,0,23,35,36,0,0,42,42,39,20,29,29,34,39,20,29,29,34,32,33,14,18,36,35,36,7,4,27,3,13,30,31,5,27,2,35,15,26,15,26,26,14,15,1,16,11,17,18,19,20,9,21,7,22,23,24,4,25,5,26,27,28,2,3,29,6,10,13,30,30,31,32,33,34,35,36,14,15,1,16,11,17,18,19,20,9,21,7,22,23,24,4,25,5,26,27,28,2,3,29,6,10,13,30,31,32,33,34,35,36,14,15,1,16,11,17,18,19,20,9,21,7,22,23,24,4,25,5,26,27,28,2,3,29,6,10,13,30,31,32,33,34,35,36,0,29,8,9,10,15,8,9,10,10,8,9,10,10,8,9,10,10,8,9,10,10,36,2,39,20,29,13,20,20,43,8,19,9,21,10,14,15,1,16,11,17,18,19,20,9,21,7,22,23,24,4,25,5,26,27,28,2,3,29,6,10,13,30,31,32,33,34,35,36,31,41,41,41,41,41,41,37,37,38,38,31,12,12,11,11,11,11,11,19,19,19,7,47,48,48,48,48,49,50,51,52,53,0,0,54,55,54,55,54,55,54,55,54,55,54,55,55,54,55,54,55,54,55,54,55,54,54,54,55,54,55,54,55,54,55],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["version",3],["nodeconfig",3]],[["result",6,["peerid"]],["peerid",3]]],[[["version",3],["nodeconfig",3]],[["result",6,["peerid"]],["peerid",3]]],[[["version",3],["nodeconfig",3]],[["result",6,["peerid"]],["peerid",3]]],[[["version",3],["nodeconfig",3]],[["result",6,["peerid"]],["peerid",3]]],[[["version",3],["nodeconfig",3]],[["result",6,["peerid"]],["peerid",3]]],[[["version",3],["nodeconfig",3]],[["result",6,["peerid"]],["peerid",3]]],[[["version",3],["peerid",3],["nodeconfig",3]],[["result",6,["peerid"]],["peerid",3]]],[[]],[[],["path",3]],[[],["jsonrpcclient",3]],[[],["jsonrpcclient",3]],null,[[],["path",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["result",6,["localswarm"]],["localswarm",3]]],[[["arc",3,["hashmap"]],["hashmap",3,["version","localversion"]]],["localswarmbuilder",3]],[[],["chainid",3]],[[],["chainid",3]],[[],["chainid",3]],null,null,[[],["chaininfo",3]],[[],["chaininfo",3]],[[],["chaininfo",3]],[[],["chaininfo",3]],[[["usize",15]],[["result",6,["bool"]],["bool",15]]],[[["usize",15]],[["result",6,["bool"]],["bool",15]]],[[],[["result",6,["bool"]],["bool",15]]],[[],[["result",6,["bool"]],["bool",15]]],[[],["app",3]],[[["usize",15],["string",3],["bool",15]],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["blockingclient",3]],[[],["blockingclient",3]],[[],["shouldfail",4]],[[],["version",3]],[[],["initialversion",4]],[[],["localversion",3]],[[],["kubeservice",3]],[[],["emitthreadparams",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["version",3]],["ordering",4]],null,null,[[],["nodeconfig",3]],[[],["nodeconfig",3]],[[],["nodeconfig",3]],[[],["nodeconfig",3]],[[],["pathbuf",3]],[[],["corecontext",3]],[[],["corecontext",3]],[[],["corecontext",3]],[[["authenticationkey",3],["currency",4]],["result",6]],[[["authenticationkey",3]],["result",6]],[[["authenticationkey",3],["currency",4]],["result",6]],[[["authenticationkey",3],["currency",4]],["result",6]],[[]],[[["authenticationkey",3],["currency",4]],["result",6]],[[["authenticationkey",3]],["result",6]],[[["authenticationkey",3],["currency",4]],["result",6]],[[["authenticationkey",3],["currency",4]],["result",6]],[[["authenticationkey",3],["localaccount",3],["transactionfactory",3]],["signedtransaction",3]],[[],["nodedebugclient",3]],[[],["nodedebugclient",3]],[[],["url",3]],[[],["url",3]],[[],["url",3]],[[],["u16",15]],[[]],[[["jsonrpcclient",3],["u64",15],["vec",3,["jsonrpcclient"]]]],[[]],[[]],[[]],[[],["txnstats",3]],[[],["txnstatsrate",3]],[[],["testreport",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["localaccount",3]],null,[[["asref",8,["path"]],["path",3]]],[[],["path",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["emitjobrequest",3],["duration",3]]],[[["shouldfail",4]],["bool",15]],[[["version",3]],["bool",15]],[[["format",4]],["bool",15]],[[["initialversion",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["vec",3,["signedtransaction"]],["jsonrpcclient",3],["localaccount",3],["signedtransaction",3]]],null,null,[[["jsonrpcclient",3],["u64",15],["vec",3,["jsonrpcclient"]]]],[[["usize",15],["u64",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["options",3],["forgeconfig",3],["factory",8]],["result",6]],[[],["result",6]],[[],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["argmatches",3]]],[[["str",15]],["result",6]],[[["rngcore",8],["cryptorng",8]]],[[],["stdrng",3]],[[["str",15]],["result",4]],[[],["result",6]],[[["peerid",3]],[["fullnode",8],["option",4,["fullnode"]]]],[[["peerid",3]],[["fullnode",8],["option",4,["fullnode"]]]],[[["peerid",3]],[["fullnode",8],["option",4,["fullnode"]]]],[[["peerid",3]],[["fullnode",8],["option",4,["fullnode"]]]],[[["peerid",3]],[["fullnode",8],["option",4,["fullnode"]]]],[[["peerid",3]],[["fullnode",8],["option",4,["fullnode"]]]],[[],[["box",3,["iterator"]],["iterator",8]]],[[],[["box",3,["iterator"]],["iterator",8]]],[[],[["box",3,["iterator"]],["iterator",8]]],[[],[["iterator",8],["box",3,["iterator"]]]],[[],[["iterator",8],["box",3,["iterator"]]]],[[],[["iterator",8],["box",3,["iterator"]]]],[[["peerid",3]],[["option",4,["localnode"]],["localnode",3]]],[[["peerid",3]],[["option",4,["localnode"]],["localnode",3]]],[[["accountaddress",3],["currency",4],["u64",15]],["result",6]],[[["accountaddress",3],["u64",15]],["result",6]],[[["accountaddress",3],["currency",4],["u64",15]],["result",6]],[[["accountaddress",3],["currency",4],["u64",15]],["result",6]],null,[[["u64",15],["accountaddress",3],["transactionfactory",3],["localaccount",3]],["signedtransaction",3]],[[],["version",3]],[[["networkid",4],["str",15],["option",4,["str"]]],[["option",4,["i64"]],["result",6,["option"]]]],[[["networkid",4],["str",15],["option",4,["str"]]],[["option",4,["i64"]],["result",6,["option"]]]],[[],["u64",15]],[[],["u64",15]],[[],[["result",6,["string"]],["string",3]]],[[["str",15]],[["option",4,["i64"]],["result",6,["option"]]]],[[["str",15]],[["option",4,["i64"]],["result",6,["option"]]]],[[["str",15],["hashmap",3,["string","string"]],["string",3]],[["option",4,["i64"]],["result",6,["option"]]]],[[["str",15],["hashmap",3,["string","string"]],["string",3]],[["option",4,["i64"]],["result",6,["option"]]]],[[["u64",15]]],[[["usize",15]]],[[]],[[]],[[],["result",6]],[[],[["result",6,["healthcheckerror"]],["healthcheckerror",4]]],[[],[["result",6,["healthcheckerror"]],["healthcheckerror",4]]],[[],["result",6]],[[],[["result",6,["healthcheckerror"]],["healthcheckerror",4]]],[[],[["result",6,["healthcheckerror"]],["healthcheckerror",4]]],[[],["result",6]],null,[[],["bool",15]],[[],["bool",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["version",3]],[[["version",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["publicinfo",3]],[[],["str",15]],[[],["blockingclient",3]],[[],["blockingclient",3]],[[],["blockingclient",3]],null,[[],["url",3]],[[],["url",3]],[[],["url",3]],null,null,null,null,[[],["result",6]],[[["stdrng",3],["version",3],["nonzerousize",3]],[["result",6,["box"]],["box",3,["swarm"]]]],[[["stdrng",3],["version",3],["nonzerousize",3]],[["result",6,["box"]],["box",3,["swarm"]]]],[[["stdrng",3],["version",3],["nonzerousize",3]],[["result",6,["box"]],["box",3,["swarm"]]]],[[],["result",6]],null,[[["instant",3]],["result",6]],[[["instant",3]],["result",6]],[[["u64",15]],["result",6]],[[["u64",15]],["result",6]],[[],["pathbuf",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],null,[[["emitjobrequest",3],["usize",15]]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],null,[[["shouldfail",4]],["bool",15]],[[["version",3]],["bool",15]],[[["swarm",8],["testreport",3],["corecontext",3]]],[[["publicinfo",3],["testreport",3],["corecontext",3]]],[[["coffer",4],["string",3],["chainid",3]]],[[]],[[["forgeconfig",3],["options",3]]],[[["arc",3,["hashmap"]],["hashmap",3,["version","localversion"]]]],[[["version",3],["hashmap",3,["version","localversion"]],["localversion",3]]],[[["str",15]]],[[["string",3]],[["k8sfactory",3],["result",6,["k8sfactory"]]]],[[]],[[["chaininfo",3],["testreport",3],["corecontext",3]]],[[["stdrng",3]]],[[["localaccount",3],["string",3],["chainid",3]]],[[["usize",15],["string",3]]],[[["pathbuf",3],["localversion",3],["string",3]],["result",6]],[[["pathbuf",3],["version",3],["string",3]]],[[["chaininfo",3],["stdrng",3]]],[[]],[[["nonzerousize",3]],[["result",6,["localswarm"]],["localswarm",3]]],[[["version",3],["nonzerousize",3]],[["result",6,["localswarm"]],["localswarm",3]]],[[["box",3,["iterator"]],["iterator",8]],[["result",6,["vec"]],["vec",3,["string"]]]],[[],["usize",15]],[[["nonzerousize",3]]],null,[[["version",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["peerid",3]],[[],["peerid",3]],[[],["peerid",3]],[[],["peerid",3]],[[]],[[],["u16",15]],[[]],[[["jsonrpcclient",3]]],[[],["localaccount",3]],[[],["localaccount",3]],[[["duration",3]],["txnstatsrate",3]],[[["peerid",3]],["result",6]],[[["peerid",3]],["result",6]],[[["peerid",3]],["result",6]],[[["peerid",3]],["result",6]],[[["peerid",3]],["result",6]],[[["peerid",3]],["result",6]],null,null,null,[[["tostring",8],["f64",15]]],[[["string",3]]],[[["txnstats",3],["string",3],["duration",3]]],[[],["url",3]],[[],["url",3]],[[],["url",3]],[[],["str",15]],null,[[],["result",6]],[[],["result",6]],[[],["stdrng",3]],[[],["stdrng",3]],[[],["stdrng",3]],[[],["stdrng",3]],[[],["localaccount",3]],null,[[["admincontext",3]],["result",6]],[[["networkcontext",3]],["result",6]],[[["publicusagecontext",3]],["result",6]],[[],[["testreport",3],["result",6,["testreport"]]]],[[["u64",15],["str",15]],["result",6]],[[["url",3],["str",15]],["result",6]],[[],["result",4]],[[],["result",4]],[[["usize",15],["string",3],["bool",15]],["result",6]],[[["str",15]],["result",6]],[[],["shouldfail",4]],[[],["shouldfail",4]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[["emitjobrequest",3]]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[]],[[["emitjob",3]]],null,null,[[],["swarm",8]],[[["nodeconfig",3]]],null,[[],["hashvalue",3]],[[],["hashvalue",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["transactionfactory",3]],[[],["transactionfactory",3]],[[["u64",15],["currency",4],["accountaddress",3],["localaccount",3]],["result",6]],[[],["localaccount",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["service",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",6]],[[["localversion",3]],["result",6]],[[["peerid",3],["version",3]],["result",6]],[[["peerid",3],["version",3]],["result",6]],[[["peerid",3],["version",3]],["result",6]],[[],["str",15]],[[["peerid",3]],[["option",4,["validator"]],["validator",8]]],[[["peerid",3]],[["option",4,["validator"]],["validator",8]]],[[["peerid",3]],[["option",4,["validator"]],["validator",8]]],[[["peerid",3]],[["option",4,["localnode"]],["localnode",3]]],[[["peerid",3]],[["option",4,["validator"]],["validator",8]]],[[["peerid",3]],[["option",4,["validator"]],["validator",8]]],[[["peerid",3]],[["option",4,["validator"]],["validator",8]]],[[["peerid",3]],[["option",4,["localnode"]],["localnode",3]]],[[],[["box",3,["iterator"]],["iterator",8]]],[[],[["box",3,["iterator"]],["iterator",8]]],[[],[["box",3,["iterator"]],["iterator",8]]],[[]],[[],[["box",3,["iterator"]],["iterator",8]]],[[],[["box",3,["iterator"]],["iterator",8]]],[[],[["box",3,["iterator"]],["iterator",8]]],[[]],null,[[]],[[],["version",3]],[[],["version",3]],[[],["version",3]],[[],["version",3]],null,null,[[],[["box",3,["iterator"]],["iterator",8]]],[[],[["box",3,["iterator"]],["iterator",8]]],[[],[["box",3,["iterator"]],["iterator",8]]],[[],[["box",3,["iterator"]],["iterator",8]]],[[],[["box",3,["iterator"]],["iterator",8]]],[[],[["box",3,["iterator"]],["iterator",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["instant",3]],["result",6]],[[["instant",3]],["result",6]],[[["u64",15],["instant",3]],["result",6]],[[["u64",15],["instant",3]],["result",6]],[[["instant",3]],["result",6]],[[["instant",3]],["result",6]],[[["usize",15],["instant",3]],["result",6]],[[["usize",15],["instant",3]],["result",6]],[[["instant",3]],["result",6]],[[["instant",3]],["result",6]],null,[[["instant",3]],["result",6]],[[["instant",3]],["result",6]],[[]],[[["nonzerousize",3]]],[[["initialversion",4]]],[[]],[[]],[[["str",15]],["result",6]],[[],["result",6]],[[],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["atomichistogramaccumulator",3]],[[],["atomichistogramsnapshot",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["usize",15],["u64",15]],["atomichistogramaccumulator",3]],[[["u64",15]],["u64",15]],[[["u64",15]]],[[],["atomichistogramsnapshot",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]]],"p":[[4,"Coffer"],[4,"Format"],[4,"InitialVersion"],[4,"ShouldFail"],[4,"HealthCheckError"],[4,"SwarmDirectory"],[3,"EmitJobRequest"],[8,"Swarm"],[3,"K8sSwarm"],[3,"LocalSwarm"],[3,"ForgeConfig"],[8,"NodeExt"],[3,"LocalVersion"],[3,"NetworkContext"],[3,"PublicUsageContext"],[3,"PublicInfo"],[3,"Forge"],[3,"LocalSwarmBuilder"],[3,"LocalFactory"],[3,"K8sNode"],[3,"K8sFactory"],[3,"EmitJob"],[3,"SlackClient"],[3,"AdminContext"],[3,"CoreContext"],[3,"ChainInfo"],[3,"Version"],[3,"Options"],[3,"LocalNode"],[3,"KubeService"],[3,"EmitThreadParams"],[3,"TxnStats"],[3,"TxnStatsRate"],[3,"TxnEmitter"],[3,"TestReport"],[3,"ReportedMetric"],[8,"Validator"],[8,"FullNode"],[8,"Node"],[8,"Fund"],[8,"SwarmExt"],[8,"Test"],[8,"Factory"],[8,"AdminTest"],[8,"NetworkTest"],[8,"PublicUsageTest"],[13,"Faucet"],[13,"TreasuryCompliance"],[13,"RpcFailure"],[13,"Unknown"],[13,"YesWithMessage"],[13,"Persistent"],[13,"Temporary"],[3,"AtomicHistogramAccumulator"],[3,"AtomicHistogramSnapshot"]]},\
"forge_cli":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"framework_releases":{"doc":"","t":[13,13,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["DPN","Experimental","Release","ReleaseFetcher","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","current","eq","equivalent","error_descriptions","fmt","fmt","from","from","into","into","list_releases","module_blobs","modules","new","package","partial_cmp","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["framework_releases","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","Fetch the current release of the given <code>Release</code>","","","","","","","","","","","Load the serialized modules from the specified release.","Load the modules for the specified release. Returned in …","Create a new release fetcher for the given <code>Release</code> and …","Load the serialized modules from the specified release.","","","","","","","","","","","",""],"i":[1,1,0,0,1,2,1,2,1,2,1,2,1,2,1,1,2,1,2,1,2,1,2,2,2,2,2,2,1,1,2,1,1,2,1,2,1,2,1,2],"f":[null,null,null,null,[[]],[[]],[[]],[[]],[[],["release",4]],[[],["releasefetcher",3]],[[]],[[]],[[["release",4]],["ordering",4]],[[["release",4]]],[[["release",4]],["bool",15]],[[],["bool",15]],[[],[["result",6,["vec"]],["vec",3,["u8"]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["release",4]],[["vec",3,["string"]],["string",3]]],[[],[["vec",3,["vec"]],["result",6,["vec"]]]],[[],[["result",6,["vec"]],["vec",3,["compiledmodule"]]]],[[["release",4],["str",15]]],[[],[["result",6,["compiledpackage"]],["compiledpackage",3]]],[[["release",4]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[]],[[],["str",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]]],"p":[[4,"Release"],[3,"ReleaseFetcher"]]},\
"functional_tests":{"doc":"","t":[0,0,0,0,0,0,0,0,0,0,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,3,4,3,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,8,13,13,4,11,11,10,11,11,11,11,11,11,11,11,11,10,11,12,12,12,0,0,0,13,13,4,4,13,13,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,12,12,12,12,3,13,13,3,3,4,4,13,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,13,4,13,3,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,5,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,3,4,13,6,13,13,14,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,13,4,13,13,13,13,13,3,4,13,13,4,13,13,13,4,13,4,13,13,3,13,13,6,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,13,4,3,13,11,11,11,11,5,12,11,11,11,11,11,11,5,11,11,11,11,11,11,5,5,12,11,11,11,11,11,11,11,11,12,12,5],"n":["checker","common","compiler","config","errors","evaluator","preprocessor","testsuite","directives","matcher","Check","Directive","Not","as_ref","borrow","borrow_mut","deref","deref_mut","drop","eq","equivalent","fmt","from","init","into","is_negative","is_positive","ne","parse_line","pattern_str","try_from","try_into","type_id","vzip","0","0","Failure","Match","MatchError","MatchResult","MatchStatus","NegativeMatch","Success","UnmatchedDirectives","UnmatchedErrors","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","end","entry_id","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","is_failure","is_failure","is_success","is_success","match_output","matches","pat_id","start","status","text","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","0","0","0","0","LineSp","Sp","as_bits","as_bits","as_inner","as_inner","as_ref","as_ref","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","end","end","fmt","fmt","from","from","init","init","inner","inner","into","into","into_inner","into_line_sp","line","map","map","new","new","start","start","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Compiler","Module","Script","ScriptOrModule","borrow","borrow_mut","compile","deref","deref_mut","drop","from","init","into","try_from","try_into","type_id","use_compiled_genesis","vzip","0","0","1","block_metadata","global","transaction","Account","Address","Entry","Proposer","Proposer","Timestamp","borrow","borrow","borrow_mut","borrow_mut","build_block_metadata","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_str","init","init","into","into","is_new_block","try_from","try_from","try_into","try_into","try_parse","type_id","type_id","vzip","vzip","0","0","0","0","AccountDefinition","AccountDefinition","Address","Balance","Config","Entry","Role","Validator","account_type_specifier","accounts","addresses","amount","balance","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","currency_code","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","exp_mode","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","from_str","from_str","genesis_accounts","get_account_for_name","init","init","init","init","init","into","into","into","into","into","is_address","is_validator","name","role","sequence_number","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","validator_accounts","vzip","vzip","vzip","vzip","vzip","0","AddressOf","Argument","Arguments","Config","DisableStages","Entry","ExecuteAs","ExpirationTime","GasCurrencyCode","GasPrice","MaxGas","SecondarySigners","SelfContained","Sender","SequenceNumber","ShowEvents","ShowGas","ShowWriteSet","TypeArguments","args","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","deref","deref","deref","deref_mut","deref_mut","deref_mut","disabled_stages","drop","drop","drop","execute_as","expiration_timestamp_secs","fmt","fmt","fmt","from","from","from","from_str","gas_currency_code","gas_price","init","init","init","into","into","into","is_new_transaction","is_stage_disabled","max_gas","secondary_signers","sender","sequence_number","show_events","show_gas","show_writeset","try_from","try_from","try_from","try_into","try_into","try_into","try_parse","ty_args","type_id","type_id","type_id","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","CheckerFailure","DiscardedTransaction","Error","ErrorKind","Other","Result","VMExecutionFailure","VerificationError","anyhow","as_ref","as_ref","backtrace","bail","borrow","borrow","borrow_mut","borrow_mut","chain","clone","clone_into","context","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast_mut","downcast_ref","drop","drop","drop","fmt","fmt","fmt","fmt","format_err","from","from","from","from","init","init","into","into","is","msg","new","root_cause","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","0","0","1","BlockMetadata","Command","CompiledModule","CompiledScript","Compiler","CompilerLog","Error","EvaluationLog","EvaluationOutput","Failure","Output","OutputType","PlainMessage","Runtime","Serializer","Stage","Stage","Status","Status","Success","Transaction","Transaction","Transaction","TransactionId","TransactionOutput","Verifier","append","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","config","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","eval","eval_block_metadata","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_str","get_failed_transactions","init","init","init","init","init","init","init","input","into","into","into","into","into","into","into","is_error","new","outputs","partial_cmp","to_check_string","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string_for_matching","to_text_for_matching","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify_module","verify_script","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","BlockMetadata","RawCommand","RawTransactionInput","Transaction","borrow","borrow","borrow_mut","borrow_mut","build_transactions","config_entries","deref","deref","deref_mut","deref_mut","drop","drop","extract_global_config","from","from","init","init","into","into","split_input","substitute_addresses_and_auth_keys","text","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","functional_tests"],"q":["functional_tests","","","","","","","","functional_tests::checker","","functional_tests::checker::directives","","","","","","","","","","","","","","","","","","","","","","","","functional_tests::checker::directives::Directive","","functional_tests::checker::matcher","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","functional_tests::checker::matcher::MatchError","","","functional_tests::checker::matcher::MatchStatus","functional_tests::common","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","functional_tests::compiler","","","","","","","","","","","","","","","","","","functional_tests::compiler::ScriptOrModule","","","functional_tests::config","","","functional_tests::config::block_metadata","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","functional_tests::config::block_metadata::Entry","","functional_tests::config::block_metadata::Proposer","","functional_tests::config::global","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","functional_tests::config::global::Entry","functional_tests::config::transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","functional_tests::config::transaction::Argument","","functional_tests::config::transaction::Entry","","","","","","","","","","","","","","functional_tests::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","functional_tests::errors::ErrorKind","","","","","functional_tests::evaluator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","functional_tests::evaluator::Command","","functional_tests::evaluator::EvaluationOutput","","","","","","functional_tests::evaluator::OutputType","","","","functional_tests::preprocessor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","functional_tests::preprocessor::RawCommand","","functional_tests::testsuite"],"d":["","","","","","","","","","This module implements a matcher that checks if an …","","Specification of an expected text pattern in the output.","","","","","","","","","","","","","","Returns if the directive is a negative pattern.","Returns if the directive is a positive pattern.","","Parses the line and extracts one or more directives from …","Returns the pattern of the directive.","","","","","","","","A single match consisting of the index of the log entry, …","A match error.","The result of matching the directives against the …","The status of a match. Can be either success or failure …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Matches the directives against the evaluation log.","","","","","","","","","","","","","","","","","","","","","","","","","","Wrapper of an inner object with line, start and end source …","Wrapper of an inner object with start and end source …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compile a transaction script or module.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks whether a line denotes the start of a new …","","","","","","","","","","","","","","Struct that specifies the initial setup of an account.","Defines an account that can be used in tests.","Means that this this is only an account address (with …","","A table of options either shared by all transactions or …","A raw entry extracted from the input. Used to build the …","","Means that the account is a current validator; its address …","Specifier on what type of account this is. Default is VASP.","A map from account names to account data","","","The initial balance of the account.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Name of the account. The name is case insensitive.","Special role this account has in the system (if any)","The initial sequence number of the account.","","","","","","","","","","","","","","","","","The validator set after genesis","","","","","","","","A partially parsed transaction argument.","","A table of options specific to one transaction, fine …","","A raw entry extracted from the input. Used to build a …","","","","","","","","","","","","","","","","","","","","","Builds a transaction config table from raw entries.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks whether a line denotes the start of a new …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Error</code> type, a wrapper around a dynamic error type.","Defines all errors in this crate.","","<code>Result&lt;T, Error&gt;</code>","","","Construct an ad-hoc error from a string or existing non-…","","","Get the backtrace for this Error.","Return early with an error.","","","","","An iterator of the chain of source errors contained by …","","","Wrap the error value with additional context.","","","","","","","Attempt to downcast the error object to a concrete type.","Downcast this error object by mutable reference.","Downcast this error object by reference.","","","","","","","","Construct an ad-hoc error from a string or existing non-…","","","","","","","","","Returns true if <code>E</code> is the type held by this error object.","Create a new error object from a printable error message.","Create a new error object from any error type.","The lowest level cause of this error — this error’s …","","","","","","","","","","","","","","","","","","Commands that drives the operation of DiemVM. Such as:","","","","","","A log consisting of outputs from all stages and the final …","An entry in the <code>EvaluationLog</code>.","","","","","","","Indicates one step in the pipeline the given Move …","","Evaluation status: success or failure.","","","A transaction to be evaluated by the testing infra. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Feeds all given transactions through the pipeline and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verify a module with its dependencies.","Verify a script with its dependencies.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parses the input string into three parts: a global config, …","Substitutes the placeholders (account names in double …","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,4,0,0,0,0,5,4,5,5,6,5,4,7,6,5,4,7,6,5,4,7,6,5,4,7,6,5,4,7,6,6,6,5,4,7,6,5,4,7,6,5,4,7,6,5,4,7,4,7,4,7,0,7,6,6,7,7,6,5,4,7,6,5,4,7,6,5,4,7,6,5,4,7,8,9,10,11,0,0,12,13,12,13,12,13,12,13,12,13,12,13,12,13,12,13,12,13,12,13,12,13,12,13,12,13,12,13,12,13,12,13,12,12,13,12,13,12,13,12,13,12,13,12,13,12,13,12,13,0,14,14,0,14,14,15,14,14,14,14,14,14,14,14,14,15,14,16,17,16,0,0,0,18,18,0,0,19,19,18,19,18,19,0,18,19,18,19,18,19,18,19,18,19,19,18,19,18,19,0,18,19,18,19,19,18,19,18,19,20,21,22,23,0,24,25,0,0,0,0,25,26,27,27,28,26,25,28,26,24,27,25,28,26,24,27,27,28,28,28,25,28,26,24,27,25,28,26,24,27,25,28,26,24,27,27,25,28,26,24,27,25,28,26,24,27,25,28,24,27,27,25,28,26,24,27,25,28,26,24,27,24,24,26,26,26,28,25,28,26,24,27,25,28,26,24,27,25,28,26,24,27,27,25,28,26,24,27,29,30,0,31,0,31,0,31,31,31,31,31,31,30,31,31,31,31,31,31,32,30,31,32,30,31,32,32,30,31,32,30,31,32,32,30,31,32,32,32,30,31,32,30,31,32,31,32,32,30,31,32,30,31,32,0,32,32,32,32,32,32,32,32,30,31,32,30,31,32,31,32,30,31,32,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,49,0,0,49,0,49,49,0,50,50,50,0,49,50,49,50,50,49,49,50,49,50,50,49,50,50,50,50,50,49,50,50,49,49,50,50,0,49,50,50,50,49,50,49,50,50,50,50,50,49,49,50,49,50,49,50,49,50,49,50,51,52,53,54,51,55,0,56,56,57,56,58,0,0,59,58,0,58,57,57,0,58,0,58,59,0,55,58,0,56,57,60,61,55,57,59,56,58,60,61,55,57,59,56,58,60,57,59,56,57,59,56,57,61,60,61,55,57,59,56,58,60,61,55,57,59,56,58,60,61,55,57,59,56,58,60,57,59,57,59,0,0,61,55,57,59,56,56,58,58,60,60,61,55,57,59,56,58,60,57,60,61,55,57,59,56,58,60,61,61,55,57,59,56,58,60,58,60,60,57,56,57,59,56,56,58,60,58,60,61,55,57,59,56,58,60,61,55,57,59,56,58,60,61,55,57,59,56,58,60,0,0,61,55,57,59,56,58,60,62,63,64,65,66,67,68,69,70,71,72,73,74,0,0,74,75,74,75,74,0,75,75,74,75,74,75,74,0,75,74,75,74,75,74,0,0,75,75,74,75,74,75,74,75,74,76,77,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["directive",4]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["directive",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[],["bool",15]],[[],["bool",15]],[[["directive",4]],["bool",15]],[[["str",15]],[["result",6,["vec"]],["vec",3,["sp"]]]],[[],["str",15]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["evaluationlog",3]],["matchresult",3]],null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[],["bitslice",3]],[[],["bitslice",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],null,null,[[]],[[]],[[]],[[["usize",15]],["linesp",3]],null,[[],["sp",3]],[[],["linesp",3]],[[["usize",15]]],[[["usize",15]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,[[]],[[]],[[["str",15],["fnmut",8]],[["scriptormodule",4],["result",6,["scriptormodule"]]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[["globalconfig",3]],[["blockmetadata",3],["result",6,["blockmetadata"]]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["str",15]],["result",6]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["str",15]],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],[["option",4],["result",6,["option"]]]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bool",15]],["result",6]],[[],["balance",3]],[[]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["result",6]],[[["str",15]],["result",6]],[[["str",15]],["result",6]],null,[[["str",15]],[["account",3],["result",6,["account"]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["globalconfig",3]],["result",6]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["str",15]],["result",6]],null,null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[["str",15]],["bool",15]],[[["stage",4]],["bool",15]],null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],[["option",4],["result",6,["option"]]]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["error",8]],[[],["error",8]],[[],["backtrace",3]],null,[[]],[[]],[[]],[[]],[[],["chain",3]],[[],["errorkind",4]],[[]],[[],["error",3]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[["usize",15]]],[[]],[[],[["result",4,["error"]],["error",3]]],[[],["option",4]],[[],["option",4]],[[["usize",15]]],[[]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],null,[[]],[[],["error",3]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["bool",15]],[[],["error",3]],[[],["error",3]],[[],["error",8]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["evaluationoutput",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["stage",4]],[[],["status",4]],[[],["outputtype",4]],[[]],[[]],[[]],[[["stage",4]],["ordering",4]],null,[[],["evaluationlog",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["stage",4]],["bool",15]],[[["status",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["compiler",8],["globalconfig",3]],[["result",6,["evaluationlog"]],["evaluationlog",3]]],[[["evaluationlog",3],["fakeexecutor",3],["blockmetadata",3]],[["result",6,["status"]],["status",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["result",6]],[[],["vec",3]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[]],null,[[["stage",4]],[["option",4,["ordering"]],["ordering",4]]],[[],["string",3]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],[["string",3],["vec",3,["string"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["compiledmodule",3],["fakedatastore",3]],[["compiledmodule",3],["result",4,["compiledmodule","vmerror"]],["vmerror",3]]],[[["fakedatastore",3],["compiledscript",3]],[["vmerror",3],["result",4,["compiledscript","vmerror"]],["compiledscript",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[["globalconfig",3]],[["vec",3,["command"]],["result",6,["vec"]]]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["bool",15]],[["result",6,["globalconfig"]],["globalconfig",3]]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["globalconfig",3]],["result",6]],[[["str",15],["globalconfig",3]],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,[[["compiler",8],["path",3]],["result",6]]],"p":[[4,"Directive"],[13,"Check"],[13,"Not"],[4,"MatchStatus"],[4,"MatchError"],[3,"Match"],[3,"MatchResult"],[13,"NegativeMatch"],[13,"UnmatchedDirectives"],[13,"UnmatchedErrors"],[13,"Failure"],[3,"Sp"],[3,"LineSp"],[4,"ScriptOrModule"],[8,"Compiler"],[13,"Script"],[13,"Module"],[4,"Proposer"],[4,"Entry"],[13,"Proposer"],[13,"Timestamp"],[13,"Account"],[13,"Address"],[4,"Entry"],[4,"Role"],[3,"AccountDefinition"],[3,"Config"],[3,"Balance"],[13,"AccountDefinition"],[4,"Argument"],[4,"Entry"],[3,"Config"],[13,"AddressOf"],[13,"SelfContained"],[13,"DisableStages"],[13,"Sender"],[13,"SecondarySigners"],[13,"TypeArguments"],[13,"Arguments"],[13,"MaxGas"],[13,"GasPrice"],[13,"GasCurrencyCode"],[13,"SequenceNumber"],[13,"ExpirationTime"],[13,"ExecuteAs"],[13,"ShowGas"],[13,"ShowWriteSet"],[13,"ShowEvents"],[4,"ErrorKind"],[3,"Error"],[13,"VMExecutionFailure"],[13,"DiscardedTransaction"],[13,"VerificationError"],[13,"Other"],[4,"Command"],[4,"OutputType"],[4,"Stage"],[4,"EvaluationOutput"],[4,"Status"],[3,"EvaluationLog"],[3,"Transaction"],[13,"Transaction"],[13,"BlockMetadata"],[13,"Transaction"],[13,"Stage"],[13,"Output"],[13,"Error"],[13,"Status"],[13,"PlainMessage"],[13,"CompiledModule"],[13,"CompiledScript"],[13,"CompilerLog"],[13,"TransactionOutput"],[4,"RawCommand"],[3,"RawTransactionInput"],[13,"Transaction"],[13,"BlockMetadata"]]},\
"generate_format":{"doc":"How and where to record the Serde format of interesting …","t":[13,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11],"n":["Consensus","Corpus","Diem","MoveABI","Network","borrow","borrow_mut","clap","clone","clone_into","deref","deref_mut","drop","fmt","fmt","from","from_clap","from_str","get_registry","init","into","lint_bcs_format","output_file","to_owned","to_string","try_from","try_into","type_id","values","variants","vzip"],"q":["generate_format","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","A corpus of Rust types to trace, and optionally record on …","","","","","","","","","","","","","","","","","Compute the registry of formats.","","","Verify that a Serde format is compatible with BCS and …","Where to record this corpus on disk.","","","","","","All corpuses.","",""],"i":[1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1],"f":[null,null,null,null,null,[[]],[[]],[[],["app",3]],[[],["corpus",4]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["argmatches",3]]],[[["str",15]],["result",4]],[[],["registry",6]],[[],["usize",15]],[[]],[[["containerformat",4]],["result",6]],[[],[["str",15],["option",4,["str"]]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],[["corpus",4],["vec",3,["corpus"]]]],[[]],[[]]],"p":[[4,"Corpus"]]},\
"generate_key":{"doc":"","t":[5,5,5,5],"n":["generate_and_save_key","generate_key","load_key","save_key"],"q":["generate_key","","",""],"d":["","","",""],"i":[0,0,0,0],"f":[[[["asref",8,["path"]],["path",3]],["ed25519privatekey",3]],[[],["ed25519privatekey",3]],[[["asref",8,["path"]],["path",3]],["ed25519privatekey",3]],[[["asref",8,["path"]],["ed25519privatekey",3],["path",3]],["ed25519privatekey",3]]],"p":[]},\
"invalid_mutations":{"doc":"","t":[0,0,3,3,3,13,13,3,4,13,7,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["bounds","signature","ApplyCodeUnitBoundsContext","ApplyOutOfBoundsContext","CodeUnitBoundsMutation","One","Optional","OutOfBoundsMutation","PointerKind","Star","VALID_POINTER_SRCS","apply","apply","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","eq","fmt","fmt","fmt","from","from","from","from","from","hash","into","into","into","into","into","ne","new","new","pointers_from","strategy","strategy","to_index_kind","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","0","0","0","FieldRefMutation","SignatureRefMutation","apply","apply","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","new","new","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["invalid_mutations","","invalid_mutations::bounds","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","invalid_mutations::bounds::PointerKind","","","invalid_mutations::signature","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","Represents a single mutation onto a code unit to make it …","Exactly one pointer out with this index kind as its …","Zero or one pointer out with this index kind as its …","Represents a single mutation to a <code>CompiledModule</code> to …","Represents the number of pointers that exist out from a …","Zero or more pointers out with this index kind as its …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A list of what pointers (indexes) exist out from a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Context for applying a list of <code>FieldRefMutation</code> instances.","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,1,1,0,0,1,0,2,3,4,5,2,3,4,1,5,2,3,4,1,5,1,1,1,4,1,5,2,3,4,1,5,1,2,3,4,1,5,1,2,3,1,4,5,1,1,2,3,4,1,5,2,3,4,1,5,2,3,4,1,5,2,3,4,1,5,6,7,8,0,0,9,10,9,10,9,10,9,10,9,10,9,10,9,10,9,10,9,10,9,10],"f":[null,null,null,null,null,null,null,null,null,null,null,[[],[["vec",3,["partialvmerror"]],["partialvmerror",3]]],[[]],[[],["propindex",3]],[[],["propindex",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["pointerkind",4]],[[]],[[["pointerkind",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["pointerkind",4]],["bool",15]],[[["compiledmodule",3],["vec",3,["codeunitboundsmutation"]],["codeunitboundsmutation",3]]],[[["outofboundsmutation",3],["compiledmodule",3],["vec",3,["outofboundsmutation"]]]],[[["indexkind",4]]],[[]],[[]],[[],["indexkind",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["compiledmodule",3],["vec",3]]],[[["compiledmodule",3],["vec",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]]],"p":[[4,"PointerKind"],[3,"ApplyCodeUnitBoundsContext"],[3,"ApplyOutOfBoundsContext"],[3,"CodeUnitBoundsMutation"],[3,"OutOfBoundsMutation"],[13,"One"],[13,"Optional"],[13,"Star"],[3,"SignatureRefMutation"],[3,"FieldRefMutation"]]},\
"ir_to_bytecode":{"doc":"","t":[0,0,5,5,5,5,5],"n":["compiler","parser","compile_module","compile_script","parse_module","parse_script","parse_script_or_module"],"q":["ir_to_bytecode","","ir_to_bytecode::compiler","","ir_to_bytecode::parser","",""],"d":["","","Compile a module.","Compile a transaction script.","Given the raw input of a file, creates a single …","Given the raw input of a file, creates a <code>Script</code> struct …","Given the raw input of a file, creates a <code>ScriptOrModule</code> …"],"i":[0,0,0,0,0,0,0],"f":[null,null,[[["moduledefinition",3]],["result",6]],[[["script",3]],["result",6]],[[["str",15]],[["result",6,["moduledefinition"]],["moduledefinition",3]]],[[["str",15]],[["script",3],["result",6,["script"]]]],[[["str",15]],[["result",6,["scriptormodule"]],["scriptormodule",4]]]],"p":[]},\
"ir_to_bytecode_syntax":{"doc":"Grammar","t":[0,13,4,13,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,12,12,12],"n":["syntax","InvalidToken","ParseError","User","borrow","borrow_mut","clone","clone_into","cmp","eq","fmt","fmt","from","into","ne","parse_module_string","parse_script_or_module_string","parse_script_string","partial_cmp","to_owned","to_string","try_from","try_into","type_id","vzip","error","location","location"],"q":["ir_to_bytecode_syntax","ir_to_bytecode_syntax::syntax","","","","","","","","","","","","","","","","","","","","","","","","ir_to_bytecode_syntax::syntax::ParseError","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,2,3,2],"f":[null,null,null,null,[[]],[[]],[[],["parseerror",4]],[[]],[[["parseerror",4]],["ordering",4]],[[["parseerror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["parseerror",4]],["bool",15]],[[["str",15]],[["moduledefinition",3],["parseerror",4,["loc","error"]],["result",4,["moduledefinition","parseerror"]]]],[[["str",15]],[["parseerror",4,["loc","error"]],["scriptormodule",4],["result",4,["scriptormodule","parseerror"]]]],[[["str",15]],[["result",4,["script","parseerror"]],["parseerror",4,["loc","error"]],["script",3]]],[[["parseerror",4]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null],"p":[[4,"ParseError"],[13,"User"],[13,"InvalidToken"]]},\
"jsonrpc_integration_tests":{"doc":"","tn":["AccoutNotFound","AddAndRemoveVaspDomain","BlockMetadata","CancleBurnEvent","ChildVaspAccountRole","CreateAccountEvent","CurrencyInfo","DesignatedDealerPreburns","ExpiredTransaction","GetAccountByVersion","GetAccountTransactionsWithProofs","GetAccountTransactionsWithoutEvents","GetAccumulatorConsistencyProof","GetEventByVersionWithProofTest","GetEventsWithProofs","GetResourcesTest","GetTransactionsWithProofs","GetTransactionsWithoutEvents","GetTreasuryComplianceAccount","MempoolValidationError","MintAndReceivedMintEvents","MultiAgentPaymentOverDualAttestationLimit","MultiAgentRotateAuthenticationKeyAdminScript","MultiAgentRotateAuthenticationKeyAdminScriptFunction","NoUnknownEvents","OldMetadata","ParentVaspAccountRole","PeerToPeerErrorExplination","PeerToPeerWithEvents","PreburnAndBurnEvents","ReSubmittingTransactionWontFail","RotateComplianceKeyEvent","UnknownAccountRoleType","UpdateExchangeRateEvent","UpgradeDiemVersion","UpgradeEventAndNewEpoch","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","run","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["jsonrpc_integration_testsd":["","","","","","","","","","","","","","","","","","","","","","","","","","Get Metadata with older version parameter should not …i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[["publicusagecontext",3]],["result",6]],[[["publicusagecontext",3]],["result",6]],[[["publicusagecontext",3]],["result",6]],[[["publicusagecontext",3]],["result",6]],[[["publicusagecontext",3]],["result",6]],[[["publicusagecontext",3]],["result",6]],[[["publicusagecontext",3]],["result",6]],[[["publicusagecontext",3]],["result",6]],[[["publicusagecontext",3]],["result",6]],[[["publicusagecontext",3]],["result",6]],[[["publicusagecontext",3]],["result",6]],[[["publicusagecontext",3]],["result",6]],[[["publicusagecontext",3]],["result",6]],[[["publicusagecontext",3]],["result",6]],[[["admincontext",3]],["result",6]],[[["admincontext",3]],["result",6]],[[["admincontext",3]],["result",6]],[[["admincontext",3]],["result",6]],[[["publicusagecontext",3]],["result",6]],[[["publicusagecontext",3]],["result",6]],[[["publicusagecontext",3]],["result",6]],[[["publicusagecontext",3]],["result",6]],[[["publicusagecontext",3]],["result",6]],[[["publicusagecontext",3]],["result",6]],[[["admincontext",3]],["result",6]],[[["publicusagecontext",3]],["result",6]],[[["publicusagecontext",3]],["result",6]],[[["publicusagecontext",3]],["result",6]],[[["publicusagecontext",3]],["result",6]],[[["publicusagecontext",3]],["result",6]],[[["admincontext",3]],["result",6]],[[["admincontext",3]],["result",6]],[[["publicusagecontext",3]],["result",6]],[[["publicusagecontext",3]],["result",6]],[[["admincontext",3]],["result",6]],[[["admincontext",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"CurrencyInfo"],[3,"BlockMetadata"],[3,"OldMetadata"],[3,"AccoutNotFound"],[3,"UnknownAccountRoleType"],[3,"DesignatedDealerPreburns"],[3,"ParentVaspAccountRole"],[3,"GetAccountByVersion"],[3,"ChildVaspAccountRole"],[3,"PeerToPeerWithEvents"],[3,"PeerToPeerErrorExplination"],[3,"ReSubmittingTransactionWontFail"],[3,"MempoolValidationError"],[3,"ExpiredTransaction"],[3,"PreburnAndBurnEvents"],[3,"CancleBurnEvent"],[3,"UpdateExchangeRateEvent"],[3,"MintAndReceivedMintEvents"],[3,"RotateComplianceKeyEvent"],[3,"CreateAccountEvent"],[3,"GetTransactionsWithoutEvents"],[3,"GetAccountTransactionsWithoutEvents"],[3,"GetAccountTransactionsWithProofs"],[3,"GetTransactionsWithProofs"],[3,"AddAndRemoveVaspDomain"],[3,"GetTreasuryComplianceAccount"],[3,"GetEventsWithProofs"],[3,"GetEventByVersionWithProofTest"],[3,"GetResourcesTest"],[3,"MultiAgentPaymentOverDualAttestationLimit"],[3,"MultiAgentRotateAuthenticationKeyAdminScriptFunction"],[3,"MultiAgentRotateAuthenticationKeyAdminScript"],[3,"GetAccumulatorConsistencyProof"],[3,"NoUnknownEvents"],[3,"UpgradeEventAndNewEpoch"],[3,"UpgradeDiemVersion"]]},\
"jsonrpc_types_proto":{"doc":"","tn":["constants","types","ACCOUNT_ROLE_CHILD_VASP","ACCOUNT_ROLE_DESIGNATED_DEALER","ACCOUNT_ROLE_PARENT_VASP","ACCOUNT_ROLE_TREASURY_COMPLIANCE","ACCOUNT_ROLE_UNKNOWN","EVENT_DATA_ADMIN_TRANSACTION","EVENT_DATA_BASE_URL_ROTATION","EVENT_DATA_BURN","EVENT_DATA_CANCEL_BURN","EVENT_DATA_COMPLIANCE_KEY_ROTATION","EVENT_DATA_CREATE_ACCOUNT","EVENT_DATA_MINT","EVENT_DATA_NEW_BLOCK","EVENT_DATA_NEW_EPOCH","EVENT_DATA_PREBURN","EVENT_DATA_RECEIVED_MINT","EVENT_DATA_RECEIVED_PAYMENT","EVENT_DATA_SENT_PAYMENT","EVENT_DATA_TO_XDX_EXCHANGE_RATE_UPDATE","EVENT_DATA_UNKNOWN","SCRIPT_UNKNOWN","TRANSACTION_DATA_BLOCK_METADATA","TRANSACTION_DATA_UNKNOWN","TRANSACTION_DATA_USER","TRANSACTION_DATA_WRITE_SET","VM_STATUS_EXECUTED","VM_STATUS_EXECUTION_FAILURE","VM_STATUS_MISC_ERROR","VM_STATUS_MOVE_ABORT","VM_STATUS_OUT_OF_GAS","Account","AccountRole","AccountStateProof","AccountStateWithProof","AccountTransactionsWithProof","AccumulatorConsistencyProof","Amount","CurrencyInfo","Event","EventByVersionWithProof","EventData","EventWithProof","Metadata","MoveAbortExplaination","PreburnQueue","PreburnWithMetadata","Script","StateProof","Transaction","TransactionData","VmStatus","abort_code","accumulator_root_hash","address","address","amount","amount","amount","arguments","arguments_bcs","authentication_key","balances","base_url","base_url_rotation_events_key","blob","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","burn_events_key","bytes","bytes","cancel_burn_events_key","category","category_description","chain_id","chain_id","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","code","code_offset","committed_timestamp_secs","compliance_key","compliance_key_rotation_events_key","created_address","currency","currency","currency","currency_code","data","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","delegated_key_rotation_capability","delegated_withdrawal_capability","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","destination_address","diem_version","domain","dual_attestation_limit","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","epoch","epoch_change_proof","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","event_with_proof","events","exchange_rate_update_events_key","expiration_time","expiration_timestamp_secs","explanation","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fractional_part","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","function_index","function_name","gas_currency","gas_unit_price","gas_used","hash","human_name","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_frozen","key","ledger_consistency_proof","ledger_consistency_proof","ledger_info_to_transaction_info_proof","ledger_info_with_signatures","location","lower_bound_incl","max_gas_amount","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","metadata","metadata","metadata","metadata_signature","mint_events_key","module_address","module_name","module_publishing_allowed","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new_base_url","new_compliance_public_key","new_to_xdx_exchange_rate","num_children","parent_vasp_address","preburn","preburn_address","preburn_balances","preburn_events_key","preburn_queues","preburns","proof","proposed_time","proposer","public_key","reason","reason_description","received_events_key","received_mint_events_key","receiver","receiver","removed","role","role_id","round","scaling_factor","script","script_bytes","script_hash","script_hash_allow_list","secondary_public_keys","secondary_signature_schemes","secondary_signatures","secondary_signers","sender","sender","sent_events_key","sequence_number","sequence_number","sequence_number","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialized_txns_with_proofs","signature","signature_scheme","time_rotated_seconds","timestamp","timestamp_usecs","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_xdx_exchange_rate","transaction","transaction_info","transaction_info_to_account_proof","transaction_version","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type","type","type","type","type","type_arguments","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upper_bound_excl","vasp_domain_events_key","vasp_domains","version","version","version","version","vm_status"],"q":["jsonrpc_types_proto","","jsonrpc_types_proto::constants","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jsonrpc_types_proto::typesd":["Defines constants for enum type values See the following …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is for experimental API get_account_state_with_proof …","This is for experimental API get_account_state_with_proof …","This is for the experimental API …","This is for the experimental API …","","","","This is for the experimental API …","","This is for the experimental API get_events_with_proofs …","","","","","","This is for experimental API get_state_proof response. It …","","","","move_abort only","accumulator root hash of the ledger version requested","hex-encoded bytes","","","burn, cancelburn, mint, preburn, receivedpayment, …","peer to peer transfer amount.","List of string value of the script arguments. Contains …","List of hex-encoded string of BCS bytes representing …","hex-encoded bytes","","","hex-encoded bytes","hex-encoded bcs bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hex-encoded bytes","unknown event field. Hex-encoded BCS bytes of the event …","hex-encoded bcs bytes","hex-encoded bytes","","","Chain ID of the Diem network","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Hex-encoded compiled move script bytes.","","","admintransaction event field. The block time when this …","hex-encoded bytes","hex-encoded bytes","createaccount event field. Hex-encoded account address …","","","peer to peer transfer currency code.","to_xdx_exchange_rate_update event only","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","receivedmint event only hex-encoded bytes","Diem chain major version number.","","The dual attestation limit on-chain. Defined in terms of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","newepoch event only","hex-encoded bcs bytes","","","","","","","","","","","","","","","","","","","","","","hex-encoded bcs bytes","","hex-encoded bytes","","","move_abort only","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","execution_failure only","The name of the function being called, and that is defined …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hex-encoded bcs bytes","hex-encoded bcs bytes","hex-encoded bcs bytes","hex-encoded bcs bytes","move_abort, execution_failure","","","","","","","","","","","","","","","","","","","","","","","","hex-encoded bytes","hex-encoded bytes","Metadata of the transaction, LCS serialized hex-encoded …","Hex-encoded metadata signature, use this to validate …","hex-encoded bytes","Hex encoded account address as a string","The module name published under <code>module_address</code> where the …","True for allowing publishing customized script, server may …","","","","","","","","","","","","","","","","","","","","","","baseurlrotation event only","compliancekeyrotation event only hex-encoded bytes","","","","","burn, cancelburn, preburn events hex-encoded bytes","","HEX-encoded bytes","","","hex-encoded bcs bytes","","hex-encoded bytes","hex-encoded bytes","","","hex-encoded bytes","hex-encoded bytes","hex-encoded bytes","hex-encoded receiver account address bytes","vaspdomain event only","","createaccount event field. Role id of the created account, …","newblock event only","","","hex-encoded bytes","","List of allowed scripts hex-encoded hash bytes, server may …","","","","secondary signers","receivedpayment and sentpayment events hex-encoded bytes","user","hex-encoded bytes","","","","","","","","","","","","","","","","","","","","","","","","","list of hex-encoded bcs bytes","","","compliancekeyrotation and baseurlrotation events","The block (ledger) timestamp, unit is microsecond","blockmetadata","","","","","","","","","","","","","","","","","","","","","","","","hex-encoded bcs bytes","hex-encoded bcs bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Name of the script code, see …","List of type arguments, converted into string.","","","","","","","","","","","","","","","","","","","","","","","","VASP Domain","the transaction version of the account","The block (ledger) version","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,4,6,6,6,3,3,7,7,8,5,3,7,9,10,11,4,2,12,13,1,14,6,15,16,8,17,18,19,20,21,5,3,7,9,10,11,4,2,12,13,1,14,6,15,16,8,17,18,19,20,21,15,4,12,15,13,13,2,14,5,3,7,9,10,11,4,2,12,13,1,14,6,15,16,8,17,18,19,20,21,5,3,7,9,10,11,4,2,12,13,1,14,6,15,16,8,17,18,19,20,21,5,3,7,9,10,11,4,2,12,13,1,14,6,15,16,8,17,18,19,20,21,6,15,1,4,7,7,4,5,9,6,4,11,5,3,7,9,10,11,4,2,12,13,1,14,6,15,16,8,17,18,19,20,21,3,3,5,3,7,9,10,11,4,2,12,13,1,14,6,15,16,8,17,18,19,20,21,4,2,4,2,5,3,7,9,10,11,4,2,12,13,1,14,6,15,16,8,17,18,19,20,21,5,3,7,9,10,11,4,2,12,13,1,14,6,15,16,8,17,18,19,20,21,4,16,5,3,7,9,10,11,4,2,12,13,1,14,6,15,16,8,17,18,19,20,21,20,12,15,7,14,1,5,3,7,9,10,11,4,2,12,13,1,14,6,15,16,8,17,18,19,20,21,15,5,3,7,9,10,11,4,2,12,13,1,14,6,15,16,8,17,18,19,20,21,1,6,14,14,12,12,7,5,3,7,9,10,11,4,2,12,13,1,14,6,15,16,8,17,18,19,20,21,3,11,16,18,17,16,1,21,14,5,3,7,9,10,11,4,2,12,13,1,14,6,15,16,8,17,18,19,20,21,10,4,6,6,15,6,6,2,5,3,7,9,10,11,4,2,12,13,1,14,6,15,16,8,17,18,19,20,21,4,4,4,7,7,10,4,7,15,7,9,8,4,4,14,13,13,3,7,4,6,4,3,4,4,15,14,14,14,2,14,14,14,14,4,14,3,3,11,14,5,3,7,9,10,11,4,2,12,13,1,14,6,15,16,8,17,18,19,20,21,19,14,14,4,2,14,5,3,7,9,10,11,4,2,12,13,1,14,6,15,16,8,17,18,19,20,21,15,12,17,17,11,5,3,7,9,10,11,4,2,12,13,1,14,6,15,16,8,17,18,19,20,21,5,3,7,9,10,11,4,2,12,13,1,14,6,15,16,8,17,18,19,20,21,7,4,1,14,6,6,5,3,7,9,10,11,4,2,12,13,1,14,6,15,16,8,17,18,19,20,21,21,7,7,3,2,12,8,12],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["amount",3]],[[],["account",3]],[[],["accountrole",3]],[[],["preburnqueue",3]],[[],["preburnwithmetadata",3]],[[],["event",3]],[[],["eventdata",3]],[[],["metadata",3]],[[],["transaction",3]],[[],["moveabortexplaination",3]],[[],["vmstatus",3]],[[],["transactiondata",3]],[[],["script",3]],[[],["currencyinfo",3]],[[],["stateproof",3]],[[],["accountstatewithproof",3]],[[],["accountstateproof",3]],[[],["accumulatorconsistencyproof",3]],[[],["accounttransactionswithproof",3]],[[],["eventwithproof",3]],[[],["eventbyversionwithproof",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],null,null,[[["amount",3]],["bool",15]],[[["account",3]],["bool",15]],[[["accountrole",3]],["bool",15]],[[["preburnqueue",3]],["bool",15]],[[["preburnwithmetadata",3]],["bool",15]],[[["event",3]],["bool",15]],[[["eventdata",3]],["bool",15]],[[["metadata",3]],["bool",15]],[[["transaction",3]],["bool",15]],[[["moveabortexplaination",3]],["bool",15]],[[["vmstatus",3]],["bool",15]],[[["transactiondata",3]],["bool",15]],[[["script",3]],["bool",15]],[[["currencyinfo",3]],["bool",15]],[[["stateproof",3]],["bool",15]],[[["accountstatewithproof",3]],["bool",15]],[[["accountstateproof",3]],["bool",15]],[[["accumulatorconsistencyproof",3]],["bool",15]],[[["accounttransactionswithproof",3]],["bool",15]],[[["eventwithproof",3]],["bool",15]],[[["eventbyversionwithproof",3]],["bool",15]],null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[["decodecontext",3],["u32",15],["wiretype",4]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["decodeerror",3],["result",4,["decodeerror"]]]],null,null,null,null,null,null,null,null,[[["amount",3]],["bool",15]],[[["account",3]],["bool",15]],[[["accountrole",3]],["bool",15]],[[["preburnqueue",3]],["bool",15]],[[["preburnwithmetadata",3]],["bool",15]],[[["event",3]],["bool",15]],[[["eventdata",3]],["bool",15]],[[["metadata",3]],["bool",15]],[[["transaction",3]],["bool",15]],[[["moveabortexplaination",3]],["bool",15]],[[["vmstatus",3]],["bool",15]],[[["transactiondata",3]],["bool",15]],[[["script",3]],["bool",15]],[[["currencyinfo",3]],["bool",15]],[[["stateproof",3]],["bool",15]],[[["accountstatewithproof",3]],["bool",15]],[[["accountstateproof",3]],["bool",15]],[[["accumulatorconsistencyproof",3]],["bool",15]],[[["accounttransactionswithproof",3]],["bool",15]],[[["eventwithproof",3]],["bool",15]],[[["eventbyversionwithproof",3]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null],"p":[[3,"VmStatus"],[3,"Metadata"],[3,"Account"],[3,"EventData"],[3,"Amount"],[3,"Script"],[3,"AccountRole"],[3,"AccountStateWithProof"],[3,"PreburnQueue"],[3,"PreburnWithMetadata"],[3,"Event"],[3,"Transaction"],[3,"MoveAbortExplaination"],[3,"TransactionData"],[3,"CurrencyInfo"],[3,"StateProof"],[3,"AccountStateProof"],[3,"AccumulatorConsistencyProof"],[3,"AccountTransactionsWithProof"],[3,"EventWithProof"],[3,"EventByVersionWithProof"]]},\
"language_benchmarks":{"doc":"","t":[0,0,5,5,5],"n":["measurement","move_vm","cpu_time_measurement","wall_time_measurement","bench"],"q":["language_benchmarks","","language_benchmarks::measurement","","language_benchmarks::move_vm"],"d":["","","","","Entry point for the bench, provide a function name to …"],"i":[0,0,0,0,0],"f":[null,null,[[],[["criterion",3,["posixtime"]],["posixtime",4]]],[[],["criterion",3]],[[["str",15],["criterion",3]]]],"p":[]},\
"language_e2e_tests":{"doc":"Test infrastructure for the Diem VM.","t":[0,0,14,14,5,0,0,0,14,0,0,0,0,0,14,5,0,0,3,3,3,4,3,13,17,13,13,3,3,13,3,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,8,3,3,3,4,3,3,3,3,3,3,13,3,3,3,13,11,12,12,11,11,5,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,5,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,7,7,7,7,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,7,7,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,3,3,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,16,8,6,8,16,16,10,10,3,17,17,17,17,17,17,17,17,17,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,7,7,7,7,7,7,7,7,7,7,7,7,7,17,5,5,5,5,17,3,11,11,12,12,11,11,12,12,11,12,11,11,11,11,11,5,12,12,11,11,11,12,11],"n":["account","account_universe","assert_prologue_disparity","assert_prologue_parity","assert_status_eq","common_transactions","compile","currencies","current_function_name","data_store","execution_strategies","executor","gas_costs","on_chain_configs","test_with_different_versions","transaction_status_eq","utils","versioning","Account","AccountData","AccountRole","AccountRoleSpecifier","Balance","ChildVASP","DEFAULT_EXPIRATION_TIME","DesignatedDealer","DiemRoot","FreezingBit","KeyRotationCapability","ParentVASP","TransactionBuilder","TreasuryCompliance","Validator","ValidatorOperator","WithdrawCapability","account","account_role","account_specifier","add_balance_currency","address","address","arbitrary_with","auth_key","auth_key_prefix","balance","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_id","chain_id","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coin","currency_code","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","event_handle_layout","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_str","gas_currency_code","gas_currency_code","gas_unit_price","gas_unit_price","id","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_account","layout","layout","layout","layout","layout","layout","make_access_path","make_account_access_path","make_account_access_path","make_balance_access_path","make_balance_access_path","max_gas_amount","max_gas_amount","module","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","new","new_blessed_tc","new_diem_root","new_from_seed","new_from_seed","new_genesis_account","new_testing_dd","new_validator","new_xdx_from_seed","payload","privkey","program","pubkey","raw","received_events_count","received_events_key","received_payment_event_type","role_id_struct_tag","rotate_key","rotate_key","script","script_function","secondary_signers","secondary_signers","sender","sent_events_count","sent_events_key","sent_payment_event_layout","sequence_number","sequence_number","sequence_number","sign","sign_multi_agent","strategy","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_value","to_value","to_value","to_writeset","transaction","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttl","ttl","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_account","with_account_and_event_counts","with_keypair","with_keypair","write_set","xdx_currency_code","xus_currency_code","AUTransactionGen","AccountCurrent","AccountPair","AccountPairGen","AccountPickStyle","AccountUniverse","AccountUniverseGen","CreateAccountGen","CreateExistingAccountGen","InsufficientBalanceGen","InvalidAuthkeyGen","Limited","P2PTransferGen","RotateKeyGen","SequenceNumberMismatchGen","Unlimited","account","account_1","account_2","accounts","add_account","all_transactions_strategy","apply","apply","apply","apply","apply","apply","apply","apply","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arced","assert_accounts_match","bad_txn_strategy","balance","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","create_account_gas_cost","create_account_low_balance_gas_cost","create_account_strategy","create_existing_account_gas_cost","default_num_accounts","default_num_transactions","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","idx_1","idx_2","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","log_balance_strategy","ne","num_accounts","num_accounts","p2p_strategy","peer_to_peer_gas_cost","peer_to_peer_new_receiver_gas_cost","peer_to_peer_new_receiver_too_low_gas_cost","peer_to_peer_too_low_gas_cost","pick","pick","received_events_count","rotate_key","rotate_key_gas_cost","run_and_assert_gas_cost_stability","run_and_assert_universe","sent_events_count","sequence_number","set_pick_style","setup","setup_gas_cost_stability","strategy","success_strategy","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","txn_one_account_result","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","CREATE_ACCOUNT_SCRIPT","EMPTY_SCRIPT","MULTI_AGENT_MINT_SCRIPT","MULTI_AGENT_SWAP_SCRIPT","create_account_txn","empty_txn","multi_agent_mint_script","multi_agent_mint_txn","multi_agent_p2p_script_function","multi_agent_p2p_txn","multi_agent_swap_script","multi_agent_swap_txn","peer_to_peer_txn","raw_multi_agent_swap_txn","raw_rotate_key_txn","rotate_key_txn","compile_module","compile_script","add_currency_to_system","FakeDataStore","GENESIS_CHANGE_SET","GENESIS_CHANGE_SET_FRESH","add_account_data","add_module","add_write_set","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize","drop","erased_serialize","fetch_config","fmt","from","get","get_module","get_resource","init","inner","into","is_genesis","new","remove","serialize","set","test_only_hash","to_owned","try_from","try_into","type_id","vzip","basic_strategy","guided_strategy","multi_strategy","random_strategy","types","BasicExecutor","BasicStrategy","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","execute_block","fmt","fmt","from","from","init","init","into","into","new","partition","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AnnotatedTransaction","Block","GuidedExecutor","PartitionedGuidedStrategy","Txn","UnPartitionedGuidedStrategy","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","execute_block","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","ne","new","partition","partition","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","0","MultiExecutor","MultiResult","NonMatchingOutput","OtherResult","add_executor","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","drop","drop","execute_block","fmt","fmt","from","from","init","init","into","into","new","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","1","RandomExecutor","RandomizedStrategy","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","execute_block","fmt","fmt","from","from","from_os_rng","from_os_rng","from_seed","from_seed","init","init","into","into","partition","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Block","BlockResult","Executor","ExecutorResult","PartitionStrategy","Txn","Txn","execute_block","partition","FakeExecutor","RELEASE_1_1_GENESIS","RELEASE_1_1_GENESIS_PRIVKEY","RELEASE_1_1_GENESIS_PUBKEY","TRACE_DIR_DATA","TRACE_DIR_INPUT","TRACE_DIR_META","TRACE_DIR_OUTPUT","TRACE_FILE_ERROR","TRACE_FILE_NAME","TraceSeqMapping","add_account_data","add_module","allowlist_genesis","apply_write_set","borrow","borrow_mut","create_accounts","create_raw_account","create_raw_account_data","create_xdx_raw_account_data","custom_genesis","deref","deref_mut","drop","exec","execute_and_apply","execute_block","execute_block_and_keep_vm_status","execute_transaction","execute_transaction_block","execute_transaction_block_parallel","fmt","from","from_fresh_genesis","from_genesis","from_genesis_file","from_genesis_with_options","from_saved_genesis","get_block_time","get_state_view","init","into","new_block","new_block_with_timestamp","no_genesis","read_account_resource","read_account_resource_at_address","read_balance_resource","read_balance_resource_at_address","read_from_access_path","set_block_time","set_golden_file","stdlib_only_genesis","try_exec","try_from","try_into","type_id","verify_transaction","vzip","CREATE_ACCOUNT_FIRST","CREATE_ACCOUNT_NEXT","CREATE_ACCOUNT_TOO_LOW_FIRST","CREATE_ACCOUNT_TOO_LOW_NEXT","CREATE_EXISTING_ACCOUNT_FIRST","CREATE_EXISTING_ACCOUNT_NEXT","PEER_TO_PEER","PEER_TO_PEER_NEW_RECEIVER_FIRST","PEER_TO_PEER_NEW_RECEIVER_NEXT","PEER_TO_PEER_NEW_RECEIVER_TOO_LOW_FIRST","PEER_TO_PEER_NEW_RECEIVER_TOO_LOW_NEXT","PEER_TO_PEER_TOO_LOW","ROTATE_KEY","TXN_RESERVED","set_diem_version","close_module_publishing","start_with_released_df","upgrade_df","CURRENT_RELEASE_VERSIONS","VersionedTestEnv","borrow","borrow_mut","dd_account","dd_sequence_number","deref","deref_mut","dr_account","dr_sequence_number","drop","executor","fmt","from","init","into","new","run_with_versions","tc_account","tc_sequence_number","try_from","try_into","type_id","version_number","vzip"],"q":["language_e2e_tests","","","","","","","","","","","","","","","","","","language_e2e_tests::accountlanguage_e2e_tests::account_universelanguage_e2e_tests::account_universe::AccountPickStyle","language_e2e_tests::common_transactions","","","","","","","","","","","","","","","","language_e2e_tests::compile","","language_e2e_tests::currencies","language_e2e_tests::data_store","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","language_e2e_tests::execution_strategies","","","","","language_e2e_tests::execution_strategies::basic_strategy","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","language_e2e_tests::execution_strategies::guided_strategy","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","language_e2e_tests::execution_strategies::guided_strategy::AnnotatedTransaction","language_e2e_tests::execution_strategies::multi_strategy","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","language_e2e_tests::execution_strategies::multi_strategy::MultiResult","","","language_e2e_tests::execution_strategies::random_strategy","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","language_e2e_tests::execution_strategies::types","","","","","","","","","language_e2e_tests::executor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","language_e2e_tests::gas_costs","","","","","","","","","","","","","","language_e2e_tests::on_chain_configs","language_e2e_tests::utils","","","language_e2e_tests::versioning","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Test infrastructure for modeling Diem accounts.","A model to test properties of common Diem transactions.","","","","Support for encoding transactions for common situations.","Support for compiling scripts and modules in tests.","","Returns the name of the current function. This macro is …","Support for mocking the Diem data store.","","Support for running the VM to execute and verify …","Gas costs for common transactions.","","","","","","Details about a Diem account.","Represents an account along with initial state about it.","Struct that represents an account type for testing.","","Struct that represents an account balance resource for …","","","","","","","","","","","","","Returns the underlying <code>Account</code> instance.","Returns the account role specifier","","Adds the balance held by this account to the one …","Returns the address of the account. This is a hash of the …","Returns the address of the account. This is a hash of the …","","Computes the authentication key for this account, as …","Return the first 16 bytes of the account’s auth key","Returns the initial balance.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieve the balance inside of this","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts this data into an <code>Account</code> instance.","Returns the value layout for the account balance","","Returns the (Move value) layout of the …","","","","","Returns the AccessPath that describes the Account resource …","Returns the AccessPath that describes the Account resource …","Returns the AccessPath that describes the Account balance …","Returns the AccessPath that describes the Account balance …","","","","","","","","","","","","Creates a new account in memory.","Create a new balance with amount <code>balance</code>","Create a new AccountRole testing account.","Creates a new <code>AccountData</code> with a new account.","","","Creates a new account representing treasury compliance in …","Creates a new account representing the diem root account …","Creates a new account in memory given a random seed.","Creates a new <code>AccountData</code> with a new account.","Creates a new account in memory representing an account …","","Creates a new account with the given addr and key pair","Creates a new <code>AccountData</code> with a new account, with XDX …","","The current private key for this account.","","The current public key for this account.","","Returns the initial received events count.","Returns the unique key for this received events stream.","","","Changes the keys for this account to the provided ones.","Changes the keys for this account to the provided ones.","","","","","","Returns the initial sent events count.","Returns the unique key for this sent events stream.","","","Returns the initial sequence number.","","","","Returns a <code>Strategy</code> that creates <code>AccountData</code> instances.","","","","","","","","","Returns the Move Value for the account balance","","Creates and returns the top-level resources to be …","Creates a writeset that contains the account data and can …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>AccountData</code> with the provided account.","Creates a new <code>AccountData</code> with custom parameters.","Creates a new account with the given keypair.","Creates a new <code>AccountData</code> with the provided account.","","","","Represents any sort of transaction that can be done in an …","Represents the current state of account in a universe, …","Mutable references to a pair of distinct accounts picked …","Allows pairs of accounts to be uniformly randomly selected …","Determines the sampling algorithm used to pick accounts …","A set of accounts that has been set up and can now be used …","A set of accounts which can be used to construct an …","Represents a create-account transaction performed in the …","Represents a create-account transaction in the account …","Represents a insufficient balance transaction","Represents a authkey mismatch transaction","An account may only be picked these many times.","Represents a peer-to-peer transaction performed in the …","Represents a rotate-key transaction performed in the …","Represents a sequence number mismatch transaction","An account may be picked as many times as possible.","Returns the underlying account.","A mutable reference to the first account picked.","A mutable reference to the second account picked.","Returns the accounts currently in this universe.","Adds an account to the universe so that future …","A strategy that returns a random transaction.","Applies this transaction onto the universe, updating …","","","","","","","","","","","","","","","","Creates an arced version of this transaction, suitable for …","Verify that the account information in the universe …","","Returns the current balance for this account, assuming all …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the gas cost of a create-account transaction.","Returns the gas cost of a create-account transaction where …","","Returns the gas cost of a create-account transaction where …","The number of accounts to run universe-based proptests …","The number of transactions to run universe-based proptests …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The index of the first account picked.","The index of the second account picked.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a <code>Strategy</code> that provides a variety of balances (or …","","Returns the number of accounts in this account universe.","Returns the number of accounts currently in this universe.","","Returns the gas cost of a peer-to-peer transaction.","Returns the gas cost of a create-account transaction where …","Returns the gas cost of a create-account transaction where …","Returns the gas cost of a peer-to-peer transaction with an …","Picks an account using the provided <code>Index</code> as a source of …","Picks two accounts uniformly randomly from this universe …","Returns the current received events count for this …","Rotates the key in this account.","Returns the gas cost of a peer-to-peer transaction with an …","Run these transactions and make sure that they all cost …","Run these transactions and verify the expected output.","Returns the current sent events count for this account, …","Returns the current sequence number for this account, …","Sets the pick style used by this account universe.","Returns an <code>AccountUniverse</code> with the initial state …","Returns an <code>AccountUniverse</code> with the initial state …","Returns a <code>Strategy</code> that generates a universe of accounts …","Returns a <code>Strategy</code> that generates a universe of accounts …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes the result for running a transfer out of one …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a transaction to create a new account with the …","","","Returns a transaction to mint coins from TC to DD to VASP.","","Returns a multi-agent p2p transaction.","","Returns a transaction to swap currencies between two …","Returns a transaction to transfer coin from one account to …","Returns an unsigned raw transaction to swap currencies …","Returns a transaction to change the keys for the given …","Returns a transaction to change the keys for the given …","Compile the provided Move code into a blob which can be …","Compile the provided Move code into a blob which can be …","","An in-memory implementation of <code>StateView</code> and [<code>RemoteCache</code>] …","Dummy genesis ChangeSet for testing","","Adds an <code>AccountData</code> to this data store.","Adds a [<code>CompiledModule</code>] to this data store.","Adds a <code>WriteSet</code> to this data store.","","","","","","","","","","","","","","","","","","Yields a reference to the internal data structure of the …","","","Creates a new <code>FakeDataStore</code> with the provided initial data.","Deletes a key from this data store.","","Sets a (key, value) pair within this data storerovides an environment to run a VM instance.","","","","","","","","","Directory structure of the trace dir","Maps block number N to the index of the input and output …","Adds an account to this executor’s data store.","Adds a module to this executor’s data store.","","Applies a <code>WriteSet</code> to this executor’s data store.","","","Creates a number of <code>Account</code> instances all with the same …","Create one instance of <code>AccountData</code> without saving it to …","Create one instance of <code>AccountData</code> without saving it to …","Create one instance of <code>AccountData</code> with XDX balance …","Creates fresh genesis from the stdlib modules passed in.","","","","","Executes the transaction as a singleton block and applies …","Executes the given block of transactions.","Alternate form of ‘execute_block’ that keeps the …","","","","","","Creates an executor using the standard genesis.","Creates an executor from a genesis <code>WriteSet</code>.","Creates an executor from the genesis file …","Creates an executor from the genesis file …","Create an executor from a saved genesis blob","","","","","","","Creates an executor in which no genesis state has been …","Reads the resource [<code>Value</code>] for an account from this …","Reads the resource [<code>Value</code>] for an account under the given …","Reads the balance resource value for an account from this …","Reads the balance resource value for an account under the …","Get the blob for the associated AccessPath","","","Creates an executor with only the standard library Move …","","","","","Verifies the given transaction by running it through the …","","The gas cost of a first time create-account transaction.","The gas cost of a create-account transaction.","The gas cost of a create-account transaction where the …","The gas cost of a create-account transaction where the …","The gas cost of a create-account transaction where the …","The gas cost of a create-account transaction where the …","The gas cost of a peer-to-peer transaction.","The gas cost of a peer-to-peer transaction that creates a …","The gas cost of a peer-to-peer transaction that creates a …","The gas cost of a peer-to-peer transaction that tries to …","The gas cost of a peer-to-peer transaction that tries to …","The gas cost of a peer-to-peer transaction with an …","The gas cost of a rotate-key transaction.","The gas each transaction is configured to reserve. If the …","","","","","The current version numbers that e2e tests should be run …","","","","","","","","","","","","","","","","","This is takes a test body parametrized by a …","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,1,0,1,1,1,0,2,2,3,2,4,2,4,4,4,2,5,4,6,1,3,2,7,8,9,5,4,6,1,3,2,7,8,9,5,5,4,6,1,3,2,7,8,9,4,6,1,3,2,7,8,9,6,0,4,1,5,4,6,1,3,2,7,8,9,5,4,6,1,3,2,7,8,9,5,4,6,1,3,2,7,8,9,4,6,1,3,2,7,8,9,4,6,1,3,2,7,8,9,2,4,6,1,3,2,7,8,9,5,4,6,1,3,2,7,8,9,1,5,5,5,5,1,5,4,6,1,3,2,7,8,9,5,4,6,1,3,2,7,8,9,2,6,1,2,7,8,9,4,4,2,4,2,5,5,5,4,6,3,2,7,8,9,5,4,6,3,2,7,8,4,4,4,2,4,4,4,2,5,4,5,4,5,2,2,2,1,4,2,5,5,5,5,5,2,2,2,5,2,5,5,5,2,4,6,1,3,2,7,8,9,6,1,2,2,4,5,4,6,1,3,2,7,8,9,5,4,6,1,3,2,7,8,9,5,5,5,4,6,1,3,2,7,8,9,7,8,9,5,4,6,1,3,2,7,8,9,2,2,4,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,10,11,12,12,13,13,0,14,15,16,17,18,19,20,21,15,16,17,18,19,20,21,22,14,0,0,11,12,15,16,17,18,19,20,21,23,13,22,10,11,12,15,16,17,18,19,20,21,23,13,22,10,11,15,16,17,18,19,20,21,23,13,22,10,11,15,16,17,18,19,20,21,23,13,22,10,11,11,11,0,11,0,0,12,15,16,17,18,19,20,21,23,13,22,10,11,12,15,16,17,18,19,20,21,23,13,22,10,11,12,15,16,17,18,19,20,21,23,13,22,10,11,11,11,15,16,17,18,19,20,21,23,13,22,10,11,12,15,16,17,18,19,20,21,23,13,22,10,11,12,12,12,15,16,17,18,19,20,21,23,13,22,10,11,12,15,16,17,18,19,20,21,23,13,22,10,11,0,11,23,13,0,11,11,11,11,13,22,11,11,11,0,0,11,11,23,23,23,23,23,15,16,17,18,19,20,21,23,13,22,10,11,12,15,16,17,18,19,20,21,23,13,22,10,11,12,15,16,17,18,19,20,21,23,13,22,10,11,0,12,15,16,17,18,19,20,21,23,13,22,10,11,12,15,16,17,18,19,20,21,23,13,22,10,11,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,0,0,0,0,0,0,26,27,26,27,26,26,27,26,27,26,27,26,27,27,26,27,26,27,26,27,26,27,27,26,26,26,27,26,27,26,27,26,27,0,28,0,0,28,0,29,28,30,31,29,28,30,31,28,30,31,28,30,31,29,28,30,31,29,28,30,31,29,28,30,31,28,29,28,30,31,29,28,30,31,29,28,30,31,29,28,30,31,28,29,30,31,28,30,31,29,28,30,31,29,28,30,31,29,28,30,31,29,28,30,31,32,0,0,33,33,34,34,33,34,33,34,34,33,34,33,34,33,34,33,33,34,33,34,33,34,33,34,33,33,34,33,34,33,34,33,34,33,35,36,35,0,0,37,38,37,38,37,37,37,38,37,38,37,38,38,37,38,37,38,37,38,37,38,37,38,37,38,37,37,37,38,37,38,37,38,37,38,0,39,0,0,0,39,40,39,40,0,0,0,0,0,0,0,0,0,0,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,42,42,42,42,42,42,42],"f":[null,null,null,null,[[["keptvmstatus",4]],["bool",15]],null,null,null,null,null,null,null,null,null,null,[[["transactionstatus",4]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["account",3]],[[],["accountrolespecifier",4]],[[],["accountrolespecifier",4]],[[["identifier",3]]],[[],["accountaddress",3]],[[],["accountaddress",3]],[[]],[[],[["vec",3,["u8"]],["u8",15]]],[[],[["vec",3,["u8"]],["u8",15]]],[[["identstr",3]],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["chainid",3]]],null,[[],["account",3]],[[],["balance",3]],[[],["accountrolespecifier",4]],[[],["accountrole",3]],[[],["accountdata",3]],[[],["withdrawcapability",3]],[[],["keyrotationcapability",3]],[[],["freezingbit",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[["str",15]],["identifier",3]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["account",3]],["bool",15]],[[["balance",3]],["bool",15]],[[["accountrolespecifier",4]],["bool",15]],[[["accountrole",3]],["bool",15]],[[["accountdata",3]],["bool",15]],[[["withdrawcapability",3]],["bool",15]],[[["keyrotationcapability",3]],["bool",15]],[[["freezingbit",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["movestructlayout",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["result",6]],[[["str",15]]],null,[[["u64",15]]],null,[[],["u64",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["account",3]],[[],["movestructlayout",4]],[[],["movestructlayout",4]],[[],["movestructlayout",4]],[[],["movestructlayout",4]],[[],["movestructlayout",4]],[[],["movestructlayout",4]],[[["structtag",3]],["accesspath",3]],[[],["accesspath",3]],[[],["accesspath",3]],[[["identifier",3]],["accesspath",3]],[[["identifier",3]],["accesspath",3]],[[["u64",15]]],null,[[["module",3]]],[[["account",3]],["bool",15]],[[["balance",3]],["bool",15]],[[["accountrole",3]],["bool",15]],[[["accountdata",3]],["bool",15]],[[["withdrawcapability",3]],["bool",15]],[[["keyrotationcapability",3]],["bool",15]],[[["freezingbit",3]],["bool",15]],[[["account",3]]],[[]],[[["u64",15]]],[[["accountaddress",3],["accountrolespecifier",4]]],[[["u64",15]]],[[["accountaddress",3]]],[[["accountaddress",3]]],[[]],[[]],[[["keygen",3]]],[[["u64",15],["keygen",3]]],[[["accountaddress",3]]],[[]],[[["accountaddress",3],["ed25519publickey",3],["ed25519privatekey",3]]],[[["u64",15],["keygen",3]]],[[["transactionpayload",4]]],null,null,null,[[],["rawtransaction",3]],[[],["u64",15]],[[]],[[],["movestructlayout",4]],[[],["structtag",3]],[[["ed25519publickey",3],["ed25519privatekey",3]]],[[["ed25519publickey",3],["ed25519privatekey",3]]],[[["script",3]]],[[["scriptfunction",3]]],[[["vec",3,["account"]],["account",3]]],null,null,[[],["u64",15]],[[]],[[],["movestructlayout",4]],[[["u64",15]]],[[],["u64",15]],null,[[],["signedtransaction",3]],[[],["signedtransaction",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["value",3]],[[],["value",3]],[[]],[[],["writeset",3]],[[],["transactionbuilder",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u64",15]]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["value",3]],[[],["value",3]],[[],["value",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",15],["account",3],["accountrolespecifier",4],["identifier",3]]],[[["u64",15],["account",3],["accountrolespecifier",4],["identifier",3]]],[[["ed25519publickey",3],["ed25519privatekey",3]]],[[["u64",15],["ed25519publickey",3],["accountrolespecifier",4],["ed25519privatekey",3],["identifier",3]]],[[["writesetpayload",4]]],[[],["identifier",3]],[[],["identifier",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["account",3]],null,null,[[]],[[["accountdata",3]]],[[["u64",15]]],[[["accountuniverse",3]]],[[["accountuniverse",3]]],[[["accountuniverse",3]]],[[["accountuniverse",3]]],[[["accountuniverse",3]]],[[["accountuniverse",3]]],[[["accountuniverse",3]]],[[["accountuniverse",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["autransactiongen",8],["arc",3,["autransactiongen"]]]],[[["fakeexecutor",3],["accountuniverse",3]],[["result",4,["testcaseerror"]],["testcaseerror",4]]],[[]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["sequencenumbermismatchgen",3]],[[],["insufficientbalancegen",3]],[[],["invalidauthkeygen",3]],[[],["createaccountgen",3]],[[],["createexistingaccountgen",3]],[[],["p2ptransfergen",3]],[[],["rotatekeygen",3]],[[],["accountuniversegen",3]],[[],["accountuniverse",3]],[[],["accountpairgen",3]],[[],["accountpickstyle",4]],[[],["accountcurrent",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],[[["u64",15]]],[[],["u64",15]],[[],["usize",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["accountcurrent",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",15]]],[[["accountcurrent",3]],["bool",15]],[[],["usize",15]],[[],["usize",15]],[[["u64",15]]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[["index",3]]],[[["accountuniverse",3]],["accountpair",3]],[[],["u64",15]],[[["ed25519publickey",3],["ed25519privatekey",3]]],[[],["u64",15]],[[["accountuniversegen",3],["vec",3]],[["result",4,["testcaseerror"]],["testcaseerror",4]]],[[["accountuniversegen",3],["vec",3]],[["result",4,["testcaseerror"]],["testcaseerror",4]]],[[],["u64",15]],[[],["u64",15]],[[["accountpickstyle",4]]],[[["fakeexecutor",3]],["accountuniverse",3]],[[["fakeexecutor",3]],["accountuniverse",3]],[[]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["accountcurrent",3],["u64",15]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[["account",3],["u64",15],["typetag",4]],["signedtransaction",3]],[[["account",3],["u64",15],["string",3]],["signedtransaction",3]],[[["u64",15]],["script",3]],[[["account",3],["u64",15]],["signedtransaction",3]],[[["u64",15]],["transactionpayload",4]],[[["account",3],["u64",15]],["signedtransaction",3]],[[["u64",15]],["script",3]],[[["account",3],["u64",15]],["signedtransaction",3]],[[["account",3],["u64",15]],["signedtransaction",3]],[[["account",3],["u64",15]],["rawtransaction",3]],[[["account",3],["u8",15],["u64",15],["vec",3,["u8"]]],["rawtransaction",3]],[[["account",3],["u8",15],["u64",15],["vec",3,["u8"]]],["signedtransaction",3]],[[["str",15]]],[[["compiledmodule",3],["str",15],["vec",3,["compiledmodule"]]],["script",3]],[[["account",3],["u64",15],["fakeexecutor",3],["str",15]],["u64",15]],null,null,null,[[["accountdata",3]]],[[["vec",3,["u8"]],["u8",15],["moduleid",3]]],[[["writeset",3]]],[[]],[[]],[[],["fakedatastore",3]],[[]],[[],["fakedatastore",3]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],[[["serializer",8]],[["error",3],["result",4,["ok","error"]],["ok",3]]],[[["accesspath",3]],[["option",4,["vec"]],["vec",3,["u8"]]]],[[["formatter",3]],["result",6]],[[]],[[["accesspath",3]],[["option",4,["vec"]],["result",6,["option"]]]],[[["moduleid",3]],[["option",4,["vec"]],["result",6,["option"]]]],[[["accountaddress",3],["structtag",3]],[["result",6,["option"]],["option",4,["vec"]]]],[[],["usize",15]],[[],["hashmap",3]],[[]],[[],["bool",15]],[[["vec",3,["u8"]],["hashmap",3,["accesspath","vec"]],["accesspath",3]]],[[["accesspath",3]],[["option",4,["vec"]],["vec",3,["u8"]]]],[[],["result",4]],[[["vec",3,["u8"]],["u8",15],["accesspath",3]],[["option",4,["vec"]],["vec",3,["u8"]]]],[[],["hashvalue",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["basicstrategy",3]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["block",6]],["executorresult",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[["block",6]],[["vec",3,["block"]],["block",6,["signedtransaction"]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["annotatedtransaction",4]],[[],["partitionedguidedstrategy",3]],[[],["unpartitionedguidedstrategy",3]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["annotatedtransaction",4]],["bool",15]],[[["block",6]],["executorresult",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[["annotatedtransaction",4]],["bool",15]],[[]],[[["block",6]],[["vec",3,["block"]],["block",6,["signedtransaction"]]]],[[["block",6]],[["vec",3,["block"]],["block",6,["signedtransaction"]]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["block",6]],["executorresult",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[],[["error",8],["option",4,["error"]]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["randomizedstrategy",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["block",6]],["executorresult",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["block",6]],[["vec",3,["block"]],["block",6,["signedtransaction"]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,[[["block",6]],["executorresult",6]],[[["block",6]],[["vec",3,["block"]],["block",6,["signedtransaction"]]]],null,null,null,null,null,null,null,null,null,null,null,[[["accountdata",3]]],[[["vec",3,["u8"]],["u8",15],["moduleid",3]]],[[]],[[["writeset",3]]],[[]],[[]],[[["usize",15],["u64",15]],[["account",3],["vec",3,["account"]]]],[[],["account",3]],[[["u64",15]],["accountdata",3]],[[["u64",15]],["accountdata",3]],[[["usize",15],["vmpublishingoption",3],["option",4,["usize"]]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["vec",3,["typetag"]],["typetag",4],["vec",3,["vec"]],["vec",3,["u8"]],["str",15]]],[[["signedtransaction",3]],["transactionoutput",3]],[[["vec",3,["signedtransaction"]],["signedtransaction",3]],[["result",4,["vec","vmstatus"]],["vmstatus",4],["vec",3,["transactionoutput"]]]],[[["vec",3,["signedtransaction"]],["signedtransaction",3]],[["vec",3],["vmstatus",4],["result",4,["vec","vmstatus"]]]],[[["signedtransaction",3]],["transactionoutput",3]],[[["vec",3,["transaction"]],["transaction",4]],[["result",4,["vec","vmstatus"]],["vmstatus",4],["vec",3,["transactionoutput"]]]],[[["vec",3,["transaction"]],["transaction",4]],[["result",4,["vec","vmstatus"]],["vmstatus",4],["vec",3,["transactionoutput"]]]],[[["formatter",3]],["result",6]],[[]],[[]],[[["writeset",3]]],[[]],[[["vmpublishingoption",3]]],[[]],[[],["u64",15]],[[],["fakedatastore",3]],[[],["usize",15]],[[]],[[]],[[["u64",15]]],[[]],[[["account",3]],[["option",4,["accountresource"]],["accountresource",3]]],[[["accountaddress",3]],[["option",4,["accountresource"]],["accountresource",3]]],[[["account",3],["identifier",3]],[["balanceresource",3],["option",4,["balanceresource"]]]],[[["accountaddress",3],["identifier",3]],[["balanceresource",3],["option",4,["balanceresource"]]]],[[["accesspath",3]],[["option",4,["vec"]],["vec",3,["u8"]]]],[[["u64",15]]],[[["str",15]]],[[]],[[["vec",3,["typetag"]],["typetag",4],["vec",3,["vec"]],["vec",3,["u8"]],["str",15]],[["result",4,["writeset","vmstatus"]],["vmstatus",4],["writeset",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["signedtransaction",3]],["vmvalidatorresult",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["fakeexecutor",3],["diemversion",3]]],[[["fakeexecutor",3],["account",3],["u64",15]]],[[]],[[["account",3],["u64",15],["u64",15],["option",4,["u64"]],["fakeexecutor",3]]],null,null,[[]],[[]],null,null,[[["usize",15]]],[[["usize",15]]],null,null,[[["usize",15]]],null,[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[["u64",15]],["option",4]],[[["str",15]]],null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]]],"p":[[4,"AccountRoleSpecifier"],[3,"AccountData"],[3,"AccountRole"],[3,"Account"],[3,"TransactionBuilder"],[3,"Balance"],[3,"WithdrawCapability"],[3,"KeyRotationCapability"],[3,"FreezingBit"],[4,"AccountPickStyle"],[3,"AccountCurrent"],[3,"AccountPair"],[3,"AccountUniverse"],[8,"AUTransactionGen"],[3,"SequenceNumberMismatchGen"],[3,"InsufficientBalanceGen"],[3,"InvalidAuthkeyGen"],[3,"CreateAccountGen"],[3,"CreateExistingAccountGen"],[3,"P2PTransferGen"],[3,"RotateKeyGen"],[3,"AccountPairGen"],[3,"AccountUniverseGen"],[13,"Limited"],[3,"FakeDataStore"],[3,"BasicStrategy"],[3,"BasicExecutor"],[4,"AnnotatedTransaction"],[3,"GuidedExecutor"],[3,"PartitionedGuidedStrategy"],[3,"UnPartitionedGuidedStrategy"],[13,"Txn"],[4,"MultiResult"],[3,"MultiExecutor"],[13,"NonMatchingOutput"],[13,"OtherResult"],[3,"RandomizedStrategy"],[3,"RandomExecutor"],[8,"Executor"],[8,"PartitionStrategy"],[3,"FakeExecutor"],[3,"VersionedTestEnv"]]},\
"language_e2e_testsuite":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"mempool_notifications":{"doc":"","t":[13,3,4,3,3,8,3,13,13,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,10,11,11,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["CommitNotificationError","CommittedTransaction","Error","MempoolCommitNotification","MempoolNotificationListener","MempoolNotificationSender","MempoolNotifier","TimeoutWaitingForMempool","UnexpectedErrorEncountered","ack_commit_notification","block_timestamp_usecs","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deserialize","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","is_terminated","ne","ne","new_mempool_notifier_listener_pair","notify_new_commit","notify_new_commit","poll_next","sender","sequence_number","serialize","test_only_hash","to_owned","to_owned","to_owned","to_string","to_string","to_string","transactions","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","0","0"],"q":["mempool_notifications","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mempool_notifications::Error",""],"d":["","A successfully executed and committed user transaction.","","A notification for newly committed transactions sent by …","The mempool component responsible for responding to state …","The interface between state sync and mempool, allowing …","The state sync component responsible for notifying mempool.","","","Respond (succesfully) to the commit notification …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This method returns a (MempoolNotifier, …","Notify mempool of the newly committed transactions at the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,0,0,0,0,0,0,1,1,2,3,1,4,2,3,5,1,4,2,3,5,1,4,5,1,4,5,1,1,5,5,1,1,4,2,3,3,5,5,1,4,2,3,5,1,4,2,3,5,2,1,5,0,6,4,2,5,5,1,1,1,4,5,1,3,5,3,1,4,2,3,5,1,4,2,3,5,1,4,2,3,5,1,4,2,3,5,7,8],"f":[null,null,null,null,null,null,null,null,null,[[["mempoolcommitnotification",3]],[["result",4,["error"]],["error",4]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["error",4]],[[],["mempoolnotifier",3]],[[],["committedtransaction",3]],[[]],[[]],[[]],[[],["result",4]],[[["error",4]],["bool",15]],[[["committedtransaction",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["error",4]],["bool",15]],[[["committedtransaction",3]],["bool",15]],[[]],[[["u64",15],["transaction",4],["vec",3,["transaction"]]],[["box",3,["future"]],["pin",3,["box"]]]],[[["u64",15],["transaction",4],["vec",3,["transaction"]]],[["box",3,["future"]],["pin",3,["box"]]]],[[["pin",3],["context",3]],[["option",4],["poll",4,["option"]]]],null,null,[[],["result",4]],[[],["hashvalue",3]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null],"p":[[4,"Error"],[3,"MempoolNotificationListener"],[3,"MempoolCommitNotification"],[3,"MempoolNotifier"],[3,"CommittedTransaction"],[8,"MempoolNotificationSender"],[13,"CommitNotificationError"],[13,"UnexpectedErrorEncountered"]]},\
"memsocket":{"doc":"","t":[3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Incoming","MemoryListener","MemorySocket","bind","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","connect","drop","fmt","fmt","fmt","from","from","from","incoming","into","into","into","local_addr","new_pair","poll_close","poll_flush","poll_next","poll_read","poll_write","try_from","try_from","try_from","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id"],"q":["memsocket","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Stream returned by the <code>MemoryListener::incoming</code> function …","An in-memory socket server, listening for connections.","An in-memory stream between two local sockets.","Creates a new <code>MemoryListener</code> which will be bound to the …","","","","","","","Create a new in-memory Socket connected to the specified …","","","","","","","","Consumes this listener, returning a stream of the sockets …","","","","Returns the local address that this listener is bound to.","Construct both sides of an in-memory socket.","Attempt to close the channel. Cannot Fail.","Attempt to flush the channel. Cannot Fail.","","Attempt to read from the <code>AsyncRead</code> into <code>buf</code>.","Attempt to write bytes from <code>buf</code> into the outgoing channel.","","","","","","","","","",""],"i":[0,0,0,1,1,2,3,1,2,3,3,1,1,2,3,1,2,3,1,1,2,3,1,3,3,3,2,3,3,1,2,3,1,2,3,2,1,2,3],"f":[null,null,null,[[["u16",15]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u16",15]],[["memorysocket",3],["result",6,["memorysocket"]]]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["incoming",3]],[[]],[[]],[[]],[[],["u16",15]],[[]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"MemoryListener"],[3,"Incoming"],[3,"MemorySocket"]]},\
"mirai_dataflow_analysis":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"module_generation":{"doc":"","t":[3,3,3,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,5,5,5,11,11,11,12,12,12,12,12,12,12,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ModuleGenerator","ModuleGeneratorOptions","Pad","add_resources","args_for_ty_params","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","byte_array_max_size","clone","clone_into","create","default","fmt","from","from","from","generate_module","generate_modules","generate_verified_modules","into","into","into","max_fields","max_function_call_size","max_functions","max_locals","max_ret_types_size","max_string_size","max_structs","max_ty_params","min_fields","min_table_size","pad","references_allowed","simple_types_only","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["module_generation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","Whether the generated modules should have any resources …","If set, all functions with type parameters will have …","","","","","","","The maximum size that generated byte arrays can be.","","","","","","","","","","Generate a <code>number - 1</code> modules. Then generate a root module …","","","","","The maximum number of fields that will be generated for …","The maximum number of arguments to generated function …","The maximum number of functions that can be generated for …","The maximum number of locals that can be defined within a …","The maximum number of return types of generated function …","The maximum size that a generated string can be.","The maximum number of structs that can be generated for a …","The maximum number of type parameters functions and …","","The minimum number of entries in any table","","Whether references are allowed to be generated for e.g. …","Whether or not generate modules should only contain simple …","","","","","","","","","","","","",""],"i":[0,0,0,1,1,2,3,1,2,3,1,1,1,1,2,1,1,2,3,1,0,0,0,2,3,1,1,1,1,1,1,1,1,1,1,1,3,1,1,1,2,3,1,2,3,1,2,3,1,2,3,1],"f":[null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["modulegeneratoroptions",3]],[[]],[[["stdrng",3],["btreeset",3],["modulegeneratoroptions",3]],["moduledefinition",3]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["modulegeneratoroptions",3],["stdrng",3]],["compiledmodule",3]],[[["usize",15],["modulegeneratoroptions",3],["stdrng",3]]],[[["usize",15],["modulegeneratoroptions",3],["stdrng",3]]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,[[["usize",15],["modulegeneratoroptions",3],["compiledmodule",3]]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]]],"p":[[3,"ModuleGeneratorOptions"],[3,"ModuleGenerator"],[3,"Pad"]]},\
"move_analyzer":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"move_binary_format":{"doc":"","t":[13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,4,13,13,13,13,13,0,0,11,11,11,11,0,11,11,11,11,11,11,0,0,0,0,11,11,0,0,0,11,11,11,11,11,11,11,0,11,11,0,0,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,0,11,11,8,8,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,12,12,11,11,11,11,6,8,3,10,11,10,11,10,11,11,11,11,10,11,11,10,11,11,11,10,11,11,10,11,11,11,11,11,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,6,4,13,3,6,13,13,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,18,4,3,3,13,13,13,3,6,13,13,13,13,13,13,13,4,13,13,13,13,13,6,3,3,3,3,6,3,13,13,13,13,13,18,13,13,13,3,3,3,3,3,13,13,3,3,3,3,3,3,3,13,13,3,6,13,13,13,13,13,13,13,13,13,13,13,13,13,6,13,18,6,13,3,3,13,13,13,13,13,13,13,13,13,13,13,13,18,17,17,13,13,13,13,13,18,13,13,13,13,13,18,13,13,13,18,13,13,13,3,3,6,4,3,3,13,13,13,13,3,3,3,3,4,3,3,13,3,13,6,13,6,3,6,13,13,13,13,13,18,18,13,13,13,13,13,13,13,13,13,4,13,13,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,12,12,12,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,5,11,11,11,12,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,17,13,13,13,17,13,17,13,13,13,13,13,13,17,17,4,13,13,13,13,13,17,13,17,13,13,18,18,13,13,13,13,17,13,17,13,17,17,13,13,13,13,17,13,17,13,13,18,13,17,17,13,13,13,13,13,13,13,13,13,13,13,13,17,13,13,13,17,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,17,17,17,13,13,13,17,13,17,13,17,13,13,13,4,4,17,17,18,17,17,17,13,17,17,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,17,17,17,17,17,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,8,10,16,8,3,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,3,3,3,13,13,13,3,13,4,13,13,13,13,13,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,12,11,11,11,11,11,12,12,12,12,12,12,12,12,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,16,3,3,16,3,3,3,3,3,3,3,8,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AddressIdentifier","CodeDefinition","ConstantPool","FieldDefinition","FieldHandle","FieldInstantiation","FriendDeclaration","FunctionDefinition","FunctionHandle","FunctionInstantiation","Identifier","IndexKind","LocalPool","MemberCount","ModuleHandle","MutableReference","Reference","Signature","SignatureTokenKind","StructDefInstantiation","StructDefinition","StructHandle","TypeParameter","Value","access","binary_views","borrow","borrow","borrow_mut","borrow_mut","check_bounds","clone","clone","clone_into","clone_into","cmp","cmp","compatibility","constant","control_flow_graph","deserializer","eq","eq","errors","file_format","file_format_common","fmt","fmt","fmt","fmt","from","from","hash","internals","into","into","layout","normalized","partial_cmp","partial_cmp","proptest_types","serializer","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","variants","views","vzip","vzip","ModuleAccess","ScriptAccess","address","address_identifier_at","address_identifier_at","address_identifiers","address_identifiers","as_module","as_script","code","constant_at","constant_at","constant_pool","constant_pool","field_handle_at","field_handles","field_instantiation_at","field_instantiations","find_struct_def","friend_decls","function_def_at","function_defs","function_handle_at","function_handle_at","function_handles","function_handles","function_instantiation_at","function_instantiation_at","function_instantiations","function_instantiations","identifier_at","identifier_at","identifiers","identifiers","immediate_dependencies","immediate_dependencies","immediate_friends","module_handle_at","module_handle_at","module_handles","module_handles","module_id_for_handle","name","self_handle","self_handle_idx","self_id","signature_at","signature_at","signatures","signatures","struct_def_at","struct_defs","struct_handle_at","struct_handle_at","struct_handles","struct_handles","struct_instantiation_at","struct_instantiations","version","version","BinaryIndexedView","FunctionView","Module","Script","abilities","address_identifier_at","address_identifiers","borrow","borrow","borrow_mut","borrow_mut","cfg","clone","clone_into","code","constant_at","constant_pool","field_handle_at","field_handles","field_instantiation_at","field_instantiations","fmt","friend_decls","from","from","function","function_def_at","function_defs","function_handle_at","function_handles","function_instantiation_at","function_instantiations","identifier_at","identifiers","index","into","into","locals","module_handle_at","module_handles","module_id_for_handle","parameters","return_","script","self_handle_idx","self_id","signature_at","signatures","struct_def_at","struct_defs","struct_handle_at","struct_handles","struct_instantiation_at","struct_instantiations","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","type_parameters","version","vzip","vzip","0","0","BoundsChecker","borrow","borrow_mut","from","into","try_from","try_into","type_id","verify_module","verify_script","vzip","Compatibility","borrow","borrow_mut","check","from","into","is_fully_compatible","struct_and_function_linking","struct_layout","try_from","try_into","type_id","vzip","BlockId","ControlFlowGraph","VMControlFlowGraph","block_end","block_end","block_start","block_start","blocks","blocks","borrow","borrow_mut","display","entry_block_id","entry_block_id","from","instr_indexes","instr_indexes","into","new","num_blocks","num_blocks","reachable_from","successors","successors","try_from","try_into","type_id","vzip","DeprecatedNominalResourceFlag","NOMINAL_RESOURCE","NORMAL_STRUCT","borrow","borrow_mut","clone","clone_into","fmt","from","into","to_owned","try_from","try_into","type_id","vzip","BinaryLoaderResult","Location","Module","PartialVMError","PartialVMResult","Script","Undefined","VMError","VMResult","all_data","all_data","append_message_with_separator","at_code_offset","at_code_offsets","at_index","at_indices","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bounds_error","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","eq","eq","finish","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","indices","into","into","into","into_vm_status","location","major_status","major_status","message","ne","ne","new","offset_out_of_bounds","offsets","partial_cmp","partial_cmp","source","status_type","sub_status","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verification_error","vm_status_of_result","vzip","vzip","vzip","with_message","with_sub_status","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","ALL","Ability","AbilitySet","AbilitySetIterator","Abort","Add","Address","AddressIdentifierIndex","AddressIdentifierPool","And","BitAnd","BitOr","Bool","BrFalse","BrTrue","Branch","Bytecode","Call","CallGeneric","CastU128","CastU64","CastU8","CodeOffset","CodeUnit","CompiledModule","CompiledScript","Constant","ConstantPool","ConstantPoolIndex","Copy","CopyLoc","Declared","Div","Drop","EMPTY","Eq","Exists","ExistsGeneric","FieldDefinition","FieldHandle","FieldHandleIndex","FieldInstantiation","FieldInstantiationIndex","FreezeRef","Friend","FunctionDefinition","FunctionDefinitionIndex","FunctionHandle","FunctionHandleIndex","FunctionInstantiation","FunctionInstantiationIndex","FunctionSignature","Ge","Gt","IdentifierIndex","IdentifierPool","ImmBorrowField","ImmBorrowFieldGeneric","ImmBorrowGlobal","ImmBorrowGlobalGeneric","ImmBorrowLoc","Key","LdConst","LdFalse","LdTrue","LdU128","LdU64","LdU8","Le","LocalIndex","Lt","MAIN_INDEX","MemberCount","Mod","ModuleHandle","ModuleHandleIndex","MoveFrom","MoveFromGeneric","MoveLoc","MoveTo","MoveToGeneric","Mul","MutBorrowField","MutBorrowFieldGeneric","MutBorrowGlobal","MutBorrowGlobalGeneric","MutBorrowLoc","MutableReference","NATIVE","NO_TYPE_ARGUMENTS","NUMBER_OF_NATIVE_FUNCTIONS","Native","Neq","Nop","Not","Or","PRIMITIVES","Pack","PackGeneric","Pop","Private","Public","REFERENCES","ReadRef","Reference","Ret","SIGNER","Script","Shl","Shr","Signature","SignatureIndex","SignaturePool","SignatureToken","SignatureTokenPreorderTraversalIter","SignatureTokenPreorderTraversalIterWithDepth","Signer","StLoc","Store","Struct","StructDefInstantiation","StructDefInstantiationIndex","StructDefinition","StructDefinitionIndex","StructFieldInformation","StructHandle","StructHandleIndex","StructInstantiation","StructTypeParameter","Sub","TableIndex","TypeParameter","TypeParameterIndex","TypeSignature","TypeSignaturePool","U128","U64","U8","Unpack","UnpackGeneric","VARIANT_COUNT","VECTOR","VecImmBorrow","VecLen","VecMutBorrow","VecPack","VecPopBack","VecPushBack","VecSwap","VecUnpack","Vector","Visibility","WriteRef","Xor","abilities","acquires_global_resources","address","address_identifiers","address_identifiers","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","as_module","as_script","basic_test_module","basic_test_script","bitor","bitor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","code","code","code","constant_pool","constant_pool","constraints","data","debug_set_sh_idx","declared_field_count","def","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deserialize","deserialize","deserialize_constant","deserialize_no_check_bounds","empty_module","empty_script","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","field","field","field_handles","field_information","field_instantiations","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","friend_decls","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_u8","function","function_defs","function_handles","function_handles","function_instantiations","function_instantiations","get_successors","handle","handle","has_ability","has_copy","has_drop","has_key","has_store","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","identifiers","identifiers","intersect","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_index","into_index","into_index","into_index","into_index","into_index","into_index","into_index","into_index","into_index","into_index","into_index","into_index","into_iter","into_iter","into_iter","into_iter","into_u8","is_branch","is_conditional_branch","is_empty","is_integer","is_mutable_reference","is_native","is_phantom","is_reference","is_signer","is_subset","is_unconditional_branch","is_valid_for_constant","kind_count","len","locals","module","module","module_handles","module_handles","module_id_for_handle","name","name","name","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","new","new","new","new","new","new","new","next","next","next","offset","owner","parameters","parameters","parameters","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","polymorphic_abilities","preorder_traversal","preorder_traversal_with_depth","remove","required_by","requires","return_","return_","self_id","self_module_handle_idx","self_module_name","serialize","serialize","serialize_constant","signature","signature_token_kind","signatures","signatures","struct_def_instantiations","struct_defs","struct_handle","struct_handles","struct_handles","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_param_constraints","type_parameters","type_parameters","type_parameters","type_parameters","type_parameters","type_parameters","type_parameters","union","valid_strategy","version","version","visibility","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","0","0","0","0","0","0","1","0","ABORT","ACQUIRES_COUNT_MAX","ADD","ADDRESS","ADDRESS_IDENTIFIERS","ADDRESS_INDEX_MAX","AND","BINARY_SIZE_LIMIT","BIT_AND","BIT_OR","BOOL","BRANCH","BR_FALSE","BR_TRUE","BYTECODE_COUNT_MAX","BYTECODE_INDEX_MAX","BinaryConstants","CALL","CALL_GENERIC","CAST_U128","CAST_U64","CAST_U8","CONSTANT_INDEX_MAX","CONSTANT_POOL","CONSTANT_SIZE_MAX","COPY_LOC","DECLARED","DIEM_MAGIC","DIEM_MAGIC_SIZE","DIV","EQ","EXISTS","EXISTS_GENERIC","FIELD_COUNT_MAX","FIELD_HANDLE","FIELD_HANDLE_INDEX_MAX","FIELD_INST","FIELD_INST_INDEX_MAX","FIELD_OFFSET_MAX","FREEZE_REF","FRIEND_DECLS","FUNCTION_DEFS","FUNCTION_HANDLES","FUNCTION_HANDLE_INDEX_MAX","FUNCTION_INST","FUNCTION_INST_INDEX_MAX","GE","GT","HEADER_SIZE","IDENTIFIERS","IDENTIFIER_INDEX_MAX","IDENTIFIER_SIZE_MAX","IMM_BORROW_FIELD","IMM_BORROW_FIELD_GENERIC","IMM_BORROW_GLOBAL","IMM_BORROW_GLOBAL_GENERIC","IMM_BORROW_LOC","LD_CONST","LD_FALSE","LD_TRUE","LD_U128","LD_U64","LD_U8","LE","LOCAL_INDEX_MAX","LT","MOD","MODULE_HANDLES","MODULE_HANDLE_INDEX_MAX","MOVE_FROM","MOVE_FROM_GENERIC","MOVE_LOC","MOVE_TO","MOVE_TO_GENERIC","MUL","MUTABLE_REFERENCE","MUT_BORROW_FIELD","MUT_BORROW_FIELD_GENERIC","MUT_BORROW_GLOBAL","MUT_BORROW_GLOBAL_GENERIC","MUT_BORROW_LOC","NATIVE","NEQ","NOP","NOT","OR","Opcodes","PACK","PACK_GENERIC","POP","READ_REF","REFERENCE","RET","SHL","SHR","SIGNATURES","SIGNATURE_INDEX_MAX","SIGNATURE_SIZE_MAX","SIGNATURE_TOKEN_DEPTH_MAX","SIGNER","STRUCT","STRUCT_DEFS","STRUCT_DEF_INDEX_MAX","STRUCT_DEF_INST","STRUCT_DEF_INST_INDEX_MAX","STRUCT_HANDLES","STRUCT_HANDLE_INDEX_MAX","STRUCT_INST","ST_LOC","SUB","SerializedNativeStructFlag","SerializedType","TABLE_CONTENT_SIZE_MAX","TABLE_COUNT_MAX","TABLE_HEADER_SIZE","TABLE_INDEX_MAX","TABLE_OFFSET_MAX","TABLE_SIZE_MAX","TYPE_PARAMETER","TYPE_PARAMETER_COUNT_MAX","TYPE_PARAMETER_INDEX_MAX","TableType","U128","U64","U8","UNPACK","UNPACK_GENERIC","VECTOR","VEC_IMM_BORROW","VEC_LEN","VEC_MUT_BORROW","VEC_PACK","VEC_POP_BACK","VEC_PUSH_BACK","VEC_SWAP","VEC_UNPACK","VERSION_1","VERSION_2","VERSION_3","VERSION_4","VERSION_MAX","WRITE_REF","XOR","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","instruction_key","into","into","into","into","into","read_u32","read_u8","read_uleb128_as_u64","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","KIND","ModuleIndex","into_index","Error","GetModule","ModuleCache","StructLayoutBuilder","TypeLayoutBuilder","add","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_runtime","build_runtime","build_with_fields","build_with_fields","from","from","from","get_module_by_id","get_module_by_id","into","into","into","new","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Address","Bool","Field","Function","Module","MutableReference","Reference","Signer","Struct","Struct","Type","TypeParameter","U128","U64","U8","Vector","abilities","address","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","eq","eq","eq","eq","eq","exposed_functions","fields","fmt","fmt","fmt","fmt","fmt","fmt","friends","from","from","from","from","from","from","into","into","into","into","into","into_struct_tag","into_type_tag","is_closed","module_id","name","name","ne","ne","ne","ne","ne","new","new","new","new","new","new_from_name","parameters","partial_cmp","partial_cmp","return_","structs","subst","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","type_id","type_param_constraints","type_parameters","type_parameters","visibility","vzip","vzip","vzip","vzip","vzip","0","0","0","0","address","module","name","type_arguments","CompiledModuleStrategyGen","TableSize","borrow","borrow_mut","clone","clone_into","fmt","from","generate","into","new","to_owned","try_from","try_into","type_id","vzip","zeros_all","FieldDefinitionView","FieldHandleView","FieldInstantiationView","FunctionDefinitionView","FunctionHandleView","FunctionInstantiationView","Inner","LocalsSignatureView","ModuleHandleView","ModuleType","ModuleView","SignatureTokenView","SignatureView","StructDefinitionView","StructHandleView","StructInstantiationView","TypeSignatureView","ViewInternals","abilities","abilities","arg_count","arg_count","arg_tokens","arg_tokens","as_inner","as_inner","as_inner","as_inner","as_inner","as_inner","as_inner","as_inner","as_inner","as_inner","as_inner","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","code","field_handles","field_instantiations","fields","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","function_acquired_resources","function_definition","function_handles","function_instantiations","functions","handle","handle_idx","id","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_empty","is_empty","is_mutable_reference","is_native","is_native","is_reference","len","len","locals_signature","module","module","module","module","module","module","module","module","module","module","module","module_handle","module_handle","module_handles","module_id","module_id","module_id","name","name","name","name","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","parameters","parameters","return_","return_","return_count","return_count","return_tokens","return_tokens","self_handle_idx","signature_token","signature_token","signature_token_kind","signature_token_view","signatures","struct_definition","struct_handles","struct_instantiations","structs","to_owned","to_owned","token","token_at","token_at","tokens","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_parameters","type_parameters","type_parameters","type_parameters","type_signature","visibility","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["move_binary_format","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_binary_format::access","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_binary_format::binary_views","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_binary_format::binary_views::BinaryIndexedView","","move_binary_format::check_bounds","","","","","","","","","","","move_binary_format::compatibility","","","","","","","","","","","","","move_binary_format::control_flow_graph","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_binary_format::deserializer","","","","","","","","","","","","","","","move_binary_format::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_binary_format::errors::Location","move_binary_format::file_format","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_binary_format::file_format::Bytecode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_binary_format::file_format::SignatureToken","","","","","","","move_binary_format::file_format::StructFieldInformation","move_binary_format::file_format_commonmove_binary_format::internals","","","move_binary_format::layout","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_binary_format::normalized","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_binary_format::normalized::Type","","","","","","","","move_binary_format::proptest_types","","","","","","","","","","","","","","","","","move_binary_format::viewsd":["","","","","","","","","","","","Represents a kind of index – useful for error messages.","","","","A mutable reference.","A reference.","","Represents the kind of a signature token.","","","","","Any sort of owned value that isn’t an array (Integer, …","Defines accessors for compiled modules.","","","","","","","","","","","","","","","This module defines the control-flow graph uses for …","","","","","Binary format for transactions and modules.","Constants for the binary format.","","","","","","","","Types meant for use by other parts of this crate, and by …","","","","","","","Utilities for property-based testing.","Serialization of transactions and modules.","","","","","","","","","","","","An alternate representation of the file format built on …","","","Represents accessors for a compiled module.","Represents accessors for a compiled script.","Returns the address of the module.","","","","","Returns the <code>CompiledModule</code> that will be used for accesses.","Returns the <code>CompiledScript</code> that will be used for accesses.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the name of the module.","Returns the <code>ModuleHandle</code> for <code>self</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The result of a linking and layout compatibility check. …","","","Return compatibility assessment for <code>new_module</code> relative to …","","","Return true if the two module s compared in the …","If false, dependent modules that reference functions or …","If false, attempting to read structs previously published …","","","","","","A trait that specifies the basic requirements for a CFG","The control flow graph that we build from the bytecode.","End index of the block ID in the bytecode vector","","Start index of the block ID in the bytecode vector","","Return an iterator over the blocks of the CFG","","","","","Return the id of the entry block for this control-flow …","","","Iterator over the indexes of instructions in this block","","","","Return the number of blocks (vertices) in the control flow …","","","Successors of the block ID in the bytecode vector","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Append the message <code>message</code> to the message field of the VM …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ability set containing all abilities","An <code>Ability</code> classifies what operations are permitted for a …","A set of <code>Ability</code>s","","Abort execution with errorcode","Add the 2 u64 at the top of the stack and pushes the …","Address, a 16 bytes immutable type.","Index into the <code>AddressIdentifier</code> table.","The pool of address identifiers (addresses used in …","Logical AND the 2 bool at the top of the stack and pushes …","Bitwise AND the 2 u64 at the top of the stack and pushes …","Bitwise OR the 2 u64 at the top of the stack and pushes …","Boolean, <code>true</code> or <code>false</code>.","Branch to the instruction at position <code>CodeOffset</code> if the …","Branch to the instruction at position <code>CodeOffset</code> if the …","Branch unconditionally to the instruction at position …","<code>Bytecode</code> is a VM instruction of variable size. The type of …","Call a function. The stack has the arguments pushed first …","","Convert the value at the top of the stack into u128.","Convert the value at the top of the stack into u64.","Convert the value at the top of the stack into u8.","Index into the code stream for a jump. The offset is …","A <code>CodeUnit</code> is the body of a function. It has the function …","A <code>CompiledModule</code> defines the structure of a module which …","Contains the main function to execute and its dependencies.","A <code>Constant</code> is a serialized value along with its type. That …","The pool of <code>Constant</code> values","Index into the <code>ConstantPool</code> table.","Allows values of types with this ability to be copied, via …","Push the local identified by <code>LocalIndex</code> onto the stack. …","","Divide the 2 u64 at the top of the stack and pushes the …","Allows values of types with this ability to be dropped, …","The empty ability set","Compare for equality the 2 value at the top of the stack …","Returns whether or not a given address has an object of …","","A <code>FieldDefinition</code> is the definition of a field: its name …","A field access info (owner type and offset)","Index into the <code>FieldHandle</code> table.","A complete or partial instantiation of a field (or the …","Index into the <code>FieldInstantiation</code> table.","Convert a mutable reference to an immutable reference.","Accessible by this module as well as modules declared in …","A <code>FunctionDefinition</code> is the implementation of a function. …","Index into the <code>FunctionDefinition</code> table.","A <code>FunctionHandle</code> is a reference to a function. It is …","Index into the <code>FunctionHandle</code> table.","A complete or partial instantiation of a function","Index into the <code>FunctionInstantiation</code> table.","A <code>FunctionSignature</code> in internally used to create a unique …","Perform a “greater than or equal” than operation of …","Perform a “greater than” operation of the 2 u64 at the …","Index into the <code>Identifier</code> table.","The pool of identifiers.","Load an immutable reference to a field identified by …","Load an immutable reference to a field identified by …","Return an immutable reference to an instance of type …","","Load an immutable reference to a local identified by …","Allows the type to serve as a key for global storage …","Push a <code>Constant</code> onto the stack. The value is loaded and …","Push <code>false</code> onto the stack.","Push <code>true</code> onto the stack.","Push a U128 constant onto the stack.","Push a U64 constant onto the stack.","Push a U8 constant onto the stack.","Perform a “less than or equal” operation of the 2 u64 …","Index of a local variable in a function.","Perform a “less than” operation of the 2 u64 at the …","Returns the index of <code>main</code> in case a script is converted to …","Max number of fields in a <code>StructDefinition</code>.","Perform a modulo operation on the 2 u64 at the top of the …","A <code>ModuleHandle</code> is a reference to a MOVE module. It is …","Index into the <code>ModuleHandle</code> table.","Move the instance of type StructDefinitionIndex, at the …","","Push the local identified by <code>LocalIndex</code> onto the stack. …","Move the instance at the top of the stack to the address …","","Multiply the 2 u64 at the top of the stack and pushes the …","Load a mutable reference to a field identified by …","Load a mutable reference to a field identified by …","Return a mutable reference to an instance of type …","","Load a mutable reference to a local identified by …","Mutable reference to a type.","A native function implemented in Rust.","Index 0 into the LocalsSignaturePool, which is guaranteed …","","","Compare for inequality the 2 value at the top of the stack …","No operation.","Logical NOT the bool at the top of the stack and pushes …","Logical OR the 2 bool at the top of the stack and pushes …","Abilities for <code>Bool</code>, <code>U8</code>, <code>U64</code>, <code>U128</code>, and <code>Address</code>","Create an instance of the type specified via …","","Pop and discard the value at the top of the stack. The …","Accessible within its defining module only.","Accessible by any module or script outside of its …","Abilities for <code>Reference</code> and <code>MutableReference</code>","Read a reference. The reference is on the stack, it is …","Reference to a type.","Return from function, possibly with values according to …","Abilities for <code>Signer</code>","Accessible by any script or other <code>Script</code> functions from …","Shift the (second top value) left (top value) bits and …","Shift the (second top value) right (top value) bits and …","A <code>Signature</code> is the list of locals used by a function.","Index into the <code>Signature</code> table.","The pool of <code>Signature</code> instances. Every function definition …","A <code>SignatureToken</code> is a type declaration for a location.","An iterator to help traverse the <code>SignatureToken</code> in a …","Alternative preorder traversal iterator for SignatureToken …","Signer, a 16 bytes immutable type representing the …","Pop value from the top of the stack and store it into the …","Allows values of types with this ability to exist inside a …","User defined type","A complete or partial instantiation of a generic struct","Index into the <code>StructInstantiation</code> table.","A <code>StructDefinition</code> is a type definition. It either …","Index into the <code>StructDefinition</code> table.","<code>StructFieldInformation</code> indicates whether a struct is …","A <code>StructHandle</code> is a reference to a user defined type. It …","Index into the <code>StructHandle</code> table.","","A type parameter used in the declaration of a struct.","Subtract the 2 u64 at the top of the stack and pushes the …","Generic index into one of the tables in the binary format.","Type parameter.","Type parameters are encoded as indices. This index can …","A type definition. <code>SignatureToken</code> allows the definition of …","The pool of <code>TypeSignature</code> instances. Those are system and …","Unsigned integers, 128 bits length.","Unsigned integers, 64 bits length.","Unsigned integers, 8 bits length.","Destroy an instance of a type and push the values bound to …","","","Abilities for <code>Vector</code>, note they are predicated on the type …","Acquire an immutable reference to the element at a given …","Return the length of the vector,","Acquire a mutable reference to the element at a given …","Create a vector by packing a statically known number of …","Pop an element from the end of vector. Aborts if the …","Add an element to the end of the vector.","Swaps the elements at two indices in the vector. Abort the …","Destroy the vector and unpack a statically known number of …","Vector","<code>Visibility</code> restricts the accessibility of the associated …","Write to a reference. The reference and the value are on …","Bitwise XOR the 2 u64 at the top of the stack and pushes …","Contains the abilities for this struct For any …","List of locally defined types (declared in this module) …","Index into the <code>AddressIdentifierIndex</code>. Identifies …","All address identifiers used in this transaction.","All address identifiers used in this module.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create the following module which is convenient in tests: …ode for this function.","Code stream, function body.","","Constant pool. The constant values used in the transaction.","Constant pool. The constant values used in the module.","The type parameter constraints.","","Set the index to this one. Useful for random testing.","","","","","","","","","","","","","","","","","","","","","","Deserializes a &amp;u8 slice into a <code>CompiledScript</code> instance.","Deserialize a &amp;u8 slice into a <code>CompiledModule</code> instance.","","","Return the simplest module that will pass the bounds …","Return a simple script that contains only a return in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Handles to fields.","Contains either","Field instantiations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Friend declarations, represented as a collection of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The prototype of the function (module, name, signature).","Function defined in this module.","Handles to external/imported functions.","Handles to external and internal functions.","Function instantiations.","Function instantiations.","Return the successor offsets of this bytecode instruction.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All identifiers used in this transaction.","All identifiers used in this module.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if this bytecode instruction is either a …","Return true if the branching behavior of this bytecode …","Whether the function has no locals (both arguments or …","","Returns true if the <code>SignatureToken</code> is a mutable reference.","Returns whether the FunctionDefinition is native.","Whether the parameter is declared as phantom.","Returns true if the <code>SignatureToken</code> is any kind of …","Returns true if the <code>SignatureToken</code> is a signer","","Return true if this bytecode instruction always branches","Returns true if the <code>SignatureToken</code> can represent a …","Returns the count of a specific <code>IndexKind</code>","Length of the <code>Signature</code>.","List of locals type. All locals are typed.","The module that defines the type.","The module that defines the function.","Handles to all modules referenced.","Handles to external dependency modules and self.","Returns the code key of <code>module_handle</code>","The name of the module published in the code section for …","The name of the type.","The name of the function.","The name of the field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the offset that this bytecode instruction branches …","","The list of arguments to the function.","The list of arguments to the function.","","","","","","","","","","","","","","","","","","","","","","","For a polymorphic type, its actual abilities correspond to …","","","","An inverse of <code>requires</code>, where x is in a.required_by() iff …","For a struct with ability <code>a</code>, each field needs to have the …","The list of return types.","The list of return types.","Returns the code key of <code>self</code>","Handle to self.","","Serializes a <code>CompiledScript</code> into a binary. The mutable …","Serializes a <code>CompiledModule</code> into a binary. The mutable …","","The type of the field.","Returns the “value kind” for the <code>SignatureToken</code>","","Locals signature pool. The signature for all locals of the …","Struct instantiations.","Types defined in this module.","The <code>StructHandle</code> for this <code>StructDefinition</code>. This has the …","Handles to external/imported types.","Handles to external and internal typeshe type formals (identified by their index into the vec)","The type formals (identified by their index into the vec) …","","","","The type formals (identified by their index into the vec) …","","","Convenience wrapper around <code>CompiledModuleStrategyGen</code> that …","Version number found during deserialization","Version number found during deserialization","The visibility of this function.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Upper limit on the binary size","","","","","","","","","Constant values for the binary format header.","","","","","","","","","","","","The blob that must start a binary.","","","","","","","","","","","","","","","","","","","","The <code>DIEM_MAGIC</code> size, 4 byte for major version and 1 byte …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","List of opcodes constants.","","","","","","","","","","","","","","","","","","","","","","","","","Constants for signature blob values.","","","A (Table Type, Start Offset, Byte Count) size, which is 1 …","","","","","","","Constants for table types in the binary.","","","","","","","","","","","","","","","Version 1: the initial version","Version 2: changes compared with version 1 + function …","Version 3: changes compared with version 2 + phantom type …","Version 4: changes compared with version 3 + bytecode for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The encoding of the instruction is the serialized form of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents a module index.","","","A persistent storage that can fetch the bytecode for a …","Simple in-memory module cache","","","","","","","","","","Construct a runtime <code>TypeLayout</code> from <code>t</code>. Panics if <code>resolver</code> …","","Construct <code>TypeLayout</code> with fields from <code>t</code>. Panics if <code>resolver</code>…","","","","","","","","","","","","","","","","","","","","","","","","","Normalized version of a <code>FieldDefinition</code>. The <code>name</code> is …","Normalized version of a <code>FunctionDefinition</code>. Not safe to …","Normalized version of a <code>CompiledModule</code>: its address, name, …","","","","Normalized version of a <code>StructDefinition</code>. Not safe to …","","Defines normalized representations of Move types, fields, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return true if <code>self</code> is a closed type with no free type …","","","","","","","","","Create a normalized <code>Type</code> for <code>SignatureToken</code> <code>s</code> in module <code>m</code>.","Create a <code>Field</code> for <code>FieldDefinition</code> <code>f</code> in module <code>m</code>.","Create a <code>Struct</code> for <code>StructDefinition</code> <code>def</code> in module <code>m</code>. …","Create a <code>FunctionSignature</code> for <code>FunctionHandle</code> <code>f</code> in module <code>m</code>…","Extract a normalized module from a <code>CompiledModule</code>. The …","Create a <code>Function</code> for function named <code>func_name</code> in module <code>m</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains configuration to generate <code>CompiledModule</code> …","Represents how large <code>CompiledModule</code> tables can be.","","","","","","","Create a <code>proptest</code> strategy for <code>CompiledModule</code> instances …","","Create a new configuration for randomly generating …","","","","","","Zero out all fields, type parameters, arguments and return …","","","","","","","","","","","Represents a lazily evaluated abstraction over a module.","","","","","","","This is used to expose some view internals to checks and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the StructHandleIndex of this handle in the module…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,2,2,1,0,1,1,1,1,2,0,0,1,2,1,2,0,1,2,1,2,1,2,0,0,0,0,1,2,0,0,0,1,1,2,2,1,2,1,0,1,2,0,0,1,2,0,0,1,2,1,2,1,2,1,2,1,2,1,0,1,2,0,0,3,3,4,3,4,3,4,4,3,4,3,4,3,3,3,3,3,3,3,3,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,3,4,3,4,3,3,3,3,3,3,4,3,4,3,3,3,4,3,4,3,3,3,4,0,0,5,5,5,5,5,6,5,6,5,6,5,5,6,5,5,5,5,5,5,5,5,6,5,6,5,5,5,5,5,5,5,5,6,6,5,6,5,5,5,6,6,6,5,5,5,5,5,5,5,5,5,5,5,6,5,6,5,6,5,6,5,6,5,7,8,0,9,9,9,9,9,9,9,9,9,9,0,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,11,12,11,12,11,12,12,12,12,11,12,12,11,12,12,12,11,12,12,11,12,12,12,12,12,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,14,0,0,14,14,0,0,15,16,16,16,16,16,16,14,15,16,14,15,16,0,14,15,16,14,15,16,14,15,14,15,16,14,14,15,15,16,16,14,15,16,15,14,15,16,15,15,15,16,15,14,15,16,0,15,14,15,16,15,15,14,15,16,14,15,16,14,15,16,14,15,16,14,15,16,0,0,14,15,16,16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,0,0,0,34,34,35,0,0,34,34,34,35,34,34,34,0,34,34,34,34,34,0,0,0,0,0,0,0,36,34,37,34,36,33,34,34,34,0,0,0,0,0,34,38,0,0,0,0,0,0,0,34,34,0,0,34,34,34,34,34,36,34,34,34,34,34,34,34,0,34,39,0,34,0,0,34,34,34,34,34,34,34,34,34,34,34,35,40,0,0,37,34,34,34,34,33,34,34,34,38,38,33,34,35,34,33,38,34,34,0,0,0,0,0,0,35,34,36,35,0,0,0,0,0,0,0,35,0,34,0,35,0,0,0,35,35,35,34,34,34,33,34,34,34,34,34,34,34,34,35,0,34,34,41,40,42,39,43,18,19,20,21,22,23,24,25,26,27,28,29,30,42,41,44,45,46,37,47,48,49,50,51,38,40,31,52,32,36,33,35,53,34,39,43,43,39,0,0,33,33,54,55,56,18,19,20,21,22,23,24,25,26,27,28,29,30,42,41,44,45,46,37,47,48,49,50,51,38,40,31,52,32,36,33,35,57,53,34,39,43,54,55,56,18,19,20,21,22,23,24,25,26,27,28,29,30,42,41,44,45,46,37,47,48,49,50,51,38,40,31,52,32,36,33,35,57,53,34,39,43,18,19,20,21,22,23,24,25,26,27,28,29,30,42,41,44,45,46,37,47,48,49,50,51,38,40,31,52,32,36,33,35,57,53,34,39,43,18,19,20,21,22,23,24,25,26,27,28,29,30,42,41,44,45,46,37,47,48,49,50,51,38,40,31,52,32,36,33,35,57,53,34,39,43,18,19,20,21,22,23,24,25,26,27,28,29,30,42,41,44,38,32,36,33,35,40,53,39,39,43,44,57,35,50,47,18,19,20,21,22,23,24,25,26,27,28,29,30,38,40,32,53,39,43,39,43,57,43,0,0,18,19,20,21,22,23,24,25,26,27,28,29,30,42,41,44,45,46,37,47,48,49,50,51,38,40,31,52,32,36,33,35,57,53,34,39,43,50,46,43,50,43,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,42,41,44,45,46,37,47,48,49,50,51,38,40,31,52,32,36,33,35,57,53,34,39,43,43,54,55,56,18,19,20,21,22,23,24,25,26,27,28,29,30,42,41,44,45,46,37,47,48,49,50,51,38,40,31,52,32,36,33,35,57,53,34,39,43,33,40,43,39,43,39,43,34,48,49,33,33,33,33,33,18,19,20,21,22,23,24,25,26,27,28,29,30,42,41,44,45,46,47,48,49,31,52,32,36,33,35,57,34,39,43,33,54,55,56,18,19,20,21,22,23,24,25,26,27,28,29,30,42,41,44,45,46,37,47,48,49,50,51,38,40,31,52,32,36,33,35,57,53,34,39,43,18,19,20,21,22,23,24,25,26,27,28,29,30,54,55,56,33,33,34,34,32,35,35,40,44,35,35,33,34,35,43,32,53,41,45,39,43,43,42,41,45,51,18,19,20,21,22,23,24,25,26,27,28,29,30,42,41,44,45,46,37,47,48,49,50,51,40,31,52,32,33,35,57,53,34,39,43,18,19,20,21,22,23,24,25,26,27,28,29,30,54,55,56,34,46,45,52,39,18,19,20,21,22,23,24,25,26,27,28,29,30,42,41,44,38,32,36,33,35,33,35,35,33,36,36,45,52,43,43,0,39,43,57,51,35,39,43,43,43,50,39,43,18,19,20,21,22,23,24,25,26,27,28,29,30,42,41,44,45,46,37,47,48,49,50,51,38,40,31,52,32,36,33,35,57,53,34,39,43,18,19,20,21,22,23,24,25,26,27,28,29,30,54,55,56,18,19,20,21,22,23,24,25,26,27,28,29,30,42,41,44,45,46,37,47,48,49,50,51,38,38,40,31,52,32,36,33,35,57,53,34,39,43,54,55,56,18,19,20,21,22,23,24,25,26,27,28,29,30,42,41,44,45,46,37,47,48,49,50,51,38,40,31,52,32,36,33,35,57,53,34,39,43,57,54,55,56,18,19,20,21,22,23,24,25,26,27,28,29,30,42,41,44,45,46,37,47,48,49,50,51,38,40,31,52,32,36,33,35,57,53,34,39,43,41,41,45,47,48,49,52,39,33,43,39,43,40,54,55,56,18,19,20,21,22,23,24,25,26,27,28,29,30,42,41,44,45,46,37,47,48,49,50,51,38,40,31,52,32,36,33,35,57,53,34,39,43,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,90,96,98,99,100,101,102,103,100,104,105,0,105,106,107,0,105,0,105,105,106,105,105,105,0,0,0,105,105,105,105,105,0,107,0,105,108,109,109,105,105,105,105,0,107,0,107,0,0,105,107,107,107,0,107,0,105,105,109,107,0,0,105,105,105,105,105,105,105,105,105,105,105,105,0,105,105,107,0,105,105,105,105,105,105,106,105,105,105,105,105,108,105,105,105,105,0,105,105,105,105,106,105,105,105,107,0,0,0,106,106,107,0,107,0,107,0,106,105,105,0,0,0,0,109,0,0,0,106,0,0,0,106,106,106,105,105,106,105,105,105,105,105,105,105,105,0,0,0,0,0,105,105,109,107,106,108,105,109,107,106,108,105,107,106,108,105,107,106,108,105,107,107,106,108,105,109,107,106,108,105,107,0,109,107,106,108,105,0,0,0,107,106,108,105,109,107,106,108,105,109,107,106,108,105,109,107,106,108,105,109,107,106,108,105,110,0,110,111,0,0,0,0,112,112,113,114,112,113,114,113,114,113,114,112,113,114,111,112,112,113,114,112,112,113,114,112,113,114,112,113,114,112,113,114,115,115,0,0,0,115,115,115,0,115,0,115,115,115,115,115,116,117,115,118,116,119,117,115,118,116,119,117,115,118,116,119,117,115,118,116,119,117,115,119,115,118,116,119,117,117,116,115,115,118,116,119,117,117,115,115,118,116,119,117,115,118,116,119,117,115,115,115,117,118,117,115,118,116,119,117,115,118,116,119,117,119,119,115,119,119,117,115,115,118,116,119,117,115,115,118,116,119,117,115,118,116,119,117,118,115,118,116,119,117,116,116,119,119,115,118,116,119,117,120,121,122,123,124,124,124,124,0,0,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,0,0,0,0,0,0,126,0,0,126,0,0,0,0,0,0,0,0,127,128,129,130,129,130,126,131,132,127,129,128,133,130,134,135,136,131,132,127,129,128,133,137,130,138,139,140,141,134,135,136,131,132,127,129,128,133,137,130,138,139,140,141,134,135,136,129,130,129,130,130,131,131,128,131,132,127,129,128,133,137,130,138,139,140,141,134,135,136,131,131,131,131,131,127,127,131,131,132,127,129,128,133,137,130,138,139,140,141,134,135,136,137,135,136,128,130,136,137,135,130,126,131,132,127,129,128,133,130,134,135,136,127,129,131,132,127,129,127,129,128,133,130,131,132,127,129,128,133,130,138,139,140,141,134,135,136,129,130,129,130,129,130,129,130,131,133,136,136,133,131,131,131,131,131,129,130,134,137,135,135,131,132,127,129,128,133,137,130,138,139,140,141,134,135,136,131,132,127,129,128,133,137,130,138,139,140,141,134,135,136,131,132,127,129,128,133,137,130,138,139,140,141,134,135,136,127,129,128,130,133,130,131,132,127,129,128,133,137,130,138,139,140,141,134,135,136],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,[[],["indexkind",4]],[[],["signaturetokenkind",4]],[[]],[[]],[[["indexkind",4]],["ordering",4]],[[["signaturetokenkind",4]],["ordering",4]],null,null,null,null,[[["indexkind",4]],["bool",15]],[[["signaturetokenkind",4]],["bool",15]],null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],null,[[]],[[]],null,null,[[["indexkind",4]],[["option",4,["ordering"]],["ordering",4]]],[[["signaturetokenkind",4]],[["option",4,["ordering"]],["ordering",4]]],null,null,[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,[[]],[[]],null,null,[[],["accountaddress",3]],[[["addressidentifierindex",3]],["accountaddress",3]],[[["addressidentifierindex",3]],["accountaddress",3]],[[]],[[]],[[],["compiledmodule",3]],[[],["compiledscript",3]],[[],["codeunit",3]],[[["constantpoolindex",3]],["constant",3]],[[["constantpoolindex",3]],["constant",3]],[[]],[[]],[[["fieldhandleindex",3]],["fieldhandle",3]],[[]],[[["fieldinstantiationindex",3]],["fieldinstantiation",3]],[[]],[[["structhandleindex",3]],[["option",4,["structdefinition"]],["structdefinition",3]]],[[]],[[["functiondefinitionindex",3]],["functiondefinition",3]],[[]],[[["functionhandleindex",3]],["functionhandle",3]],[[["functionhandleindex",3]],["functionhandle",3]],[[]],[[]],[[["functioninstantiationindex",3]],["functioninstantiation",3]],[[["functioninstantiationindex",3]],["functioninstantiation",3]],[[]],[[]],[[["identifierindex",3]],["identstr",3]],[[["identifierindex",3]],["identstr",3]],[[]],[[]],[[],[["moduleid",3],["vec",3,["moduleid"]]]],[[],[["moduleid",3],["vec",3,["moduleid"]]]],[[],[["moduleid",3],["vec",3,["moduleid"]]]],[[["modulehandleindex",3]],["modulehandle",3]],[[["modulehandleindex",3]],["modulehandle",3]],[[]],[[]],[[["modulehandle",3]],["moduleid",3]],[[],["identstr",3]],[[],["modulehandle",3]],[[],["modulehandleindex",3]],[[],["moduleid",3]],[[["signatureindex",3]],["signature",3]],[[["signatureindex",3]],["signature",3]],[[]],[[]],[[["structdefinitionindex",3]],["structdefinition",3]],[[]],[[["structhandleindex",3]],["structhandle",3]],[[["structhandleindex",3]],["structhandle",3]],[[]],[[]],[[["structdefinstantiationindex",3]],["structdefinstantiation",3]],[[]],[[],["u32",15]],[[],["u32",15]],null,null,null,null,[[["signaturetoken",4]],[["partialvmresult",6,["abilityset"]],["abilityset",3]]],[[["addressidentifierindex",3]],["accountaddress",3]],[[]],[[]],[[]],[[]],[[]],[[],["vmcontrolflowgraph",3]],[[],["binaryindexedview",4]],[[]],[[],["codeunit",3]],[[["constantpoolindex",3]],["constant",3]],[[]],[[["fieldhandleindex",3]],[["partialvmresult",6,["fieldhandle"]],["fieldhandle",3]]],[[],["option",4]],[[["fieldinstantiationindex",3]],[["fieldinstantiation",3],["partialvmresult",6,["fieldinstantiation"]]]],[[],["option",4]],[[["formatter",3]],["result",6]],[[],["option",4]],[[]],[[]],[[["compiledmodule",3],["codeunit",3],["functiondefinitionindex",3],["functionhandle",3]]],[[["functiondefinitionindex",3]],[["functiondefinition",3],["partialvmresult",6,["functiondefinition"]]]],[[],["option",4]],[[["functionhandleindex",3]],["functionhandle",3]],[[]],[[["functioninstantiationindex",3]],["functioninstantiation",3]],[[]],[[["identifierindex",3]],["identstr",3]],[[]],[[],[["option",4,["functiondefinitionindex"]],["functiondefinitionindex",3]]],[[]],[[]],[[],["signature",3]],[[["modulehandleindex",3]],["modulehandle",3]],[[]],[[["modulehandle",3]],["moduleid",3]],[[],["signature",3]],[[],["signature",3]],[[["compiledscript",3]]],[[],[["option",4,["modulehandleindex"]],["modulehandleindex",3]]],[[],[["option",4,["moduleid"]],["moduleid",3]]],[[["signatureindex",3]],["signature",3]],[[]],[[["structdefinitionindex",3]],[["structdefinition",3],["partialvmresult",6,["structdefinition"]]]],[[],["option",4]],[[["structhandleindex",3]],["structhandle",3]],[[]],[[["structdefinstantiationindex",3]],[["partialvmresult",6,["structdefinstantiation"]],["structdefinstantiation",3]]],[[],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[],["u32",15]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["compiledmodule",3]],["partialvmresult",6]],[[["compiledscript",3]],["partialvmresult",6]],[[]],null,[[]],[[]],[[["module",3]],["compatibility",3]],[[]],[[]],[[],["bool",15]],null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,[[["blockid",6]],["codeoffset",6]],[[["blockid",6]],["codeoffset",6]],[[["blockid",6]],["codeoffset",6]],[[["blockid",6]],["codeoffset",6]],[[],[["vec",3,["blockid"]],["blockid",6]]],[[],[["vec",3,["blockid"]],["blockid",6]]],[[]],[[]],[[]],[[],["blockid",6]],[[],["blockid",6]],[[]],[[["blockid",6]],[["box",3,["iterator"]],["iterator",8]]],[[["blockid",6]],[["box",3,["iterator"]],["iterator",8]]],[[]],[[]],[[],["u16",15]],[[],["u16",15]],[[["blockid",6]],[["vec",3,["blockid"]],["blockid",6]]],[[["blockid",6]],["vec",3]],[[["blockid",6]],["vec",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,[[]],[[]],[[],["deprecatednominalresourceflag",4]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[["string",3],["char",15]]],[[["codeoffset",6],["functiondefinitionindex",3]]],[[["vec",3]]],[[["indexkind",4],["tableindex",6]]],[[["vec",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15],["indexkind",4],["tableindex",6],["statuscode",4]],["partialvmerror",3]],[[],["location",4]],[[],["vmerror",3]],[[],["partialvmerror",3]],[[]],[[]],[[]],[[["location",4]],["ordering",4]],[[["vmerror",3]],["ordering",4]],[[["location",4]],["bool",15]],[[["vmerror",3]],["bool",15]],[[["location",4]],["vmerror",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["vec",3]],[[]],[[]],[[]],[[],["vmstatus",4]],[[],["location",4]],[[],["statuscode",4]],[[],["statuscode",4]],[[],[["string",3],["option",4,["string"]]]],[[["location",4]],["bool",15]],[[["vmerror",3]],["bool",15]],[[["statuscode",4]]],[[["usize",15],["indexkind",4],["codeoffset",6],["functiondefinitionindex",3],["statuscode",4]],["partialvmerror",3]],[[],["vec",3]],[[["location",4]],[["option",4,["ordering"]],["ordering",4]]],[[["vmerror",3]],[["option",4,["ordering"]],["ordering",4]]],[[],[["error",8],["option",4,["error"]]]],[[],["statustype",4]],[[],[["u64",15],["option",4,["u64"]]]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["indexkind",4],["statuscode",4],["tableindex",6]],["partialvmerror",3]],[[["vmresult",6]],["vmstatus",4]],[[]],[[]],[[]],[[["string",3]]],[[["u64",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["compiledmodule",3]],[[],["compiledscript",3]],[[],["compiledmodule",3]],[[],["compiledscript",3]],[[]],[[["ability",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["modulehandleindex",3]],[[],["structhandleindex",3]],[[],["functionhandleindex",3]],[[],["fieldhandleindex",3]],[[],["structdefinstantiationindex",3]],[[],["functioninstantiationindex",3]],[[],["fieldinstantiationindex",3]],[[],["identifierindex",3]],[[],["addressidentifierindex",3]],[[],["constantpoolindex",3]],[[],["signatureindex",3]],[[],["structdefinitionindex",3]],[[],["functiondefinitionindex",3]],[[],["modulehandle",3]],[[],["structhandle",3]],[[],["structtypeparameter",3]],[[],["functionhandle",3]],[[],["fieldhandle",3]],[[],["structfieldinformation",4]],[[],["structdefinstantiation",3]],[[],["functioninstantiation",3]],[[],["fieldinstantiation",3]],[[],["structdefinition",3]],[[],["fielddefinition",3]],[[],["visibility",4]],[[],["functiondefinition",3]],[[],["typesignature",3]],[[],["functionsignature",3]],[[],["signature",3]],[[],["ability",4]],[[],["abilityset",3]],[[],["signaturetoken",4]],[[],["constant",3]],[[],["codeunit",3]],[[],["bytecode",4]],[[],["compiledscript",3]],[[],["compiledmodule",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["modulehandleindex",3]],["ordering",4]],[[["structhandleindex",3]],["ordering",4]],[[["functionhandleindex",3]],["ordering",4]],[[["fieldhandleindex",3]],["ordering",4]],[[["structdefinstantiationindex",3]],["ordering",4]],[[["functioninstantiationindex",3]],["ordering",4]],[[["fieldinstantiationindex",3]],["ordering",4]],[[["identifierindex",3]],["ordering",4]],[[["addressidentifierindex",3]],["ordering",4]],[[["constantpoolindex",3]],["ordering",4]],[[["signatureindex",3]],["ordering",4]],[[["structdefinitionindex",3]],["ordering",4]],[[["functiondefinitionindex",3]],["ordering",4]],[[["modulehandle",3]],["ordering",4]],[[["structhandle",3]],["ordering",4]],[[["structtypeparameter",3]],["ordering",4]],[[["visibility",4]],["ordering",4]],[[["signature",3]],["ordering",4]],[[["ability",4]],["ordering",4]],[[["abilityset",3]],["ordering",4]],[[["signaturetoken",4]],["ordering",4]],null,null,null,null,null,null,null,[[["structhandleindex",3]]],[[],[["membercount",6],["partialvmresult",6,["membercount"]]]],null,[[],["modulehandleindex",3]],[[],["structhandleindex",3]],[[],["functionhandleindex",3]],[[],["fieldhandleindex",3]],[[],["structdefinstantiationindex",3]],[[],["functioninstantiationindex",3]],[[],["fieldinstantiationindex",3]],[[],["identifierindex",3]],[[],["addressidentifierindex",3]],[[],["constantpoolindex",3]],[[],["signatureindex",3]],[[],["structdefinitionindex",3]],[[],["functiondefinitionindex",3]],[[]],[[],["functiondefinition",3]],[[],["signature",3]],[[],["codeunit",3]],[[],["compiledscript",3]],[[],["compiledmodule",3]],[[],["binaryloaderresult",6]],[[],["binaryloaderresult",6]],[[],[["option",4,["movevalue"]],["movevalue",4]]],[[],["binaryloaderresult",6]],[[],["compiledmodule",3]],[[],["compiledscript",3]],[[["modulehandleindex",3]],["bool",15]],[[["structhandleindex",3]],["bool",15]],[[["functionhandleindex",3]],["bool",15]],[[["fieldhandleindex",3]],["bool",15]],[[["structdefinstantiationindex",3]],["bool",15]],[[["functioninstantiationindex",3]],["bool",15]],[[["fieldinstantiationindex",3]],["bool",15]],[[["identifierindex",3]],["bool",15]],[[["addressidentifierindex",3]],["bool",15]],[[["constantpoolindex",3]],["bool",15]],[[["signatureindex",3]],["bool",15]],[[["structdefinitionindex",3]],["bool",15]],[[["functiondefinitionindex",3]],["bool",15]],[[["modulehandle",3]],["bool",15]],[[["structhandle",3]],["bool",15]],[[["structtypeparameter",3]],["bool",15]],[[["functionhandle",3]],["bool",15]],[[["fieldhandle",3]],["bool",15]],[[["structfieldinformation",4]],["bool",15]],[[["structdefinstantiation",3]],["bool",15]],[[["functioninstantiation",3]],["bool",15]],[[["fieldinstantiation",3]],["bool",15]],[[["structdefinition",3]],["bool",15]],[[["fielddefinition",3]],["bool",15]],[[["visibility",4]],["bool",15]],[[["functiondefinition",3]],["bool",15]],[[["typesignature",3]],["bool",15]],[[["functionsignature",3]],["bool",15]],[[["signature",3]],["bool",15]],[[["ability",4]],["bool",15]],[[["abilityset",3]],["bool",15]],[[["signaturetoken",4]],["bool",15]],[[["constant",3]],["bool",15]],[[["codeunit",3]],["bool",15]],[[["bytecode",4]],["bool",15]],[[["compiledscript",3]],["bool",15]],[[["compiledmodule",3]],["bool",15]],[[["usize",15]],[["fielddefinition",3],["option",4,["fielddefinition"]]]],null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u8",15]],["option",4]],null,null,null,null,null,null,[[["codeoffset",6]],[["codeoffset",6],["vec",3,["codeoffset"]]]],null,null,[[["ability",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[],["u8",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["indexkind",4]],["usize",15]],[[],["usize",15]],null,null,null,null,null,[[["modulehandle",3]],["moduleid",3]],null,null,null,null,[[["modulehandleindex",3]],["bool",15]],[[["structhandleindex",3]],["bool",15]],[[["functionhandleindex",3]],["bool",15]],[[["fieldhandleindex",3]],["bool",15]],[[["structdefinstantiationindex",3]],["bool",15]],[[["functioninstantiationindex",3]],["bool",15]],[[["fieldinstantiationindex",3]],["bool",15]],[[["identifierindex",3]],["bool",15]],[[["addressidentifierindex",3]],["bool",15]],[[["constantpoolindex",3]],["bool",15]],[[["signatureindex",3]],["bool",15]],[[["structdefinitionindex",3]],["bool",15]],[[["functiondefinitionindex",3]],["bool",15]],[[["modulehandle",3]],["bool",15]],[[["structhandle",3]],["bool",15]],[[["structtypeparameter",3]],["bool",15]],[[["functionhandle",3]],["bool",15]],[[["fieldhandle",3]],["bool",15]],[[["structfieldinformation",4]],["bool",15]],[[["structdefinstantiation",3]],["bool",15]],[[["functioninstantiation",3]],["bool",15]],[[["fieldinstantiation",3]],["bool",15]],[[["structdefinition",3]],["bool",15]],[[["fielddefinition",3]],["bool",15]],[[["functiondefinition",3]],["bool",15]],[[["typesignature",3]],["bool",15]],[[["functionsignature",3]],["bool",15]],[[["signature",3]],["bool",15]],[[["abilityset",3]],["bool",15]],[[["signaturetoken",4]],["bool",15]],[[["constant",3]],["bool",15]],[[["codeunit",3]],["bool",15]],[[["bytecode",4]],["bool",15]],[[["compiledscript",3]],["bool",15]],[[["compiledmodule",3]],["bool",15]],[[["tableindex",6]]],[[["tableindex",6]]],[[["tableindex",6]]],[[["tableindex",6]]],[[["tableindex",6]]],[[["tableindex",6]]],[[["tableindex",6]]],[[["tableindex",6]]],[[["tableindex",6]]],[[["tableindex",6]]],[[["tableindex",6]]],[[["tableindex",6]]],[[["tableindex",6]]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],[["codeoffset",6],["option",4,["codeoffset"]]]],null,null,null,null,[[["modulehandleindex",3]],[["option",4,["ordering"]],["ordering",4]]],[[["structhandleindex",3]],[["option",4,["ordering"]],["ordering",4]]],[[["functionhandleindex",3]],[["option",4,["ordering"]],["ordering",4]]],[[["fieldhandleindex",3]],[["option",4,["ordering"]],["ordering",4]]],[[["structdefinstantiationindex",3]],[["option",4,["ordering"]],["ordering",4]]],[[["functioninstantiationindex",3]],[["option",4,["ordering"]],["ordering",4]]],[[["fieldinstantiationindex",3]],[["option",4,["ordering"]],["ordering",4]]],[[["identifierindex",3]],[["option",4,["ordering"]],["ordering",4]]],[[["addressidentifierindex",3]],[["option",4,["ordering"]],["ordering",4]]],[[["constantpoolindex",3]],[["option",4,["ordering"]],["ordering",4]]],[[["signatureindex",3]],[["option",4,["ordering"]],["ordering",4]]],[[["structdefinitionindex",3]],[["option",4,["ordering"]],["ordering",4]]],[[["functiondefinitionindex",3]],[["option",4,["ordering"]],["ordering",4]]],[[["modulehandle",3]],[["option",4,["ordering"]],["ordering",4]]],[[["structhandle",3]],[["option",4,["ordering"]],["ordering",4]]],[[["structtypeparameter",3]],[["option",4,["ordering"]],["ordering",4]]],[[["visibility",4]],[["option",4,["ordering"]],["ordering",4]]],[[["signature",3]],[["option",4,["ordering"]],["ordering",4]]],[[["ability",4]],[["option",4,["ordering"]],["ordering",4]]],[[["abilityset",3]],[["option",4,["ordering"]],["ordering",4]]],[[["signaturetoken",4]],[["option",4,["ordering"]],["ordering",4]]],[[],["partialvmresult",6]],[[],["signaturetokenpreordertraversaliter",3]],[[],["signaturetokenpreordertraversaliterwithdepth",3]],[[["ability",4]]],[[],["abilityset",3]],[[]],null,null,[[],["moduleid",3]],null,[[],["identstr",3]],[[["vec",3]],["result",6]],[[["vec",3]],["result",6]],[[["movetypelayout",4],["movevalue",4]],["option",4]],null,[[],["signaturetokenkind",4]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u8",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,[[]],[[["usize",15]]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["tabletype",4]],[[],["serializedtype",4]],[[],["serializednativestructflag",4]],[[],["opcodes",4]],[[]],[[]],[[]],[[]],[[["tabletype",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bytecode",4]],["u8",15]],[[]],[[]],[[]],[[]],[[]],[[["cursor",3]],[["result",6,["u32"]],["u32",15]]],[[["cursor",3]],[["result",6,["u8"]],["u8",15]]],[[["cursor",3]],[["result",6,["u64"]],["u64",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["usize",15]],null,null,null,null,null,[[["moduleid",3],["compiledmodule",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["typetag",4]],[["movetypelayout",4],["result",6,["movetypelayout"]]]],[[["structtag",3]],[["result",6,["movestructlayout"]],["movestructlayout",4]]],[[["typetag",4]],[["movetypelayout",4],["result",6,["movetypelayout"]]]],[[["structtag",3]],[["result",6,["movestructlayout"]],["movestructlayout",4]]],[[]],[[]],[[]],[[["moduleid",3]],[["option",4,["compiledmodule"]],["result",6,["option"]]]],[[["moduleid",3]],[["option",4,["compiledmodule"]],["result",6,["option"]]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["type",4]],[[],["field",3]],[[],["struct",3]],[[],["function",3]],[[],["module",3]],[[]],[[]],[[]],[[]],[[]],[[["type",4]],["ordering",4]],[[["function",3]],["ordering",4]],[[["type",4]],["bool",15]],[[["field",3]],["bool",15]],[[["struct",3]],["bool",15]],[[["function",3]],["bool",15]],[[["module",3]],["bool",15]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[["typetag",4]],["type",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["structtag",3],["option",4,["structtag"]]]],[[],[["option",4,["typetag"]],["typetag",4]]],[[],["bool",15]],[[],["moduleid",3]],null,null,[[["type",4]],["bool",15]],[[["field",3]],["bool",15]],[[["struct",3]],["bool",15]],[[["function",3]],["bool",15]],[[["module",3]],["bool",15]],[[["compiledmodule",3],["signaturetoken",4]]],[[["compiledmodule",3],["fielddefinition",3]]],[[["compiledmodule",3],["structdefinition",3]]],[[["compiledmodule",3],["functiondefinition",3]]],[[["compiledmodule",3]]],[[["compiledmodule",3],["identstr",3]],["option",4]],null,[[["type",4]],[["option",4,["ordering"]],["ordering",4]]],[[["function",3]],[["option",4,["ordering"]],["ordering",4]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["compiledmodulestrategygen",3]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["tablesize",6]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["abilityset",3]],[[],["abilityset",3]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4,["codeunit"]],["codeunit",3]]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["functionhandle",3]],[["structdefinitionindex",3],["btreeset",3,["structdefinitionindex"]]]],[[["identstr",3]],[["functiondefinitionview",3],["option",4,["functiondefinitionview"]]]],[[]],[[]],[[]],[[],["structhandle",3]],[[],["structhandleindex",3]],[[],["moduleid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["usize",15]],[[],["usize",15]],[[],[["localssignatureview",3],["option",4,["localssignatureview"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["modulehandle",3]],[[],["modulehandle",3]],[[]],[[],["moduleid",3]],[[],["moduleid",3]],[[],["moduleid",3]],[[],["identstr",3]],[[],["identstr",3]],[[],["identstr",3]],[[],["identstr",3]],[[],["identstr",3]],[[]],[[["modulehandle",3]]],[[["structhandle",3]]],[[["functionhandle",3]]],[[["structdefinition",3]]],[[["fielddefinition",3]]],[[["functiondefinition",3]]],[[["structdefinstantiation",3]]],[[["fieldhandle",3]]],[[["functioninstantiation",3]]],[[["fieldinstantiation",3]]],[[["typesignature",3]]],[[["signature",3]]],[[["signaturetoken",4]]],[[],["signature",3]],[[],["signature",3]],[[],["signature",3]],[[],["signature",3]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["modulehandleindex",3]],[[],["signaturetoken",4]],[[],["signaturetoken",4]],[[],["signaturetokenkind",4]],[[],["signaturetokenview",3]],[[]],[[["identstr",3]],[["option",4,["structdefinitionview"]],["structdefinitionview",3]]],[[]],[[]],[[]],[[]],[[]],[[],["signaturetokenview",3]],[[["localindex",6]],["signaturetokenview",3]],[[["localindex",6]],["signaturetokenview",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["vec",3]],[[],["vec",3]],[[],["vec",3]],[[],["vec",3]],[[],["typesignatureview",3]],[[],["visibility",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[4,"IndexKind"],[4,"SignatureTokenKind"],[8,"ModuleAccess"],[8,"ScriptAccess"],[4,"BinaryIndexedView"],[3,"FunctionView"],[13,"Module"],[13,"Script"],[3,"BoundsChecker"],[3,"Compatibility"],[8,"ControlFlowGraph"],[3,"VMControlFlowGraph"],[4,"DeprecatedNominalResourceFlag"],[4,"Location"],[3,"VMError"],[3,"PartialVMError"],[13,"Module"],[3,"ModuleHandleIndex"],[3,"StructHandleIndex"],[3,"FunctionHandleIndex"],[3,"FieldHandleIndex"],[3,"StructDefInstantiationIndex"],[3,"FunctionInstantiationIndex"],[3,"FieldInstantiationIndex"],[3,"IdentifierIndex"],[3,"AddressIdentifierIndex"],[3,"ConstantPoolIndex"],[3,"SignatureIndex"],[3,"StructDefinitionIndex"],[3,"FunctionDefinitionIndex"],[3,"TypeSignature"],[3,"Signature"],[3,"AbilitySet"],[4,"Bytecode"],[4,"SignatureToken"],[4,"Ability"],[4,"StructFieldInformation"],[4,"Visibility"],[3,"CompiledScript"],[3,"FunctionDefinition"],[3,"StructHandle"],[3,"ModuleHandle"],[3,"CompiledModule"],[3,"StructTypeParameter"],[3,"FunctionHandle"],[3,"FieldHandle"],[3,"StructDefInstantiation"],[3,"FunctionInstantiation"],[3,"FieldInstantiation"],[3,"StructDefinition"],[3,"FieldDefinition"],[3,"FunctionSignature"],[3,"CodeUnit"],[3,"AbilitySetIterator"],[3,"SignatureTokenPreorderTraversalIter"],[3,"SignatureTokenPreorderTraversalIterWithDepth"],[3,"Constant"],[13,"BrTrue"],[13,"BrFalse"],[13,"Branch"],[13,"LdU8"],[13,"LdU64"],[13,"LdU128"],[13,"LdConst"],[13,"CopyLoc"],[13,"MoveLoc"],[13,"StLoc"],[13,"Call"],[13,"CallGeneric"],[13,"Pack"],[13,"PackGeneric"],[13,"Unpack"],[13,"UnpackGeneric"],[13,"MutBorrowLoc"],[13,"ImmBorrowLoc"],[13,"MutBorrowField"],[13,"MutBorrowFieldGeneric"],[13,"ImmBorrowField"],[13,"ImmBorrowFieldGeneric"],[13,"MutBorrowGlobal"],[13,"MutBorrowGlobalGeneric"],[13,"ImmBorrowGlobal"],[13,"ImmBorrowGlobalGeneric"],[13,"Exists"],[13,"ExistsGeneric"],[13,"MoveFrom"],[13,"MoveFromGeneric"],[13,"MoveTo"],[13,"MoveToGeneric"],[13,"VecPack"],[13,"VecLen"],[13,"VecImmBorrow"],[13,"VecMutBorrow"],[13,"VecPushBack"],[13,"VecPopBack"],[13,"VecUnpack"],[13,"VecSwap"],[13,"Vector"],[13,"Struct"],[13,"StructInstantiation"],[13,"Reference"],[13,"MutableReference"],[13,"TypeParameter"],[13,"Declared"],[4,"Opcodes"],[4,"SerializedType"],[4,"TableType"],[4,"SerializedNativeStructFlag"],[4,"BinaryConstants"],[8,"ModuleIndex"],[8,"GetModule"],[3,"ModuleCache"],[4,"TypeLayoutBuilder"],[4,"StructLayoutBuilder"],[4,"Type"],[3,"Struct"],[3,"Module"],[3,"Field"],[3,"Function"],[13,"Vector"],[13,"TypeParameter"],[13,"Reference"],[13,"MutableReference"],[13,"Struct"],[3,"CompiledModuleStrategyGen"],[8,"ViewInternals"],[3,"StructHandleView"],[3,"StructDefinitionView"],[3,"FunctionHandleView"],[3,"FunctionDefinitionView"],[3,"ModuleView"],[3,"ModuleHandleView"],[3,"FieldDefinitionView"],[3,"TypeSignatureView"],[3,"SignatureView"],[3,"SignatureTokenView"],[3,"LocalsSignatureView"],[3,"StructInstantiationView"],[3,"FieldHandleView"],[3,"FunctionInstantiationView"],[3,"FieldInstantiationView"]]},\
"move_bytecode_utils":{"doc":"","t":[3,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11],"n":["Modules","borrow","borrow_mut","clone","clone_into","compute_dependency_graph","dependency_graph","eq","equivalent","fmt","from","get_immediate_dependencies","get_map","get_module","get_transitive_dependencies","into","iter_modules","ne","new","to_owned","try_from","try_into","type_id","vzip","DependencyGraph","borrow","borrow_mut","compute_topological_order","from","into","new","try_from","try_into","type_id","vzip"],"q":["move_bytecode_utils","","","","","","","","","","","","","","","","","","","","","","","","move_bytecode_utils::dependency_graph","","","","","","","","","",""],"d":["Set of Move modules indexed by module Id","","","","","Compute a dependency graph for <code>self</code>","","","","","","Return the immediate dependencies for <code>module_id</code>","Return the backing map of <code>self</code>","Return the bytecode for the module bound to <code>module_id</code>","Return the transitive dependencies for <code>module_id</code>","","Return all modules in this set","","Construct a set of modules from a slice <code>modules</code>. Panics if …","","","","","","Directed graph capturing dependencies between modules","","","Return an iterator over the modules in <code>self</code> in topological …","","","Construct a dependency graph from a set of <code>modules</code>. Panics …","","","",""],"i":[0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,2,2,2,2,2,2,2,2,2],"f":[null,[[]],[[]],[[],["modules",3]],[[]],[[],["dependencygraph",3]],null,[[["modules",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[["moduleid",3]],[["result",6,["vec"]],["vec",3,["compiledmodule"]]]],[[],["btreemap",3]],[[["moduleid",3]],[["compiledmodule",3],["result",6,["compiledmodule"]]]],[[["moduleid",3]],[["result",6,["vec"]],["vec",3,["compiledmodule"]]]],[[]],[[],[["vec",3,["compiledmodule"]],["compiledmodule",3]]],[[["modules",3]],["bool",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[],["result",6]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"Modules"],[3,"DependencyGraph"]]},\
"move_bytecode_viewer":{"doc":"","t":[0,0,0,0,0,3,3,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,11,11,8,8,3,16,10,10,11,11,11,11,11,11,10,12,11,12,12,10,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,0,11,11,0,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,18,18,8,3,11,11,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,12,11,10,11,12,5,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["bytecode_viewer","interfaces","source_viewer","tui","viewer","BytecodeInfo","BytecodeViewer","backing_string","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","code_offset","fmt","fmt","from","from","function_index","function_name","get_source_index_for_line","into","into","line_map","lines","new","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","view","vzip","vzip","LeftScreen","RightScreen","SourceContext","SourceIndex","backing_string","backing_string","borrow","borrow_mut","clone","clone_into","fmt","from","get_source_index_for_line","highlight","into","left","remainder","source_for_code_location","to_owned","try_from","try_into","type_id","vzip","ModuleViewer","backing_string","borrow","borrow_mut","clone","clone_into","fmt","from","into","new","source_for_code_location","to_owned","try_from","try_into","type_id","vzip","TUI","borrow","borrow_mut","from","handle_input","into","new","redraw","text_builder","try_from","try_into","tui_interface","type_id","vzip","TextBuilder","add","borrow","borrow_mut","clone","clone_into","default","finish","fmt","from","into","new","to_owned","try_from","try_into","type_id","vzip","DebugInterface","LEFT_TITLE","RIGHT_TITLE","TUIInterface","TUIOutput","borrow","borrow","borrow_mut","borrow_mut","bound_column","bound_column","bound_line","bound_line","clone","clone","clone_into","clone_into","fmt","fmt","from","from","into","into","left_screen","new","on_redraw","on_redraw","right_screen","start_tui_with_interface","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Viewer","borrow","borrow_mut","bound_column","bound_line","clone","clone_into","fmt","from","into","new","on_redraw","to_owned","try_from","try_into","type_id","vzip"],"q":["move_bytecode_viewer","","","","","move_bytecode_viewer::bytecode_viewer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_bytecode_viewer::interfaces","","","","","","","","","","","","","","","","","","","","","","","move_bytecode_viewer::source_viewer","","","","","","","","","","","","","","","","move_bytecode_viewer::tui","","","","","","","","","","","","","","move_bytecode_viewer::tui::text_builder","","","","","","","","","","","","","","","","","move_bytecode_viewer::tui::tui_interface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_bytecode_viewer::viewer","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>LeftScreen</code> trait is used to index the code.","The <code>RightScreen</code> trait takes the indices output by the left …","There are two interfaces–the <code>LeftScreen</code> and <code>RightScreen</code>…","This is the type used for indexing the source code in the …","Return the backing string to be displayed on the left …","","","","","","","","Given a <code>line</code> and the <code>column</code> within that line, this returns …","","","","","Take a <code>SourceIndex</code> from the <code>Indexer</code> and turn it into a …","","","","","","","","","","","","","","","","","","","","","","","","","","Handles keyboard input, and updates state according to …","","","","","","","","","","A <code>TextBuilder</code> is used to build up a paragraph, where some …","Add <code>text</code> with the given <code>style</code>ing to the text builder. This …","","","","","","Return back the final Spans, each <code>Spans</code> represents a line …","","","","Create a new text builder","","","","","","A Debugging interface for the TUI. Useful for debugging …","The title to be used for the left screen","The title to be used for the right screen","","The output that will be display in the TUI. The text in …","","","","","Bounds the column number (w.r.t. the current <code>line_number</code>) …","","Bounds the line number so that it does not run past the …","","","","","","","","","","","","The text to be displayed on the left screen. Each <code>Spans</code> in …","","Function called on each redraw. The <code>TUIOutput</code> contains …","","The text to be displayed on the right screen. Each <code>Spans</code> …","Starts a two-pane TUI using the provided <code>Interface</code> to …","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,2,1,2,1,2,1,2,1,2,2,1,2,1,2,2,1,2,1,1,1,1,2,1,2,1,2,1,2,1,1,2,1,0,0,0,3,3,4,5,5,5,5,5,5,3,5,5,5,5,4,5,5,5,5,5,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,7,7,7,7,7,7,7,0,7,7,0,7,7,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,9,9,0,0,10,11,10,11,9,11,9,11,10,11,10,11,10,11,10,11,10,11,10,11,9,11,10,0,10,11,10,11,10,11,10,11,10,11,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"f":[null,null,null,null,null,null,null,[[],["string",3]],[[]],[[]],[[]],[[]],[[],["bytecodeinfo",3]],[[],["bytecodeviewer",3]],[[]],[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],null,null,[[["usize",15]],["option",4]],[[]],[[]],null,null,[[["compiledmodule",3],["sourcemap",3]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],null,null,null,null,[[],["string",3]],[[],["string",3]],[[]],[[]],[[],["sourcecontext",3]],[[]],[[["formatter",3]],["result",6]],[[]],[[["usize",15]],["option",4]],null,[[]],null,null,[[],[["result",6,["sourcecontext"]],["sourcecontext",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[],["string",3]],[[]],[[]],[[],["moduleviewer",3]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[["compiledmodule",3],["sourcemap",3],["path",3]]],[[["bytecodeinfo",3]],[["result",6,["sourcecontext"]],["sourcecontext",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[]],[[],[["result",4,["bool","box"]],["box",3,["error"]],["bool",15]]],[[]],[[]],[[["frame",3]]],null,[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[]],null,[[["string",3],["style",3]]],[[]],[[]],[[],["textbuilder",3]],[[]],[[],["textbuilder",3]],[[],[["spans",3],["vec",3,["spans"]]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[["u16",15]],["u16",15]],[[["u16",15]],["u16",15]],[[["u16",15]],["u16",15]],[[["u16",15]],["u16",15]],[[],["tuioutput",3]],[[],["debuginterface",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,[[["string",3]]],[[["u16",15]],["tuioutput",3]],[[["u16",15]],["tuioutput",3]],null,[[["tuiinterface",8]],[["result",4,["box"]],["box",3,["error"]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[]],[[]],[[["u16",15]],["u16",15]],[[["u16",15]],["u16",15]],[[],["viewer",3]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["u16",15]],["tuioutput",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"BytecodeViewer"],[3,"BytecodeInfo"],[8,"LeftScreen"],[8,"RightScreen"],[3,"SourceContext"],[3,"ModuleViewer"],[3,"TUI"],[3,"TextBuilder"],[8,"TUIInterface"],[3,"TUIOutput"],[3,"DebugInterface"],[3,"Viewer"]]},\
"move_cli":{"doc":"","t":[4,13,17,17,17,17,17,13,3,3,13,13,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,5,0,5,0,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,0,0,0,5,5,0,0,4,13,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,0,5,0,13,13,13,13,4,13,4,13,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,13,13,13,4,13,13,13,4,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,0,0,5,5,5,5,17,5,5,5,5,5,0,0,0,13,13,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,6,3,17,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11],"n":["Command","Compile","DEFAULT_BUILD_DIR","DEFAULT_DEP_MODE","DEFAULT_PACKAGE_DIR","DEFAULT_SOURCE_DIR","DEFAULT_STORAGE_DIR","Experimental","Move","MoveCLI","Package","Sandbox","base","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clap","clap","clap","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","experimental","from","from","from","from_clap","from_clap","from_clap","init","init","init","into","into","into","move_cli","package","run_cli","sandbox","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","check","cmd","cmd","cmd","config","no_source_maps","path","source_files","commands","check","compile","check","compile","cli","commands","ConcretizeMode","Dont","ExperimentalCommand","Paths","ReadWriteSet","Reads","Writes","borrow","borrow","borrow_mut","borrow_mut","clap","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_clap","from_str","handle_command","init","init","into","into","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","variants","vzip","vzip","args","concretize","fun_name","module_file","signers","type_args","read_writeset_analysis","analyze_read_write_set","cli","Build","ErrMapGen","New","Options","PackageCommand","Prove","ProverOptions","UnitTest","borrow","borrow","borrow_mut","borrow_mut","clap","clap","create_move_package","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_clap","from_clap","handle_package_commands","init","init","into","into","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","check_stackless_vm","cmd","error_prefix","filter","instruction_execution_bound","list","name","num_threads","output_file","report_statistics","report_storage_on_error","verbose_mode","0","cli","commands","utils","Clean","Doctor","Generate","GenerateCommand","Link","Publish","Run","SandboxCommand","StructLayoutOptions","StructLayouts","Test","View","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clap","clap","clap","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","from_clap","from_clap","from_clap","handle_command","init","init","init","into","into","into","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","module","options","args","cmd","create","dry_run","file","gas_budget","ignore_breaking_changes","no_republish","no_republish","override_ordering","path","script_file","script_name","signers","source_files","source_files","track_cov","type_args","use_temp_dir","doctor","generate","publish","run","test","view","doctor","generate_struct_layouts","publish","run","TEST_ARGS_FILENAME","create_test_scaffold","run_all","run_one","view","get_gas_status","mode","on_disk_state_view","package","Bare","Diem","Mode","ModeType","Stdlib","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compiled_modules","default","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","fmt","from","from","from_str","init","init","into","into","new","prepare","prepare_state","source_files","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","EVENTS_DIR","MODULES_DIR","ModuleIdWithNamedAddress","OnDiskStateView","RESOURCES_DIR","STRUCT_LAYOUTS_DIR","borrow","borrow_mut","build_dir","create","default","delete_module","delete_resource","deref","deref_mut","drop","event_paths","fmt","from","get_all_modules","get_module","get_module_by_id","get_module_id","get_named_addresses","get_resource","get_resource_bytes","has_module","init","interface_files_dir","into","is_event_path","is_module_path","is_resource_path","module_paths","resolve_function","resource_paths","save_event","save_layout_yaml","save_module","save_modules","save_resource","struct_layouts_dir","try_from","try_into","type_id","view_events","view_module","view_resource","view_script","vzip","MovePackage","SourceFilter","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","exclusion","from","from","inclusion","init","init","into","into","new","source_dir","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["move_cli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_cli::Command","","","","","","","","move_cli::base","move_cli::base::commands","","move_cli::base::commands::check","move_cli::base::commands::compile","move_cli::experimental","","move_cli::experimental::cli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_cli::experimental::cli::ExperimentalCommand","","","","","","move_cli::experimental::commands","move_cli::experimental::commands::read_writeset_analysis","move_cli::package","move_cli::package::cli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_cli::package::cli::PackageCommand","","","","","","","","","","","","move_cli::package::cli::ProverOptions","move_cli::sandbox","","","move_cli::sandbox::cli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_cli::sandbox::cli::GenerateCommand","","move_cli::sandbox::cli::SandboxCommand","","","","","","","","","","","","","","","","","","","move_cli::sandbox::commands","","","","","","move_cli::sandbox::commands::doctor","move_cli::sandbox::commands::generate","move_cli::sandbox::commands::publish","move_cli::sandbox::commands::run","move_cli::sandbox::commands::test","","","","move_cli::sandbox::commands::view","move_cli::sandbox::utils","","","","move_cli::sandbox::utils::mode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_cli::sandbox::utils::on_disk_state_view","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_cli::sandbox::utils::package","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Compile and emit Move bytecode for the specified scripts …","Default directory for build output","Default dependency inclusion mode","Default directory where Move packages live under build_dir","Default directory where Move modules live","Default directory where saved Move resources live","(Experimental) Run static analyses on Move source or …","","MoveCLI is the CLI that will be executed by the <code>move-cli</code> …","","Execute a sandbox command.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Type check and verify the specified scripts and/or …","","","","","Do not emit source map information along with the compiled …","Path to package. If none is supplied the current directory …","The source files to check.","","","","Type-check the user modules in <code>files</code> and the dependencies …","Compile the user modules in <code>sources</code> against the …","","","","","","","Perform a read/write set analysis and print the results for","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A function inside <code>module_file</code>.","Path to .mv file containing module bytecode.","","","","","","Build the package at <code>path</code>. If no path is provided defaults …","Generate error map for the package and its dependencies at …","Create a new Move package with name <code>name</code> at <code>path</code>. If <code>path</code> …","","","Run the Move Prover on the package at <code>path</code>. If no path is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Use the stackless bytecode interpreter to run the tests …","","The prefix that all error reasons within modules will be …","A filter string to determine which unit tests to run","Bound the number of instructions that can be executed by …","List all tests","The name of the package to be created.","Number of threads to use for running tests.","The file to serialize the generated error map to.","Report test statistics at the end of testing","Show the storage state at the end of execution of a …","Verbose mode","","","","","Delete all resources, events, and modules stored on disk …","Run well-formedness checks on the <code>storage</code> and <code>build</code> …","Generate struct layout bindings for the modules stored on …","","Typecheck and verify the scripts and/or modules under <code>src</code>.","Compile the specified modules and publish the resulting …","Compile/run a Move script that reads/writes resources …","","","Generate struct layout bindings for the modules stored on …","Run expected value tests using the given batch file.","View Move resources, events files, and modules stored on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Path to a module stored on disk.","If set, generate bindings for the specified struct and …","Possibly-empty list of arguments passed to the transaction …","","Create a new test directory scaffold with the specified .","If set, the effects of executing <code>script_file</code> (i.e., …","Path to a resource, events file, or module stored on disk.","Maximum number of gas units to be consumed by execution. …","By default, code that might cause breaking changes for …","If set, fail during compilation when attempting to publish …","If set, fail when attempting to typecheck a module that …","Manually specify the publishing order of modules.","a directory path in which all the tests will be executed.","Path to .mv file containing either script or module …","Name of the script function inside <code>script_file</code> to call. …","Possibly-empty list of signers for the current transaction …","The source files containing modules to publish.","The source files containing modules to publish.","Show coverage information after tests are done. By …","Possibly-empty list of type arguments passed to the …","Use an ephemeral directory to serve as the testing …","","","","","","","Run sanity checks on storage and build dirs. This is …","","","","The filename that contains the arguments to the Move …","Create a directory scaffold for writing a Move CLI test.","","Run the <code>args_path</code> batch file with<code>cli_binary</code>","Print a module or resource stored in <code>file</code>","","","","","No dependencies","Include stdlib and all Diem dependencies","The dependency interface exposed to CLI main","Set of supported modes","Move stdlib dependencies only (e.g., Vector, Signer)","","","","","","","","","","","","","","","","","","","","","","","","","","","","Prepare an OnDiskStateView that is ready to use. Library …","","","","","","","","","","","","subdirectory of <code>DEFAULT_STORAGE_DIR</code>/ where events are …","subdirectory of <code>DEFAULT_STORAGE_DIR</code>/ where modules are …","","","subdirectory of <code>DEFAULT_STORAGE_DIR</code>/ where resources are …","subdirectory of <code>DEFAULT_BUILD_DIR</code>/ where generated struct …","","","","Create an <code>OnDiskStateView</code> that reads/writes resource data …","","","Delete resource stored on disk at the path <code>addr</code>/<code>tag</code>","","","","","","","Build all modules in the self.storage_dir. Returns an Err …","","","Extract a module ID from a path","","","Read the resource bytes stored on-disk at <code>addr</code>/<code>tag</code>","Check if a module at <code>addr</code>/<code>module_id</code> exists","","","","","","","","Return the name of the function at <code>idx</code> in <code>module_id</code>","","","Save the YAML encoding <code>layout</code> on disk under …","Save <code>module</code> on disk under the path <code>module.address()</code>/…","Save all the modules in the local cache, re-generate …","","","","","","","","Returns a deserialized representation of the resource …","","","","","","","","","","","","","","","Source files to be excluded, to exclude nothing, set it to …","","","Source files to be included, if set to None, include …","","","","","","The embedded directory","","","","","","","",""],"i":[0,1,0,0,0,0,0,1,0,0,1,1,0,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,0,2,3,1,2,3,1,2,3,1,2,3,1,0,0,0,0,2,3,1,2,3,1,2,3,1,2,3,1,4,5,6,7,5,4,5,4,0,0,0,0,0,0,0,0,8,0,8,9,8,8,9,8,9,8,9,8,8,9,8,9,8,9,8,8,8,9,8,9,8,9,9,8,9,8,8,8,9,8,9,8,9,8,8,9,8,10,10,10,10,10,10,0,0,0,11,11,11,12,0,11,0,11,11,12,11,12,11,12,0,11,12,11,12,11,12,11,12,11,12,0,11,12,11,12,11,12,11,12,11,12,11,12,13,14,15,13,13,13,16,13,15,13,13,13,17,0,0,0,18,18,18,0,18,18,18,0,0,19,18,18,18,19,20,18,19,20,18,19,20,18,19,20,18,19,20,18,19,20,18,19,20,18,19,20,18,18,19,20,18,19,20,18,19,20,18,19,20,18,19,20,18,19,20,21,21,22,23,24,22,25,22,26,26,27,26,24,22,22,22,26,27,24,22,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,28,0,0,28,29,28,29,28,28,28,29,29,28,29,28,29,28,29,28,28,28,28,29,28,28,29,28,29,28,29,29,29,29,28,28,29,28,29,28,29,28,29,28,0,0,0,0,0,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,0,31,32,31,32,31,32,31,32,31,32,31,31,32,31,31,32,31,32,32,31,31,32,31,32,31,32,31,32],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[]],[[]],[[]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[["errormapping",3],["vec",3]],["result",6]],null,[[["errormapping",3],["move",3],["vec",3],["command",4]],["result",6]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[["numericaladdress",3],["bool",15],["btreemap",3,["string","numericaladdress"]],["string",3]],["result",6]],[[["numericaladdress",3],["bool",15],["btreemap",3,["string","numericaladdress"]],["str",15],["string",3]],["result",6]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["app",3]],[[],["concretizemode",4]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["argmatches",3]]],[[["str",15]],["result",4]],[[["move",3],["mode",3]],["result",6]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[["ondiskstateview",3],["str",15],["bool",15],["path",3],["concretizemode",4]],["result",6]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["app",3]],[[],["app",3]],[[["str",15],["display",8],["asref",8,["str"]],["path",3]],["result",6]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[["argmatches",3]]],[[["argmatches",3]]],[[["buildconfig",3],["packagecommand",4],["option",4]],["result",6]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["errormapping",3],["move",3],["vec",3],["mode",3]],["result",6]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ondiskstateview",3]],["result",6]],[[["option",4],["option",4],["ondiskstateview",3],["path",3]],["result",6]],[[["option",4],["numericaladdress",3],["ondiskstateview",3],["string",3],["btreemap",3,["string","numericaladdress"]],["bool",15]],["result",6]],[[["option",4],["numericaladdress",3],["option",4,["u64"]],["ondiskstateview",3],["string",3],["btreemap",3,["string","numericaladdress"]],["typetag",4],["u64",15],["vec",3,["typetag"]],["errormapping",3],["bool",15],["path",3]],["result",6]],null,[[["path",3]],["result",6]],[[["path",3],["bool",15]],["result",6]],[[["path",3],["bool",15]],[["option",4,["execcoveragemapwithmodules"]],["result",6,["option"]]]],[[["ondiskstateview",3],["path",3]],["result",6]],[[["u64",15],["option",4,["u64"]]],[["result",6,["gasstatus"]],["gasstatus",3]]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["modetype",4]],[[]],[[["path",3]],[["result",6,["vec"]],["vec",3]]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["modetype",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[["str",15]],["result",6]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["modetype",4]]],[[["path",3],["bool",15]],[["result",6,["btreemap"]],["btreemap",3,["string","numericaladdress"]]]],[[["path",3]],[["ondiskstateview",3],["result",6,["ondiskstateview"]]]],[[["path",3]],[["result",6,["vec"]],["vec",3,["string"]]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[],["pathbuf",3]],[[["pathbuf",3],["into",8,["pathbuf"]]],["result",6]],[[]],[[["moduleid",3]],["result",6]],[[["structtag",3],["accountaddress",3]],["result",6]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["formatter",3]],["result",6]],[[]],[[],[["vec",3,["compiledmodule"]],["result",6,["vec"]]]],[[["moduleid",3]],[["option",4,["vec"]],["result",6,["option"]]]],[[["moduleid",3]],[["result",6,["option"]],["option",4,["compiledmodule"]]]],[[["path",3]],[["option",4,["moduleid"]],["moduleid",3]]],[[["string",3],["numericaladdress",3],["btreemap",3,["string","numericaladdress"]]],[["result",6,["btreemap"]],["btreemap",3,["string","numericaladdress"]]]],[[["structtag",3],["accountaddress",3]],[["result",6,["option"]],["option",4,["vec"]]]],[[["structtag",3],["accountaddress",3]],[["option",4,["vec"]],["result",6,["option"]]]],[[["moduleid",3]],["bool",15]],[[],["usize",15]],[[],[["result",6,["string"]],["string",3]]],[[]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[]],[[["moduleid",3],["u16",15]],[["result",6,["option"]],["option",4,["identifier"]]]],[[]],[[["u64",15],["typetag",4],["u8",15],["vec",3,["u8"]]],["result",6]],[[["structtag",3],["movestructlayout",4]],["result",6]],[[["moduleid",3]],["result",6]],[[["string",3],["numericaladdress",3],["btreemap",3,["string","numericaladdress"]]],["result",6]],[[["structtag",3],["accountaddress",3]],["result",6]],[[],["pathbuf",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["path",3]],[["vec",3,["annotatedmovevalue"]],["result",6,["vec"]]]],[[["path",3]],[["result",6,["option"]],["option",4,["string"]]]],[[["path",3]],[["result",6,["option"]],["option",4,["annotatedmovestruct"]]]],[[["path",3]],[["result",6,["option"]],["option",4,["string"]]]],[[]],null,null,[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[]],[[]],null,[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["numericaladdress",3],["vec",3,["lazy"]],["string",3],["lazy",3],["sourcefilter",3],["btreemap",3,["string","numericaladdress"]],["option",4,["string"]],["vec",3,["sourcefilter"]]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]]],"p":[[4,"Command"],[3,"Move"],[3,"MoveCLI"],[13,"Compile"],[13,"Package"],[13,"Sandbox"],[13,"Experimental"],[4,"ConcretizeMode"],[4,"ExperimentalCommand"],[13,"ReadWriteSet"],[4,"PackageCommand"],[4,"ProverOptions"],[13,"UnitTest"],[13,"Prove"],[13,"ErrMapGen"],[13,"New"],[13,"Options"],[4,"SandboxCommand"],[4,"GenerateCommand"],[3,"StructLayoutOptions"],[13,"StructLayouts"],[13,"Run"],[13,"Generate"],[13,"Test"],[13,"View"],[13,"Publish"],[13,"Link"],[4,"ModeType"],[3,"Mode"],[3,"OnDiskStateView"],[3,"SourceFilter"],[3,"MovePackage"]]},\
"move_command_line_common":{"doc":"","t":[0,0,0,0,5,5,5,5,5,12,3,17,17,17,17,17,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,17,17,17,17,17,17,17,5,5],"n":["character_sets","env","files","testing","is_permitted_char","is_permitted_newline_char","is_permitted_printable_char","read_bool_env_var","read_env_var","0","FileHash","MOVE_COMPILED_EXTENSION","MOVE_ERROR_DESC_EXTENSION","MOVE_EXTENSION","MOVE_IR_EXTENSION","SOURCE_MAP_EXTENSION","borrow","borrow_mut","clone","clone_into","cmp","deserialize","empty","eq","extension_equals","find_filenames","find_move_filenames","fmt","fmt","from","hash","into","ne","new","partial_cmp","path_to_string","serialize","to_owned","to_string","try_from","try_into","type_id","EXP_EXT","FILTER","OUT_EXT","PRETTY","UB","UPBL","UPDATE_BASELINE","format_diff","read_env_update_baseline"],"q":["move_command_line_common","","","","move_command_line_common::character_sets","","","move_command_line_common::env","","move_command_line_common::files","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_command_line_common::testing","","","","","","","",""],"d":["","","","","Determine if a character is permitted character.","Determine if a character is a permitted newline character.","Determine if a character is an allowed eye-visible …","","","","Result of sha256 hash of a file’s contents.","Extension for Move bytecode files","Extension for error description map for compiled releases","Extension for Move source language files","Extension for Move IR files","Extension for Move source map files (mappings from source …","","","","","","","","","","For each directory in <code>paths</code>, it will return all files that …","For each directory in <code>paths</code>, it will return all files with …","","","","","","","","","","","","","","","","Extension for expected output files","","Extension for raw output files","","","","If any of these env vars is set, the test harness should …","",""],"i":[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0],"f":[null,null,null,null,[[["char",15]],["bool",15]],[[["char",15]],["bool",15]],[[["char",15]],["bool",15]],[[["str",15]],["bool",15]],[[["str",15]],["string",3]],null,null,null,null,null,null,null,[[]],[[]],[[],["filehash",3]],[[]],[[["filehash",3]],["ordering",4]],[[],["result",4]],[[]],[[["filehash",3]],["bool",15]],[[["str",15],["path",3]],["bool",15]],[[["fnmut",8]],[["vec",3,["string"]],["result",6,["vec"]]]],[[["bool",15]],[["vec",3,["string"]],["result",6,["vec"]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["filehash",3]],["bool",15]],[[["str",15]]],[[["filehash",3]],[["option",4,["ordering"]],["ordering",4]]],[[["path",3]],[["result",6,["string"]],["string",3]]],[[],["result",4]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,[[],["string",3]],[[],["bool",15]]],"p":[[3,"FileHash"]]},\
"move_core_types":{"doc":"Core types for Move.","t":[0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,3,4,13,3,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,17,3,17,8,6,3,3,3,3,3,17,17,17,17,17,17,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,10,11,11,11,11,12,12,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,12,11,11,12,12,12,12,12,12,11,11,12,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,17,17,3,17,3,13,13,3,4,13,13,13,13,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,12,12,18,8,8,18,11,11,11,11,11,5,5,5,5,5,5,16,16,16,8,8,8,10,10,13,13,4,13,13,13,13,3,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,13,13,13,13,3,4,4,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,7,7,13,13,13,13,13,13,6,13,13,13,13,13,13,13,13,7,7,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,7,7,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,7,7,13,13,13,13,13,7,7,13,4,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,7,17,7,17,7,17,5,5,5,17,17],"n":["abi","account_address","effects","errmap","gas_schedule","ident_str","identifier","language_storage","move_resource","parser","proptest_types","resolver","transaction_argument","value","vm_status","ArgumentABI","ScriptABI","ScriptFunction","ScriptFunctionABI","TransactionScript","TransactionScriptABI","TypeArgumentABI","args","args","args","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","code","deserialize","deserialize","deserialize","deserialize","deserialize","doc","doc","doc","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","hash","hash","into","into","into","into","into","is_script_fun_abi","is_transaction_script_abi","module_name","name","name","name","name","name","ne","ne","ne","ne","ne","new","new","new","new","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","ty_args","ty_args","ty_args","type_id","type_id","type_id","type_id","type_id","type_tag","vzip","vzip","vzip","vzip","vzip","0","0","AccountAddress","AccountAddressParseError","LENGTH","ZERO","arbitrary_with","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","deref","deserialize","encode_hex","encode_hex_upper","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bytes","from_hex","from_hex_literal","from_str","hash","into","into","into_bytes","ne","new","partial_cmp","random","serialize","short_str_lossless","to_hex","to_hex_literal","to_owned","to_owned","to_string","to_string","to_vec","try_from","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AccountChangeSet","ChangeSet","Event","accounts","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","eq","eq","fmt","fmt","from","from","from_modules_resources","into","into","into_inner","into_inner","into_modules","into_modules","into_resources","is_empty","modules","modules","ne","ne","new","new","partial_cmp","partial_cmp","publish_module","publish_module","publish_or_overwrite_account_change_set","publish_or_overwrite_module","publish_or_overwrite_module","publish_or_overwrite_resource","publish_or_overwrite_resource","publish_resource","publish_resource","resources","resources","squash","squash","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unpublish_module","unpublish_module","unpublish_resource","unpublish_resource","vzip","vzip","ErrorContext","ErrorDescription","ErrorMapping","add_error_category","add_module_error","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","category","clone","clone","clone","clone_into","clone_into","clone_into","code_description","code_name","default","deserialize","deserialize","deserialize","error_categories","fmt","fmt","fmt","from","from","from","from_file","get_explanation","into","into","into","module_error_maps","reason","serialize","serialize","serialize","to_file","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","AbstractMemorySize","CONST_SIZE","CostTable","DEFAULT_ACCOUNT_SIZE","GasAlgebra","GasCarrier","GasConstants","GasCost","GasPrice","GasUnits","InternalGasUnits","LARGE_TRANSACTION_CUTOFF","MAX_ABSTRACT_MEMORY_SIZE","MAX_TRANSACTION_SIZE_IN_BYTES","MIN_EXISTS_DATA_SIZE","ONE_GAS_UNIT","REFERENCE_SIZE","STRUCT_SIZE","add","app","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default_account_size","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","div","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","gas_constants","gas_unit_scaling_factor","get","get","get","get","get","global_memory_per_byte_cost","global_memory_per_byte_write_cost","hash","hash","hash","hash","instruction_cost","instruction_gas","instruction_table","into","into","into","into","into","into","into","intrinsic_gas_per_byte","large_transaction_cutoff","map","map2","max_price_per_gas_unit","max_transaction_size_in_bytes","maximum_number_of_gas_units","memory_gas","min_price_per_gas_unit","min_transaction_gas_units","mul","native_cost","native_table","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","serialize","serialize","serialize","serialize","serialize","serialize","serialize","sub","to_external_units","to_internal_units","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unitary_cast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","IdentStr","Identifier","arbitrary_with","as_bytes","as_ident_str","as_ref","as_str","borrow","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","cmp","deref","deserialize","eq","eq","fmt","fmt","fmt","fmt","from","from","from_str","from_utf8","hash","hash","into","into_bytes","into_string","is_empty","is_self","is_valid","is_valid","is_valid","is_valid_identifier_char","len","ne","ne","new","new","partial_cmp","partial_cmp","ref_cast","ref_cast_mut","serialize","to_owned","to_owned","to_string","to_string","try_from","try_into","type_id","type_id","vzip","Address","Bool","CODE_TAG","CORE_CODE_ADDRESS","ModuleId","RESOURCE_TAG","ResourceKey","Signer","Struct","StructTag","TypeTag","U128","U64","U8","Vector","access_vector","access_vector","address","address","address","address","arbitrary_with","arbitrary_with","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","hash","into","into","into","into","module","module_id","name","name","ne","ne","ne","ne","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_","type_","type_id","type_id","type_id","type_id","type_params","vzip","vzip","vzip","vzip","0","0","MODULE_NAME","MoveResource","MoveStructType","STRUCT_NAME","module_identifier","resource_path","struct_identifier","struct_tag","type_params","parse_string_list","parse_struct_tag","parse_transaction_argument","parse_transaction_arguments","parse_type_tag","parse_type_tags","Err","Error","Error","ModuleResolver","MoveResolver","ResourceResolver","get_module","get_resource","Address","Bool","TransactionArgument","U128","U64","U8","U8Vector","VecBytes","arbitrary_with","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","convert_txn_args","deserialize","deserialize","eq","eq","fmt","from","from","from","hash","hash","into","into","into_vec","ne","ne","serialize","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","0","0","0","0","Address","Address","Bool","Bool","MoveFieldLayout","MoveStruct","MoveStructLayout","MoveTypeLayout","MoveValue","Runtime","Runtime","Signer","Signer","Struct","Struct","U128","U128","U64","U64","U8","U8","Vector","Vector","WithFields","WithFields","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","eq","eq","fields","fields","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into_fields","into_fields","ne","ne","new","new","new","serialize","serialize","serialize","serialize","serialize","serialize_values","simple_deserialize","simple_deserialize","simple_serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vector_address","vector_u8","vzip","vzip","vzip","vzip","vzip","with_fields","with_fields","0","0","0","0","0","0","0","0","0","0","0","0","0","0","ABORTED","ABORT_TYPE_MISMATCH_ERROR","ARITHMETIC_ERROR","AbortLocation","BACKWARD_INCOMPATIBLE_MODULE_UPDATE","BAD_CHAIN_ID","BAD_HEADER_TABLE","BAD_MAGIC","BAD_TRANSACTION_FEE_CURRENCY","BAD_U128","BAD_U64","BOOLEAN_OP_TYPE_MISMATCH_ERROR","BORROWFIELD_BAD_FIELD_ERROR","BORROWFIELD_EXISTS_MUTABLE_BORROW_ERROR","BORROWFIELD_TYPE_MISMATCH_ERROR","BORROWGLOBAL_TYPE_MISMATCH_ERROR","BORROWGLOBAL_WITHOUT_KEY_ABILITY","BORROWLOC_EXISTS_BORROW_ERROR","BORROWLOC_REFERENCE_ERROR","BORROWLOC_UNAVAILABLE_ERROR","BR_TYPE_MISMATCH_ERROR","CALLED_SCRIPT_VISIBLE_FROM_NON_SCRIPT_VISIBLE","CALL_BORROWED_MUTABLE_REFERENCE_ERROR","CALL_STACK_OVERFLOW","CALL_TYPE_MISMATCH_ERROR","CODE_DESERIALIZATION_ERROR","CONSTRAINT_NOT_SATISFIED","COPYLOC_EXISTS_BORROW_ERROR","COPYLOC_UNAVAILABLE_ERROR","COPYLOC_WITHOUT_COPY_ABILITY","CURRENCY_INFO_DOES_NOT_EXIST","CYCLIC_MODULE_DEPENDENCY","CYCLIC_MODULE_FRIENDSHIP","DATA_FORMAT_ERROR","DESERIALIZATION_STATUS_MAX_CODE","DESERIALIZATION_STATUS_MIN_CODE","DUPLICATE_ACQUIRES_ANNOTATION","DUPLICATE_ELEMENT","DUPLICATE_MODULE_NAME","DUPLICATE_NATIVE_FUNCTION","DUPLICATE_TABLE","Deserialization","DiscardedVMStatus","EMPTY_CODE_UNIT","EMPTY_VALUE_STACK","EQUALITY_OP_TYPE_MISMATCH_ERROR","EVENT_KEY_MISMATCH","EXCEEDED_MAX_TRANSACTION_SIZE","EXECUTED","EXECUTE_SCRIPT_FUNCTION_CALLED_ON_NON_SCRIPT_VISIBLE","EXECUTION_STACK_OVERFLOW","EXECUTION_STATUS_MAX_CODE","EXECUTION_STATUS_MIN_CODE","EXISTS_WITHOUT_KEY_ABILITY_OR_BAD_ARGUMENT","EXTRANEOUS_ACQUIRES_ANNOTATION","Error","Executed","Executed","Execution","ExecutionFailure","ExecutionFailure","FAILED_TO_DESERIALIZE_ARGUMENT","FAILED_TO_DESERIALIZE_RESOURCE","FAILED_TO_SERIALIZE_WRITE_SET_CHANGES","FEATURE_UNDER_GATING","FIELD_MISSING_TYPE_ABILITY","FREEZEREF_EXISTS_MUTABLE_BORROW_ERROR","FREEZEREF_TYPE_MISMATCH_ERROR","FUNCTION_RESOLUTION_FAILURE","GAS_UNIT_PRICE_ABOVE_MAX_BOUND","GAS_UNIT_PRICE_BELOW_MIN_BOUND","GENERIC_MEMBER_OPCODE_MISMATCH","GLOBAL_REFERENCE_ERROR","INDEX_OUT_OF_BOUNDS","INSUFFICIENT_BALANCE_FOR_TRANSACTION_FEE","INTEGER_OP_TYPE_MISMATCH_ERROR","INTERNAL_TYPE_ERROR","INVALID_ACQUIRES_ANNOTATION","INVALID_AUTH_KEY","INVALID_CONSTANT_TYPE","INVALID_FALL_THROUGH","INVALID_FLAG_BITS","INVALID_FRIEND_DECL_WITH_MODULES_IN_DEPENDENCIES","INVALID_FRIEND_DECL_WITH_MODULES_OUTSIDE_ACCOUNT_ADDRESS","INVALID_FRIEND_DECL_WITH_SELF","INVALID_GAS_SPECIFIER","INVALID_LOOP_BREAK","INVALID_LOOP_CONTINUE","INVALID_LOOP_SPLIT","INVALID_MAIN_FUNCTION_SIGNATURE","INVALID_MODULE_HANDLE","INVALID_MODULE_PUBLISHER","INVALID_OPERATION_IN_SCRIPT","INVALID_PARAM_TYPE_FOR_DESERIALIZATION","INVALID_PHANTOM_TYPE_PARAM_POSITION","INVALID_SIGNATURE","INVALID_SIGNATURE_TOKEN","INVALID_WRITE_SET","INVARIANT_VIOLATION_STATUS_MAX_CODE","INVARIANT_VIOLATION_STATUS_MIN_CODE","InvariantViolation","KeptVMStatus","LINKER_ERROR","LOOKUP_FAILED","LOOP_IN_INSTANTIATION_GRAPH","MALFORMED","MALFORMED_CONSTANT_DATA","MAX_GAS_UNITS_BELOW_MIN_TRANSACTION_GAS_UNITS","MAX_GAS_UNITS_EXCEEDS_MAX_GAS_UNITS_BOUND","MISSING_ACQUIRES_ANNOTATION","MISSING_DATA","MISSING_DEPENDENCY","MODULE_ADDRESS_DOES_NOT_MATCH_SENDER","MOVEFROM_TYPE_MISMATCH_ERROR","MOVEFROM_WITHOUT_KEY_ABILITY","MOVELOC_EXISTS_BORROW_ERROR","MOVELOC_UNAVAILABLE_ERROR","MOVETO_TYPE_MISMATCH_ERROR","MOVETO_WITHOUT_KEY_ABILITY","MiscellaneousError","Module","MoveAbort","MoveAbort","NEGATIVE_STACK_SIZE_WITHIN_BLOCK","NO_ACCOUNT_ROLE","NO_MODULE_HANDLES","NUMBER_OF_ARGUMENTS_MISMATCH","NUMBER_OF_SIGNER_ARGUMENTS_MISMATCH","NUMBER_OF_TYPE_ARGUMENTS_MISMATCH","OUT_OF_GAS","OutOfGas","PACK_TYPE_MISMATCH_ERROR","PC_OVERFLOW","POP_WITHOUT_DROP_ABILITY","POSITIVE_STACK_SIZE_AT_BLOCK_END","READREF_EXISTS_MUTABLE_BORROW_ERROR","READREF_TYPE_MISMATCH_ERROR","READREF_WITHOUT_COPY_ABILITY","RECURSIVE_STRUCT_DEFINITION","REJECTED_WRITE_SET","RESOURCE_ALREADY_EXISTS","RESOURCE_DOES_NOT_EXIST","RET_BORROWED_MUTABLE_REFERENCE_ERROR","RET_TYPE_MISMATCH_ERROR","SECONDARY_KEYS_ADDRESSES_COUNT_MISMATCH","SENDING_ACCOUNT_DOES_NOT_EXIST","SENDING_ACCOUNT_FROZEN","SEQUENCE_NONCE_INVALID","SEQUENCE_NUMBER_TOO_BIG","SEQUENCE_NUMBER_TOO_NEW","SEQUENCE_NUMBER_TOO_OLD","SIGNERS_CONTAIN_DUPLICATES","STLOC_TYPE_MISMATCH_ERROR","STLOC_UNSAFE_TO_DESTROY_ERROR","STORAGE_ERROR","Script","StatusCode","StatusType","TOO_MANY_LOCALS","TRANSACTION_EXPIRED","TYPE_MISMATCH","TYPE_RESOLUTION_FAILURE","UNABLE_TO_DESERIALIZE_ACCOUNT","UNEXPECTED_DESERIALIZATION_ERROR","UNEXPECTED_ERROR_FROM_KNOWN_MOVE_FUNCTION","UNEXPECTED_SIGNATURE_TYPE","UNEXPECTED_VERIFIER_ERROR","UNIMPLEMENTED_HANDLE","UNKNOWN_ABILITY","UNKNOWN_BINARY_ERROR","UNKNOWN_INVARIANT_VIOLATION_ERROR","UNKNOWN_MODULE","UNKNOWN_NATIVE_STRUCT_FLAG","UNKNOWN_OPCODE","UNKNOWN_RUNTIME_STATUS","UNKNOWN_SCRIPT","UNKNOWN_SERIALIZED_TYPE","UNKNOWN_SIGNATURE_TYPE","UNKNOWN_STATUS","UNKNOWN_TABLE_TYPE","UNKNOWN_VALIDATION_STATUS","UNKNOWN_VERIFICATION_ERROR","UNKNOWN_VERSION","UNPACK_TYPE_MISMATCH_ERROR","UNREACHABLE","UNSAFE_RET_LOCAL_OR_RESOURCE_STILL_BORROWED","UNSAFE_RET_UNUSED_VALUES_WITHOUT_DROP","Unknown","VALIDATION_STATUS_MAX_CODE","VALIDATION_STATUS_MIN_CODE","VALUE_DESERIALIZATION_ERROR","VALUE_SERIALIZATION_ERROR","VEC_BORROW_ELEMENT_EXISTS_MUTABLE_BORROW_ERROR","VEC_UPDATE_EXISTS_MUTABLE_BORROW_ERROR","VERIFICATION_ERROR","VERIFICATION_STATUS_MAX_CODE","VERIFICATION_STATUS_MIN_CODE","VERIFIER_INVARIANT_VIOLATION","VMStatus","VM_MAX_TYPE_DEPTH_REACHED","VM_MAX_VALUE_DEPTH_REACHED","VM_STARTUP_FAILURE","Validation","Verification","WRITEREF_EXISTS_BORROW_ERROR","WRITEREF_NO_MUTABLE_REFERENCE_ERROR","WRITEREF_TYPE_MISMATCH_ERROR","WRITEREF_WITHOUT_DROP_ABILITY","ZERO_SIZED_STRUCT","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","hash","hash","into","into","into","into","into","is_success","keep_or_discard","known_locations","move_abort_code","ne","ne","ne","partial_cmp","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","serialize","serialize","status_code","status_type","status_type","sub_status","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","0","0","1","code_offset","function","location","0","0","1","code_offset","function","location","status_code","ACCOUNT_MODULE","ACCOUNT_MODULE_IDENTIFIER","DESIGNATED_DEALER_MODULE","DESIGNATED_DEALER_MODULE_IDENTIFIER","DIEM_MODULE","DIEM_MODULE_IDENTIFIER","account_module_abort","designated_dealer_module_abort","diem_module_abort","NFE_BCS_SERIALIZATION_FAILURE","NFE_VECTOR_ERROR_BASE"],"q":["move_core_types","","","","","","","","","","","","","","","move_core_types::abi","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_core_types::abi::ScriptABI","","move_core_types::account_address","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_core_types::effects","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_core_types::errmap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_core_types::gas_schedulemove_core_types::identifier","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_core_types::language_storage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_core_types::language_storage::TypeTag","","move_core_types::move_resource","","","","","","","","","move_core_types::parser","","","","","","move_core_types::resolver","","","","","","","","move_core_types::transaction_argument","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_core_types::transaction_argument::TransactionArgument","","","","","","move_core_types::value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_core_types::value::MoveStruct","","move_core_types::value::MoveStructLayout","","move_core_types::value::MoveTypeLayout","","move_core_types::value::MoveValue","","","","","","","","move_core_types::vm_statusmove_core_types::vm_status::AbortLocation","move_core_types::vm_status::KeptVMStatus","","","","","move_core_types::vm_status::VMStatus","","","","","","","move_core_types::vm_status::known_locations","","","","","","","","","move_core_types::vm_status::sub_status",""],"d":["","","","","This module lays out the basic abstract costing schedule …","<code>ident_str!</code> is a compile-time validated macro that …","An identifier is the name of an entity (module, resource, …","","","","","","","","","The description of a (regular) argument in a script.","How to call a particular Move script (aka. an “ABI”).","","","","","The description of a type argument in a script.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A struct that represents an account address.","","The number of bytes in an address.","Hex address: 0x0","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to convert the provided byte buffer into Address.","","Tries to convert the provided byte array into Address.","","","","","","","","","A collection of changes to modules and resources under a …","A collection of changes to a Move state. Each …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The error category e.g., INVALID_ARGUMENT","","","","","","","The code description. This is generated from the doc …","The constant name of error e.g., ECANT_PAY_DEPOSIT","","","","","The set of error categories and their descriptions","","","","","","","","","","","","The set of modules, and the module-specific errors","The error reason e.g., ECANT_PAY_DEPOSIT","","","","","","","","","","","","","","","","","","","","A newtype wrapper that represents the (abstract) memory …","The size in bytes for a non-string or address constant on …","The cost tables, keyed by the serialized form of the …","For V1 all accounts will be ~800 bytes","A trait encoding the operations permitted on the …","The underlying carrier for gas-related units and costs. …","","The  <code>GasCost</code> tracks:","A newtype wrapper around the gas price for each unit of …","Units of gas as seen by clients of the Move VM.","Units of gas used within the Move VM, scaled for …","Any transaction over this size will be charged …","The maximum size representable by AbstractMemorySize","","For exists checks on data that doesn’t exists this is …","One unit of gas","The size in bytes for a reference on the stack","The size of a struct in bytes","Add the two <code>GasAlgebra</code>s together.","Apply a function <code>f</code> of two arguments to the carrier. Since <code>f</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Divide one <code>GasAlgebra</code> by the other.","","","","","","","","","","","","","","","","","","","","","","","","Get the carrier.","","","","","The cost per-byte read from global storage.","The cost per-byte written to storage.","","","","","","","","","","","","","","","The units of gas that to be charged per byte over the …","Any transaction over this size will be charged an …","Map a function <code>f</code> of one argument over the underlying data.","Map a function <code>f</code> of two arguments over the underlying …","The maximum gas unit price that a transaction can be …","","~5 microseconds should equal one unit of computational …","","The minimum gas price that a transaction can be submitted …","The flat minimum amount of gas required for any …","Multiply two <code>GasAlgebra</code>s together.","","","","","","","","","","Project a value into the gas algebra.","","","","","","","","","","","","","Subtract one <code>GasAlgebra</code> from the other.","","","","","","","","","","Convert a GasCost to a total gas charge in <code>InternalGasUnits</code>…","","","","","","","","","","","","","","","","","","","","","","We allow casting between GasAlgebras as long as they have …","","","","","","","","A borrowed identifier.","An owned identifier.","","Converts <code>self</code> to a byte slice.","Creates a borrowed version of <code>self</code>.","","Converts <code>self</code> to a <code>&amp;str</code>.","","","","","","","","","","","","","","","","","","","","","Converts a vector of bytes to an <code>Identifier</code>.","","","","Converts this <code>Identifier</code> into a UTF-8-encoded byte …","Converts this <code>Identifier</code> into a <code>String</code>.","Returns <code>true</code> if <code>self</code> has a length of zero bytes.","Returns if this identifier is “”. TODO: remove once we …","Describes what identifiers are allowed.","Returns true if this string is a valid identifier.","Returns true if this string is a valid identifier.","Return true if this character can appear in a Move …","Returns the length of <code>self</code> in bytes.","","","Creates a new <code>Identifier</code> instance.","","","","","","","","","","","","","","","","","","","","Represents the initial key into global storage where we …","","Represents the intitial key into global storage where we …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Traits for resolving Move modules and resources from …","A persistent storage implementation that can resolve both …","A persistent storage backend that can resolve resources by …","","","","","","","","","","Struct for encoding vector&lt;vector&gt; arguments for script …","","","","","","","","","","Convert the transaction arguments into Move values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A layout associated with a named field","","","","","The representation used by the MoveVM","The representation used by the MoveVM","","","","","","","","","","","","","A decorated representation with human-readable field names …","A decorated representation with human-readable field names …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An <code>AbortLocation</code> specifies where a Move program <code>abort</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The maximum status code for deserialization statuses","The minimum status code for deserialization statuses","","","","","","","","","","","","","","","","The maximum status code for runtim statuses","The minimum status code for runtime statuses","","","Indicates an error from the VM, e.g. OUT_OF_GAS, …","The VM status corresponding to an EXECUTED status code","","","Indicates an failure from inside Move code, where the VM …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The maximum status code for invariant violation statuses","The minimum status code for invariant violation statuses","","","","","","","","","","","","","","","","","","","","","Indicates <code>abort</code> occurred in the specified module","Indicates an <code>abort</code> from inside Move code. Contains the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates the <code>abort</code> occurred in a script","We don’t derive Arbitrary on this enum because it is too …","A status type is one of 5 different variants, along with a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The maximum status code for validation statuses","The minimum status code for validation statuses","","","","","","The maximum status code for verification statuses","The minimum status code for verification statuses","","A <code>VMStatus</code> is represented as either","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>Ok</code> with a recorded status if it should be kept, <code>Err</code>…","","Returns the Move abort code if the status is <code>MoveAbort</code>, …","","","","","","","","","","","","Return the status code for the <code>VMStatus</code>","Return the status type for this <code>VMStatus</code>. This is solely …","Return the status type for this status code","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The ModuleId for the Account module.","The Identifier for the Account module.","The ModuleId for the Designated Dealer module.","The Identifier for the Designated Dealer module.","The ModuleId for the Diem module.","The Identifier for the Diem module.","Location for an abort in the Account module","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,2,3,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,3,1,2,3,4,5,1,2,3,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,1,2,1,2,3,4,5,1,2,3,4,5,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,1,2,3,4,5,4,1,2,3,4,5,6,7,0,0,8,8,8,8,8,9,8,9,8,9,8,9,8,8,8,8,8,8,8,8,8,8,9,9,8,8,9,8,8,8,8,8,8,9,8,8,8,8,8,8,8,8,8,8,9,8,9,8,8,8,8,8,9,8,9,8,9,8,9,0,0,0,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,11,10,11,10,11,10,11,11,11,10,11,10,11,10,11,10,11,10,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,0,0,0,12,12,13,14,12,13,14,12,14,13,14,12,13,14,12,13,13,12,13,14,12,12,13,14,12,13,14,12,12,12,13,14,12,12,14,13,14,12,12,13,14,12,13,14,12,13,14,12,13,14,12,13,14,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,16,17,18,19,20,21,22,16,17,18,19,20,21,22,16,17,18,19,20,21,22,16,17,18,19,20,21,22,20,20,16,17,18,19,20,21,22,15,16,17,18,19,20,21,22,16,17,18,19,20,21,22,16,17,18,19,20,21,22,21,20,15,16,17,18,19,20,20,16,17,18,19,21,22,21,16,17,18,19,20,21,22,20,20,15,15,20,20,20,22,20,20,15,21,21,16,17,18,19,20,21,22,15,16,17,18,19,22,16,17,18,19,20,21,22,15,20,20,16,17,18,19,20,21,22,22,16,17,18,19,20,21,22,16,17,18,19,20,21,22,16,17,18,19,20,21,22,15,16,17,18,19,20,21,22,0,0,23,24,23,23,24,23,23,24,23,24,23,23,23,24,23,23,23,24,23,23,24,24,23,23,23,23,23,24,23,23,23,24,23,0,23,24,0,24,23,24,23,24,23,24,24,24,23,23,24,23,24,23,23,23,24,23,25,25,0,0,0,0,0,25,25,0,0,25,25,25,25,26,27,28,27,26,28,25,27,25,26,28,27,25,26,28,27,25,26,28,27,25,26,28,27,25,26,28,27,25,26,28,27,25,26,28,27,25,25,26,26,28,28,27,27,25,25,26,28,27,25,26,28,27,25,26,28,27,26,26,27,26,25,26,28,27,28,27,25,26,28,27,25,26,28,27,25,26,28,27,25,26,28,27,25,26,28,27,25,26,28,27,28,28,25,26,28,27,26,25,26,28,27,29,30,31,0,0,31,31,32,31,31,31,0,0,0,0,0,0,33,34,35,0,0,0,34,35,36,36,0,36,36,36,36,0,36,36,37,36,37,36,37,36,37,0,36,37,36,37,36,36,37,37,36,37,36,37,37,36,37,36,36,37,36,36,37,36,37,36,37,36,37,38,39,40,41,42,43,44,45,44,45,0,0,0,0,0,46,47,44,45,44,45,44,45,44,45,44,45,44,45,46,47,46,44,48,47,45,46,44,48,47,45,46,44,48,47,45,46,44,48,47,45,48,47,45,46,44,46,47,46,44,48,48,47,47,45,45,46,44,44,48,47,45,46,44,48,47,45,46,47,46,44,46,48,47,46,44,48,47,45,0,46,44,44,46,44,48,47,45,48,47,45,46,44,48,47,45,46,44,48,47,45,46,44,48,47,45,44,44,46,44,48,47,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,63,63,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,0,0,63,63,63,63,63,64,0,63,63,63,63,63,63,63,63,0,0,63,63,65,65,66,64,65,66,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,0,0,64,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,66,67,65,66,63,63,63,63,63,63,63,66,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,67,0,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,64,0,0,63,63,63,63,63,0,0,63,0,63,63,63,64,64,63,63,63,63,63,65,66,67,63,65,66,67,64,63,65,66,67,64,63,65,66,67,64,63,65,66,67,64,63,65,66,67,63,65,66,67,63,65,66,67,64,63,65,65,66,66,67,67,64,64,63,65,66,67,64,63,65,66,67,64,63,65,66,67,64,63,66,65,0,65,65,66,67,65,66,67,63,65,66,67,63,65,65,63,0,65,66,67,64,63,65,66,67,64,65,66,67,64,63,63,65,66,67,64,63,65,66,67,64,63,65,66,67,64,63,68,69,69,70,70,70,71,72,72,73,73,73,73,0,0,0,0,0,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["scriptabi",4]],[[],["scriptfunctionabi",3]],[[],["transactionscriptabi",3]],[[],["argumentabi",3]],[[],["typeargumentabi",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[["scriptabi",4]],["bool",15]],[[["scriptfunctionabi",3]],["bool",15]],[[["transactionscriptabi",3]],["bool",15]],[[["argumentabi",3]],["bool",15]],[[["typeargumentabi",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["moduleid",3]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[["scriptabi",4]],["bool",15]],[[["scriptfunctionabi",3]],["bool",15]],[[["transactionscriptabi",3]],["bool",15]],[[["argumentabi",3]],["bool",15]],[[["typeargumentabi",3]],["bool",15]],[[["vec",3,["typeargumentabi"]],["string",3],["typeargumentabi",3],["vec",3,["argumentabi"]],["moduleid",3],["argumentabi",3]]],[[["vec",3,["typeargumentabi"]],["u8",15],["string",3],["vec",3,["u8"]],["typeargumentabi",3],["vec",3,["argumentabi"]],["argumentabi",3]]],[[["typetag",4],["string",3]]],[[["string",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typetag",4]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["accountaddress",3]],[[],["accountaddressparseerror",3]],[[]],[[]],[[["accountaddress",3]],["ordering",4]],[[]],[[],["result",4]],[[]],[[]],[[["accountaddress",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["asref",8]],[["accountaddressparseerror",3],["result",4,["accountaddressparseerror"]]]],[[["asref",8]],[["accountaddressparseerror",3],["result",4,["accountaddressparseerror"]]]],[[["str",15]],[["accountaddressparseerror",3],["result",4,["accountaddressparseerror"]]]],[[["str",15]],[["accountaddressparseerror",3],["result",4,["accountaddressparseerror"]]]],[[]],[[]],[[]],[[]],[[["accountaddress",3]],["bool",15]],[[]],[[["accountaddress",3]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[],["result",4]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],[["vec",3,["u8"]],["u8",15]]],[[["vec",3,["u8"]],["u8",15]],[["result",4,["accountaddress","accountaddressparseerror"]],["accountaddressparseerror",3],["accountaddress",3]]],[[],["result",4]],[[],[["result",4,["accountaddress","accountaddressparseerror"]],["accountaddressparseerror",3],["accountaddress",3]]],[[["string",3]],[["result",4,["accountaddress","accountaddressparseerror"]],["accountaddressparseerror",3],["accountaddress",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,[[],["btreemap",3]],[[]],[[]],[[]],[[]],[[],["accountchangeset",3]],[[],["changeset",3]],[[]],[[]],[[["accountchangeset",3]],["ordering",4]],[[["changeset",3]],["ordering",4]],[[["accountchangeset",3]],["bool",15]],[[["changeset",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["structtag",3],["option",4,["vec"]],["btreemap",3,["identifier","option"]],["btreemap",3,["structtag","option"]],["identifier",3]]],[[]],[[]],[[]],[[],[["accountchangeset",3],["btreemap",3,["accountaddress","accountchangeset"]],["accountaddress",3]]],[[],[["option",4,["vec"]],["btreemap",3,["identifier","option"]],["identifier",3]]],[[]],[[],[["option",4,["vec"]],["btreemap",3,["structtag","option"]],["structtag",3]]],[[],["bool",15]],[[],["btreemap",3]],[[]],[[["accountchangeset",3]],["bool",15]],[[["changeset",3]],["bool",15]],[[]],[[]],[[["accountchangeset",3]],[["option",4,["ordering"]],["ordering",4]]],[[["changeset",3]],[["option",4,["ordering"]],["ordering",4]]],[[["vec",3,["u8"]],["u8",15],["identifier",3]],["result",6]],[[["vec",3,["u8"]],["u8",15],["moduleid",3]],["result",6]],[[["accountchangeset",3],["accountaddress",3]]],[[["vec",3,["u8"]],["u8",15],["identifier",3]]],[[["vec",3,["u8"]],["u8",15],["moduleid",3]]],[[["vec",3,["u8"]],["u8",15],["structtag",3]]],[[["u8",15],["structtag",3],["vec",3,["u8"]],["accountaddress",3]]],[[["vec",3,["u8"]],["u8",15],["structtag",3]],["result",6]],[[["u8",15],["structtag",3],["vec",3,["u8"]],["accountaddress",3]],["result",6]],[[],["btreemap",3]],[[]],[[],["result",6]],[[],["result",6]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["identifier",3]],["result",6]],[[["moduleid",3]],["result",6]],[[["structtag",3]],["result",6]],[[["structtag",3],["accountaddress",3]],["result",6]],[[]],[[]],null,null,null,[[["u64",15],["errordescription",3]],["result",6]],[[["u64",15],["errordescription",3],["moduleid",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["errordescription",3]],[[],["errorcontext",3]],[[],["errormapping",3]],[[]],[[]],[[]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["asref",8,["path"]],["path",3]]],[[["u64",15],["moduleid",3]],[["option",4,["errorcontext"]],["errorcontext",3]]],[[]],[[]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["asref",8,["path"]],["path",3]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[["fn",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["abstractmemorysize",3]],[[],["gasunits",3]],[[],["internalgasunits",3]],[[],["gasprice",3]],[[],["gasconstants",3]],[[],["costtable",3]],[[],["gascost",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[["abstractmemorysize",3]],["bool",15]],[[["gasunits",3]],["bool",15]],[[["internalgasunits",3]],["bool",15]],[[["gasprice",3]],["bool",15]],[[["gasconstants",3]],["bool",15]],[[["costtable",3]],["bool",15]],[[["gascost",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[],["gascarrier",6]],[[],["gascarrier",6]],[[],["gascarrier",6]],[[],["gascarrier",6]],null,null,[[]],[[]],[[]],[[]],[[["u8",15]],["gascost",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["fn",8]]],[[["fn",8]]],null,null,null,null,null,null,[[]],[[["u8",15]],["gascost",3]],null,[[["abstractmemorysize",3]],["bool",15]],[[["gasunits",3]],["bool",15]],[[["internalgasunits",3]],["bool",15]],[[["gasprice",3]],["bool",15]],[[["gasconstants",3]],["bool",15]],[[["costtable",3]],["bool",15]],[[["gascost",3]],["bool",15]],[[]],[[["gascarrier",6]]],[[["gascarrier",6]]],[[["gascarrier",6]]],[[["gascarrier",6]]],[[["gascarrier",6]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[["internalgasunits",3,["gascarrier"]],["gascarrier",6]],[["gasunits",3,["gascarrier"]],["gascarrier",6]]],[[["gasunits",3,["gascarrier"]],["gascarrier",6]],[["internalgasunits",3,["gascarrier"]],["gascarrier",6]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["internalgasunits",3,["gascarrier"]],["gascarrier",6]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["gasalgebra",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[],["identstr",3]],[[],["identstr",3]],[[],["str",15]],[[]],[[],["identstr",3]],[[]],[[]],[[]],[[],["identifier",3]],[[]],[[["identifier",3]],["ordering",4]],[[["identstr",3]],["ordering",4]],[[],["identstr",3]],[[],["result",4]],[[["identifier",3]],["bool",15]],[[["identstr",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["identstr",3]]],[[]],[[["str",15]],["result",6]],[[["vec",3,["u8"]],["u8",15]],["result",6]],[[]],[[]],[[]],[[],[["vec",3,["u8"]],["u8",15]]],[[],["string",3]],[[],["bool",15]],[[],["bool",15]],[[["str",15]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["char",15]],["bool",15]],[[],["usize",15]],[[["identifier",3]],["bool",15]],[[["identstr",3]],["bool",15]],[[],["result",6]],[[["str",15]],[["result",6,["identstr"]],["identstr",3]]],[[["identifier",3]],[["option",4,["ordering"]],["ordering",4]]],[[["identstr",3]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[]],[[],["result",4]],[[]],[[],["identifier",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["vec",3,["u8"]],["u8",15]]],[[],[["vec",3,["u8"]],["u8",15]]],[[],["accountaddress",3]],[[],["accountaddress",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["typetag",4]],[[],["structtag",3]],[[],["resourcekey",3]],[[],["moduleid",3]],[[]],[[]],[[]],[[]],[[["typetag",4]],["ordering",4]],[[["structtag",3]],["ordering",4]],[[["resourcekey",3]],["ordering",4]],[[["moduleid",3]],["ordering",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["typetag",4]],["bool",15]],[[["structtag",3]],["bool",15]],[[["resourcekey",3]],["bool",15]],[[["moduleid",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["structtag",3]],["typetag",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["moduleid",3]],[[],["identstr",3]],null,[[["typetag",4]],["bool",15]],[[["structtag",3]],["bool",15]],[[["resourcekey",3]],["bool",15]],[[["moduleid",3]],["bool",15]],[[["structtag",3],["accountaddress",3]]],[[["identifier",3],["accountaddress",3]]],[[["typetag",4]],[["option",4,["ordering"]],["ordering",4]]],[[["structtag",3]],[["option",4,["ordering"]],["ordering",4]]],[[["resourcekey",3]],[["option",4,["ordering"]],["ordering",4]]],[[["moduleid",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["structtag",3]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[],["identifier",3]],[[],[["vec",3,["u8"]],["u8",15]]],[[],["identifier",3]],[[],["structtag",3]],[[],[["vec",3,["typetag"]],["typetag",4]]],[[["str",15]],[["result",6,["vec"]],["vec",3,["string"]]]],[[["str",15]],[["result",6,["structtag"]],["structtag",3]]],[[["str",15]],[["result",6,["transactionargument"]],["transactionargument",4]]],[[["str",15]],[["vec",3,["transactionargument"]],["result",6,["vec"]]]],[[["str",15]],[["typetag",4],["result",6,["typetag"]]]],[[["str",15]],[["result",6,["vec"]],["vec",3,["typetag"]]]],null,null,null,null,null,null,[[["moduleid",3]],[["result",4,["option"]],["option",4,["vec"]]]],[[["accountaddress",3],["structtag",3]],[["option",4,["vec"]],["result",4,["option"]]]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["transactionargument",4]],[[],["vecbytes",3]],[[]],[[]],[[],[["vec",3,["vec"]],["vec",3,["u8"]]]],[[],["result",4]],[[],["result",4]],[[["transactionargument",4]],["bool",15]],[[["vecbytes",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[["vec",3,["vec"]],["vec",3,["u8"]]]],[[]],[[]],[[]],[[]],[[]],[[],[["vec",3,["vec"]],["vec",3,["u8"]]]],[[["transactionargument",4]],["bool",15]],[[["vecbytes",3]],["bool",15]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[["movevalue",4]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["movestruct",4]],[[],["movevalue",4]],[[],["movefieldlayout",3]],[[],["movestructlayout",4]],[[],["movetypelayout",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["movestruct",4]],["bool",15]],[[["movevalue",4]],["bool",15]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["transactionargument",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["vec",3,["movevalue"]],["movevalue",4]]],[[],[["vec",3,["movetypelayout"]],["movetypelayout",4]]],[[["movestruct",4]],["bool",15]],[[["movevalue",4]],["bool",15]],[[["vec",3,["movevalue"]],["movevalue",4]]],[[["movetypelayout",4],["identifier",3]]],[[["vec",3,["movetypelayout"]],["movetypelayout",4]]],[[["serializer",8]],["result",4]],[[["serializer",8]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["vec",3,["vec"]],["vec",3,["u8"]]]],[[["movestructlayout",4]],["aresult",6]],[[["movetypelayout",4]],["aresult",6]],[[],[["option",4,["vec"]],["vec",3,["u8"]]]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["vec",3,["accountaddress"]],["accountaddress",3]]],[[["vec",3,["u8"]],["u8",15]]],[[]],[[]],[[]],[[]],[[]],[[["vec",3]]],[[["vec",3,["movefieldlayout"]],["movefieldlayout",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["vmstatus",4]],[[],["keptvmstatus",4]],[[],["abortlocation",4]],[[],["statustype",4]],[[],["statuscode",4]],[[]],[[]],[[]],[[]],[[]],[[["vmstatus",4]],["ordering",4]],[[["keptvmstatus",4]],["ordering",4]],[[["abortlocation",4]],["ordering",4]],[[["statuscode",4]],["ordering",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["vmstatus",4]],["bool",15]],[[["keptvmstatus",4]],["bool",15]],[[["abortlocation",4]],["bool",15]],[[["statustype",4]],["bool",15]],[[["statuscode",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],[["result",6,["keptvmstatus","discardedvmstatus"]],["keptvmstatus",4],["discardedvmstatus",6]]],null,[[],[["u64",15],["option",4,["u64"]]]],[[["vmstatus",4]],["bool",15]],[[["keptvmstatus",4]],["bool",15]],[[["abortlocation",4]],["bool",15]],[[["vmstatus",4]],[["option",4,["ordering"]],["ordering",4]]],[[["keptvmstatus",4]],[["option",4,["ordering"]],["ordering",4]]],[[["abortlocation",4]],[["option",4,["ordering"]],["ordering",4]]],[[["statuscode",4]],[["option",4,["ordering"]],["ordering",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["statuscode",4]],[[],["statustype",4]],[[],["statustype",4]],null,[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u64",15]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["abortlocation",4]],[[],["abortlocation",4]],[[],["abortlocation",4]],null,null],"p":[[4,"ScriptABI"],[3,"ScriptFunctionABI"],[3,"TransactionScriptABI"],[3,"ArgumentABI"],[3,"TypeArgumentABI"],[13,"TransactionScript"],[13,"ScriptFunction"],[3,"AccountAddress"],[3,"AccountAddressParseError"],[3,"ChangeSet"],[3,"AccountChangeSet"],[3,"ErrorMapping"],[3,"ErrorDescription"],[3,"ErrorContext"],[8,"GasAlgebra"],[3,"AbstractMemorySize"],[3,"GasUnits"],[3,"InternalGasUnits"],[3,"GasPrice"],[3,"GasConstants"],[3,"CostTable"],[3,"GasCost"],[3,"Identifier"],[3,"IdentStr"],[4,"TypeTag"],[3,"StructTag"],[3,"ModuleId"],[3,"ResourceKey"],[13,"Vector"],[13,"Struct"],[8,"MoveStructType"],[8,"MoveResource"],[8,"MoveResolver"],[8,"ModuleResolver"],[8,"ResourceResolver"],[4,"TransactionArgument"],[3,"VecBytes"],[13,"U8"],[13,"U64"],[13,"U128"],[13,"Address"],[13,"U8Vector"],[13,"Bool"],[4,"MoveValue"],[4,"MoveTypeLayout"],[4,"MoveStruct"],[4,"MoveStructLayout"],[3,"MoveFieldLayout"],[13,"Runtime"],[13,"WithFields"],[13,"Runtime"],[13,"WithFields"],[13,"Vector"],[13,"Struct"],[13,"U8"],[13,"U64"],[13,"U128"],[13,"Bool"],[13,"Address"],[13,"Vector"],[13,"Struct"],[13,"Signer"],[4,"StatusCode"],[4,"StatusType"],[4,"VMStatus"],[4,"KeptVMStatus"],[4,"AbortLocation"],[13,"Module"],[13,"MoveAbort"],[13,"ExecutionFailure"],[13,"Error"],[13,"MoveAbort"],[13,"ExecutionFailure"]]},\
"move_coverage":{"doc":"","t":[0,0,0,3,3,3,6,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,6,13,13,13,13,3,3,3,4,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,12,12,12,12,3,3,3,11,11,11,11,11,11,12,11,11,11,11,12,12,12,12,12,12,11,11,11,12,11,11,11,12,11,11,11,11,11,5,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11],"n":["coverage_map","source_coverage","summary","CoverageMap","ExecCoverageMap","ExecCoverageMapWithModules","FunctionCoverage","ModuleCoverageMap","TraceEntry","TraceMap","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compiled_modules","deserialize","deserialize","deserialize","deserialize","deserialize","empty","exec_id","exec_maps","exec_maps","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_binary_file","from_binary_file","from_trace_file","from_trace_file","func_name","func_pc","function_maps","get_function_coverage","insert","insert","insert","insert","insert_multi","insert_multi","into","into","into","into","into","into","into_coverage_map_with_modules","into_module_summaries","merge","merge","module_addr","module_addr","module_maps","module_maps","module_name","module_name","new","new","output_map_to_file","serialize","serialize","serialize","serialize","serialize","to_unified_exec_map","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","update_coverage_from_trace_file","update_from_trace_file","vzip","vzip","vzip","vzip","vzip","vzip","AbstractSegment","AnnotatedLine","Bounded","BoundedLeft","BoundedRight","Covered","FunctionSourceCoverage","SourceCoverage","SourceCoverageBuilder","StringSegment","Uncovered","annotated_lines","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","compute_source_coverage","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fn_is_native","from","from","from","from","from","into","into","into","into","into","ne","new","output_source_coverage","partial_cmp","serialize","serialize","serialize","serialize","serialize","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","uncovered_locations","vzip","vzip","vzip","vzip","vzip","end","end","start","start","0","0","FunctionInfo","FunctionSummary","ModuleSummary","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","covered","deserialize","deserialize","fmt","fmt","fn_branches","fn_entry","fn_is_native","fn_name","fn_num_paths","fn_returns","from","from","from","function_summaries","into","into","into","module_name","percent_coverage","serialize","serialize","summarize_csv","summarize_human","summarize_inst_cov","summarize_inst_cov_by_module","summarize_path_cov","total","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["move_coverage","","","move_coverage::coverage_map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_coverage::source_coverage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_coverage::source_coverage::AbstractSegment","","","","move_coverage::source_coverage::StringSegment","","move_coverage::summary","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Takes in a file containing a serialized coverage map and …","","Takes in a file containing a raw VM trace, and returns a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Takes in a file containing a raw VM trace, and returns an …","Takes in a file containing a raw VM trace, and returns an …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Summarizes the modules coverage in CSV format","Summarizes the modules coverage, and returns the total …","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,1,2,3,4,5,6,4,1,2,3,5,6,4,3,1,6,1,2,3,4,5,6,1,2,3,4,5,6,1,6,1,6,5,5,2,2,1,2,3,6,2,3,1,2,3,4,5,6,3,4,2,4,2,5,3,4,2,5,2,3,0,1,2,3,5,6,1,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,6,1,2,3,4,5,6,0,0,7,7,7,8,0,0,0,0,8,9,10,11,7,8,9,10,11,7,8,9,10,10,7,11,7,7,10,11,7,8,9,10,10,11,7,8,9,10,11,7,8,9,7,11,9,7,10,11,7,8,9,10,10,11,7,8,9,10,11,7,8,9,10,11,7,8,9,10,10,11,7,8,9,12,13,12,14,15,16,0,0,0,17,18,19,17,18,19,19,18,19,18,19,17,17,19,17,17,17,17,18,19,18,17,18,19,18,19,18,19,18,18,0,0,0,19,17,18,19,17,18,19,17,18,19,17,18,19],"f":[null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["asref",8,["path"]],["path",3]]],[[["asref",8,["path"]],["path",3]]],[[["asref",8,["path"]],["path",3]]],[[["asref",8,["path"]],["path",3]]],null,null,null,[[["identstr",3]],[["option",4,["functioncoverage"]],["functioncoverage",6]]],[[["u64",15],["accountaddress",3],["identifier",3],["str",15]]],[[["identifier",3],["u64",15]]],[[["identifier",3],["u64",15],["accountaddress",3]]],[[["u64",15],["accountaddress",3],["identifier",3],["str",15]]],[[["identifier",3],["u64",15]]],[[["u64",15],["accountaddress",3],["identifier",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["accountaddress",3],["btreemap",3,["accountaddress","btreemap"]],["btreemap",3,["identifier"]]],["execcoveragemapwithmodules",3]],[[],[["modulesummary",3],["btreemap",3,["string","modulesummary"]],["string",3]]],[[["modulecoveragemap",3]]],[[["execcoveragemapwithmodules",3]]],null,null,null,null,null,null,[[["identifier",3],["accountaddress",3]]],[[["string",3]]],[[["asref",8,["path"]],["path",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["execcoveragemap",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["asref",8,["path"]],["path",3]]],[[["asref",8,["path"]],["path",3]]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["functionsourcecoverage",3]],[[]],[[["abstractsegment",4]],["ordering",4]],[[["path",3]],["sourcecoverage",3]],[[["abstractsegment",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["abstractsegment",4]],["bool",15]],[[["compiledmodule",3],["coveragemap",3],["sourcemap",3]]],[[],["result",6]],[[["abstractsegment",4]],[["option",4,["ordering"]],["ordering",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,null,null,null,null,null,[[]],[[]],[[]],null,[[]],[[]],[[]],null,[[],["f64",15]],[[],["result",4]],[[],["result",4]],[[],["result",6]],[[["bool",15]],["result",6]],[[["execcoveragemap",3],["compiledmodule",3]],["modulesummary",3]],[[["compiledmodule",3],["modulecoveragemap",3],["option",4,["modulecoveragemap"]]],["modulesummary",3]],[[["compiledmodule",3],["tracemap",3]],["modulesummary",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]]],"p":[[3,"CoverageMap"],[3,"ModuleCoverageMap"],[3,"ExecCoverageMap"],[3,"ExecCoverageMapWithModules"],[3,"TraceEntry"],[3,"TraceMap"],[4,"AbstractSegment"],[4,"StringSegment"],[3,"SourceCoverage"],[3,"FunctionSourceCoverage"],[3,"SourceCoverageBuilder"],[13,"Bounded"],[13,"BoundedRight"],[13,"BoundedLeft"],[13,"Covered"],[13,"Uncovered"],[3,"FunctionInfo"],[3,"ModuleSummary"],[3,"FunctionSummary"]]},\
"move_ir_types":{"doc":"Base types for the Move IR.","t":[0,0,14,0,12,12,12,12,12,12,12,12,12,4,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,6,3,3,13,13,13,13,13,13,13,13,13,4,13,13,6,13,6,6,4,18,13,13,13,13,6,4,13,3,3,13,13,13,13,6,4,18,13,13,13,13,13,13,13,13,13,6,13,6,4,13,6,6,3,3,6,13,13,13,6,4,6,13,4,3,3,3,4,3,13,13,13,13,3,13,13,13,13,3,13,18,13,6,4,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,3,3,13,3,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,3,13,3,13,13,13,13,18,3,13,13,4,13,13,13,13,13,13,4,13,13,6,4,3,3,3,6,13,13,13,13,13,13,4,13,6,3,13,13,13,13,13,13,13,4,13,13,13,6,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,12,12,12,11,11,11,11,12,12,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,12,11,11,12,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,12,12,12,12,11,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,6,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,13,13,13,13,13,6,4,13,13,13,13,4,13,13,13,13,6,3,13,13,13,13,13,4,4,13,13,6,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["ast","location","sp","spec_language_ast","0","0","0","0","0","0","0","0","0","Ability","Abort","Abort","Add","Add","Address","Address","And","And","Assign","BinOp","BinopExp","BitAnd","BitAnd","BitOr","BitOr","Block","BlockLabel","Block_","Bool","Bool","Borrow","BorrowGlobal","BorrowLocal","BrFalse","BrTrue","Branch","Break","Builtin","Builtin","ByteArray","Bytecode","Bytecode","BytecodeBlock","BytecodeBlocks","Bytecode_","COPY","Call","CastU128","CastU64","CastU8","Cmd","Cmd_","CommandStatement","Constant","ConstantName","Continue","Copy","Copy","CopyLoc","CopyableVal","CopyableVal_","DROP","Dereference","Div","Div","Drop","EmptyStatement","Eq","Eq","Exists","Exists","Exp","Exp","ExpFields","Exp_","ExprList","Field","FieldIdent","FieldIdent_","Field_","Fields","Freeze","FreezeRef","Friend","Function","FunctionBody","FunctionCall","FunctionCall","FunctionCall_","FunctionDependency","FunctionName","FunctionSignature","FunctionVisibility","Function_","Ge","Ge","Gt","Gt","IfElse","IfElseStatement","ImmBorrowField","ImmBorrowGlobal","ImmBorrowLoc","ImportDefinition","Internal","KEY","Key","LValue","LValue_","LdConst","LdFalse","LdNamedConst","LdTrue","LdU128","LdU64","LdU8","Le","Le","Loop","LoopStatement","Lt","Lt","Mod","Mod","Module","ModuleDefinition","ModuleDependency","ModuleFunctionCall","ModuleIdent","ModuleName","Move","Move","Move","MoveFrom","MoveFrom","MoveLoc","MoveTo","MoveTo","Mul","Mul","MutBorrowField","MutBorrowGlobal","MutBorrowLoc","Mutate","Native","Native","Neq","Neq","Nop","NopLabel","Not","Not","Or","Or","Pack","Pack","Pop","Pop","Program","Public","QualifiedStructIdent","ReadRef","Reference","Ret","Return","STORE","Script","Script","Script","ScriptOrModule","Shl","Shl","Shr","Shr","Signer","StLoc","Statement","Store","Struct","StructDefinition","StructDefinitionFields","StructDefinition_","StructDependency","StructName","StructTypeParameter","Sub","Sub","Subrange","ToU128","ToU64","ToU8","Type","TypeParameter","TypeVar","TypeVar_","U128","U128","U64","U64","U8","U8","UnaryExp","UnaryOp","Unpack","Unpack","Value","Var","Var","Var_","VecImmBorrow","VecImmBorrow","VecLen","VecLen","VecMutBorrow","VecMutBorrow","VecPack","VecPack","VecPopBack","VecPopBack","VecPushBack","VecPushBack","VecSwap","VecSwap","VecUnpack","VecUnpack","Vector","While","WhileStatement","WriteRef","Xor","Xor","abilities","abilities","acquires","add","address","address","address","address","alias","binop","block","block","body","body","bool","bool","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builtin","byte_array","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmd","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cond","cond","constants","constants","copy","dereference","deserialize","deserialize","deserialize","else_block","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","explicit_dependency_declarations","explicit_dependency_declarations","expr_list","field","fields","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","formals","friends","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","function_call","functions","functions","get_external_deps","get_external_deps","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","ident","identifier","if_block","if_block","if_block","if_else","if_else","imports","imports","instantiate","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","invariants","loc","loc","main","module","module","module_call","module_self","modules","move_","move_declared","name","name","name","name","name","name","name","name","name","native","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","new","new","new","next","next","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","reference","return_","return_empty","return_type","script","self_name","serialize","serialize","serialize","signature","signature","signature","specifications","stmts","struct","struct_name","structs","structs","sub","synthetics","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_actuals","type_formals","type_formals","type_formals","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u64","u64","value","value","visibility","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","1","1","1","1","1","1","2","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","1","1","1","1","1","1","1","1","1","1","1","2","2","2","0","0","0","0","0","1","1","2","3","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","1","1","1","2","2","exp","field","is_mutable","code","code","locals","locals","0","module","name","type_actuals","0","0","0","0","0","0","0","0","fields","0","0","0","0","1","1","ByteIndex","Loc","Spanned","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","deserialize","end","eq","eq","file_hash","fmt","fmt","fmt","from","from","hash","hash","into","into","loc","ne","new","new","partial_cmp","partial_cmp","serialize","sp","start","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unsafe_no_loc","usize_range","value","vzip","vzip","AbortsIf","AccessPath","Address","Binop","Call","Condition","Condition_","Constant","Dereference","Ensures","Field","FieldOrIndex","Formal","GlobalExists","GlobalResource","Index","Invariant","Invariant_","Not","Old","Reference","Requires","Ret","SpecExp","StorageLocation","StorageLocation","SucceedsIf","SyntheticDefinition","SyntheticDefinition_","Update","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","eq","eq","exp","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","modifier","name","ne","ne","ne","ne","ne","ne","target","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","1","2","address","type_","type_actuals","0","0","0","address","base","fields_and_indices","type_","type_actuals"],"q":["move_ir_types","","","","move_ir_types::astmove_ir_types::ast::Builtin","","","","","","","","","","","","","","","","","","","move_ir_types::ast::Bytecode_","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_ir_types::ast::Cmd_","","","","","","","","","move_ir_types::ast::CopyableVal_","","","","","","move_ir_types::ast::Exp_","","","","","","","","","","","","","","","","","","","","move_ir_types::ast::FunctionBody","","","","move_ir_types::ast::FunctionCall_","","","","move_ir_types::ast::LValue_","","move_ir_types::ast::ScriptOrModule","","move_ir_types::ast::Statement","","","","move_ir_types::ast::StructDefinitionFields","move_ir_types::ast::Type","","","","","","move_ir_types::location","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_ir_types::spec_language_ast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_ir_types::spec_language_ast::Condition_","","","","move_ir_types::spec_language_ast::FieldOrIndex","","move_ir_types::spec_language_ast::SpecExp","","","","","","","","","","","","","","","","move_ir_types::spec_language_ast::StorageLocation","","","","","","",""],"d":["","","Macro used to create a tuple-like pattern match for Spanned","","","","","","","","","","","The abilities of a type. Analogous to …","<code>abort e</code>","","<code>+</code>","","<code>address</code>","An address in the global storage","<code>&amp;&amp;</code>","","<code>l_1, ..., l_n = e</code>","Enum for binary operators","<code>e_1 op e_2</code>","<code>&amp;</code>","","<code>|</code>","","The type of a Block coupled with source location …","","<code>{ s }</code>","<code>bool</code>","true or false","<code>&amp;e.f</code>, <code>&amp;mut e.f</code>","Get a reference to the resource(<code>StructName</code> resolved by …","<code>&amp;x</code> or <code>&amp;mut x</code>","","","","<code>break</code>","Builtin “function”-like operators that often have a …","functions defined in the host environment","<code>b&quot;&lt;bytes&gt;&quot;</code>","","","","","","","","","","","The type of a command with its location","Enum for Move commands","<code>c;</code>","A constant declaration in a module or script","Newtype for the name of a constant","<code>continue</code>","Allows values of types with this ability to be copied","<code>copy(x)</code>","","The type of a value and its location","Bottom of the value hierarchy. These values can be …","","<code>*e</code>","<code>/</code>","","Allows values of types with this ability to be dropped or …","no-op that eases parsing in some places","<code>==</code>","","Check if there is a struct object (<code>StructName</code> resolved by …","","The type for a <code>Exp_</code> and its location","","The type for fields and their bound expressions","Enum for all expressions","(e_1, e_2, e_3, …, e_j)","A field coupled with source location information","","A fully-qualified field identifier.","The field newtype","A field map","Convert a mutable reference into an immutable one","","The procedure can be invoked internally as well as by …","The type of a Function coupled with its source location …","The body of a Move function","The type for a function call and its location","<code>f(e)</code> or <code>f(e_1, e_2, ..., e_j)</code>","Enum for different function calls","An explicit function dependency","Newtype for the name of a function","The signature of a function","Public or internal modifier for a procedure","A Move function/procedure","<code>&gt;=</code>","","<code>&gt;</code>","","Struct defining an if statement","<code>if (e) { s_1 } else { s_2 }</code>","","","","A dependency/import declaration","The procedure can be invoked only internally <code>&lt;no modifier&gt;</code>","","Allows the type to serve as a key for global storage …","","Enum for Move lvalues","","","","","","","","<code>&lt;=</code>","","Struct defining a loop statement","<code>loop { s }</code>","<code>&lt;</code>","","<code>%</code>","","The module to publish.","A Move module","Explicitly given dependency","The call of a module defined procedure","Newtype of the address + the module name <code>addr.m</code>","Newtype for a name of a module","The fields are declared","The body is declared <code>locals</code> are all of the declared locals …","<code>move(x)</code>","Remove a resource of the given type from the account with …","","","Publish an instantiated struct object into signer’s …","","<code>*</code>","","","","","<code>*e</code>","The struct is a type provided by the VM","The body is provided by the runtime","<code>!=</code>","","","","Boolean negation","","<code>||</code>","","Takes the given field values and instantiates the struct …","","<code>_</code>","","A set of Move modules and a Move transaction script","The procedure can be invoked anywhere <code>public</code>","Identifier for a struct definition. Tells us where to look …","","A reference type, the bool flag indicates whether the …","","<code>return e_1, ... , e_j</code>","","The Move transaction script to be executed","The script to execute.","The procedure can only be invoked from a script context …","A script or a module, used to represent the two types of …","<code>&lt;&lt;</code>","","<code>&gt;&gt;</code>","","<code>signer</code>","","","Allows values of types with this ability to exist inside a …","A module defined struct","The type of a StructDefinition along with its source …","The fields of a Move struct definition","A Move struct","An explicit struct dependency","Newtype for the name of a struct","A struct type parameter with its constraints and whether it…","<code>-</code>","","‘..’  only used in specs","Cast an integer into u128.","Cast an integer into u64.","Cast an integer into u8.","The type of a single value","A type parameter","The type of a type variable with a location.","New type that represents a type variable. Used to declare …","<code>u128</code>","An unsigned 128-bit integer","<code>u64</code>","An unsigned 64-bit integer","<code>u8</code>","An unsigned 8-bit integer","<code>op e</code>","Enum for unary operators","<code>n { f_1: x_1, ... , f_j: x_j  } = e</code>","","Wrapper to lift <code>CopyableVal</code> into <code>Exp</code> <code>v</code>","The type of a variable with a location","<code>x</code>","Newtype for a variable/local","Acquire an immutable reference to the element at a given …","","Get the length of a vector","","Acquire a mutable reference to the element at a given …","","Pack a vector fix a fixed number of elements. Zero …","","Pop and return an element from the end of the vector","","Push an element to the end of the vector","","Swap the elements at twi indices in the vector","","Destroy a vector of a fixed length. Zero length means …","","<code>vector</code>","Struct defining a while statement","<code>while (e) { s }</code>","","<code>^</code>","","The declared abilities for the struct","The declared abilities for the struct","List of nominal resources (declared in this module) that …","Creates a new <code>e+e</code> <code>Exp</code> with no location information","Accessor for the address at which the module is published","Creates a new address type","Creates a new address <code>Exp</code> with no location information","Address that this module is published under","the alias for that dependency <code>m</code>","Creates a new binary operator <code>Exp</code> with no location …","The block taken if the condition is <code>true</code>","The body of the loop","Accessor for the body of the ‘main’ procedure","The code for the procedure","Creates a new bool type","Creates a new bool <code>Exp</code> with no location information","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new borrow field <code>Exp</code> with no location information","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>FunctionCall::Builtin</code> variant with no location …","Creates a new bytearray <code>Exp</code> with no location information","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lifts a command into a statement","","","","","","","","","","","","the if’s condition","The condition for a while statement","the constants that the module defines. Only a utility, the …","the constants that the script defines. Only a utility, the …","Creates a new copy-local <code>Exp</code> with no location information","Creates a new <code>*e</code> <code>Exp</code> with no location information","","","","the block taken if the condition is <code>false</code>","Creates an empty block","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Explicit declaration of dependencies. If not provided, …","Explicit declaration of dependencies. If not provided, …","","The name of the field.","the fields each instance has","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Possibly-empty list of (formal name, formal type) pairs. …","the module’s friends","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new function call <code>Exp</code> with no location …","the procedure that the module defines","The signatures of functions that the dependency defines","Return a vector of <code>ModuleId</code> for the external dependencies.","Return a vector of <code>ModuleId</code> for the external dependencies.","","","","","","","","","","","","","the dependency <code>addr.m</code>","name and address of the module","Creates an if-statement with no else branch","Creates an <code>Statement::IfElseStatement</code> variant with no else …","the block taken if the condition is <code>true</code>","Creates an if-statement with an else branch","Creates an <code>Statement::IfElseStatement</code> variant with an else …","The dependencies of <code>main</code>, i.e. of the transaction script","the module’s dependencies","Creates a new pack/struct-instantiation <code>Exp</code> with no …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the invariants for this struct","The source location for this script","The location of this module","The transaction script’s <code>main</code> procedure","Accessor for the module alias","Module name and address in which the struct is contained","Creates a <code>FunctionCall::ModuleFunctionCall</code> variant","Create a new <code>ModuleName</code> from <code>self_name</code>.","The modules to publish","Creates a new move-local <code>Exp</code> with no location information","Creates a new StructDefinition from the abilities, the …","Accessor for the name of the fully qualified module …","Accessor for the struct name","Name for the module. Will be unique among modules …","Qualified identifer of the dependency","Name for the struct class. Should be unique among structs …","Human-readable name for the struct that also serves as a …","Human-readable name for the struct that also serves as a …","The constant’s name. Not carried through to the Move …","Name of the function dependency","Creates a new StructDefinition from the abilities, the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new <code>Program</code> from modules and transaction script","Create a new <code>Script</code> from the imports and the main function","Creates a new fully qualified module identifier from the …","Creates a new <code>ModuleDefinition</code> from its string name, …","Creates a new import definition from a module identifier …","Creates a new StructType handle from the name of the …","Creates a new function signature from the parameters and …","Creates a new function declaration from the components of …","Creates a new block from the vector of statements","","","","","","","","","","","","","","Creates a new reference type from its mutability and …","Creates a command that returns a single value","Creates a command that returns no values","Optional return types","The transaction script to execute","Name for the current module handle","","","","The type of the constant’s value","Signature of the function dependency","The type signature","List of specifications for the Move prover (experimental)","The statements that make up the block","Creates a new struct type","The name of the struct type on which the field is declared.","the structs (including resources) that the module defines","The structs (including resources) that the dependency …","Creates a new <code>e-e</code> <code>Exp</code> with no location information","the synthetic, specification variables the module definesor generic struct types, the type parameters used to …","The list of formal type arguments","The list of formal type arguments","Possibly-empty list of type parameters and their …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new u64 type","Creates a new u64 <code>Exp</code> with no location information","Creates a new value <code>Exp</code> with no location information","The constant’s value","The visibility","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the expression containing the reference","the field being borrowed","mutable or not","","","","","","","","","","","","","","","","","","","","","","","","An index into a file. Much like the <code>codespan</code> crate, a <code>u32</code> …","The <code>Loc</code> struct is used to define a location in a file; …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Function used to have nearly tuple-like syntax for …","","","","","","","","","","","","","","","","If the given expression is true, the procedure <em>must</em> …","An access path rooted at <code>base</code> with nonempty offsets in …","Account address constant","Binary operators also suported by Move","Call to a helper function.","Specification directive with span.","A specification directive to be verified","A Move constant","Dereference of a storage location (written *s)","Postconditions","","AST for the Move Prover specification language.","A formal of the current procedure","Lifting the Move exists operator to a storage location","A resource of type <code>type_</code> stored in global storage at …","","Invariant with span.","An invariant over a resource.","Negation of a boolean expression (written !e),","Value of expression evaluated in the state before function …","Reference to a storage location (written &amp;s)","Preconditions","The ith return value of the current procedure","An expression in the specification language","A location that can store a value","A spec language storage location","If the given expression is true, the procedure <em>must</em> …","Synthetic with span.","A synthetic variable definition.","Update expr (i := 1 inside [])","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A specification expression.","","","","","","","","","","","","","","","","","","","A free string (for now) which specifies the function of …","","","","","","","","An optional synthetic variable to which the below …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,2,3,4,5,6,7,8,9,0,10,11,12,11,13,14,12,11,10,0,15,12,11,12,11,0,0,0,13,14,15,16,15,11,11,11,10,0,17,14,0,18,0,0,0,19,11,11,11,11,0,0,20,0,0,10,19,15,11,0,0,19,15,12,11,19,20,12,11,16,11,0,10,0,0,15,0,0,0,0,0,16,11,21,0,0,0,15,0,0,0,0,0,0,12,11,12,11,0,20,11,11,11,0,21,19,19,0,0,11,11,11,11,11,11,11,12,11,0,20,12,11,12,11,22,0,0,17,0,0,23,18,15,16,11,11,16,11,12,11,11,11,11,24,23,18,12,11,11,0,25,11,12,11,15,11,24,11,0,21,0,11,13,11,10,19,0,22,21,0,12,11,12,11,13,11,0,19,13,0,0,0,0,0,0,12,11,12,16,16,16,0,13,0,0,13,14,13,14,13,14,15,0,10,11,15,0,24,0,16,11,16,11,16,11,16,11,16,11,16,11,16,11,16,11,13,0,20,11,12,11,26,27,28,15,29,13,15,29,30,15,31,32,33,28,13,15,34,22,33,1,29,35,36,30,2,3,19,13,37,4,38,5,26,27,23,6,39,7,40,41,21,18,28,16,17,24,10,42,31,32,20,43,14,25,12,15,15,8,9,11,34,22,33,1,29,35,36,30,2,3,19,13,37,4,38,5,26,27,23,6,39,7,40,41,21,18,28,16,17,24,10,42,31,32,20,43,14,25,12,15,8,9,11,17,15,34,22,33,1,29,35,36,30,2,3,19,13,37,4,38,5,26,27,23,6,39,7,40,41,21,18,28,16,17,24,10,42,31,32,20,43,14,25,12,15,8,9,11,34,22,33,1,29,35,36,30,2,3,19,13,37,4,38,5,26,27,23,6,39,7,40,41,21,18,28,16,17,24,10,42,31,32,20,43,14,25,12,15,8,9,11,20,1,29,2,19,37,4,5,6,7,8,9,42,31,33,35,15,15,6,8,9,42,43,33,1,29,35,36,30,2,3,19,13,37,4,38,5,26,27,23,6,39,7,40,41,21,18,28,16,17,24,10,42,31,32,20,43,14,25,12,15,8,9,11,33,35,15,38,26,34,22,22,33,33,1,1,29,29,35,35,36,36,30,30,2,2,3,3,19,19,13,13,37,37,4,4,38,38,5,5,26,26,27,27,23,6,6,39,39,7,7,40,40,41,41,21,18,18,28,28,16,16,17,17,24,24,10,10,42,42,31,31,32,32,20,20,43,43,14,14,25,25,12,12,15,15,8,9,11,11,40,35,34,22,33,1,29,35,36,30,2,3,19,13,37,4,38,5,26,27,23,6,39,7,40,41,21,18,28,16,17,24,10,42,31,32,20,43,14,25,12,15,8,9,11,15,35,36,33,35,1,29,2,3,19,37,4,5,6,7,8,9,30,35,42,20,42,42,20,33,35,15,34,22,33,1,29,35,36,30,2,3,19,13,37,4,38,5,26,27,23,6,39,7,40,41,21,18,28,16,17,24,10,42,31,32,20,43,14,25,12,15,8,9,11,33,43,26,33,35,33,37,37,17,1,34,15,26,29,37,29,36,37,26,27,39,41,26,1,29,35,36,30,2,3,13,37,4,38,5,26,27,23,6,39,7,40,41,18,28,16,17,24,10,42,31,32,20,43,14,15,8,9,11,34,33,29,35,30,37,40,28,43,33,43,1,29,2,19,37,4,5,6,7,8,9,13,10,10,40,34,1,6,8,9,39,41,28,28,43,13,38,35,36,15,35,34,22,33,1,29,35,36,30,2,3,19,13,37,4,38,5,26,27,23,6,39,7,40,41,21,18,28,16,17,24,10,42,31,32,20,43,14,25,12,15,8,9,11,22,33,1,29,35,36,30,2,3,19,13,37,4,38,5,26,27,6,39,7,40,41,18,28,16,17,24,10,42,31,32,20,43,14,25,12,15,11,34,22,33,1,29,35,36,30,2,3,19,13,37,4,38,5,26,27,23,6,39,7,40,41,21,18,28,16,17,24,10,42,31,32,20,43,14,25,12,15,8,9,11,34,22,33,1,29,35,36,30,2,3,19,13,37,4,38,5,26,27,23,6,39,7,40,41,21,18,28,16,17,24,10,42,31,32,20,43,14,25,12,15,8,9,11,38,26,27,40,34,22,33,1,29,35,36,30,2,3,19,13,37,4,38,5,26,27,23,6,39,7,40,41,21,18,28,16,17,24,10,42,31,32,20,43,14,25,12,15,8,9,11,13,15,15,39,28,34,22,33,1,29,35,36,30,2,3,19,13,37,4,38,5,26,27,23,6,39,7,40,41,21,18,28,16,17,24,10,42,31,32,20,43,14,25,12,15,8,9,11,44,45,46,47,48,49,50,51,52,53,54,55,44,45,46,47,48,54,45,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,63,68,69,70,73,74,75,76,77,78,79,80,86,68,73,74,88,89,90,91,92,88,89,89,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,100,101,103,106,107,101,103,109,109,109,110,111,110,111,112,113,113,113,114,115,116,117,118,119,120,121,122,123,124,125,126,124,125,0,0,0,127,128,127,128,127,128,127,128,127,128,127,127,127,128,127,127,128,128,127,128,127,128,127,128,128,127,127,128,127,128,127,0,127,127,128,128,127,128,127,128,127,128,128,127,128,127,128,129,130,130,131,131,0,0,131,131,129,132,0,130,131,130,132,0,0,131,131,131,129,130,0,0,131,129,0,0,131,132,130,131,129,133,134,132,130,131,129,133,134,132,130,131,129,133,134,132,130,131,129,133,134,132,130,131,129,133,134,133,132,130,131,129,133,134,132,130,131,129,133,134,132,130,131,129,133,134,133,134,132,130,131,129,133,134,133,132,130,131,129,133,134,132,130,131,129,133,134,132,130,131,129,133,134,134,132,130,131,129,133,134,132,130,131,129,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,146,147,149,146,150,150,150,151,152,153,154,155,155,154,154],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["exp",6]],["exp",6]],[[],["accountaddress",3]],[[],["type",4]],[[["accountaddress",3]],["exp",6]],null,null,[[["exp",6],["binop",4]],["exp",6]],null,null,[[],["block_",3]],null,[[],["type",4]],[[["bool",15]],["exp",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["exp"]],["bool",15],["exp",6],["fieldident",6]],["exp",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["builtin",4]],["functioncall",6]],[[["vec",3,["u8"]],["u8",15]],["exp",6]],[[],["program",3]],[[],["scriptormodule",4]],[[],["script",3]],[[],["modulename",3]],[[],["moduleident",3]],[[],["moduledefinition",3]],[[],["moduledependency",3]],[[],["importdefinition",3]],[[],["var_",3]],[[],["typevar_",3]],[[],["ability",4]],[[],["type",4]],[[],["qualifiedstructident",3]],[[],["field_",3]],[[],["fieldident_",3]],[[],["structname",3]],[[],["structdefinition_",3]],[[],["structdependency",3]],[[],["structdefinitionfields",4]],[[],["constantname",3]],[[],["constant",3]],[[],["functionname",3]],[[],["functionsignature",3]],[[],["functiondependency",3]],[[],["functionvisibility",4]],[[],["functionbody",4]],[[],["function_",3]],[[],["builtin",4]],[[],["functioncall_",4]],[[],["lvalue_",4]],[[],["cmd_",4]],[[],["ifelse",3]],[[],["while",3]],[[],["loop",3]],[[],["statement",4]],[[],["block_",3]],[[],["copyableval_",4]],[[],["unaryop",4]],[[],["binop",4]],[[],["exp_",4]],[[],["blocklabel",3]],[[],["noplabel",3]],[[],["bytecode_",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["cmd",6]]],[[["modulename",3]],["ordering",4]],[[["moduleident",3]],["ordering",4]],[[["var_",3]],["ordering",4]],[[["ability",4]],["ordering",4]],[[["qualifiedstructident",3]],["ordering",4]],[[["field_",3]],["ordering",4]],[[["structname",3]],["ordering",4]],[[["constantname",3]],["ordering",4]],[[["functionname",3]],["ordering",4]],[[["blocklabel",3]],["ordering",4]],[[["noplabel",3]],["ordering",4]],null,null,null,null,[[["var",6]],["exp",6]],[[["exp",6]],["exp",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[]],[[["script",3]],["bool",15]],[[["modulename",3]],["bool",15]],[[["moduleident",3]],["bool",15]],[[["moduledefinition",3]],["bool",15]],[[["moduledependency",3]],["bool",15]],[[["importdefinition",3]],["bool",15]],[[["var_",3]],["bool",15]],[[["typevar_",3]],["bool",15]],[[["ability",4]],["bool",15]],[[["type",4]],["bool",15]],[[["qualifiedstructident",3]],["bool",15]],[[["field_",3]],["bool",15]],[[["fieldident_",3]],["bool",15]],[[["structname",3]],["bool",15]],[[["structdefinition_",3]],["bool",15]],[[["structdependency",3]],["bool",15]],[[["structdefinitionfields",4]],["bool",15]],[[["constantname",3]],["bool",15]],[[["constant",3]],["bool",15]],[[["functionname",3]],["bool",15]],[[["functionsignature",3]],["bool",15]],[[["functiondependency",3]],["bool",15]],[[["functionvisibility",4]],["bool",15]],[[["functionbody",4]],["bool",15]],[[["function_",3]],["bool",15]],[[["builtin",4]],["bool",15]],[[["functioncall_",4]],["bool",15]],[[["lvalue_",4]],["bool",15]],[[["cmd_",4]],["bool",15]],[[["ifelse",3]],["bool",15]],[[["while",3]],["bool",15]],[[["loop",3]],["bool",15]],[[["statement",4]],["bool",15]],[[["block_",3]],["bool",15]],[[["copyableval_",4]],["bool",15]],[[["unaryop",4]],["bool",15]],[[["binop",4]],["bool",15]],[[["exp_",4]],["bool",15]],[[["blocklabel",3]],["bool",15]],[[["noplabel",3]],["bool",15]],[[["bytecode_",4]],["bool",15]],null,null,[[["vec",3,["exp"]],["exp",6]],["exp",6]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["exp",6],["functioncall",6]],["exp",6]],null,null,[[],[["vec",3,["moduleid"]],["moduleid",3]]],[[],[["vec",3,["moduleid"]],["moduleid",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["block",6],["exp",6]]],[[["block",6],["exp",6]]],null,[[["block",6],["exp",6]]],[[["block",6],["exp",6]]],null,null,[[["type",4],["expfields",6],["structname",3],["vec",3,["type"]]],["exp",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[],["modulename",3]],null,[[["functionname",3],["type",4],["modulename",3],["vec",3,["type"]]]],[[]],null,[[["var",6]],["exp",6]],[[["btreeset",3,["ability"]],["symbol",3],["invariant",6],["vec",3,["structtypeparameter"]],["type",4],["ability",4],["structtypeparameter",6],["fields",6,["type"]],["vec",3,["invariant"]]]],[[],["modulename",3]],[[],["structname",3]],null,null,null,null,null,null,null,[[["btreeset",3,["ability"]],["ability",4],["symbol",3],["structtypeparameter",6],["vec",3,["structtypeparameter"]]]],[[["modulename",3]],["bool",15]],[[["moduleident",3]],["bool",15]],[[["moduledefinition",3]],["bool",15]],[[["moduledependency",3]],["bool",15]],[[["importdefinition",3]],["bool",15]],[[["var_",3]],["bool",15]],[[["typevar_",3]],["bool",15]],[[["type",4]],["bool",15]],[[["qualifiedstructident",3]],["bool",15]],[[["field_",3]],["bool",15]],[[["fieldident_",3]],["bool",15]],[[["structname",3]],["bool",15]],[[["structdefinition_",3]],["bool",15]],[[["structdependency",3]],["bool",15]],[[["structdefinitionfields",4]],["bool",15]],[[["constantname",3]],["bool",15]],[[["constant",3]],["bool",15]],[[["functionname",3]],["bool",15]],[[["functionsignature",3]],["bool",15]],[[["functiondependency",3]],["bool",15]],[[["functionbody",4]],["bool",15]],[[["function_",3]],["bool",15]],[[["builtin",4]],["bool",15]],[[["functioncall_",4]],["bool",15]],[[["lvalue_",4]],["bool",15]],[[["cmd_",4]],["bool",15]],[[["ifelse",3]],["bool",15]],[[["while",3]],["bool",15]],[[["loop",3]],["bool",15]],[[["statement",4]],["bool",15]],[[["block_",3]],["bool",15]],[[["copyableval_",4]],["bool",15]],[[["exp_",4]],["bool",15]],[[["blocklabel",3]],["bool",15]],[[["noplabel",3]],["bool",15]],[[["bytecode_",4]],["bool",15]],[[["vec",3,["moduledefinition"]],["script",3],["moduledefinition",3]]],[[["constant",3],["importdefinition",3],["loc",3],["vec",3,["constant"]],["moduledependency",3],["vec",3,["moduledependency"]],["function",6],["vec",3,["importdefinition"]]]],[[["modulename",3],["accountaddress",3]]],[[["constant",3],["importdefinition",3],["syntheticdefinition",6],["moduleident",3],["structdefinition",6],["vec",3],["loc",3],["vec",3,["constant"]],["vec",3,["importdefinition"]],["vec",3,["structdefinition"]],["vec",3,["moduleident"]],["moduledependency",3],["vec",3,["moduledependency"]],["vec",3,["syntheticdefinition"]]]],[[["moduleident",3],["modulename",3],["option",4,["modulename"]]]],[[["modulename",3],["structname",3]]],[[["type",4],["vec",3],["vec",3],["vec",3,["type"]]]],[[["structname",3],["vec",3,["structname"]],["functionvisibility",4],["vec",3],["vec",3,["condition"]],["type",4],["functionbody",4],["vec",3],["condition",6],["vec",3,["type"]]]],[[["vec",3,["statement"]],["statement",4]]],[[],[["option",4,["statement"]],["statement",4]]],[[],[["option",4,["statement"]],["statement",4]]],[[["modulename",3]],[["option",4,["ordering"]],["ordering",4]]],[[["moduleident",3]],[["option",4,["ordering"]],["ordering",4]]],[[["var_",3]],[["option",4,["ordering"]],["ordering",4]]],[[["ability",4]],[["option",4,["ordering"]],["ordering",4]]],[[["qualifiedstructident",3]],[["option",4,["ordering"]],["ordering",4]]],[[["field_",3]],[["option",4,["ordering"]],["ordering",4]]],[[["structname",3]],[["option",4,["ordering"]],["ordering",4]]],[[["constantname",3]],[["option",4,["ordering"]],["ordering",4]]],[[["functionname",3]],[["option",4,["ordering"]],["ordering",4]]],[[["blocklabel",3]],[["option",4,["ordering"]],["ordering",4]]],[[["noplabel",3]],[["option",4,["ordering"]],["ordering",4]]],[[["type",4],["bool",15]],["type",4]],[[["exp",6]]],[[]],null,null,[[],["str",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,[[["type",4],["qualifiedstructident",3],["vec",3,["type"]]],["type",4]],null,null,null,[[["exp",6]],["exp",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["type",4]],[[["u64",15]],["exp",6]],[[["copyableval_",4]],["exp",6]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["loc",3]],[[],["spanned",3]],[[]],[[]],[[["loc",3]],["ordering",4]],[[["spanned",3]],["ordering",4]],[[],["result",4]],[[],["byteindex",6]],[[["loc",3]],["bool",15]],[[["spanned",3]],["bool",15]],[[],["filehash",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["loc",3]],["bool",15]],[[["byteindex",6],["filehash",3]],["loc",3]],[[["loc",3]],["spanned",3]],[[["loc",3]],[["option",4,["ordering"]],["ordering",4]]],[[["spanned",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["result",4]],[[["loc",3]],["spanned",3]],[[],["byteindex",6]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["spanned",3]],[[],[["usize",15],["range",3,["usize"]]]],null,[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["fieldorindex",4]],[[],["storagelocation",4]],[[],["specexp",4]],[[],["condition_",4]],[[],["invariant_",3]],[[],["syntheticdefinition_",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["fieldorindex",4]],["bool",15]],[[["storagelocation",4]],["bool",15]],[[["specexp",4]],["bool",15]],[[["condition_",4]],["bool",15]],[[["invariant_",3]],["bool",15]],[[["syntheticdefinition_",3]],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["fieldorindex",4]],["bool",15]],[[["storagelocation",4]],["bool",15]],[[["specexp",4]],["bool",15]],[[["condition_",4]],["bool",15]],[[["invariant_",3]],["bool",15]],[[["syntheticdefinition_",3]],["bool",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"ModuleName"],[3,"Var_"],[3,"TypeVar_"],[3,"Field_"],[3,"StructName"],[3,"ConstantName"],[3,"FunctionName"],[3,"BlockLabel"],[3,"NopLabel"],[4,"Cmd_"],[4,"Bytecode_"],[4,"BinOp"],[4,"Type"],[4,"CopyableVal_"],[4,"Exp_"],[4,"Builtin"],[4,"FunctionCall_"],[4,"FunctionBody"],[4,"Ability"],[4,"Statement"],[4,"FunctionVisibility"],[4,"ScriptOrModule"],[4,"StructDefinitionFields"],[4,"LValue_"],[4,"UnaryOp"],[3,"StructDefinition_"],[3,"StructDependency"],[3,"Function_"],[3,"ModuleIdent"],[3,"ImportDefinition"],[3,"While"],[3,"Loop"],[3,"Script"],[3,"Program"],[3,"ModuleDefinition"],[3,"ModuleDependency"],[3,"QualifiedStructIdent"],[3,"FieldIdent_"],[3,"Constant"],[3,"FunctionSignature"],[3,"FunctionDependency"],[3,"IfElse"],[3,"Block_"],[13,"Exists"],[13,"BorrowGlobal"],[13,"MoveFrom"],[13,"MoveTo"],[13,"VecPack"],[13,"VecLen"],[13,"VecImmBorrow"],[13,"VecMutBorrow"],[13,"VecPushBack"],[13,"VecPopBack"],[13,"VecUnpack"],[13,"VecSwap"],[13,"Nop"],[13,"BrTrue"],[13,"BrFalse"],[13,"Branch"],[13,"LdU8"],[13,"LdU64"],[13,"LdU128"],[13,"LdConst"],[13,"LdNamedConst"],[13,"CopyLoc"],[13,"MoveLoc"],[13,"StLoc"],[13,"Call"],[13,"Pack"],[13,"Unpack"],[13,"MutBorrowLoc"],[13,"ImmBorrowLoc"],[13,"MutBorrowField"],[13,"ImmBorrowField"],[13,"MutBorrowGlobal"],[13,"ImmBorrowGlobal"],[13,"Exists"],[13,"MoveFrom"],[13,"MoveTo"],[13,"VecPack"],[13,"VecLen"],[13,"VecImmBorrow"],[13,"VecMutBorrow"],[13,"VecPushBack"],[13,"VecPopBack"],[13,"VecUnpack"],[13,"VecSwap"],[13,"Assign"],[13,"Unpack"],[13,"Abort"],[13,"Return"],[13,"Exp"],[13,"Address"],[13,"U8"],[13,"U64"],[13,"U128"],[13,"Bool"],[13,"ByteArray"],[13,"Dereference"],[13,"UnaryExp"],[13,"BinopExp"],[13,"Value"],[13,"Pack"],[13,"Move"],[13,"Copy"],[13,"BorrowLocal"],[13,"FunctionCall"],[13,"ExprList"],[13,"Borrow"],[13,"Move"],[13,"Bytecode"],[13,"Builtin"],[13,"ModuleFunctionCall"],[13,"Var"],[13,"Mutate"],[13,"Script"],[13,"Module"],[13,"CommandStatement"],[13,"IfElseStatement"],[13,"WhileStatement"],[13,"LoopStatement"],[13,"Move"],[13,"Vector"],[13,"Struct"],[13,"Reference"],[13,"TypeParameter"],[3,"Loc"],[3,"Spanned"],[4,"Condition_"],[4,"StorageLocation"],[4,"SpecExp"],[4,"FieldOrIndex"],[3,"Invariant_"],[3,"SyntheticDefinition_"],[13,"Ensures"],[13,"Requires"],[13,"AbortsIf"],[13,"SucceedsIf"],[13,"Field"],[13,"Index"],[13,"Constant"],[13,"StorageLocation"],[13,"Dereference"],[13,"Reference"],[13,"Not"],[13,"Binop"],[13,"Update"],[13,"Old"],[13,"Call"],[13,"GlobalExists"],[13,"Formal"],[13,"Address"],[13,"Ret"],[13,"GlobalResource"],[13,"AccessPath"]]},\
"move_lang":{"doc":"","t":[11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,14,0,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,5,5,6,6,4,3,13,3,6,4,4,13,3,3,13,13,3,3,13,13,12,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,5,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,3,17,3,17,17,17,17,17,17,17,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,12,12,11,11,11,5,12,11,11,11,11,11,11,11,11,11,11,12,11,5,12,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,3,3,6,6,4,3,13,3,3,13,3,8,8,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,5,11,11,11,11,11,11,11,11,12,12,3,3,6,6,6,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,11,11,11,11,11,11,11,11,11,5,11,11,4,13,13,13,13,4,13,13,4,13,13,13,4,13,13,13,18,4,13,13,13,13,13,4,13,13,8,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,18,18,13,4,13,13,13,4,13,13,13,13,4,13,13,13,13,4,13,13,13,4,13,13,4,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,4,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,18,3,3,3,13,13,13,4,13,13,13,13,13,13,13,13,13,6,6,4,6,4,4,6,13,13,13,13,13,13,13,13,18,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,6,13,6,13,4,13,4,13,6,3,13,13,3,13,6,4,3,13,13,13,13,13,13,13,13,6,6,6,6,6,6,6,4,13,13,13,13,13,13,13,6,13,13,4,3,6,3,13,13,13,13,13,13,13,13,13,4,18,13,13,13,6,3,4,3,13,18,13,13,13,18,13,3,13,6,6,4,13,6,6,4,6,4,3,6,4,3,3,4,3,13,6,4,13,13,13,13,13,13,13,13,13,13,13,6,13,13,4,13,13,13,12,5,5,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,12,13,13,13,13,6,4,6,6,13,6,13,13,13,13,13,13,6,4,13,6,13,4,3,13,13,13,13,13,13,13,3,13,4,13,13,3,6,4,3,13,13,13,13,13,13,6,4,3,13,3,13,3,13,13,13,13,13,13,13,13,13,13,3,13,13,3,13,13,6,4,13,13,6,4,3,4,13,6,6,4,4,6,4,13,13,13,4,13,13,13,13,13,13,13,13,11,11,12,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,5,5,0,12,18,18,13,13,13,13,13,13,13,18,18,18,13,13,13,13,13,13,13,13,13,6,4,6,4,13,3,13,13,13,13,13,13,13,13,13,18,13,6,13,6,4,13,4,18,13,13,3,6,4,3,13,13,6,6,6,4,13,18,18,13,3,13,13,13,13,13,13,13,13,13,13,3,13,13,18,3,13,6,6,4,13,13,3,4,3,3,3,3,6,6,4,4,13,13,13,18,18,18,13,13,13,13,13,13,13,18,13,13,13,13,13,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,12,12,12,12,12,12,18,18,6,4,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,6,6,4,4,6,13,18,18,6,4,6,13,6,6,6,4,13,13,13,13,13,13,13,13,18,13,13,13,13,13,13,3,13,3,13,13,13,18,18,13,13,13,13,4,13,13,13,13,18,13,13,13,13,6,13,4,18,3,13,13,13,3,13,3,13,13,6,4,3,3,18,18,13,13,13,18,18,18,13,13,13,13,13,13,13,13,13,18,13,18,18,13,13,6,4,13,13,13,13,18,18,13,13,13,13,13,13,13,13,3,6,3,4,3,13,13,13,18,18,13,13,13,6,4,13,13,13,13,13,13,18,13,13,18,13,13,13,6,3,4,3,13,13,6,4,18,13,13,13,6,13,18,18,18,18,18,18,13,3,13,13,13,6,6,4,13,13,13,13,6,4,6,3,6,6,4,6,4,3,6,4,13,13,3,4,3,3,13,13,13,13,6,4,13,6,4,13,13,13,13,13,4,13,3,6,13,13,4,3,13,13,4,13,13,18,13,12,12,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,12,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,12,12,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,6,6,6,5,3,3,18,13,3,13,8,16,16,6,4,3,8,11,11,10,11,0,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,10,11,11,11,11,11,11,11,5,11,5,5,5,11,11,0,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,10,5,11,11,11,11,11,8,3,11,11,10,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,13,4,18,13,18,13,13,13,4,13,13,13,13,18,18,13,13,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,13,13,13,13,13,13,13,13,13,13,13,13,13,6,4,13,3,13,13,13,13,13,13,13,3,13,4,13,3,6,4,13,13,6,6,6,4,13,3,13,3,13,13,13,13,13,13,3,13,3,13,6,6,4,13,13,13,13,6,4,13,13,13,13,13,13,13,13,12,12,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,4,13,3,3,6,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,0,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,5],"n":["add_loc","add_loc","add_loc","add_loc","add_loc","ast_debug","ast_debug","borrow","borrow","borrow","borrow","borrow","cfgir","command_line","compiled_unit","diag","diagnostics","drop_loc","drop_loc","drop_loc","drop_loc","drop_loc","expansion","hlir","interface_generator","ir_translation","naming","parser","shared","typing","unit_test","ast","optimize","refine_inference_and_verify","BasicBlock","BasicBlocks","BlockInfo","Constant","Defined","Function","FunctionBody","FunctionBody_","LoopEnd","LoopHead","LoopInfo","ModuleDefinition","Native","Other","Program","Script","Target","Unused","acquires","ast_debug","ast_debug","ast_debug","attributes","attributes","attributes","attributes","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","constants","constants","dependency_order","eq","eq","eq","equals","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","friends","from","from","from","from","from","from","from","from","from","function","function_name","functions","into","into","into","into","into","into","into","into","into","is_loop_stmt","is_source_module","loc","loc","loop_end","modules","ne","ne","ne","remap_labels","scripts","signature","signature","structs","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","visibility","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","blocks","locals","loop_heads","start","0","COLOR_MODE_ENV_VAR","COMPILED_NAMED_ADDRESS_MAPPING","DEFAULT_OUTPUT_DIR","DEPENDENCY","DEPENDENCY_SHORT","MOVE_COMPILED_INTERFACES_DIR","NO_SHADOW","NO_SHADOW_SHORT","OUT_DIR","OUT_DIR_SHORT","SENDER","SENDER_SHORT","SOURCE_MAP","SOURCE_MAP_SHORT","TEST","TEST_SHORT","compiler","Compiler","EMPTY_COMPILER","FullyCompiledProgram","PASS_CFGIR","PASS_COMPILATION","PASS_EXPANSION","PASS_HLIR","PASS_NAMING","PASS_PARSER","PASS_TYPING","Pass","SteppedCompiler","at_cfgir","at_expansion","at_hlir","at_naming","at_parser","at_typing","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build_and_report","build_and_report","build_and_report","build_and_report","build_and_report","build_and_report","build_and_report","cfgir","check","check","check","check","check","check","check","check_and_report","check_and_report","check_and_report","check_and_report","check_and_report","check_and_report","check_and_report","clone","clone_into","compilation_env","compiled","construct_pre_compiled_lib","expansion","files","from","from","from","generate_interface_files","hlir","into","into","into","into_ast","into_ast","into_ast","into_ast","into_ast","into_ast","into_compiled_units","naming","new","output_compiled_units","parser","run","run","run","run","run","run","run","sanity_check_compiled_units","set_compiled_module_named_address_mapping","set_flags","set_interface_files_dir","set_interface_files_dir_opt","set_named_address_values","set_pre_compiled_lib","set_pre_compiled_lib_opt","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","typing","vzip","vzip","vzip","AnnotatedCompiledModule","AnnotatedCompiledScript","AnnotatedCompiledUnit","CompiledUnit","CompiledUnitEnum","FunctionInfo","Module","NamedCompiledModule","NamedCompiledScript","Script","SpecInfo","TargetModule","TargetScript","VarInfo","address","address_name","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","function_info","function_infos","index","into","into","into","into","into","into","into","into","into_compiled_unit","into_compiled_unit","loc","loc","loc","loc","module","module_id","module_ident","module_name_loc","name","name","name","name","named_module","named_script","offset","parameters","script","serialize","serialize","serialize_debug","serialize_debug","serialize_source_map","serialize_source_map","source_map","source_map","spec_info","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","used_locals","verify","verify","verify_units","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","Diagnostic","Diagnostics","FileId","FileName","FilesSourceText","add","add_secondary_label","add_secondary_labels","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","codes","default","eq","eq","equivalent","equivalent","extend","fmt","fmt","from","from","from","from_iter","hash","hash","into","into","into_codespan_format","into_vec","is_empty","len","max_severity","ne","ne","new","new","report_diagnostics","report_diagnostics_to_buffer","report_diagnostics_to_color_buffer","report_warnings","secondary_labels_len","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrap_or_report_diagnostics","vzip","vzip","AbilitySafety","AbilitySafety","AddressWithoutValue","Alias","Assignment","Attributes","Attributes","BlockingError","Bug","Bug","Bug","BuiltinOperation","BytecodeGeneration","BytecodeGeneration","BytecodeGeneration","BytecodeVerification","CATEGORY","Category","Constraint","CyclicData","CyclicInstantiation","Dangling","DeadCode","Declarations","Declarations","DeprecatedWillBeRemoved","DiagnosticCode","DiagnosticInfo","DontStartAtZeroPlaceholder","DontStartAtZeroPlaceholder","DontStartAtZeroPlaceholder","DontStartAtZeroPlaceholder","DontStartAtZeroPlaceholder","DontStartAtZeroPlaceholder","DontStartAtZeroPlaceholder","DontStartAtZeroPlaceholder","DontStartAtZeroPlaceholder","DontStartAtZeroPlaceholder","DontStartAtZeroPlaceholder","DontStartAtZeroPlaceholder","DontStartAtZeroPlaceholder","Duplicate","DuplicateItem","ExpectedBaseType","ExpectedSingleType","ExpectedSpecificType","ImplicitlyCopyable","InvalidAcquiresItem","InvalidAddress","InvalidAddress","InvalidAttribute","InvalidByteString","InvalidCharacter","InvalidConstant","InvalidDocComment","InvalidFriendDeclaration","InvalidFunction","InvalidHexString","InvalidLValue","InvalidLoopControl","InvalidModifier","InvalidModule","InvalidName","InvalidName","InvalidNativeUsage","InvalidNonPhantomUse","InvalidNum","InvalidNumber","InvalidPhantomUse","InvalidReturn","InvalidScript","InvalidSpec","InvalidStruct","InvalidTest","InvalidTransfer","InvalidUsage","InvalidValue","JoinError","MAX","MIN","MissingAcquires","MoveSafety","MoveSafety","MutOwns","NamePositionMismatch","NameResolution","NameResolution","NonblockingError","RecursiveType","RefTrans","ReferenceSafety","ReferenceSafety","ReservedName","ScriptContext","ScriptSignature","Severity","SpecContextRestricted","StructTypeParam","SubtypeError","Syntax","Syntax","TestFailed","Tests","Tests","TooFewArguments","TooFewTypeArguments","TooManyArguments","TooManyTypeArguments","TrailingSemi","TypeForConstant","TypeSafety","TypeSafety","UnassignedVariable","UnboundField","UnboundMacro","UnboundModule","UnboundModuleMember","UnboundType","UnboundUnscopedName","UnboundVariable","Uncategorized","Uncategorized","UnexpectedToken","UnfoldableConstant","UninferredType","UnnecessaryItem","UnsupportedConstant","UnusedItem","UnusedItem","UnusedUndroppable","Variable","Visibility","Warning","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","code_and_message","code_and_message","code_and_message","code_and_message","code_and_message","code_and_message","code_and_message","code_and_message","code_and_message","code_and_message","code_and_message","code_and_message","code_and_message","code_and_message","default","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_codespan_severity","into_info","message","ne","partial_cmp","render","severity","severity","severity","severity","severity","severity","severity","severity","severity","severity","severity","severity","severity","severity","severity","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ast","ALL","AbilitySet","AbilitySetIntoIter","AbilitySetIter","Abort","AbortsIf","AbortsWith","Address","Address","Annotate","Anonymous","Apply","Apply","Assert","Assign","Assigned","Assume","Attribute","AttributeName","AttributeName_","AttributeValue","AttributeValue_","Attribute_","Attributes","Axiom","Bind","BinopExp","Block","Bool","Borrow","Break","Bytearray","COLLECTION","Call","Cast","Code","Condition","Constant","Continue","Copy","Declare","Decreases","Defined","Defined","Dependency","Dereference","Dot","Emits","Ensures","Exp","Exp","ExpDotted","ExpDotted","ExpDotted_","ExpList","Exp_","FieldMutate","Fields","Friend","Friend","Fun","Function","Function","FunctionBody","FunctionBody_","FunctionSignature","Ident","IfElse","Include","Index","InferredNum","Invariant","InvariantUpdate","Known","LValue","LValueList","LValueList_","LValueWithRange","LValueWithRangeList","LValueWithRangeList_","LValueWithRange_","LValue_","Lambda","Let","Literal","Loop","Member","Modifies","Module","ModuleAccess","ModuleAccess","ModuleAccess","ModuleAccess_","ModuleDefinition","ModuleIdent","ModuleIdent_","Move","Multiple","Mutate","Name","Name","Name","Named","Native","Native","Neighbor","PRIMITIVES","Pack","Parameterized","Pragma","PragmaProperty","PragmaProperty_","PragmaValue","Program","Quant","REFERENCES","Ref","Requires","Return","SIGNER","Schema","Script","Seq","Sequence","SequenceItem","SequenceItem_","Spec","SpecBlock","SpecBlockMember","SpecBlockMember_","SpecBlockTarget","SpecBlockTarget_","SpecBlock_","SpecConditionKind","SpecConditionKind_","SpecId","StructDefinition","StructFields","StructTypeParameter","SucceedsIf","Type","Type_","U128","U64","U8","UnaryExp","Unit","Unit","Unknown","Unpack","UnresolvedError","UnresolvedError","Update","Value","Value","Value","Value_","Var","Variable","While","abilities","ability_constraints_ast_debug","ability_modifiers_ast_debug","acquires","add","address","all","anonymous","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","attribute_name","attributes","attributes","attributes","attributes","attributes","attributes","attributes","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","collection","constants","constants","constraints","dependency_order","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fields","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","friends","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_abilities","from_abilities_","function","function_name","functions","has_ability","has_ability_","hash","hash","hash","hash","immediate_neighbors","immediate_neighbors","inner","intersect","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_addr_bytes","into_iter","into_iter","into_iter","is_empty","is_phantom","is_source_module","is_subset","iter","len","loc","loc","loc","loc","loc","loc","members","module","modules","name","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","next","next","parameters","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","primitives","references","return_type","scripts","signature","signature","signer","size_hint","size_hint","specs","specs","specs","structs","target","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_parameters","type_parameters","union","used_addresses","used_addresses","value","value","visibility","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","1","1","0","0","1","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","2","2","2","2","2","3","3","4","trailing","0","0","0","1","1","2","0","0","1","0","0","0","0","0","1","1","additional_exps","body","def","exclusion_patterns","exp","exp","exp","init","is_global","kind","lhs","name","name","name","patterns","post_state","properties","properties","properties","rhs","signature","type_","type_parameters","uninterpreted","0","0","1","1","0","0","0","0","0","0","0","0","0","1","1","1","0","0","0","0","0","0","0","ast","0","Abort","Apply","Assign","Base","BaseType","BaseType_","BasicBlock","BasicBlocks","BinopExp","Block","Borrow","BorrowGlobal","BorrowLocal","Break","Builtin","Builtin","BuiltinFunction","BuiltinFunction_","Cast","Command","Command","Command_","Constant","Constant","Continue","Copy","Defined","Defined","Dereference","Exists","Exp","ExpList","ExpListItem","Freeze","FromUser","Function","FunctionBody","FunctionBody_","FunctionSignature","IfElse","Ignore","IgnoreAndPop","Implicit","Jump","JumpIf","LValue","LValue_","Label","Loop","ModuleCall","ModuleCall","ModuleDefinition","ModuleType","Move","MoveFrom","MoveTo","Multiple","Mutate","Native","Native","Pack","Param","Program","Ref","Return","Script","Single","Single","SingleType","SingleType_","Spec","Splat","Statement","Statement_","StructDefinition","StructFields","Trailing","Type","TypeName","TypeName_","Type_","UnannotatedExp","UnannotatedExp_","UnaryExp","Unit","Unit","UnitCase","Unpack","Unreachable","Unreachable","UnresolvedError","UnresolvedError","Value","Var","While","abilities","abilities","abilities","acquires","acquires","address","address","address","arguments","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","attributes","attributes","attributes","attributes","attributes","base","base","body","bool","bool","bool","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builtin","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","constants","constants","dependency_order","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","exp","exp","fields","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","friends","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_vec","function","function_name","functions","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_exit","is_parameter","is_source_module","is_terminal","is_unit","is_unit","is_unit","loc","loc","module","modules","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","parameters","partial_cmp","partial_cmp","partial_cmp","return_type","scripts","signature","signature","single","structs","successors","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_arguments","type_at_index","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_parameters","type_parameters","u128","u128","u128","u64","u64","u64","u8","u8","u8","value","visibility","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","1","2","0","0","0","0","1","0","0","0","1","1","cond","exp","exp","from_user","from_user","if_false","if_true","pop_num","target","0","0","1","1","2","body","locals","0","0","1","1","2","0","0","1","0","block","block","cond","cond","else_block","has_break","if_block","0","0","0","0","1","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","1","1","1","1","1","1","2","2","2","case","from_user","from_user","var","var","write_file_to_string","write_module_to_string","fix_syntax_and_write","ast","0","ADDRESS","ASSERT_MACRO","Abort","Address","Annotate","Anything","Apply","Assert","Assign","BOOL","BORROW_GLOBAL","BORROW_GLOBAL_MUT","Bind","BinopExp","Block","Bool","Borrow","BorrowGlobal","Break","Builtin","Builtin","BuiltinFunction","BuiltinFunction_","BuiltinTypeName","BuiltinTypeName_","Cast","Constant","Constant","Continue","Copy","Declare","Defined","Defined","DerefBorrow","Dereference","Dot","EXISTS","Exists","Exp","Exp","ExpDotted","ExpDotted_","ExpList","Exp_","FREEZE","FieldMutate","Freeze","Function","FunctionBody","FunctionBody_","FunctionSignature","IfElse","Ignore","LValue","LValueList","LValueList_","LValue_","Loop","MOVE_FROM","MOVE_TO","ModuleCall","ModuleDefinition","ModuleType","Move","MoveFrom","MoveTo","Multiple","Mutate","Native","Native","Pack","Param","Program","Ref","Return","SIGNER","Script","Seq","Sequence","SequenceItem","SequenceItem_","Signer","Spec","StructDefinition","StructFields","StructTypeParameter","TParam","TParamID","TVar","Type","TypeName","TypeName_","Type_","U128","U64","U8","U_128","U_64","U_8","UnaryExp","Unit","Unit","Unpack","UnresolvedError","UnresolvedError","Use","VECTOR","Value","Var","Var","Vector","While","abilities","abilities","acquires","address","all_names","all_names","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","attributes","attributes","attributes","attributes","attributes","bits","body","bool","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builtin","builtin_","builtin_name","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","constants","constants","declared_abilities","dependency_order","display_name","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fields","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","friends","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","function","function_name","functions","hash","hash","hash","id","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_numeric","is_phantom","is_source_module","loc","loc","modules","multiple","multiple_","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","next","next","numeric","ordered","param","parameters","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","resolve","resolve","return_type","scripts","signature","signature","signer","structs","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","tparam_constraints","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_parameters","type_parameters","u128","u64","u8","user_specified_name","value","vector","visibility","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","1","0","0","1","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","2","2","2","2","3","3","trailing","0","0","0","1","2","3","0","0","0","1","1","0","0","0","0","0","1","0","0","0","0","1","1","2","ast","comments","0","0","0","0","0","0","ADD","AND","Ability","Ability_","Abort","AbortsIf","AbortsWith","Add","Address","Address","AddressDefinition","And","Annotate","AnonymousAddress","Apply","Apply","Assert","Assign","Assigned","Assume","Attribute","AttributeValue","AttributeValue_","Attribute_","Attributes","Axiom","BIT_AND","BIT_OR","BinOp","BinOp_","Bind","Bind","BindList","BindWithRange","BindWithRangeList","Bind_","BinopExp","BitAnd","BitOr","Block","Bool","Borrow","Break","ByteString","COPY","Call","Cast","Choose","ChooseMin","Code","Condition","Constant","Constant","ConstantName","Continue","Copy","Copy","DIV","DROP","Declare","Decreases","Defined","Defined","Definition","Dereference","Div","Dot","Drop","EQ","Emits","Ensures","Eq","Exists","Exp","ExpList","Exp_","FRIEND","Field","Forall","Friend","Friend","FriendDecl","Fun","Function","Function","Function","FunctionBody","FunctionBody_","FunctionName","FunctionSignature","GE","GT","Ge","Gt","HexString","IFF","IMPLIES","INTERNAL","Ident","IfElse","Iff","Implies","Include","Index","Internal","Invariant","InvariantUpdate","KEY","Key","LE","LT","Lambda","Le","LeadingNameAccess","LeadingNameAccess_","Let","Literal","Loop","Lt","MOD","MUL","Member","Members","Mod","Modifies","Module","Module","Module","ModuleAccess","ModuleDefinition","ModuleIdent","ModuleIdent_","ModuleMember","ModuleName","Move","Mul","Multiple","NEQ","NOT","Name","Name","Name","NameAccessChain","NameAccessChain_","NamePart","Native","Native","Neq","Not","Num","OR","One","Or","PUBLIC","Pack","Parameterized","Pragma","PragmaProperty","PragmaProperty_","PragmaValue","Program","Public","Quant","QuantKind","QuantKind_","RANGE","Range","Ref","Requires","ResourceLoc","Return","SCRIPT","SELF_NAME","SHL","SHR","STORE","SUB","Schema","Script","Script","Script","Seq","Sequence","SequenceItem","SequenceItem_","Shl","Shr","Spec","Spec","SpecApplyFragment","SpecApplyFragment_","SpecApplyPattern","SpecApplyPattern_","SpecBlock","SpecBlockMember","SpecBlockMember_","SpecBlockTarget","SpecBlockTarget_","SpecBlock_","SpecConditionKind","SpecConditionKind_","Store","Struct","StructDefinition","StructFields","StructName","StructTypeParameter","Sub","SucceedsIf","Three","Two","Type","Type_","UnaryExp","UnaryOp","UnaryOp_","Unit","Unit","Unpack","UnresolvedError","Update","Use","Use","UseDecl","Value","Value","Value","Value_","Var","Var","Variable","Visibility","While","Wildcard","XOR","Xor","abilities","acquires","add_loc","add_loc","add_loc","add_loc","add_loc","add_loc","addr","address","address","anonymous","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","attribute_name","attributes","attributes","attributes","attributes","attributes","attributes","attributes","attributes","attributes","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","constants","constraints","drop_loc","drop_loc","drop_loc","drop_loc","drop_loc","drop_loc","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fields","file_hash","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","friend","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","function","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_phantom","is_pure","is_pure","is_spec_module","is_spec_only","is_underscore","lib_definitions","loc","loc","loc","loc","loc","loc","loc","loc","loc","loc","loc","loc","loc","loc","members","members","module","modules","name","name","name","name","name","name","name_pattern","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","parameters","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","required_by","requires","return_type","signature","signature","source_definitions","specs","starts_with_underscore","symbol","symbol","target","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_parameters","type_parameters","type_parameters","unit","use_","uses","uses","value","value","value","value","value","value","value","value","visibility","visibility","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","1","1","0","0","1","2","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","2","2","2","2","2","3","3","4","0","0","0","0","0","0","0","0","0","0","0","0","1","1","0","0","0","0","0","1","1","2","0","additional_exps","body","def","exclusion_patterns","exp","exp","exp","init","is_global","kind","lhs","name","name","name","patterns","post_state","properties","properties","properties","rhs","signature","type_","type_parameters","uninterpreted","0","0","1","1","0","0","0","0","0","0","0","0","0","1","1","1","0","0","1","1","0","0","0","0","0","0","0","0","CommentMap","FileCommentMap","MatchedFileCommentMap","verify_string","CompilationEnv","Counter","DEFAULT_ERROR_ADDRESS","Decimal","Flags","Hex","Identifier","Key","Loc","Name","NumberFormat","NumericalAddress","TName","add_diag","add_diags","add_loc","as_ref","ast_debug","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_diags_at_or_above_severity","clap","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","count_diags","drop_loc","empty","encode_hex","encode_hex_upper","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","flags","fmt","fmt","fmt","fmt","fmt","fmt","format_comma","format_delim","from","from","from","from","from","from_clap","has_diags","hash","hash","hash","into","into","into","into","into","into_bytes","into_inner","is_empty","is_testing","known_attributes","loc","named_address_mapping","ne","ne","ne","new","new","next","parse_named_address","parse_str","parse_u128","parse_u64","parse_u8","partial_cmp","partial_cmp","remembering_unique_map","set_sources_shadow_deps","shortest_cycle","sources_shadow_deps","take_final_warning_diags","testing","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique_map","unique_set","value","verify_and_create_named_address_mapping","vzip","vzip","vzip","vzip","vzip","AstDebug","AstWriter","annotate","annotate_gen","ast_debug","block","borrow","borrow_mut","comma","fmt","from","indent","into","list","new_line","print","print_verbose","semicolon","to_string","try_from","try_into","type_id","vzip","write","writeln","AddressBlock","AttributePosition","CODE_ASSIGNMENT_NAME","Constant","EXPECTED_FAILURE","ExpectedFailure","Friend","Function","KnownAttribute","Module","Script","Spec","Struct","TEST","TEST_ONLY","Test","TestOnly","Testing","TestingAttribute","Use","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","eq","eq","eq","equivalent","equivalent","equivalent","expected_positions","expected_positions","fmt","fmt","fmt","fmt","from","from","from","into","into","into","name","name","ne","partial_cmp","partial_cmp","partial_cmp","resolve","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","IntoIter","Iter","IterMut","RememberingUniqueMap","add","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","contains_key","contains_key_","eq","equivalent","fmt","from","from","from","from","get","get_loc","get_mut","into","into","into","into","into_inner","into_iter","into_iter","into_iter","into_iter","is_empty","iter","iter_mut","key_gotten","len","map","maybe_from_iter","maybe_from_opt_iter","new","next","next","next","ref_map","remember","remove","size_hint","size_hint","size_hint","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union_with","vzip","vzip","vzip","vzip","IntoIter","Iter","IterMut","UniqueMap","add","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","contains_key","contains_key_","default","eq","equivalent","filter_map","fmt","from","from","from","from","get","get_","get_loc","get_loc_","get_mut","get_mut_","hash","into","into","into","into","into_iter","into_iter","into_iter","into_iter","is_empty","iter","iter_mut","key_cloned_iter","len","map","maybe_from_iter","maybe_from_opt_iter","new","next","next","next","partial_cmp","ref_map","remove","remove_","size_hint","size_hint","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union_with","vzip","vzip","vzip","vzip","IntoIter","Iter","UniqueSet","add","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cloned_iter","cmp","contains","contains_","eq","equivalent","fmt","from","from","from","from_elements","from_elements_","get_loc","get_loc_","hash","intersect","into","into","into","into_iter","into_iter","into_iter","is_empty","is_subset","iter","len","new","next","next","partial_cmp","remove","remove_","size_hint","size_hint","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","vzip","vzip","vzip","ast","Abort","Annotate","Assert","Assign","Bind","BinopExp","Block","Borrow","BorrowGlobal","BorrowLocal","BorrowUnpack","Break","Builtin","BuiltinFunction","BuiltinFunction_","Cast","Constant","Constant","Continue","Copy","Declare","Defined","Dereference","Exists","Exp","ExpList","ExpListItem","Freeze","Function","FunctionBody","FunctionBody_","IfElse","Ignore","LValue","LValueList","LValueList_","LValue_","Loop","ModuleCall","ModuleCall","ModuleDefinition","Move","MoveFrom","MoveTo","Mutate","Native","Pack","Program","Return","Script","Seq","Sequence","SequenceItem","SequenceItem_","Single","Spec","Splat","TempBorrow","UnannotatedExp","UnannotatedExp_","UnaryExp","Unit","Unpack","UnresolvedError","Use","Value","Var","While","acquires","acquires","arguments","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","ast_debug","attributes","attributes","attributes","attributes","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","constants","constants","dependency_order","display_name","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","exp","exp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","friends","from","from","from","from","from","from","from","from","from","from","from","from","from","function","function_name","functions","into","into","into","into","into","into","into","into","into","into","into","into","into","is_source_module","loc","loc","module","modules","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","parameter_types","scripts","signature","signature","single_item","splat_item","structs","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_arguments","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","visibility","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","1","0","0","1","1","2","0","0","0","0","1","1","1","2","2","3","3","4","0","0","0","1","2","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","2","2","2","2","2","3","3","body","from_user","from_user","has_break","trailing","var","var","Expected","ExpectedFailure","ExpectedWithCode","ModuleTestPlan","TestCase","TestName","TestPlan","arguments","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","expected_failure","files","filter_test_members","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","module_id","module_info","module_tests","new","new","plan_builder","test_name","tests","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","0","program","construct_test_plan"],"q":["move_lang","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_lang::cfgir","","","move_lang::cfgir::ast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_lang::cfgir::ast::BlockInfo","move_lang::cfgir::ast::FunctionBody_","","","","move_lang::cfgir::ast::LoopEnd","move_lang::command_line","","","","","","","","","","","","","","","","","move_lang::command_line::compiler","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_lang::compiled_unit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_lang::compiled_unit::CompiledUnitEnum","","move_lang::diagnostics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_lang::diagnostics::codesmove_lang::expansion","move_lang::expansion::astmove_lang::expansion::ast::Address","","move_lang::expansion::ast::AttributeName_","","move_lang::expansion::ast::AttributeValue_","","move_lang::expansion::ast::Attribute_","","","","","move_lang::expansion::ast::ExpDotted_","","","move_lang::expansion::ast::Exp_","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_lang::expansion::ast::FunctionBody_","move_lang::expansion::ast::LValue_","","","","","move_lang::expansion::ast::ModuleAccess_","","","move_lang::expansion::ast::PragmaValue","","move_lang::expansion::ast::SequenceItem_","","","","","move_lang::expansion::ast::SpecBlockMember_","","","","","","","","","","","","","","","","","","","","","","","","move_lang::expansion::ast::SpecBlockTarget_","","","","move_lang::expansion::ast::SpecConditionKind_","","","move_lang::expansion::ast::StructFields","","move_lang::expansion::ast::Type_","","","","","","","move_lang::expansion::ast::Value_","","","","","","","move_lang::hlir","move_lang::hlir::ast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_lang::hlir::ast::BaseType_","","","","move_lang::hlir::ast::BuiltinFunction_","","","","","move_lang::hlir::ast::Command_","","","","","","","","","","","","","","move_lang::hlir::ast::ExpListItem","","","","","move_lang::hlir::ast::FunctionBody_","","move_lang::hlir::ast::LValue_","","","","","move_lang::hlir::ast::SingleType_","","","move_lang::hlir::ast::Statement_","","","","","","","","move_lang::hlir::ast::StructFields","","move_lang::hlir::ast::TypeName_","","","move_lang::hlir::ast::Type_","","move_lang::hlir::ast::UnannotatedExp_","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_lang::interface_generator","","move_lang::ir_translation","move_lang::naming","move_lang::naming::astmove_lang::naming::ast::BuiltinFunction_","","","","","","","move_lang::naming::ast::ExpDotted_","","","move_lang::naming::ast::Exp_","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_lang::naming::ast::FunctionBody_","move_lang::naming::ast::LValue_","","","","","move_lang::naming::ast::SequenceItem_","","","","","move_lang::naming::ast::StructFields","","move_lang::naming::ast::TypeName_","","","","move_lang::naming::ast::Type_","","","","","","","move_lang::parser","","move_lang::parser::astmove_lang::parser::ast::AttributeValue_","","move_lang::parser::ast::Attribute_","","","","","move_lang::parser::ast::Bind_","","","","move_lang::parser::ast::Definition","","","move_lang::parser::ast::Exp_","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_lang::parser::ast::FunctionBody_","move_lang::parser::ast::LeadingNameAccess_","","move_lang::parser::ast::ModuleMember","","","","","","move_lang::parser::ast::NameAccessChain_","","","","","move_lang::parser::ast::PragmaValue","","move_lang::parser::ast::SequenceItem_","","","","","","move_lang::parser::ast::SpecApplyFragment_","move_lang::parser::ast::SpecBlockMember_","","","","","","","","","","","","","","","","","","","","","","","","move_lang::parser::ast::SpecBlockTarget_","","","","move_lang::parser::ast::SpecConditionKind_","","","move_lang::parser::ast::StructFields","","move_lang::parser::ast::Type_","","","","","","","move_lang::parser::ast::Use","","","","move_lang::parser::ast::Value_","","","","","move_lang::parser::ast::Visibility","","","move_lang::parser::comments","","","","move_lang::shared","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_lang::shared::ast_debug","","","","","","","","","","","","","","","","","","","","","","","","","move_lang::shared::known_attributes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_lang::shared::known_attributes::KnownAttribute","move_lang::shared::remembering_unique_map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_lang::shared::unique_map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_lang::shared::unique_set","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_lang::typing","move_lang::typing::ast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_lang::typing::ast::BuiltinFunction_","","","","","","","move_lang::typing::ast::ExpListItem","","","","","move_lang::typing::ast::FunctionBody_","move_lang::typing::ast::LValue_","","","","","","","","","","","move_lang::typing::ast::SequenceItem_","","","","","move_lang::typing::ast::UnannotatedExp_","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_lang::unit_test","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_lang::unit_test::ExpectedFailure","move_lang::unit_test::filter_test_members","move_lang::unit_test::plan_builder"],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>dependency_order</code> is the topological order/rank in the …iven a set of dependencies, precompile them and save the …","","","","","","","","","","","","","","","","","","","","Given a file map and a set of compiled programs, saves the …","","","","","","","","","Runs the bytecode verifier on the compiled units Fails if …ll abilities","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Abilities for vector&lt;_&gt;, note they are predicated on the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Abilities for bool, u8, u64, u128, and address","","","","","","","","","Abilities for &amp;_ and &amp;mut _","","","","Abilities for signercode>dependency_order</code> is the topological order/rank in the …code>dependency_order</code> is the topological order/rank in the …enerate the text for the “interface” file of a …code>dependency_order</code> is the topological order/rank in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specifies a name at the beginning of an access chain. …n inverse of <code>requires</code>, where x is in a.required_by() iff …","For a struct with ability <code>a</code>, each field needs to have the …ypes to represent comments.","","","","","","","","","","","","","","Number format enum, the u32 value represents the base","Numerical address represents non-named address values or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Should only be called after compilation is finished","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Simple trait used for pretty printing the various AST","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wrapper around <code>UniqueMap</code> that remembers which values were …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unique wrapper around <code>BTreeMap</code> that throws on duplicate …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unique set wrapper around <code>UniqueMap</code> where the value of the …code>dependency_order</code> is the topological order/rank in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,2,3,4,5,6,7,1,2,3,4,5,0,0,0,0,0,1,2,3,4,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,9,0,0,8,9,0,0,10,10,11,12,13,14,13,14,15,11,11,12,13,14,15,8,11,10,16,9,12,13,14,15,8,11,10,16,9,12,13,14,15,8,11,10,16,9,12,13,14,15,8,11,10,16,9,13,14,14,15,8,11,10,12,13,14,15,8,11,10,16,9,14,12,13,14,15,8,11,10,16,9,13,13,14,12,13,14,15,8,11,10,16,9,16,14,13,15,16,12,15,8,11,0,12,15,11,14,12,13,14,15,8,11,10,16,9,12,13,14,15,8,11,10,16,9,12,13,14,15,8,11,10,16,9,12,13,14,15,8,11,10,16,9,15,11,12,13,14,15,8,11,10,16,9,17,18,18,18,18,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,20,20,21,20,22,21,20,22,21,20,20,20,20,20,20,21,20,20,20,20,20,20,22,21,20,20,20,20,20,20,21,20,20,20,20,20,20,22,22,20,22,0,22,22,21,20,22,0,22,21,20,22,20,20,20,20,20,20,20,22,21,0,22,21,20,20,20,20,20,20,0,21,21,21,21,21,21,21,22,21,20,22,21,20,22,21,20,22,22,21,20,22,0,0,0,0,0,0,23,0,0,23,0,0,0,0,24,25,26,27,28,24,29,25,30,23,26,27,28,24,29,25,30,23,26,27,28,24,29,25,30,23,26,27,28,24,29,25,30,23,26,27,28,24,29,25,30,23,26,27,28,24,29,25,30,23,30,25,26,26,27,28,24,29,25,30,23,31,23,31,23,25,30,24,25,25,25,32,23,24,29,25,30,27,28,29,32,23,32,23,32,23,24,29,28,26,27,28,24,29,25,30,23,26,27,28,24,29,25,30,23,26,27,28,24,29,25,30,23,26,26,27,28,24,29,25,30,23,27,31,23,0,26,27,28,24,29,25,30,23,33,34,0,0,0,0,0,35,36,36,36,35,36,35,36,35,36,35,0,35,36,35,36,35,35,36,35,36,35,35,35,36,35,36,35,35,35,35,35,35,36,35,36,35,0,0,0,0,36,36,35,36,35,36,35,36,35,0,36,35,0,37,38,39,39,0,37,40,0,40,37,41,0,37,42,42,43,0,44,41,41,45,39,0,37,46,0,0,46,47,48,38,41,44,49,45,50,39,51,52,42,51,48,41,41,41,44,48,47,48,48,47,47,48,47,48,48,47,47,41,47,48,48,51,41,48,41,47,48,45,48,48,48,51,45,51,51,41,40,40,41,0,37,45,38,0,37,40,41,45,0,37,38,41,41,0,47,39,41,0,37,52,0,37,41,38,41,38,39,41,0,37,49,38,38,38,38,38,38,38,0,37,47,50,41,48,41,0,37,49,39,41,40,40,53,37,46,47,48,38,41,44,49,45,50,39,51,52,42,40,53,37,46,47,48,38,41,44,49,45,50,39,51,52,42,40,53,37,46,47,48,38,41,44,49,45,50,39,51,52,42,40,53,37,46,47,48,38,41,44,49,45,50,39,51,52,42,40,43,46,47,48,38,41,44,49,45,50,39,51,52,42,40,40,53,37,46,47,48,38,41,44,49,45,50,39,51,52,42,40,53,37,46,47,48,38,41,44,49,45,50,39,51,52,42,40,53,37,46,47,48,38,41,44,49,45,50,39,51,52,42,40,53,37,46,47,48,38,41,44,49,45,50,39,51,52,42,40,53,37,46,47,48,38,41,44,49,45,50,39,51,52,42,40,53,37,46,47,48,38,41,44,49,45,50,39,51,52,42,40,43,53,53,40,53,43,53,46,47,48,38,41,44,49,45,50,39,51,52,42,40,53,37,46,47,48,38,41,44,49,45,50,39,51,52,42,40,53,37,46,47,48,38,41,44,49,45,50,39,51,52,42,40,53,37,46,47,48,38,41,44,49,45,50,39,51,52,42,40,53,37,46,47,48,38,41,44,49,45,50,39,51,52,42,40,53,37,46,47,48,38,41,44,49,45,50,39,51,52,42,0,54,0,0,0,55,56,56,0,57,55,58,59,60,56,55,61,56,0,0,0,0,0,0,0,56,62,55,55,57,55,55,57,54,55,55,63,59,0,55,55,62,56,64,65,66,55,67,56,56,0,67,0,55,0,55,0,55,0,0,66,60,0,59,0,0,0,68,55,59,55,57,56,56,69,0,0,0,0,0,0,0,0,55,59,68,55,63,56,63,0,70,71,0,0,0,0,55,60,55,61,71,55,58,64,65,0,54,55,61,59,0,0,0,0,55,54,60,56,55,54,63,0,62,0,0,0,55,0,0,0,0,0,0,0,0,0,0,0,0,56,0,0,57,57,57,55,60,55,69,72,60,55,59,0,70,55,0,72,59,55,73,0,0,74,54,75,54,58,76,70,61,77,78,79,80,81,63,59,56,82,71,60,72,67,57,55,62,61,77,78,83,73,74,84,81,74,85,86,76,70,61,69,77,58,75,78,83,66,79,73,64,80,65,87,74,84,81,63,59,56,82,68,54,71,60,72,67,57,55,62,85,86,76,70,61,69,77,58,75,78,83,66,79,73,64,80,65,87,74,84,81,63,59,56,82,68,54,71,60,72,67,57,55,62,76,70,61,69,77,58,75,78,83,66,79,73,64,80,65,87,74,84,81,63,59,56,82,68,54,71,60,72,67,57,55,62,76,70,61,69,77,58,75,78,83,66,79,73,64,80,65,87,74,84,81,63,59,56,82,68,54,71,60,72,67,57,55,62,69,58,75,66,87,54,54,77,78,79,78,54,70,61,69,58,75,66,79,73,64,80,65,87,74,84,81,63,59,56,82,68,54,71,60,72,67,57,55,62,70,61,69,58,75,66,87,54,71,57,73,76,70,61,69,69,77,58,58,75,75,78,83,66,66,79,73,64,80,65,87,87,74,84,81,63,59,56,82,68,54,71,71,60,60,72,67,57,55,62,78,85,86,76,70,61,69,77,58,75,78,83,66,79,73,64,80,65,87,74,84,81,63,59,56,82,68,54,71,60,72,67,57,55,62,54,54,77,77,78,54,54,58,75,87,54,77,78,87,54,85,86,76,70,61,69,77,58,75,78,83,66,79,73,64,80,65,87,74,84,81,63,59,56,82,68,54,71,60,72,67,57,55,62,58,85,86,54,54,79,78,54,54,54,77,78,83,73,74,84,81,75,76,79,82,70,61,69,58,75,79,73,64,80,65,87,74,84,81,63,59,56,82,68,54,71,60,72,67,57,55,62,75,87,85,86,80,69,58,75,66,87,54,54,54,80,76,74,84,54,85,86,77,78,74,78,81,76,70,61,69,77,58,75,78,83,66,79,73,64,80,65,87,74,84,81,63,59,56,82,68,54,71,60,72,67,57,55,62,69,58,75,66,87,71,60,85,86,76,70,61,69,77,58,75,78,83,66,79,73,64,80,65,87,74,84,81,63,59,56,82,68,54,71,60,72,67,57,55,62,85,86,76,70,61,69,77,58,75,78,83,66,79,73,64,80,65,87,74,84,81,63,59,56,82,68,54,71,60,72,67,57,55,62,57,85,86,76,70,61,69,77,58,75,78,83,66,79,73,64,80,65,87,74,84,81,63,59,56,82,68,54,71,60,72,67,57,55,62,73,80,54,77,78,84,82,74,85,86,76,70,61,69,77,58,75,78,83,66,79,73,64,80,65,87,74,84,81,63,59,56,82,68,54,71,60,72,67,57,55,62,88,89,90,91,92,93,94,95,96,95,96,97,98,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,102,103,104,105,106,109,110,111,112,113,117,118,120,122,123,124,125,103,104,105,110,118,103,110,110,126,127,128,129,128,129,129,130,131,131,132,133,134,135,136,135,136,137,138,139,140,137,141,140,142,142,137,143,138,142,139,140,139,137,141,144,143,138,142,142,138,145,146,145,146,147,148,149,150,151,152,153,154,155,153,154,155,156,157,158,159,160,161,162,0,163,164,165,164,166,0,0,0,0,167,0,167,168,167,164,169,167,0,0,167,0,170,0,0,167,164,167,171,172,167,168,0,167,0,167,173,0,0,0,0,170,174,164,173,164,164,0,0,0,170,0,167,0,169,167,168,168,175,164,171,172,167,165,0,166,164,0,175,176,0,0,167,176,0,0,0,0,173,0,0,0,0,0,0,167,175,167,0,174,165,167,165,167,167,174,170,165,166,177,178,179,165,166,175,179,180,181,182,183,169,165,166,175,170,164,174,179,168,167,184,176,181,182,177,185,178,166,175,178,165,166,175,180,181,182,177,171,185,183,172,178,169,165,166,175,170,163,164,174,173,179,168,167,184,176,180,181,182,177,171,185,183,172,178,169,165,166,175,170,163,164,174,173,179,168,167,184,176,165,180,181,182,177,171,185,183,172,178,169,165,166,175,170,163,164,174,173,179,168,167,184,176,180,181,182,177,171,185,183,172,178,169,165,166,175,170,163,164,174,173,179,168,167,184,176,169,165,163,181,182,182,177,171,185,183,172,178,169,165,166,175,170,163,164,174,173,179,168,167,184,176,169,165,163,0,184,177,180,181,182,177,171,185,183,172,178,169,169,165,166,175,170,163,163,164,174,173,179,168,167,184,176,182,180,181,182,177,171,185,183,172,178,169,165,166,175,170,163,164,174,173,179,168,167,184,176,175,181,181,182,163,180,181,182,177,171,185,183,172,178,169,165,166,175,170,163,164,174,173,179,168,167,184,176,164,183,182,164,164,167,184,181,185,179,180,179,177,171,185,183,172,178,169,165,166,175,170,163,164,174,179,168,167,184,176,183,169,165,163,183,180,185,178,175,182,164,180,181,182,177,171,185,183,172,178,169,165,166,175,170,163,164,174,173,179,168,167,184,176,169,163,180,181,182,177,171,185,183,172,178,169,165,166,175,170,163,164,174,173,179,168,167,184,176,180,181,182,177,171,185,183,172,178,169,165,166,175,170,163,164,174,173,179,168,167,184,176,184,179,175,180,181,182,177,171,185,183,172,178,169,165,166,175,170,163,164,174,173,179,168,167,184,176,177,183,165,166,175,165,166,175,165,166,175,185,178,180,181,182,177,171,185,183,172,178,169,165,166,175,170,163,164,174,173,179,168,167,184,176,186,187,187,187,188,189,190,191,190,192,193,194,192,193,195,196,197,196,198,195,195,197,198,199,200,199,200,200,201,201,202,203,202,203,203,204,205,205,206,207,208,209,207,209,208,209,210,211,212,213,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,219,222,223,224,226,227,228,229,223,224,226,230,231,232,231,232,0,0,0,0,233,234,235,236,234,236,237,237,235,236,234,235,235,238,236,236,234,236,235,236,239,236,0,0,0,0,236,0,236,236,236,238,240,241,236,236,242,235,235,0,242,0,0,236,0,235,236,235,0,0,0,0,236,243,0,0,0,0,236,235,235,236,0,239,236,235,235,239,236,240,241,236,237,0,237,236,234,0,238,0,0,0,234,236,0,0,0,0,0,0,0,0,0,0,234,234,234,234,234,234,236,237,236,243,237,236,236,234,236,237,243,234,236,244,245,246,237,234,235,247,248,249,250,251,234,239,245,237,243,242,235,236,238,248,249,244,246,252,234,246,237,247,248,249,244,250,240,251,241,246,252,234,239,233,245,253,237,243,242,235,236,238,247,248,249,244,250,240,251,241,246,252,234,239,233,245,253,237,243,242,235,236,238,237,237,237,247,248,249,244,250,240,251,241,246,252,234,239,233,245,253,237,243,242,235,236,238,247,248,249,244,250,240,251,241,246,252,234,239,233,245,253,237,243,242,235,236,238,234,239,233,245,253,248,249,234,249,235,244,250,240,251,241,246,252,234,239,233,245,253,237,243,242,235,236,238,234,239,233,245,253,244,247,248,249,244,250,240,251,241,246,252,234,234,239,239,233,245,253,237,243,242,235,236,238,249,247,248,249,244,250,240,251,241,246,252,234,239,233,245,253,237,243,242,235,236,238,248,248,249,233,245,253,245,247,248,249,244,250,240,251,241,246,252,234,239,233,245,253,237,243,242,235,236,238,234,250,249,248,252,247,237,237,244,250,240,251,241,246,252,239,233,245,253,237,243,242,235,236,238,233,253,234,234,250,251,234,239,233,245,253,234,235,251,247,246,252,237,249,247,248,249,244,250,240,251,241,246,252,234,239,233,245,253,237,243,242,235,236,238,234,239,234,247,248,249,244,250,240,251,241,246,252,234,239,233,245,253,237,243,242,235,236,238,247,248,249,244,250,240,251,241,246,252,234,239,233,245,253,237,243,242,235,236,238,247,248,249,244,250,240,251,241,246,252,234,239,233,245,253,237,243,242,235,236,238,244,251,237,237,237,245,252,237,246,247,248,249,244,250,240,251,241,246,252,234,239,233,245,253,237,243,242,235,236,238,254,255,256,257,258,259,256,260,261,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,266,267,268,269,270,273,274,275,279,280,281,284,285,286,287,267,269,280,281,267,281,288,289,290,291,291,291,291,292,293,294,293,294,295,296,297,298,299,299,300,301,302,303,300,302,302,0,0,304,305,306,307,308,309,310,310,0,0,311,312,312,310,313,314,0,310,311,315,316,317,312,311,318,312,0,0,0,0,0,312,310,310,0,0,0,319,0,0,0,0,311,310,310,311,314,311,311,314,320,311,311,321,321,322,316,0,323,0,311,320,311,310,320,319,312,324,325,0,311,310,311,320,310,312,312,310,321,0,311,0,326,0,321,323,326,0,317,0,323,316,0,0,0,0,310,310,310,310,314,310,310,326,327,311,310,310,316,311,326,312,312,320,320,310,310,311,310,0,0,316,327,311,310,310,310,322,328,310,312,313,328,322,329,0,0,0,0,0,311,310,317,310,330,318,315,311,0,0,331,324,325,310,330,314,310,332,310,326,311,318,316,0,0,0,0,326,311,0,0,310,310,317,312,0,311,326,304,310,310,320,310,322,0,313,326,319,0,0,0,310,310,323,311,0,0,0,0,0,0,0,0,0,0,0,0,320,323,0,0,0,0,310,312,332,332,0,0,311,0,0,317,311,333,311,316,0,323,0,0,329,311,0,0,333,316,0,311,331,310,310,334,335,304,305,306,307,308,309,336,337,338,315,339,313,336,340,328,341,329,318,338,323,342,343,334,344,326,335,345,346,322,347,348,331,316,312,332,320,317,333,314,330,310,321,311,319,318,336,340,341,338,342,334,335,345,346,335,339,313,336,340,328,341,329,318,304,304,315,337,338,323,342,305,305,306,306,343,334,324,307,307,344,326,325,335,308,308,345,346,322,347,327,348,331,316,312,332,320,317,309,309,333,314,330,310,321,311,319,339,313,336,340,328,341,329,318,304,315,337,338,323,342,305,306,343,334,324,307,344,326,325,335,308,345,346,322,347,327,348,331,316,312,332,320,317,309,333,314,330,310,321,311,319,339,313,336,340,328,341,329,318,304,315,337,338,323,342,305,306,343,334,324,307,344,326,325,335,308,345,346,322,347,327,348,331,316,312,332,320,317,309,333,314,330,310,321,311,319,339,313,336,340,328,341,329,318,304,315,337,338,323,342,305,306,343,334,324,307,344,326,325,335,308,345,346,322,347,327,348,331,316,312,332,320,317,309,333,314,330,310,321,311,319,304,315,337,305,306,307,308,320,309,340,343,304,305,306,307,308,309,328,341,329,318,304,315,337,305,306,343,334,324,307,344,326,325,335,308,345,346,322,347,327,348,331,316,312,332,320,317,309,333,314,330,310,321,311,319,328,341,329,318,304,315,337,305,306,307,308,332,320,309,314,334,313,339,313,336,340,328,341,329,318,304,304,315,315,337,337,338,323,342,305,305,306,306,343,334,324,307,307,344,326,326,325,335,308,308,345,346,322,347,327,348,331,316,312,332,332,320,320,317,309,309,333,314,330,330,310,310,321,311,319,342,339,313,336,340,328,341,329,318,304,315,337,338,323,342,305,306,343,334,324,307,344,326,325,335,308,345,346,322,347,327,348,331,316,312,332,320,317,309,333,314,330,310,321,311,319,340,304,315,337,305,306,307,308,320,309,339,313,336,340,328,341,329,318,304,315,337,338,323,342,305,306,343,334,324,307,344,326,325,335,308,345,346,322,347,327,348,331,316,312,332,320,317,309,333,314,330,310,321,311,319,343,330,310,338,310,309,339,304,305,306,307,326,308,309,336,340,338,342,334,335,345,338,346,337,336,338,343,334,335,345,347,348,328,341,329,318,304,315,337,305,306,343,334,324,307,344,326,325,335,308,345,346,322,347,327,348,331,316,312,332,317,309,333,314,311,319,344,304,315,337,305,306,307,308,320,309,320,320,344,335,345,339,340,309,330,310,346,339,313,336,340,328,341,329,318,304,315,337,338,323,342,305,306,343,334,324,307,344,326,325,335,308,345,346,322,347,327,348,331,316,312,332,320,317,309,333,314,330,310,321,311,319,304,315,337,305,306,307,326,308,332,320,309,330,310,339,313,336,340,328,341,329,318,304,315,337,338,323,342,305,306,343,334,324,307,344,326,325,335,308,345,346,322,347,327,348,331,316,312,332,320,317,309,333,314,330,310,321,311,319,339,313,336,340,328,341,329,318,304,315,337,338,323,342,305,306,343,334,324,307,344,326,325,335,308,345,346,322,347,327,348,331,316,312,332,320,317,309,333,314,330,310,321,311,319,339,313,336,340,328,341,329,318,304,315,337,338,323,342,305,306,343,334,324,307,344,326,325,335,308,345,346,322,347,327,348,331,316,312,332,320,317,309,333,314,330,310,321,311,319,334,344,348,317,341,340,346,304,305,306,307,308,309,345,347,335,348,339,313,336,340,328,341,329,318,304,315,337,338,323,342,305,306,343,334,324,307,344,326,325,335,308,345,346,322,347,327,348,331,316,312,332,320,317,309,333,314,330,310,321,311,319,349,350,351,352,353,352,353,354,355,355,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,362,363,364,365,366,369,370,372,376,377,378,379,380,381,382,363,364,365,370,377,363,370,370,384,385,386,387,388,389,390,391,392,393,394,395,394,395,396,397,398,399,400,399,400,400,401,402,403,404,405,402,406,405,407,407,402,408,403,407,404,405,404,402,406,409,408,403,407,407,403,410,411,410,411,412,413,414,415,416,417,418,419,420,417,418,419,421,422,421,422,423,424,425,426,427,428,429,430,0,0,0,0,0,0,431,432,0,432,0,433,433,0,0,0,0,434,434,433,431,0,433,432,431,434,435,436,432,431,434,435,436,434,436,432,431,434,435,436,432,431,434,435,436,432,431,434,433,436,431,431,432,431,434,435,436,432,431,434,435,436,434,431,431,431,434,435,436,0,0,432,431,434,435,436,436,434,432,431,435,432,431,434,435,436,431,431,436,436,0,437,434,434,435,436,431,434,435,0,431,0,0,0,432,431,0,436,0,436,434,436,432,431,434,435,436,431,432,431,434,435,436,432,431,434,435,436,432,431,434,435,436,0,0,437,0,432,431,434,435,436,0,0,438,438,439,438,438,438,438,438,438,438,438,438,438,0,0,438,438,438,438,438,438,438,438,440,0,441,440,441,441,440,440,0,440,440,440,440,441,441,441,441,442,0,440,440,442,441,440,442,441,440,442,441,440,442,441,440,442,441,440,442,441,440,442,441,442,441,440,440,442,441,440,442,441,440,442,441,442,441,442,440,442,441,442,440,442,441,440,440,442,441,440,442,441,440,442,441,440,442,441,443,0,0,0,0,444,445,446,447,444,445,446,447,444,444,444,444,444,444,444,444,445,446,447,444,444,444,444,445,446,447,444,444,445,446,447,444,444,444,444,444,444,444,444,444,444,445,446,447,444,444,444,445,446,447,444,445,446,447,444,445,446,447,444,445,446,447,444,444,445,446,447,444,0,0,0,0,448,449,450,451,448,449,450,451,448,448,448,448,448,448,448,448,448,448,448,449,450,451,448,448,448,448,448,448,448,448,449,450,451,448,449,450,451,448,448,448,448,448,448,448,448,448,448,449,450,451,448,448,448,448,449,450,448,449,450,451,448,449,450,451,448,449,450,451,448,448,449,450,451,448,0,0,0,452,453,454,452,453,454,452,452,452,452,452,452,452,452,452,452,453,454,452,452,452,452,452,452,452,453,454,452,453,454,452,452,452,452,452,452,453,454,452,452,452,453,454,452,453,454,452,453,454,452,453,454,452,452,453,454,452,0,455,455,456,455,457,455,455,455,456,455,458,455,455,0,0,455,0,455,455,455,457,459,455,456,0,455,0,456,0,0,0,455,458,0,0,0,0,455,0,455,0,455,456,456,455,459,455,0,455,0,457,0,0,0,460,455,460,455,0,0,455,455,458,455,455,455,458,455,461,462,462,463,464,465,458,462,456,455,466,457,460,464,465,461,467,461,463,464,465,459,461,467,458,462,456,455,466,457,460,463,464,465,459,461,467,458,462,456,455,466,457,460,463,464,465,459,461,467,458,462,456,455,466,457,460,463,464,465,459,461,467,458,462,456,455,466,457,460,464,465,465,456,459,461,467,458,462,456,455,466,457,460,0,466,463,464,465,459,461,467,458,462,456,456,455,466,457,460,465,463,464,465,459,461,467,458,462,456,455,466,457,460,464,464,465,463,464,465,459,461,467,458,462,456,455,466,457,460,465,464,467,462,463,462,459,461,467,458,462,456,455,466,457,460,462,463,461,467,0,0,465,463,464,465,459,461,467,458,462,456,455,466,457,460,456,463,464,465,459,461,467,458,462,456,455,466,457,460,463,464,465,459,461,467,458,462,456,455,466,457,460,466,462,463,464,465,459,461,467,458,462,456,455,466,457,460,467,461,463,464,465,459,461,467,458,462,456,455,466,457,460,468,469,470,471,472,473,470,474,475,474,475,475,476,477,478,479,477,478,479,478,479,478,479,479,480,481,482,482,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,485,487,488,489,491,492,496,497,498,500,501,502,503,504,505,488,491,497,498,500,497,498,506,507,508,506,509,507,508,510,0,510,0,0,0,0,511,512,513,511,510,512,513,511,510,512,513,511,510,512,513,511,510,511,512,0,512,513,511,510,512,513,511,510,512,513,511,510,513,512,512,512,513,0,511,513,512,513,511,510,512,513,511,510,512,513,511,510,512,513,511,510,512,513,511,510,514,0,0],"f":[[[]],[[["moduleident_",3],["loc",3]],["moduleident",6]],[[["moduleident_",3],["loc",3]],["moduleident",6]],[[]],[[["symbol",3],["loc",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,[[["uniquemap",3],["blockcfg",3],["functionsignature",3]]],[[["compilationenv",3],["btreemap",3],["uniquemap",3],["btreeset",3],["uniquemap",3],["blockcfg",3],["functionsignature",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["program",3]],[[],["script",3]],[[],["moduledefinition",3]],[[],["constant",3]],[[],["functionbody_",4]],[[],["function",3]],[[],["loopend",4]],[[],["loopinfo",3]],[[],["blockinfo",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["constant",3]],["bool",15]],[[["functionbody_",4]],["bool",15]],[[["function",3]],["bool",15]],[[["label",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[["constant",3]],["bool",15]],[[["functionbody_",4]],["bool",15]],[[["function",3]],["bool",15]],[[["btreemap",3],["label",3],["basicblocks",6]]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["program",3]],["steppedcompiler",3]],[[["program",3]],["steppedcompiler",3]],[[["program",3]],["steppedcompiler",3]],[[["program",3]],["steppedcompiler",3]],[[["program",3]],["steppedcompiler",3]],[[["program",3]],["steppedcompiler",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",6]],[[],[["result",4,["diagnostics"]],["diagnostics",3]]],[[],[["result",4,["diagnostics"]],["diagnostics",3]]],[[],[["result",4,["diagnostics"]],["diagnostics",3]]],[[],[["result",4,["diagnostics"]],["diagnostics",3]]],[[],[["result",4,["diagnostics"]],["diagnostics",3]]],[[],[["result",4,["diagnostics"]],["diagnostics",3]]],[[],["result",6]],[[["filessourcetext",6]],[["annotatedcompiledunit",6],["vec",3,["annotatedcompiledunit"]]]],[[["filessourcetext",6]],[["annotatedcompiledunit",6],["vec",3,["annotatedcompiledunit"]]]],[[["filessourcetext",6]],[["annotatedcompiledunit",6],["vec",3,["annotatedcompiledunit"]]]],[[["filessourcetext",6]],[["annotatedcompiledunit",6],["vec",3,["annotatedcompiledunit"]]]],[[["filessourcetext",6]],[["annotatedcompiledunit",6],["vec",3,["annotatedcompiledunit"]]]],[[["filessourcetext",6]],[["annotatedcompiledunit",6],["vec",3,["annotatedcompiledunit"]]]],null,[[],["result",6]],[[],[["result",4,["diagnostics"]],["diagnostics",3]]],[[],[["result",4,["diagnostics"]],["diagnostics",3]]],[[],[["result",4,["diagnostics"]],["diagnostics",3]]],[[],[["result",4,["diagnostics"]],["diagnostics",3]]],[[],[["result",4,["diagnostics"]],["diagnostics",3]]],[[],[["result",4,["diagnostics"]],["diagnostics",3]]],[[],[["result",6,["filessourcetext"]],["filessourcetext",6]]],[[["filessourcetext",6]]],[[["filessourcetext",6]]],[[["filessourcetext",6]]],[[["filessourcetext",6]]],[[["filessourcetext",6]]],[[["filessourcetext",6]]],[[],["fullycompiledprogram",3]],[[]],[[],["compilationenv",3]],null,[[["option",4,["string"]],["btreemap",3,["string","numericaladdress"]],["flags",3],["string",3],["numericaladdress",3]],[["result",4,["fullycompiledprogram"]],["result",6,["result"]]]],null,null,[[]],[[]],[[]],[[["option",4,["string"]],["btreemap",3],["bool",15],["string",3]],[["option",4,["string"]],["result",6,["option"]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[["bool",15],["vec",3,["annotatedcompiledunit"]],["str",15],["filessourcetext",6],["annotatedcompiledunit",6]],["result",6]],null,[[],["result",6]],[[],[["steppedcompiler",3],["diagnostics",3],["result",4,["steppedcompiler","diagnostics"]]]],[[],[["diagnostics",3],["steppedcompiler",3],["result",4,["steppedcompiler","diagnostics"]]]],[[],[["result",4,["steppedcompiler","diagnostics"]],["diagnostics",3],["steppedcompiler",3]]],[[],[["diagnostics",3],["result",4,["steppedcompiler","diagnostics"]],["steppedcompiler",3]]],[[],[["diagnostics",3],["steppedcompiler",3],["result",4,["steppedcompiler","diagnostics"]]]],[[],[["result",4,["steppedcompiler","diagnostics"]],["diagnostics",3],["steppedcompiler",3]]],[[["vec",3,["annotatedcompiledunit"]],["filessourcetext",6],["annotatedcompiledunit",6]]],[[["compiledmoduleid",3],["btreemap",3,["compiledmoduleid","string"]],["string",3]]],[[["flags",3]]],[[["string",3]]],[[["option",4,["string"]],["string",3]]],[[["btreemap",3,["numericaladdress"]],["numericaladdress",3]]],[[["fullycompiledprogram",3]]],[[["option",4,["fullycompiledprogram"]],["fullycompiledprogram",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["varinfo",3]],[[],["specinfo",3]],[[],["functioninfo",3]],[[],["namedcompiledmodule",3]],[[],["namedcompiledscript",3]],[[],["annotatedcompiledmodule",3]],[[],["annotatedcompiledscript",3]],[[],["compiledunitenum",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["compiledunit",6]],[[],["compiledunit",6]],[[],["loc",3]],[[],["loc",3]],null,null,null,[[]],[[],["moduleident",6]],null,[[],["symbol",3]],[[],["symbol",3]],null,null,null,null,null,null,null,[[],[["vec",3,["u8"]],["u8",15]]],[[],[["vec",3,["u8"]],["u8",15]]],[[],[["vec",3,["u8"]],["u8",15]]],[[],[["vec",3,["u8"]],["u8",15]]],[[],[["vec",3,["u8"]],["u8",15]]],[[],[["vec",3,["u8"]],["u8",15]]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[["vec",3,["annotatedcompiledunit"]],["annotatedcompiledunit",6]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[["diagnostic",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["diagnostic",3]],[[],["diagnostics",3]],[[]],[[]],null,[[],["diagnostics",3]],[[["diagnostic",3]],["bool",15]],[[["diagnostics",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["vec",3,["diagnostic"]],["diagnostic",3]]],[[["intoiterator",8]]],[[]],[[]],[[]],[[]],[[],["vec",3]],[[],[["vec",3,["diagnostic"]],["diagnostic",3]]],[[],["bool",15]],[[],["usize",15]],[[],[["severity",4],["option",4,["severity"]]]],[[["diagnostic",3]],["bool",15]],[[["diagnostics",3]],["bool",15]],[[]],[[]],[[["diagnostics",3],["filessourcetext",6]]],[[["diagnostics",3],["filessourcetext",6]],[["vec",3,["u8"]],["u8",15]]],[[["diagnostics",3],["filessourcetext",6]],[["vec",3,["u8"]],["u8",15]]],[[["diagnostics",3],["filessourcetext",6]]],[[],["usize",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["result",4,["diagnostics"]],["filessourcetext",6],["diagnostics",3]]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["severity",4]],[[],["diagnosticinfo",3]],[[],["category",4]],[[],["uncategorized",4]],[[],["syntax",4]],[[],["declarations",4]],[[],["nameresolution",4]],[[],["typesafety",4]],[[],["abilitysafety",4]],[[],["movesafety",4]],[[],["referencesafety",4]],[[],["bytecodegeneration",4]],[[],["unuseditem",4]],[[],["attributes",4]],[[],["tests",4]],[[],["bug",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["severity",4]],["ordering",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["severity",4]],["bool",15]],[[["diagnosticinfo",3]],["bool",15]],[[["category",4]],["bool",15]],[[["uncategorized",4]],["bool",15]],[[["syntax",4]],["bool",15]],[[["declarations",4]],["bool",15]],[[["nameresolution",4]],["bool",15]],[[["typesafety",4]],["bool",15]],[[["abilitysafety",4]],["bool",15]],[[["movesafety",4]],["bool",15]],[[["referencesafety",4]],["bool",15]],[[["bytecodegeneration",4]],["bool",15]],[[["unuseditem",4]],["bool",15]],[[["attributes",4]],["bool",15]],[[["tests",4]],["bool",15]],[[["bug",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["severity",4]],[[],["diagnosticinfo",3]],[[],["str",15]],[[["diagnosticinfo",3]],["bool",15]],[[["severity",4]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[],["severity",4]],[[],["severity",4]],[[],["severity",4]],[[],["severity",4]],[[],["severity",4]],[[],["severity",4]],[[],["severity",4]],[[],["severity",4]],[[],["severity",4]],[[],["severity",4]],[[],["severity",4]],[[],["severity",4]],[[],["severity",4]],[[],["severity",4]],[[],["severity",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["astwriter",3],["abilityset",3]]],[[["astwriter",3],["abilityset",3]]],null,[[["ability",6]],[["result",4,["loc"]],["loc",3]]],null,[[["loc",3]]],[[["numericaladdress",3],["loc",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[],["name",6]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["program",3]],[[],["attributevalue_",4]],[[],["attribute_",4]],[[],["attributename_",4]],[[],["script",3]],[[],["address",4]],[[],["moduleident_",3]],[[],["moduledefinition",3]],[[],["friend",3]],[[],["neighbor",4]],[[],["structtypeparameter",3]],[[],["structdefinition",3]],[[],["structfields",4]],[[],["functionsignature",3]],[[],["functionbody_",4]],[[],["specid",3]],[[],["function",3]],[[],["constant",3]],[[],["specblock_",3]],[[],["specblocktarget_",4]],[[],["specblockmember_",4]],[[],["specconditionkind_",4]],[[],["pragmaproperty_",3]],[[],["pragmavalue",4]],[[],["abilityset",3]],[[],["moduleaccess_",4]],[[],["type_",4]],[[],["lvalue_",4]],[[],["expdotted_",4]],[[],["value_",4]],[[],["exp_",4]],[[],["sequenceitem_",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["attributename_",4]],["ordering",4]],[[["address",4]],["ordering",4]],[[["moduleident_",3]],["ordering",4]],[[["neighbor",4]],["ordering",4]],[[["specid",3]],["ordering",4]],[[["abilityset",3]],["ordering",4]],[[["loc",3]]],null,null,null,null,[[]],[[["attributevalue_",4]],["bool",15]],[[["attribute_",4]],["bool",15]],[[["attributename_",4]],["bool",15]],[[["address",4]],["bool",15]],[[["moduleident_",3]],["bool",15]],[[["neighbor",4]],["bool",15]],[[["structtypeparameter",3]],["bool",15]],[[["structdefinition",3]],["bool",15]],[[["structfields",4]],["bool",15]],[[["functionsignature",3]],["bool",15]],[[["functionbody_",4]],["bool",15]],[[["specid",3]],["bool",15]],[[["function",3]],["bool",15]],[[["constant",3]],["bool",15]],[[["specblock_",3]],["bool",15]],[[["specblocktarget_",4]],["bool",15]],[[["specblockmember_",4]],["bool",15]],[[["specconditionkind_",4]],["bool",15]],[[["pragmaproperty_",3]],["bool",15]],[[["pragmavalue",4]],["bool",15]],[[["abilityset",3]],["bool",15]],[[["moduleaccess_",4]],["bool",15]],[[["type_",4]],["bool",15]],[[["lvalue_",4]],["bool",15]],[[["expdotted_",4]],["bool",15]],[[["value_",4]],["bool",15]],[[["exp_",4]],["bool",15]],[[["sequenceitem_",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[["loc",3]],["result",4]],null,null,null,[[["ability",6]],["bool",15]],[[["ability_",4]],["bool",15]],[[]],[[]],[[]],[[]],null,null,[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["btreemap",3]],["numericaladdress",3]],[[]],[[]],[[]],[[],["bool",15]],null,null,[[],["bool",15]],[[],["abilitysetiter",3]],[[],["usize",15]],null,null,null,null,null,null,null,null,null,null,null,[[["attributevalue_",4]],["bool",15]],[[["attribute_",4]],["bool",15]],[[["attributename_",4]],["bool",15]],[[["address",4]],["bool",15]],[[["moduleident_",3]],["bool",15]],[[["structtypeparameter",3]],["bool",15]],[[["structdefinition",3]],["bool",15]],[[["structfields",4]],["bool",15]],[[["functionsignature",3]],["bool",15]],[[["functionbody_",4]],["bool",15]],[[["specid",3]],["bool",15]],[[["function",3]],["bool",15]],[[["constant",3]],["bool",15]],[[["specblock_",3]],["bool",15]],[[["specblocktarget_",4]],["bool",15]],[[["specblockmember_",4]],["bool",15]],[[["specconditionkind_",4]],["bool",15]],[[["pragmaproperty_",3]],["bool",15]],[[["pragmavalue",4]],["bool",15]],[[["abilityset",3]],["bool",15]],[[["moduleaccess_",4]],["bool",15]],[[["type_",4]],["bool",15]],[[["lvalue_",4]],["bool",15]],[[["expdotted_",4]],["bool",15]],[[["value_",4]],["bool",15]],[[["exp_",4]],["bool",15]],[[["sequenceitem_",4]],["bool",15]],[[["address",4],["modulename",3]]],[[["usize",15]]],[[],["option",4]],[[],["option",4]],null,[[["attributename_",4]],[["option",4,["ordering"]],["ordering",4]]],[[["address",4]],[["option",4,["ordering"]],["ordering",4]]],[[["moduleident_",3]],[["option",4,["ordering"]],["ordering",4]]],[[["neighbor",4]],[["option",4,["ordering"]],["ordering",4]]],[[["specid",3]],[["option",4,["ordering"]],["ordering",4]]],[[["abilityset",3]],[["option",4,["ordering"]],["ordering",4]]],[[["loc",3]]],[[["loc",3]]],null,null,null,null,[[["loc",3]]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["loc",3]],[["option",4,["type"]],["type",6]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["loc",3]],["abilityset",3]],[[["loc",3]],["abilityset",3]],null,null,null,[[["loc",3]],["basetype",6]],[[["loc",3]],["singletype",6]],[[["loc",3]],["type",6]],null,[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],null,null,null,null,null,[[["basetype",6]],["singletype",6]],[[["basetype",6]],["type",6]],null,[[["loc",3]],["basetype",6]],[[["loc",3]],["singletype",6]],[[["loc",3]],["type",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["builtintypename_",4],["loc",3],["vec",3,["basetype"]],["basetype",6]],["basetype",6]],[[],["program",3]],[[],["script",3]],[[],["moduledefinition",3]],[[],["structdefinition",3]],[[],["structfields",4]],[[],["constant",3]],[[],["functionsignature",3]],[[],["functionbody_",4]],[[],["function",3]],[[],["typename_",4]],[[],["basetype_",4]],[[],["singletype_",4]],[[],["type_",4]],[[],["statement_",4]],[[],["label",3]],[[],["command_",4]],[[],["lvalue_",4]],[[],["unitcase",4]],[[],["modulecall",3]],[[],["builtinfunction_",4]],[[],["unannotatedexp_",4]],[[],["exp",3]],[[],["explistitem",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["typename_",4]],["ordering",4]],[[["basetype_",4]],["ordering",4]],[[["label",3]],["ordering",4]],null,null,null,[[["structdefinition",3]],["bool",15]],[[["structfields",4]],["bool",15]],[[["constant",3]],["bool",15]],[[["functionsignature",3]],["bool",15]],[[["functionbody_",4]],["bool",15]],[[["function",3]],["bool",15]],[[["typename_",4]],["bool",15]],[[["basetype_",4]],["bool",15]],[[["singletype_",4]],["bool",15]],[[["type_",4]],["bool",15]],[[["statement_",4]],["bool",15]],[[["label",3]],["bool",15]],[[["command_",4]],["bool",15]],[[["lvalue_",4]],["bool",15]],[[["unitcase",4]],["bool",15]],[[["modulecall",3]],["bool",15]],[[["builtinfunction_",4]],["bool",15]],[[["unannotatedexp_",4]],["bool",15]],[[["exp",3]],["bool",15]],[[["explistitem",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["unannotatedexp",6],["type",6]],["exp",3]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["singletype",6],["vec",3,["singletype"]],["loc",3]],["type",6]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["var",3]],["bool",15]],null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,[[["structdefinition",3]],["bool",15]],[[["structfields",4]],["bool",15]],[[["constant",3]],["bool",15]],[[["functionsignature",3]],["bool",15]],[[["functionbody_",4]],["bool",15]],[[["function",3]],["bool",15]],[[["typename_",4]],["bool",15]],[[["basetype_",4]],["bool",15]],[[["singletype_",4]],["bool",15]],[[["type_",4]],["bool",15]],[[["statement_",4]],["bool",15]],[[["label",3]],["bool",15]],[[["command_",4]],["bool",15]],[[["lvalue_",4]],["bool",15]],[[["modulecall",3]],["bool",15]],[[["builtinfunction_",4]],["bool",15]],[[["unannotatedexp_",4]],["bool",15]],[[["exp",3]],["bool",15]],[[["explistitem",4]],["bool",15]],null,[[["typename_",4]],[["option",4,["ordering"]],["ordering",4]]],[[["basetype_",4]],[["option",4,["ordering"]],["ordering",4]]],[[["label",3]],[["option",4,["ordering"]],["ordering",4]]],null,null,null,null,[[["singletype",6]],["type",6]],null,[[],[["btreeset",3,["label"]],["label",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[["usize",15]],["singletype",6]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[["loc",3]],["basetype",6]],[[["loc",3]],["singletype",6]],[[["loc",3]],["type",6]],[[["loc",3]],["basetype",6]],[[["loc",3]],["singletype",6]],[[["loc",3]],["type",6]],[[["loc",3]],["basetype",6]],[[["loc",3]],["singletype",6]],[[["loc",3]],["type",6]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15],["btreemap",3]],["result",6]],[[["btreemap",3],["compiledmodule",3]],["result",6]],[[["path",3],["string",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["loc",3]],["type",6]],[[],["btreeset",3]],[[],["btreeset",3]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],null,null,null,null,null,[[],["btreeset",3]],null,[[["loc",3]],["type",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["builtintypename",6],["loc",3],["type",6],["vec",3,["type"]]],["type",6]],[[["builtintypename",6],["vec",3,["type"]],["type",6]],["type_",4]],[[],[["option",4,["builtintypename"]],["builtintypename",6]]],[[],["program",3]],[[],["script",3]],[[],["moduledefinition",3]],[[],["structdefinition",3]],[[],["structtypeparameter",3]],[[],["structfields",4]],[[],["functionsignature",3]],[[],["functionbody_",4]],[[],["function",3]],[[],["constant",3]],[[],["builtintypename_",4]],[[],["typename_",4]],[[],["tparamid",3]],[[],["tparam",3]],[[],["tvar",3]],[[],["type_",4]],[[],["lvalue_",4]],[[],["expdotted_",4]],[[],["builtinfunction_",4]],[[],["exp_",4]],[[],["sequenceitem_",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["builtintypename_",4]],["ordering",4]],[[["typename_",4]],["ordering",4]],[[["tparamid",3]],["ordering",4]],[[["tparam",3]],["ordering",4]],[[["tvar",3]],["ordering",4]],null,null,[[["loc",3]],["abilityset",3]],null,[[],["str",15]],[[["structdefinition",3]],["bool",15]],[[["structtypeparameter",3]],["bool",15]],[[["structfields",4]],["bool",15]],[[["functionsignature",3]],["bool",15]],[[["functionbody_",4]],["bool",15]],[[["function",3]],["bool",15]],[[["constant",3]],["bool",15]],[[["builtintypename_",4]],["bool",15]],[[["typename_",4]],["bool",15]],[[["tparamid",3]],["bool",15]],[[["tparam",3]],["bool",15]],[[["tvar",3]],["bool",15]],[[["type_",4]],["bool",15]],[[["lvalue_",4]],["bool",15]],[[["expdotted_",4]],["bool",15]],[[["builtinfunction_",4]],["bool",15]],[[["exp_",4]],["bool",15]],[[["sequenceitem_",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],null,null,null,null,null,[[["type",6],["vec",3,["type"]],["loc",3]],["type",6]],[[["type",6],["vec",3,["type"]],["loc",3]],["type_",4]],[[["structdefinition",3]],["bool",15]],[[["structtypeparameter",3]],["bool",15]],[[["structfields",4]],["bool",15]],[[["functionsignature",3]],["bool",15]],[[["functionbody_",4]],["bool",15]],[[["function",3]],["bool",15]],[[["constant",3]],["bool",15]],[[["typename_",4]],["bool",15]],[[["tparamid",3]],["bool",15]],[[["tparam",3]],["bool",15]],[[["tvar",3]],["bool",15]],[[["type_",4]],["bool",15]],[[["lvalue_",4]],["bool",15]],[[["expdotted_",4]],["bool",15]],[[["builtinfunction_",4]],["bool",15]],[[["exp_",4]],["bool",15]],[[["sequenceitem_",4]],["bool",15]],[[],["tparamid",3]],[[],["tvar",3]],[[],["btreeset",3]],[[],["btreeset",3]],null,null,[[["builtintypename_",4]],[["option",4,["ordering"]],["ordering",4]]],[[["typename_",4]],[["option",4,["ordering"]],["ordering",4]]],[[["tparamid",3]],[["option",4,["ordering"]],["ordering",4]]],[[["tparam",3]],[["option",4,["ordering"]],["ordering",4]]],[[["tvar",3]],[["option",4,["ordering"]],["ordering",4]]],[[["str",15]],["option",4]],[[["option",4,["type"]],["str",15],["type",6]],["option",4]],null,null,null,null,[[["loc",3]],["type",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[["loc",3]],[["vec",3,["abilityset"]],["abilityset",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[["loc",3]],["type",6]],[[["loc",3]],["type",6]],[[["loc",3]],["type",6]],null,null,[[["type",6],["loc",3]],["type",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["symbol",3],["loc",3]]],[[["symbol",3],["loc",3]]],[[["symbol",3],["loc",3]]],[[["symbol",3],["loc",3]]],[[["symbol",3],["loc",3]]],[[["symbol",3],["loc",3]]],null,null,null,[[["numericaladdress",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[],["name",6]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["program",3]],[[],["definition",4]],[[],["addressdefinition",3]],[[],["script",3]],[[],["use",4]],[[],["usedecl",3]],[[],["attributevalue_",4]],[[],["attribute_",4]],[[],["modulename",3]],[[],["leadingnameaccess_",4]],[[],["moduleident_",3]],[[],["moduledefinition",3]],[[],["modulemember",4]],[[],["frienddecl",3]],[[],["field",3]],[[],["structname",3]],[[],["structtypeparameter",3]],[[],["structdefinition",3]],[[],["structfields",4]],[[],["functionname",3]],[[],["functionsignature",3]],[[],["visibility",4]],[[],["functionbody_",4]],[[],["function",3]],[[],["constantname",3]],[[],["constant",3]],[[],["specblock_",3]],[[],["specblocktarget_",4]],[[],["pragmaproperty_",3]],[[],["pragmavalue",4]],[[],["specapplypattern_",3]],[[],["specapplyfragment_",4]],[[],["specblockmember_",4]],[[],["specconditionkind_",4]],[[],["nameaccesschain_",4]],[[],["ability_",4]],[[],["type_",4]],[[],["var",3]],[[],["bind_",4]],[[],["value_",4]],[[],["unaryop_",4]],[[],["binop_",4]],[[],["quantkind_",4]],[[],["exp_",4]],[[],["sequenceitem_",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["modulename",3]],["ordering",4]],[[["leadingnameaccess_",4]],["ordering",4]],[[["moduleident_",3]],["ordering",4]],[[["field",3]],["ordering",4]],[[["structname",3]],["ordering",4]],[[["functionname",3]],["ordering",4]],[[["constantname",3]],["ordering",4]],[[["ability_",4]],["ordering",4]],[[["var",3]],["ordering",4]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["use",4]],["bool",15]],[[["usedecl",3]],["bool",15]],[[["attributevalue_",4]],["bool",15]],[[["attribute_",4]],["bool",15]],[[["modulename",3]],["bool",15]],[[["leadingnameaccess_",4]],["bool",15]],[[["moduleident_",3]],["bool",15]],[[["field",3]],["bool",15]],[[["structname",3]],["bool",15]],[[["structtypeparameter",3]],["bool",15]],[[["structdefinition",3]],["bool",15]],[[["structfields",4]],["bool",15]],[[["functionname",3]],["bool",15]],[[["functionsignature",3]],["bool",15]],[[["visibility",4]],["bool",15]],[[["functionbody_",4]],["bool",15]],[[["function",3]],["bool",15]],[[["constantname",3]],["bool",15]],[[["constant",3]],["bool",15]],[[["specblock_",3]],["bool",15]],[[["specblocktarget_",4]],["bool",15]],[[["pragmaproperty_",3]],["bool",15]],[[["pragmavalue",4]],["bool",15]],[[["specapplypattern_",3]],["bool",15]],[[["specapplyfragment_",4]],["bool",15]],[[["specblockmember_",4]],["bool",15]],[[["specconditionkind_",4]],["bool",15]],[[["nameaccesschain_",4]],["bool",15]],[[["ability_",4]],["bool",15]],[[["type_",4]],["bool",15]],[[["var",3]],["bool",15]],[[["bind_",4]],["bool",15]],[[["value_",4]],["bool",15]],[[["unaryop_",4]],["bool",15]],[[["binop_",4]],["bool",15]],[[["quantkind_",4]],["bool",15]],[[["exp_",4]],["bool",15]],[[["sequenceitem_",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[],["filehash",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["bool",15]],[[],["bool",15]],null,[[],["bool",15]],[[],["bool",15]],null,[[],["loc",3]],[[],["loc",3]],[[],["loc",3]],[[],["loc",3]],[[],[["option",4,["loc"]],["loc",3]]],[[],["loc",3]],[[],["loc",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["use",4]],["bool",15]],[[["usedecl",3]],["bool",15]],[[["attributevalue_",4]],["bool",15]],[[["attribute_",4]],["bool",15]],[[["modulename",3]],["bool",15]],[[["leadingnameaccess_",4]],["bool",15]],[[["moduleident_",3]],["bool",15]],[[["field",3]],["bool",15]],[[["structname",3]],["bool",15]],[[["structtypeparameter",3]],["bool",15]],[[["structdefinition",3]],["bool",15]],[[["structfields",4]],["bool",15]],[[["functionname",3]],["bool",15]],[[["functionsignature",3]],["bool",15]],[[["visibility",4]],["bool",15]],[[["functionbody_",4]],["bool",15]],[[["function",3]],["bool",15]],[[["constantname",3]],["bool",15]],[[["constant",3]],["bool",15]],[[["specblock_",3]],["bool",15]],[[["specblocktarget_",4]],["bool",15]],[[["pragmaproperty_",3]],["bool",15]],[[["pragmavalue",4]],["bool",15]],[[["specapplypattern_",3]],["bool",15]],[[["specapplyfragment_",4]],["bool",15]],[[["specblockmember_",4]],["bool",15]],[[["specconditionkind_",4]],["bool",15]],[[["nameaccesschain_",4]],["bool",15]],[[["type_",4]],["bool",15]],[[["var",3]],["bool",15]],[[["bind_",4]],["bool",15]],[[["value_",4]],["bool",15]],[[["exp_",4]],["bool",15]],[[["sequenceitem_",4]],["bool",15]],null,[[["modulename",3]],[["option",4,["ordering"]],["ordering",4]]],[[["leadingnameaccess_",4]],[["option",4,["ordering"]],["ordering",4]]],[[["moduleident_",3]],[["option",4,["ordering"]],["ordering",4]]],[[["field",3]],[["option",4,["ordering"]],["ordering",4]]],[[["structname",3]],[["option",4,["ordering"]],["ordering",4]]],[[["functionname",3]],[["option",4,["ordering"]],["ordering",4]]],[[["constantname",3]],[["option",4,["ordering"]],["ordering",4]]],[[["ability_",4]],[["option",4,["ordering"]],["ordering",4]]],[[["var",3]],[["option",4,["ordering"]],["ordering",4]]],[[],[["vec",3,["ability_"]],["ability_",4]]],[[],["ability_",4]],null,null,null,null,null,[[],["bool",15]],[[],["str",15]],[[],["str",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[["loc",3]],["type",6]],null,null,null,[[],["symbol",3]],[[],["symbol",3]],[[],["symbol",3]],[[],["symbol",3]],[[],["symbol",3]],[[],["symbol",3]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15],["filehash",3]],[["result",4,["diagnostics"]],["diagnostics",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["diagnostic",3]]],[[["diagnostics",3]]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["severity",4]],[["result",4,["diagnostics"]],["diagnostics",3]]],[[],["app",3]],[[],["numberformat",4]],[[],["numericaladdress",3]],[[],["compilationenv",3]],[[],["counter",3]],[[],["flags",3]],[[]],[[]],[[]],[[]],[[]],[[["numberformat",4]],["ordering",4]],[[],["ordering",4]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[["numberformat",4]],["bool",15]],[[],["bool",15]],[[["compilationenv",3]],["bool",15]],[[["counter",3]],["bool",15]],[[["flags",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["flags",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["intoiterator",8]],["string",3]],[[["str",15],["intoiterator",8]],["string",3]],[[]],[[]],[[]],[[]],[[]],[[["argmatches",3]]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["accountaddress",3]],[[],["bool",15]],[[],["bool",15]],null,[[],["loc",3]],[[],["btreemap",3]],[[["compilationenv",3]],["bool",15]],[[["counter",3]],["bool",15]],[[["flags",3]],["bool",15]],[[["numberformat",4]]],[[["flags",3],["symbol",3],["numericaladdress",3],["btreemap",3,["symbol","numericaladdress"]]]],[[],["u64",15]],[[["str",15]],["result",6]],[[["str",15]],[["string",3],["result",4,["numericaladdress","string"]],["numericaladdress",3]]],[[["str",15]],[["parseinterror",3],["result",4,["parseinterror"]]]],[[["str",15]],[["result",4,["parseinterror"]],["parseinterror",3]]],[[["str",15]],[["parseinterror",3],["result",4,["parseinterror"]]]],[[["numberformat",4]],[["option",4,["ordering"]],["ordering",4]]],[[],[["option",4,["ordering"]],["ordering",4]]],null,[[["bool",15]]],[[["digraphmap",6]],["vec",3]],[[],["bool",15]],[[],["diagnostics",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[],["symbol",3]],[[["vec",3]],[["btreemap",3,["string","numericaladdress"]],["result",6,["btreemap"]]]],[[]],[[]],[[]],[[]],[[]],null,null,[[["fnonce",8]]],[[["fnonce",8],["fnonce",8]]],[[["astwriter",3]]],[[["fnonce",8]]],[[]],[[]],[[["fnmut",8]]],[[["formatter",3]],["result",6]],[[]],[[["usize",15],["fnonce",8]]],[[]],[[["str",15],["fnmut",8]]],[[]],[[]],[[]],[[["fnmut",8]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["attributeposition",4]],[[],["knownattribute",4]],[[],["testingattribute",4]],[[]],[[]],[[]],[[["attributeposition",4]],["ordering",4]],[[["knownattribute",4]],["ordering",4]],[[["testingattribute",4]],["ordering",4]],[[["attributeposition",4]],["bool",15]],[[["knownattribute",4]],["bool",15]],[[["testingattribute",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["btreeset",3]],[[],["btreeset",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["str",15]],[[],["str",15]],[[["knownattribute",4]],["bool",15]],[[["attributeposition",4]],[["option",4,["ordering"]],["ordering",4]]],[[["knownattribute",4]],[["option",4,["ordering"]],["ordering",4]]],[[["testingattribute",4]],[["option",4,["ordering"]],["ordering",4]]],[[],["option",4]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["rememberinguniquemap",3]],[[]],[[],["bool",15]],[[],["bool",15]],[[["rememberinguniquemap",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[],["uniquemap",3]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["iter",3]],[[],["itermut",3]],[[],["bool",15]],[[],["usize",15]],[[],["rememberinguniquemap",3]],[[],[["result",4,["rememberinguniquemap"]],["rememberinguniquemap",3]]],[[],[["option",4,["result"]],["result",4,["rememberinguniquemap"]]]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["rememberinguniquemap",3]],[[],["btreeset",3]],[[],["option",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["uniquemap",3]],[[]],[[["uniquemap",3]],["ordering",4]],[[],["bool",15]],[[],["bool",15]],[[],["uniquemap",3]],[[["uniquemap",3]],["bool",15]],[[],["bool",15]],[[],["uniquemap",3]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["iter",3]],[[],["itermut",3]],[[]],[[],["usize",15]],[[],["uniquemap",3]],[[],[["result",4,["uniquemap"]],["uniquemap",3]]],[[],[["option",4,["result"]],["result",4,["uniquemap"]]]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["uniquemap",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["uniquemap",3]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["uniqueset",3]],[[]],[[]],[[["uniqueset",3]],["ordering",4]],[[],["bool",15]],[[],["bool",15]],[[["uniqueset",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["iter",3]],[[],["usize",15]],[[]],[[],["option",4]],[[],["option",4]],[[["uniqueset",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],[[["astwriter",3]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["program",3]],[[],["script",3]],[[],["moduledefinition",3]],[[],["functionbody_",4]],[[],["function",3]],[[],["constant",3]],[[],["lvalue_",4]],[[],["modulecall",3]],[[],["builtinfunction_",4]],[[],["unannotatedexp_",4]],[[],["exp",3]],[[],["sequenceitem_",4]],[[],["explistitem",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[],["str",15]],[[["functionbody_",4]],["bool",15]],[[["function",3]],["bool",15]],[[["constant",3]],["bool",15]],[[["lvalue_",4]],["bool",15]],[[["modulecall",3]],["bool",15]],[[["builtinfunction_",4]],["bool",15]],[[["unannotatedexp_",4]],["bool",15]],[[["exp",3]],["bool",15]],[[["sequenceitem_",4]],["bool",15]],[[["explistitem",4]],["bool",15]],[[["unannotatedexp",6],["type",6]],["exp",3]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[["functionbody_",4]],["bool",15]],[[["function",3]],["bool",15]],[[["constant",3]],["bool",15]],[[["lvalue_",4]],["bool",15]],[[["modulecall",3]],["bool",15]],[[["builtinfunction_",4]],["bool",15]],[[["unannotatedexp_",4]],["bool",15]],[[["exp",3]],["bool",15]],[[["sequenceitem_",4]],["bool",15]],[[["explistitem",4]],["bool",15]],null,null,null,null,[[["exp",3]],["explistitem",4]],[[["exp",3],["loc",3]],["explistitem",4]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["testplan",3]],[[],["moduletestplan",3]],[[],["testcase",3]],[[],["expectedfailure",4]],[[]],[[]],[[]],[[]],null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["moduletestplan",3],["vec",3,["annotatedcompiledunit"]],["vec",3,["moduletestplan"]],["filessourcetext",6],["annotatedcompiledunit",6]]],[[["numericaladdress",3],["btreemap",3,["testname","testcase"]],["testname",6],["str",15],["testcase",3]]],null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,[[["program",3],["compilationenv",3]],["program",3]],[[["program",3],["compilationenv",3]],[["option",4,["vec"]],["vec",3,["moduletestplan"]]]]],"p":[[6,"AttributeName"],[6,"ModuleIdent"],[6,"ModuleIdent"],[6,"Ability"],[6,"Name"],[6,"BasicBlocks"],[6,"Attributes"],[4,"FunctionBody_"],[4,"BlockInfo"],[4,"LoopEnd"],[3,"Function"],[3,"Program"],[3,"Script"],[3,"ModuleDefinition"],[3,"Constant"],[3,"LoopInfo"],[13,"LoopHead"],[13,"Defined"],[13,"Target"],[3,"SteppedCompiler"],[3,"Compiler"],[3,"FullyCompiledProgram"],[4,"CompiledUnitEnum"],[3,"NamedCompiledModule"],[3,"AnnotatedCompiledModule"],[3,"VarInfo"],[3,"SpecInfo"],[3,"FunctionInfo"],[3,"NamedCompiledScript"],[3,"AnnotatedCompiledScript"],[6,"AnnotatedCompiledUnit"],[6,"CompiledUnit"],[13,"Module"],[13,"Script"],[3,"Diagnostics"],[3,"Diagnostic"],[4,"Category"],[4,"NameResolution"],[4,"UnusedItem"],[4,"Severity"],[4,"TypeSafety"],[4,"Bug"],[8,"DiagnosticCode"],[4,"AbilitySafety"],[4,"ReferenceSafety"],[4,"Uncategorized"],[4,"Syntax"],[4,"Declarations"],[4,"MoveSafety"],[4,"BytecodeGeneration"],[4,"Attributes"],[4,"Tests"],[3,"DiagnosticInfo"],[3,"AbilitySet"],[4,"Exp_"],[4,"SpecConditionKind_"],[4,"Value_"],[4,"Address"],[4,"SpecBlockMember_"],[4,"Type_"],[4,"Attribute_"],[4,"SequenceItem_"],[4,"SpecBlockTarget_"],[4,"StructFields"],[4,"FunctionBody_"],[4,"Neighbor"],[4,"ExpDotted_"],[4,"PragmaValue"],[4,"AttributeName_"],[4,"AttributeValue_"],[4,"ModuleAccess_"],[4,"LValue_"],[3,"StructDefinition"],[3,"Function"],[3,"ModuleIdent_"],[3,"Program"],[3,"Script"],[3,"ModuleDefinition"],[3,"StructTypeParameter"],[3,"FunctionSignature"],[3,"SpecBlock_"],[3,"PragmaProperty_"],[3,"Friend"],[3,"Constant"],[3,"AbilitySetIter"],[3,"AbilitySetIntoIter"],[3,"SpecId"],[13,"Anonymous"],[13,"Named"],[13,"Unknown"],[13,"Known"],[13,"Value"],[13,"ModuleAccess"],[13,"Name"],[13,"Assigned"],[13,"Parameterized"],[13,"Exp"],[13,"Dot"],[13,"Value"],[13,"Move"],[13,"Copy"],[13,"Name"],[13,"Call"],[13,"Pack"],[13,"IfElse"],[13,"While"],[13,"Loop"],[13,"Block"],[13,"Lambda"],[13,"Quant"],[13,"Assign"],[13,"FieldMutate"],[13,"Mutate"],[13,"Return"],[13,"Abort"],[13,"Dereference"],[13,"UnaryExp"],[13,"BinopExp"],[13,"ExpList"],[13,"Borrow"],[13,"ExpDotted"],[13,"Index"],[13,"Cast"],[13,"Annotate"],[13,"Spec"],[13,"Unit"],[13,"Defined"],[13,"Var"],[13,"Unpack"],[13,"Name"],[13,"ModuleAccess"],[13,"Literal"],[13,"Ident"],[13,"Seq"],[13,"Declare"],[13,"Bind"],[13,"Condition"],[13,"Function"],[13,"Let"],[13,"Apply"],[13,"Include"],[13,"Variable"],[13,"Update"],[13,"Pragma"],[13,"Member"],[13,"Schema"],[13,"Invariant"],[13,"InvariantUpdate"],[13,"Axiom"],[13,"Defined"],[13,"Native"],[13,"Multiple"],[13,"Apply"],[13,"Ref"],[13,"Fun"],[13,"Address"],[13,"InferredNum"],[13,"U8"],[13,"U64"],[13,"U128"],[13,"Bool"],[13,"Bytearray"],[3,"Label"],[4,"Command_"],[4,"BaseType_"],[4,"SingleType_"],[4,"UnannotatedExp_"],[4,"BuiltinFunction_"],[4,"TypeName_"],[4,"Statement_"],[4,"StructFields"],[4,"FunctionBody_"],[4,"UnitCase"],[4,"LValue_"],[4,"Type_"],[4,"ExpListItem"],[3,"StructDefinition"],[3,"Function"],[3,"ModuleCall"],[3,"Program"],[3,"Script"],[3,"ModuleDefinition"],[3,"FunctionSignature"],[3,"Exp"],[3,"Constant"],[13,"Param"],[13,"Apply"],[13,"MoveTo"],[13,"MoveFrom"],[13,"BorrowGlobal"],[13,"Exists"],[13,"Assign"],[13,"Mutate"],[13,"Abort"],[13,"JumpIf"],[13,"Return"],[13,"IgnoreAndPop"],[13,"Jump"],[13,"Single"],[13,"Splat"],[13,"Defined"],[13,"Var"],[13,"Unpack"],[13,"Base"],[13,"Ref"],[13,"Command"],[13,"While"],[13,"Loop"],[13,"IfElse"],[13,"Defined"],[13,"Native"],[13,"Builtin"],[13,"ModuleType"],[13,"Single"],[13,"Multiple"],[13,"Value"],[13,"Constant"],[13,"ModuleCall"],[13,"Builtin"],[13,"Freeze"],[13,"Dereference"],[13,"UnaryExp"],[13,"BinopExp"],[13,"Pack"],[13,"ExpList"],[13,"Borrow"],[13,"BorrowLocal"],[13,"Cast"],[13,"Spec"],[13,"Unit"],[13,"Move"],[13,"Copy"],[3,"TParamID"],[4,"BuiltinTypeName_"],[4,"BuiltinFunction_"],[4,"Exp_"],[4,"Type_"],[4,"SequenceItem_"],[4,"TypeName_"],[4,"StructFields"],[4,"FunctionBody_"],[4,"ExpDotted_"],[4,"LValue_"],[3,"StructDefinition"],[3,"TParam"],[3,"Function"],[3,"Program"],[3,"Script"],[3,"ModuleDefinition"],[3,"StructTypeParameter"],[3,"FunctionSignature"],[3,"Constant"],[3,"TVar"],[13,"MoveTo"],[13,"MoveFrom"],[13,"BorrowGlobal"],[13,"Exists"],[13,"Freeze"],[13,"Assert"],[13,"Exp"],[13,"Dot"],[13,"Value"],[13,"Move"],[13,"Copy"],[13,"Use"],[13,"Constant"],[13,"ModuleCall"],[13,"Builtin"],[13,"IfElse"],[13,"While"],[13,"Loop"],[13,"Block"],[13,"Assign"],[13,"FieldMutate"],[13,"Mutate"],[13,"Return"],[13,"Abort"],[13,"Dereference"],[13,"UnaryExp"],[13,"BinopExp"],[13,"Pack"],[13,"ExpList"],[13,"DerefBorrow"],[13,"Borrow"],[13,"Cast"],[13,"Annotate"],[13,"Spec"],[13,"Unit"],[13,"Defined"],[13,"Var"],[13,"Unpack"],[13,"Seq"],[13,"Declare"],[13,"Bind"],[13,"Defined"],[13,"Native"],[13,"Multiple"],[13,"Builtin"],[13,"ModuleType"],[13,"Ref"],[13,"Param"],[13,"Apply"],[13,"Var"],[3,"ModuleName"],[3,"Field"],[3,"StructName"],[3,"FunctionName"],[3,"ConstantName"],[3,"Var"],[4,"BinOp_"],[4,"Exp_"],[4,"SpecConditionKind_"],[4,"Definition"],[4,"Value_"],[4,"LeadingNameAccess_"],[4,"SpecBlockMember_"],[4,"Type_"],[4,"Attribute_"],[4,"SequenceItem_"],[4,"Ability_"],[4,"QuantKind_"],[4,"SpecBlockTarget_"],[4,"ModuleMember"],[4,"StructFields"],[4,"FunctionBody_"],[4,"Visibility"],[4,"PragmaValue"],[4,"Use"],[4,"AttributeValue_"],[4,"UnaryOp_"],[4,"SpecApplyFragment_"],[4,"NameAccessChain_"],[4,"Bind_"],[3,"StructDefinition"],[3,"Function"],[3,"AddressDefinition"],[3,"ModuleIdent_"],[3,"ModuleDefinition"],[3,"Program"],[3,"Script"],[3,"UseDecl"],[3,"FriendDecl"],[3,"StructTypeParameter"],[3,"FunctionSignature"],[3,"Constant"],[3,"SpecBlock_"],[3,"PragmaProperty_"],[3,"SpecApplyPattern_"],[13,"Value"],[13,"ModuleAccess"],[13,"Name"],[13,"Assigned"],[13,"Parameterized"],[13,"Var"],[13,"Unpack"],[13,"Module"],[13,"Address"],[13,"Script"],[13,"Value"],[13,"Move"],[13,"Copy"],[13,"Name"],[13,"Call"],[13,"Pack"],[13,"IfElse"],[13,"While"],[13,"Loop"],[13,"Block"],[13,"Lambda"],[13,"Quant"],[13,"ExpList"],[13,"Assign"],[13,"Return"],[13,"Abort"],[13,"Dereference"],[13,"UnaryExp"],[13,"BinopExp"],[13,"Borrow"],[13,"Dot"],[13,"Index"],[13,"Cast"],[13,"Annotate"],[13,"Spec"],[13,"Defined"],[13,"AnonymousAddress"],[13,"Name"],[13,"Function"],[13,"Struct"],[13,"Use"],[13,"Friend"],[13,"Constant"],[13,"Spec"],[13,"One"],[13,"Two"],[13,"Three"],[13,"Literal"],[13,"Ident"],[13,"Seq"],[13,"Declare"],[13,"Bind"],[13,"NamePart"],[13,"Condition"],[13,"Function"],[13,"Let"],[13,"Apply"],[13,"Include"],[13,"Variable"],[13,"Update"],[13,"Pragma"],[13,"Member"],[13,"Schema"],[13,"Invariant"],[13,"InvariantUpdate"],[13,"Axiom"],[13,"Defined"],[13,"Native"],[13,"Apply"],[13,"Ref"],[13,"Fun"],[13,"Multiple"],[13,"Module"],[13,"Members"],[13,"Address"],[13,"Num"],[13,"Bool"],[13,"HexString"],[13,"ByteString"],[13,"Public"],[13,"Script"],[13,"Friend"],[3,"NumericalAddress"],[4,"NumberFormat"],[8,"TName"],[3,"CompilationEnv"],[3,"Counter"],[3,"Flags"],[8,"Identifier"],[3,"AstWriter"],[8,"AstDebug"],[4,"AttributePosition"],[4,"TestingAttribute"],[4,"KnownAttribute"],[13,"Testing"],[3,"RememberingUniqueMap"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"UniqueMap"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"UniqueSet"],[3,"IntoIter"],[3,"Iter"],[4,"UnannotatedExp_"],[4,"BuiltinFunction_"],[4,"SequenceItem_"],[4,"LValue_"],[4,"FunctionBody_"],[4,"ExpListItem"],[3,"Function"],[3,"ModuleCall"],[3,"Program"],[3,"Script"],[3,"ModuleDefinition"],[3,"Exp"],[3,"Constant"],[13,"MoveTo"],[13,"MoveFrom"],[13,"BorrowGlobal"],[13,"Exists"],[13,"Freeze"],[13,"Assert"],[13,"Single"],[13,"Splat"],[13,"Defined"],[13,"Var"],[13,"Unpack"],[13,"BorrowUnpack"],[13,"Seq"],[13,"Declare"],[13,"Bind"],[13,"Value"],[13,"Use"],[13,"Constant"],[13,"ModuleCall"],[13,"Builtin"],[13,"IfElse"],[13,"While"],[13,"Block"],[13,"Assign"],[13,"Mutate"],[13,"Return"],[13,"Abort"],[13,"Dereference"],[13,"UnaryExp"],[13,"BinopExp"],[13,"Pack"],[13,"ExpList"],[13,"Borrow"],[13,"TempBorrow"],[13,"BorrowLocal"],[13,"Cast"],[13,"Annotate"],[13,"Spec"],[13,"Loop"],[13,"Move"],[13,"Copy"],[13,"Unit"],[4,"ExpectedFailure"],[3,"TestCase"],[3,"TestPlan"],[3,"ModuleTestPlan"],[13,"ExpectedWithCode"]]},\
"move_lang_functional_tests":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"move_lang_transactional_tests":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"move_model":{"doc":"","t":[5,0,5,0,14,14,0,0,11,0,0,0,5,0,5,5,5,5,0,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,4,13,13,13,13,13,13,13,13,13,13,13,13,3,4,3,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,6,13,13,13,3,3,13,13,13,13,13,13,4,3,13,13,6,4,3,13,3,13,4,13,13,13,13,13,13,13,13,13,13,13,13,3,3,4,3,3,13,13,13,13,13,6,13,13,13,13,13,13,13,13,13,4,13,13,13,13,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,12,12,12,12,12,12,12,12,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,12,12,11,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,3,8,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,18,3,3,13,18,3,3,3,3,3,13,3,3,3,4,17,8,3,3,3,3,3,3,3,6,3,3,3,3,13,13,13,18,3,13,13,13,3,3,18,6,17,17,18,3,13,3,3,3,3,3,3,18,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,17,17,3,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,5,5,3,3,12,11,11,12,11,11,11,11,12,11,12,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,17,13,13,13,13,13,13,17,13,13,4,13,13,13,13,13,13,3,13,4,3,4,13,3,13,13,3,4,13,13,13,13,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["addr_to_big_uint","ast","big_uint_to_addr","code_writer","emit","emitln","exp_generator","exp_rewriter","fmt","model","native","options","parse_addresses_from_options","pragmas","run_bytecode_model_builder","run_model_builder","run_model_builder_with_options","run_model_builder_with_options_and_compilation_flags","spec_translator","symbol","ty","AbortCode","AbortFlag","AbortsIf","AbortsWith","Add","Address","And","Assert","Assume","Axiom","BitAnd","BitOr","Block","Bool","BoxValue","ByteArray","Call","CanModify","Choose","ChooseMin","ConcatVec","Condition","ConditionKind","ContainsVec","Decreases","Div","Emits","EmptyEventStore","EmptyVec","Ensures","Eq","EventStoreIncludedIn","EventStoreIncludes","Exists","Exists","Exp","ExpData","ExpDisplay","ExtendEventStore","Forall","Function","Function","FunctionCode","FunctionInvariant","Ge","Global","GlobalInvariant","GlobalInvariant","GlobalInvariantUpdate","Gt","Identical","IfElse","Iff","Implies","InRangeRange","InRangeVec","Index","IndexOfVec","Invalid","Invoke","Lambda","Le","Len","LetPost","LetPre","LocalVar","LocalVarDecl","LoopInvariant","Lt","MaxU128","MaxU64","MaxU8","MemoryLabel","Mod","Modifies","Module","ModuleName","ModuleNameDisplay","Mul","Neq","NoOp","Not","Number","Old","Operation","OperationDisplay","Or","Pack","PropertyBag","PropertyValue","QualifiedSymbol","QualifiedSymbol","QualifiedSymbolDisplay","Quant","QuantKind","Range","RangeVec","Requires","ResourceDomain","Result","Schema","SchemaInvariant","Select","Shl","Shr","SingleVec","Slice","Spec","SpecBlockInfo","SpecBlockTarget","SpecFunDecl","SpecVarDecl","Struct","StructInvariant","Sub","SucceedsIf","Symbol","TempIndex","Temporary","Trace","Tuple","TypeDomain","TypeValue","UnboxValue","Update","UpdateField","UpdateVec","Value","Value","Value","WellFormed","Xor","additional_exps","addr","all_exps","allowed_on_fun_decl","allowed_on_fun_impl","allowed_on_module","allowed_on_struct","allows_old","any","any","any_kind","as_ref","binding","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_args","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cond","conditions","context_params","declaring_module","default","deref","display","display","display","display","display_full","display_full","display_simple","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exp","extract_ghost_mem_access","field_usage","filter","filter_kind","filter_kind_axiom","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","free_vars","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_address_bytes_and_name","from_str","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","has_conditions","hash","hash","hash","hash","hash","hash","hash","hash","id","id","init","instantiate_node","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_exp","is_choice","is_move_fun","is_native","is_pure","is_script","kind","kind","loc","loc","loc","loc","loc","loc","mem_usage","member_locs","module_name","module_usage","name","name","name","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","node_id","node_ids","on_impl","params","partial_cmp","partial_cmp","partial_cmp","properties","properties","properties","ptr_eq","result_type","rewrite","rewrite_exp_and_node_id","rewrite_node_id","struct_usage","symbol","target","temporaries","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_params","type_params","uninterpreted","used_memory","used_memory","uses_memory","uses_memory","vector_usage","visit","visit_pre_post","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","1","1","1","1","1","1","1","2","2","2","2","2","2","3","3","4","5","0","0","0","0","0","0","0","1","1","1","1","2","2","2","0","0","0","0","0","0","0","1","1","1","1","2","2","0","0","0","0","CodeWriter","CodeWriterLabel","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","create_label","emit","emit_line","extract_result","fmt","from","from","get_output_byte_index","get_source_location","indent","insert_at_label","into","into","new","process_result","set_location","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unindent","vzip","vzip","with_indent","ExpGenerator","add_local","function_env","get_current_loc","get_local_type","get_memory_of_node","global_env","mk_address_const","mk_and","mk_bool_call","mk_bool_const","mk_builtin_num_const","mk_call","mk_call_with_inst","mk_decl","mk_eq","mk_field_select","mk_identical","mk_iff","mk_implies","mk_inst_mem_quant_opt","mk_ite","mk_join_bool","mk_join_opt_bool","mk_local","mk_mem_quant_opt","mk_not","mk_or","mk_symbol","mk_temporary","mk_type_domain","mk_vector_quant_opt","new_node","new_temp","set_loc","set_loc_from_node","ExpRewriter","ExpRewriterFunctions","LocalVar","RewriteTarget","Temporary","borrow","borrow","borrow_mut","borrow_mut","from","from","internal_rewrite_decls","internal_rewrite_exp","internal_rewrite_id","internal_rewrite_quant_decls","internal_rewrite_vec","into","into","new","rewrite_block","rewrite_call","rewrite_enter_scope","rewrite_exit_scope","rewrite_exp","rewrite_exp_descent","rewrite_if_else","rewrite_invoke","rewrite_lambda","rewrite_local_var","rewrite_local_var","rewrite_node_id","rewrite_node_id","rewrite_quant","rewrite_spec_var","rewrite_temporary","rewrite_temporary","rewrite_value","rewrite_vec","set_type_args","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","0","0","0","1","1","ALL","AbilityConstraint","AbilitySet","All","EMPTY","EnvDisplay","ExpInfo","FieldData","FieldEnv","FieldId","Friend","FunId","FunctionData","FunctionEnv","FunctionVisibility","GHOST_MEMORY_PREFIX","GetNameString","GlobalEnv","GlobalId","Loc","LocDisplay","ModuleData","ModuleEnv","ModuleId","MoveIrLoc","NamedConstantData","NamedConstantEnv","NamedConstantId","NodeId","None","Only","OnlyModule","PRIMITIVES","Parameter","Private","Public","Public","QualifiedId","QualifiedInstId","REFERENCES","RawIndex","SCRIPT_BYTECODE_FUN_NAME","SCRIPT_MODULE_NAME","SIGNER","SchemaId","Script","SpecFunId","SpecVarId","StructData","StructEnv","StructId","TypeParameter","VECTOR","VerificationScope","add","add_diag","add_documentation","add_global_invariant","add_source","arbitrary_with","arbitrary_with","are_invariants_disabled_at_call","are_invariants_disabled_in_body","as_usize","as_usize","as_usize","as_usize","at_end","at_start","bitor","bitor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear_diag","clear_extension","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","create_function_data","create_move_struct_data","create_named_constant_data","default","default","default","default","deserialize","diag","diag_count","diag_with_labels","diag_with_notes","disassemble","display","display","display_line_only","enclosing","env","env","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","error_count","error_with_notes","file_id","file_id_to_idx","file_idx_to_id","find_field","find_function","find_function_by_language_storage_id_name","find_module","find_module_by_language_storage_id","find_module_by_name","find_named_constant","find_spec_var","find_struct","find_struct_by_identifier","find_struct_by_tag","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_u8","function_data","function_idx_to_id","get_abilities","get_acquires_global_resources","get_address_identifier","get_all_structs_with_conditions","get_bytecode","get_bytecode_loc","get_bytecode_modules","get_called_functions","get_calling_functions","get_constant","get_constant_value","get_declared_function_count","get_declared_struct_count","get_def_idx","get_dependencies","get_doc","get_doc","get_doc","get_doc","get_doc","get_doc","get_enclosing_function","get_enclosing_module","get_enclosing_struct","get_exclusive_verify_function_name","get_extension","get_field","get_field_by_offset","get_field_count","get_fields","get_file","get_file_and_location","get_file_count","get_file_id","get_friend_env","get_friend_modules","get_friend_name","get_friends","get_full_name_str","get_full_name_str","get_full_name_str","get_func_env_from_pragma","get_function","get_function","get_function_count","get_function_def_idx","get_function_qid","get_functions","get_ghost_memory_spec_var","get_global_invariant","get_global_invariants_by_module","get_global_invariants_for_memory","get_global_invariants_for_module","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_id","get_id","get_id","get_id","get_id","get_ident_pragma","get_identifier","get_identifier","get_identifier","get_identifier","get_loc","get_loc","get_loc","get_loc","get_local_count","get_local_name","get_local_type","get_location","get_modify_targets","get_module","get_module_count","get_modules","get_modules_with_specs_count","get_move_bytecode_instruction_count","get_name","get_name","get_name","get_name","get_name","get_name_for_display","get_name_for_display","get_name_for_display","get_name_string","get_named_constant","get_named_constant_count","get_named_constants","get_named_type_parameters","get_named_type_parameters","get_node_instantiation","get_node_instantiation_opt","get_node_loc","get_node_type","get_node_type_opt","get_num_pragma","get_num_property","get_offset","get_parameter_count","get_parameter_types","get_parameters","get_properties","get_qualified_id","get_qualified_id","get_return_count","get_return_type","get_return_types","get_simple_name_string","get_source","get_source_file_names","get_source_path","get_spec","get_spec","get_spec","get_spec_block_infos","get_spec_fun","get_spec_funs","get_spec_funs_of_name","get_spec_loc","get_spec_var","get_spec_vars","get_struct","get_struct","get_struct_by_def_idx","get_struct_count","get_struct_id","get_struct_qid","get_struct_tag","get_struct_type","get_structs","get_target_modules","get_transitive_closure_of_called_functions","get_transitive_friend","get_type","get_type","get_type_actuals","get_type_display_ctxt","get_type_parameter_count","get_type_parameters","get_type_parameters","get_used_function","get_used_modules","get_using_modules","get_value","get_verified_module","ghost_memory_name","globalize_signature","globalize_signatures","has_ability","has_conditions","has_copy","has_diag","has_drop","has_errors","has_extension","has_friend","has_key","has_memory","has_specs","has_store","has_unknown_callers","has_warnings","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","id","id","id","index_to_node_id","inst","instantiate","instantiate","instantiate_ref","internal_loc","intersect","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_function","into_functions","into_iter","into_named_constant","into_named_constants","into_struct","into_structs","into_u8","is_exclusive","is_explicitly_not_verified","is_exposed","is_friend","is_ghost_memory","is_intrinsic","is_mutating","is_native","is_native","is_native_or_intrinsic","is_native_or_intrinsic","is_num_pragma_set","is_opaque","is_parameter","is_phantom_parameter","is_pragma_false","is_pragma_true","is_pragma_true","is_property_true","is_script","is_script_module","is_spec_fun_used","is_subset","is_target","is_temporary","is_transitive_dependency","is_vector","is_wellknown_event_handle_type","loc","matches_name","matches_name","module","module_data","module_env","module_env","module_env","module_id","module_id","module_spec","name","named_constants","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","new","new","new","new","new","new","new","new_global_id","new_node","new_node_id","next_free_node_number","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","polymorphic_abilities","qualified","qualified_inst","remove","report_diag","report_diag_with_filter","self_address","serialize","set_extension","set_node_instantiation","should_verify","source_map","span","spec","spec_block_infos","spec_fun_is_used","spec_funs","spec_vars","struct_data","struct_env","struct_idx_to_id","stub","stub","symbol","symbol","symbol","symbol","symbol","symbol_pool","symbol_pool","symbol_pool","symbol_pool","to_loc","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_qualified_id","to_string","to_string","to_string","to_type","to_usize","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get_function_id","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","unknown_loc","unknown_move_ir_loc","update_extension","update_node_instantiation","update_node_type","used_spec_funs","val","visibility","visibility_str","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","EVENT_EMIT_EVENT","VECTOR_BORROW_MUT","ModelBuilderOptions","borrow","borrow_mut","clone","clone_into","default","deserialize","fmt","from","ignore_pragma_opaque_internal_only","ignore_pragma_opaque_when_possible","into","serialize","to_owned","try_from","try_into","type_id","vzip","ABORTS_IF_IS_PARTIAL_PRAGMA","ABORTS_IF_IS_STRICT_PRAGMA","ADDITION_OVERFLOW_UNCHECKED_PRAGMA","ALWAYS_ABORTS_TEST_PRAGMA","ASSUME_NO_ABORT_FROM_HERE_PRAGMA","CONDITION_ABORT_ASSERT_PROP","CONDITION_ABORT_ASSUME_PROP","CONDITION_ABSTRACT_PROP","CONDITION_CHECK_ABORT_CODES_PROP","CONDITION_CONCRETE_PROP","CONDITION_DEACTIVATED_PROP","CONDITION_EXPORT_PROP","CONDITION_GLOBAL_PROP","CONDITION_INJECTED_PROP","CONDITION_ISOLATED_PROP","CONDITION_SUSPENDABLE_PROP","DELEGATE_INVARIANTS_TO_CALLER_PRAGMA","DISABLE_INVARIANTS_IN_BODY_PRAGMA","EMITS_IS_PARTIAL_PRAGMA","EMITS_IS_STRICT_PRAGMA","EXPORT_ENSURES_PRAGMA","FRIEND_PRAGMA","INTRINSIC_PRAGMA","OPAQUE_PRAGMA","REQUIRES_IF_ABORTS_PRAGMA","SEED_PRAGMA","TIMEOUT_PRAGMA","VERIFY_DURATION_ESTIMATE_PRAGMA","VERIFY_PRAGMA","is_pragma_valid_for_block","is_property_valid_for_condition","SpecTranslator","TranslatedSpec","aborts","aborts_code_condition","aborts_condition","aborts_with","borrow","borrow","borrow_mut","borrow_mut","debug_traces","default","emits","emits_completeness_condition","emits_conditions","from","from","has_aborts_code_specs","into","into","invariants","lets","modifies","post","pre","pre_conditions","rewrite_call","rewrite_enter_scope","rewrite_exit_scope","rewrite_exp","rewrite_local_var","rewrite_node_id","rewrite_temporary","saved_memory","saved_params","saved_spec_vars","translate_fun_spec","translate_inline_property","translate_invariants","translate_invariants_by_id","try_from","try_from","try_into","try_into","type_id","type_id","updates","vzip","vzip","Symbol","SymbolDisplay","SymbolPool","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","default","display","eq","equivalent","fmt","fmt","fmt","from","from","from","get_hash","hash","into","into","into","make","ne","new","partial_cmp","string","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Address","Allow","ArityMismatch","BOOL_TYPE","Bool","CyclicSubstitution","Disallow","Error","EventStore","Fun","NUM_TYPE","Num","Primitive","PrimitiveType","Range","Reference","ResourceDomain","Shallow","Signer","Struct","Substitution","Tuple","Type","TypeDisplay","TypeDisplayContext","TypeDomain","TypeInstantiationDerivation","TypeMismatch","TypeParameter","TypeUnificationAdapter","TypeUnificationError","U128","U64","U8","Var","Variance","Vector","WithEnv","WithoutEnv","bind","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","contains","default","display","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_type_tag","get_hash","get_hash","get_struct","get_substitution","get_vars","hash","hash","instantiate","instantiate_slice","instantiate_vec","into","into","into","into","into","into","into","into","into","into_normalized_type","into_normalized_type","into_struct_tag","into_struct_type","into_type_tag","is_address","is_immutable_reference","is_incomplete","is_mutable_reference","is_number","is_open","is_reference","is_signer","is_signer_or_address","is_spec","is_spec","is_struct","is_struct_or_vector_of_struct","is_type_parameter","is_vector","message","module_usage","ne","new","new_pair","new_prim","new_vec","partial_cmp","partial_cmp","progressive_instantiation","replace_struct_instantiation","require_struct","skip_reference","specialize","symbol_pool","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_param_map_to_inst","unify","unify","visit","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","1","1","1","1","2","2","env","reverse_struct_table","symbol_pool","type_param_names","0","0","0","1","1","1","2"],"q":["move_model","","","","","","","","","","","","","","","","","","","","","move_model::astmove_model::ast::ConditionKind","","","","","move_model::ast::ExpData","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_model::ast::Operation","","","","","","","","","","","","","","move_model::ast::PropertyValue","","","move_model::ast::SpecBlockTarget","","","","","","","","","","move_model::ast::Value","","","","move_model::code_writer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_model::exp_generator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_model::exp_rewriter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_model::exp_rewriter::RewriteTarget","","move_model::modelmove_model::model::VerificationScope","","move_model::native","","move_model::options","","","","","","","","","","","","","","","","","","move_model::pragmas","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_model::spec_translator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_model::symbol","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_model::tymove_model::ty::Type","","","","","","","","","","","","","","","","move_model::ty::TypeDisplayContext","","","","move_model::ty::TypeUnificationError","","","","","",""],"d":["Converts an address identifier to a number representing …","Contains AST definitions for the specification language …","Converts a biguint into an account address","A helper for generating structured code.","Macro to emit a simple or formatted string.","Macro to emit a simple or formatted string followed by a …","","","","Provides a model for a set of Move modules (and scripts, …","Contains constants for well-known names of native functions","","","Provides pragmas and properties of the specification …","Build a <code>GlobalEnv</code> from a collection of <code>CompiledModule</code>’s. …","Build the move model with default compilation flags and …","Build the move model with default compilation flags and …","Build the move model with custom compilation flags and …","This module supports translations of specifications as …","Contains definitions of symbols – internalized strings …","Contains types and related functions.","","","","","","","","","","","","","Represents a block which contains a set of variable …","","","","Represents a call to an operation. The <code>Operation</code> enum …","","","","","","Conditions","","","","","","","","","","","","","An internalized expression. We do use a wrapper around the …","The type of expression data.","Helper type for expression display.","","","","","","","","","Describes a global invariant.","","","","","Represents a conditional.","","","","","","","Represents an invalid expression. This is used as a stub …","Represents an invocation of a function value, as a lambda.","Represents a lambda.","","","","","Represents a reference to a local variable introduced by a …","","","","","","","A label used for referring to a specific memory in Global …","","","","Names","A helper to support module names in formatting.","","","","","","","","Helper type for operation display.","","","Specifications","The value of a property.","","","A helper to support qualified symbols in formatting.","Represents a quantified formula over multiple variables …","","","","","","","","","","","","","","Specification and properties associated with a language …","Information about a specification block in the source. …","Describes the target of a spec block.","","Declarations","","","","","","Expressions","Represents a reference to a temporary used in bytecode.","","","","","","","","","","","Represents a value.","","","","","Return all expressions in the condition, the primary one …","Returns true if this condition is allowed on a function …","Returns true if this condition is allowed in a function …","Returns true if this condition is allowed on a module.","Returns true if this condition is allowed on a struct.","Returns true of this condition allows the <code>old(..)</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a display of an expression which can be used in …","Creates a display of an operation which can be used in …","Creates a value implementing the Display trait which shows …","Creates a value implementing the Display trait which shows …","Creates a value implementing the Display trait which shows …","Creates a value implementing the Display trait which shows …","Creates a value implementing the Display trait which shows …","","","","","","","","","","","","","","","","","","","","","Extract access to ghost memory from expression. Returns a …","Collect field-related operations","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the free local variables, inclusive their types, …","","","","","","","","","","","","","","","","Takes an expression and returns expression data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A function which can be used for <code>Exp::rewrite_node_id</code> to …","","","","","","","","","","","","","","","","","","","","","","Version of <code>into</code> which does not require type annotations.","Returns true of this is a choice like Some or Min.","","","Checks whether the expression is pure, i.e. does not …","Determine whether this is a script. The move-lang …","","","","","","","The location of the entire spec block.","","","The locations of all members of the spec block.","","Returns the set of module ids used by this expression.","","","","","","","","","","","","","","","","","","","","","","","","","","","Rewrites this expression and sub-expression based on the …","Rewrites the expression and for unchanged sub-expressions, …","Rewrites the node ids in the expression. This is used to …","Collect struct-related operations","","The target of the spec block.","Returns the temporaries used in this expression. Result is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the used memory of this expression.","","Determines whether this expression depends on global memory","Determines whether this operation depends on global memory","Collect vector-related operations","Visits expression, calling visitor on each sub-expression, …","Visits expression, calling visitor on each sub-expression. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ranges","","","Triggers","","Optional <code>where</code> clause","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A helper to emit code. Supports indentation and maintains …","A label which can be created at the code writers current …","","","","","","","Creates a label at which code can be inserted later.","Emit a string. The string will be broken down into lines …","Emits a string and then terminates the line.","Extracts the output as a string. Leaves the writers data …","","","","Given line/column location, determine ByteIndex of that …","Given a byte index in the written output, return the best …","Indents any subsequently written output. The current line …","Inserts code at the previously created label.","","","Creates new code writer, with the given default location.","Calls a function to process the code written so far. This …","Sets the current location. This location will be …","","","","","","","","Undo previously done indentation.","","","Emit some code with indentation","A trait that defines a generator for <code>Exp</code>.","Add a local variable with given type, return the local …","Get the functional environment","Get the current location","Get the type of a local given at <code>temp</code> index","Get’s the memory associated with a Call(Global,..) or …","Get the global environment","Make an address constant.","Make an and expression.","Makes a Call expression with boolean result type.","Make a boolean constant expression.","Make a numerical expression for some of the builtin …","Makes a Call expression.","Makes a Call expression with type instantiation.","Makes a local variable declaration.","Make an equality expression.","Makes an expression which selects a field from a struct.","Make an identical equality expression. This is stronger …","Make an iff expression.","Make an implies expression.","Creates a quantifier over the content of instantiated …","Makes an if-then-else expression.","Join an iterator of boolean expressions with a boolean …","Join two boolean optional expression with binary operator.","Makes an expression for a named local.","Creates a quantifier over the content of memory. The …","Make a boolean not expression.","Make an or expression.","Makes a symbol from a string.","Makes an expression for a temporary.","Makes a type domain expression.","Creates a quantifier over the content of a vector. The …","Creates a new expression node id, using current default …","Allocates a new temporary.","Set the current location","Sets the default location from a node id.","Rewriter for expressions, allowing to substitute locals by …","A general trait for expression rewriting.","","A target for expression rewrites of either an <code>Exp::LocalVar</code>…","","","","","","","","","","","","","","","Creates a new rewriter with the given replacer map.","","","","","Top-level entry for rewriting an expression. Can be …","","","","","","","","","","","","","","","Adds a type argument list to this rewriter. Generic type …","","","","","","","","","","","","","","","","Ability set containing all abilities","","A set of <code>Ability</code>s","Verify all functions.","The empty ability set","Struct a helper type for implementing fmt::Display …","Expression Environment","Field Environment","","Identifier for a field of a structure, relative to struct.","Accessible by this module as well as modules declared in …","Identifier for a Move function, relative to module.","","","<code>Visibility</code> restricts the accessibility of the associated …","A prefix used for structs which are backing specification (…","","Global Environment","A global id. Instances of this type represent unique …","Locations","Formatting","Module Environment","Represents a module environment.","Identifier for a module.","Alias for the Loc variant of MoveIR. This uses a …","Named Constant Environment","","Identifier for a named constant, relative to module.","Identifier for a node in the AST, relative to a module. …","Verify no functions","Verify only one function.","Verify only functions from the given module.","Abilities for <code>Bool</code>, <code>U8</code>, <code>U64</code>, <code>U128</code>, and <code>Address</code>","Represents a parameter.","Accessible within its defining module only.","Verify only public functions.","Accessible by any module or script outside of its …","Some identifier qualified by a module.","Some identifier qualified by a module and a type …","Abilities for <code>Reference</code> and <code>MutableReference</code>","Identifiers","Names used in the bytecode/AST to represent the main …","Constants","Abilities for <code>Signer</code>","Identifier for a schema.","Accessible by any script or other <code>Script</code> functions from …","Identifier for a specification function, relative to …","Identifier for a specification variable, relative to …","Struct Environment","","Identifier for a structure/resource, relative to module.","Function Environment","Abilities for <code>Vector</code>, note they are predicated on the type …","Verification Scope","Adds a new module to the environment. StructData and …","Adds diagnostic to the environment.","Adds documentation for a file.","Adds a global invariant to this environment.","Adds a source to this environment, returning a FileId for …","","","Returns true if invariants are declared disabled in body …","Returns true if invariants are declared disabled in body …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clear all accumulated diagnosis.","Clear extension data from the environment (return the data …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates data for a function, adding any information not …","Creates data for a struct declared in Move. Currently all …","Creates data for a named constant.","","","","","","Adds a diagnostic of given severity to this environment.","Returns the number of diagnostics.","Adds a diagnostic of given severity to this environment, …","Adds a diagnostic of given severity to this environment, …","Disassemble the module bytecode","","Creates a display container for the given value. There …","","Creates a location which encloses all the locations in the …","","Reference to the outer env.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds an error to this environment, without notes.","Returns the number of errors.","Adds an error to this environment, with notes.","","Maps a FileId to an index which can be mapped back to a …","Maps a an index which was obtained by <code>file_id_to_idx</code> back …","Find a field by its name.","Gets a FunctionEnv in this module by name.","Find a function by its bytecode format name and ID","Finds a module by name and returns an environment for it.","Find a module by its bytecode format ID","Finds a module by simple name and returns an environment …","Gets a <code>NamedConstantEnv</code> in this module by name","Find spec var by name.","Gets a StructEnv in this module by name.","Gets a StructEnv in this module by identifier","Gets a StructEnv in this module by its <code>StructTag</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Function data.","Mapping from function definition index to id in above map.","Get the abilities of this struct.","Returns the acquired global resource types.","Retrieve an address identifier from the pool","Returns all structs in all modules which carry invariants.","Returns the bytecode associated with this function.","Returns the location of the bytecode at the given offset.","Returns an iterator for all bytecode modules in the …","Get the functions that this one calls","Get the functions that call this one","Retrieve a constant from the pool","Converts a constant to the specified type. The type must …","Return the total number of declared functions in the …","Return the total number of declared structs in the modules …","Gets the definition index of this function.","Return the set of language storage ModuleId’s that this …","Get documentation associated with an item at Loc.","Returns documentation associated with this module.","Get documentation associated with this struct.","Get documentation associated with this field.","Returns documentation associated with this constant","Get documentation associated with this function.","Returns the function enclosing this location.","Return the module enclosing this location.","Returns the struct enclosing this location.","Returns the target function if verification is exclusive …","Retrieves extension data from the environment. Use as in …","Gets a field by its id.","Gets a field by its offset.","Return the number of fields in the struct.","Get an iterator for the fields, ordered by offset.","Return the source file name for <code>file_id</code>","Returns file name and line/column position for a location, …","","Returns the file id for a file name, if defined.","Returns the FunctionEnv of the friend function if the …","Returns the set of modules this one declares as friends.","Returns the name of the friend(the only allowed caller) of …","Return the set of language storage ModuleId’s that this …","Returns full name as a string.","Gets full name as string.","Gets full name as string.","Returns the FunctionEnv of the function identified by the …","Return the <code>FunctionEnv</code> for <code>fun</code>","Gets a FunctionEnv by id.","Gets the number of functions in this module.","Gets the function definition index for the given function …","Gets a function by qualified id.","Returns iterator over FunctionEnvs in this module.","Get the specification variable associated with this struct …","Get global invariant by id.","","Return the global invariants which refer to the given …","","","","","","","","","","","","","","","Returns the id of this module in the global env.","Gets the id associated with this struct.","Gets the id of this field.","Returns the id of this constant","Gets the id of this function.","Returns the value of a pragma representing an identifier …","Returns the VM identifier for this module","Returns the VM identifier for this struct","Returns the VM identifier for this field","Returns the VM identifier for this function","Returns the location of this module.","Returns the location of this struct.","Returns the location of this constant","Returns the location of this function.","Gets the number of proper locals of this function. Those …","Get the name to be used for a local. If the local is an …","Gets the type of the local at index. This must use an …","Returns line/column position for a location, if available.","Computes the modified targets of the spec clause, as a map …","Gets a module by id.","","Returns an iterator for all modules in the environment.","Return the total number of Move modules that contain specs","Return the total number of Move bytecode instructions (not …","Returns the name of this module.","Returns the name of this struct.","Gets the name of this field.","Returns the name of this constant","Returns the name of this function.","","","","Returns the function name with the module name excluding …","Gets a <code>NamedConstantEnv</code> in this module by the constant’s …","Gets the number of named constants in this module.","Returns iterator over <code>NamedConstantEnv</code>s in this module.","Returns the type parameters associated with this struct, …","Returns the type parameters with the real names.","Gets the type parameter instantiation associated with the …","Gets the type parameter instantiation associated with the …","Gets the location of the given node.","Gets the type of the given node.","Gets the type of the given node, if available.","Returns the value of a numeric pragma for this function. …","Returns the value of a number property.","Get field offset.","","Returns the parameter types associated with this function","Returns the regular parameters associated with this …","Returns properties from pragmas.","Gets the qualified id of this struct.","Gets the qualified id of this function.","Returns the number of return values of this function.","Returns return type at given index.","Returns return types of this function.","Returns the function name excluding the address and the …","Return the source text for the given location.","Return the source file names.","Returns the path to source file of this module.","Gets module specification.","Returns the data invariants associated with this struct.","Returns associated specification.","Returns spec block documentation infos.","Gets spec fun by id.","Returns specification functions of this module.","Get all spec fun overloads with the given name.","Returns the location of the specification block of this …","Gets spec var by id.","Returns specification variables of this module.","Return the <code>StructEnv</code> for <code>str</code>","Gets a StructEnv by id.","","Gets the number of structs in this module.","Gets the struct id from a definition index which must be …","Gets a struct by qualified id.","Attempt to compute a struct tag for (<code>mid</code>, <code>sid</code>, <code>ts</code>). …","Attempt to compute a struct type for (<code>mid</code>, <code>sid</code>, <code>ts</code>).","Returns iterator over structs in this module.","Find all target modules and return in a vector","Get the transitive closure of the called functions","Returns the FunctionEnv of the transitive friend of the …","Gets the type of this field.","Returns the type of the constant","Gets a list of type actuals associated with the index in …","Produce a TypeDisplayContext to print types within the …","Return the number of type parameters for self","Returns the type parameters associated with this struct.","Returns the type parameters associated with this function.","Gets FunctionEnv for a function used in this module, via …","Returns the set of modules this one uses.","Returns the set of modules that use this one.","Returns the value of this constant","Gets the underlying bytecode module.","Return the name of the ghost memory associated with spec …","Globalizes a signature local to this module.","Globalizes a list of signatures.","","Returns true if this struct has specification conditions.","","Checks whether any of the diagnostics contains string.","","Returns true if diagnostics have error severity or worse.","Checks whether there is an extension of type <code>T</code>.","Returns true if a friend is specified for this function.","","Determines whether memory-related operations needs to be …","Return true if the module has any global, module, …","","Return whether this function is exposed outside of the …","Returns true if diagnostics have warning severity or worse.","","","","","","","","","","","","","","","","Id of this module in the global env.","Converts an index into a node id.","","","","","Returns the internal location.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets a FunctionEnv by id.","Returns iterator over FunctionEnvs in this module.","","Gets a <code>NamedConstantEnv</code> by id","Returns an iterator over <code>NamedConstantEnv</code>s in this module.","Gets a StructEnv by id, consuming this module env.","Returns iterator over structs in this module.","","Whether verification is exclusive to only one function or …","Determine whether this function is explicitly deactivated …","Return whether this function is exposed outside of the …","Return true if this function is a friend function","Returns true if this struct is ghost memory for a …","Returns true if this function has the pragma intrinsic set …","Returns true if this function mutates any references (i.e. …","Determines whether this struct is native.","Returns true if this function is native.","Returns true if this struct is native or marked as …","","Returns whether the value of a numeric pragma is …","Returns true if this function is opaque.","Return <code>true</code> if idx is a formal parameter index","Whether the type parameter at position <code>idx</code> is declared as …","Returns true if the value of a boolean pragma for this …","Returns the value of a boolean pragma for this struct. …","Returns the value of a boolean pragma for this function. …","Returns true if the boolean property is true.","Returns true if the function is a script function","Returns true if this is a module representing a script.","Returns true if a spec fun is used in specs.","","Returns true of this module is target of compilation. A …","Returns true if the index is for a temporary, not user …","Returns true if the given module is a transitive …","Determines whether this struct is the well-known vector …","Returns true if the type represents the well-known event …","The location of this module.","Returns true if either the full name or simple name of …","Returns true if either the name or simple name of this …","Module byte code.","List of loaded modules, in order they have been provided …","Reference to enclosing module.","Reference to enclosing module.","Reference to enclosing module.","","","Module level specification.","Module name.","Named constant data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new environment.","","Create a new global id unique to this environment.","Allocates a new node id and assigns location and type to …","Allocates a new node id.","Returns the next free node number.","","","","","","","","","","","","","","","","","","For a polymorphic type, its actual abilities correspond to …","","","","Writes accumulated diagnostics of given or higher severity.","Writes accumulated diagnostics that pass through <code>filter</code>","Return the <code>AccountAdress</code> of this module","","Stores extension data in the environment. This can be …","Sets instantiation for the given node id. Must not have …","Determine whether the function is target of verification.","Module source location information.","","Specification associated with this function.","A list of spec block infos, for documentation generation.","Returns whether a spec fun is ever called or not.","Specification functions, in SpecFunId order.","Specification variables, in SpecVarId order.","Struct data.","Reference to enclosing struct.","Mapping from struct definition index to id in above map.","","","","","","","","Returns a reference to the symbol pool owned by this …","Shortcut for accessing the symbol pool.","Shortcut for accessing the symbol pool.","Shortcut for accessing the symbol pool.","Converts a Loc as used by the move-lang compiler to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the function id from a definition index.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the unknown location.","Returns a Move IR version of the unknown location which is …","Updates extension data. If they are no outstanding …","Updates instantiation for the given node id. Must have …","Updates type for the given node id. Must have been set …","A set containing spec functions which are called/used in …","","Return the visibility of this function","Return the visibility string for this function. Useful for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ignore the “opaque” pragma on internal function (i.e., …","Ignore the “opaque” pragma on all function specs when …","","","","","","","","Pragma indicating whether aborts_if specification should …","Pragma indicating whether no explicit aborts_if …","Pragma indicating that adding u64 or u128 values should …","Pragma indicating that the function will run smoke tests","Pragma indicating that aborts from this function shall be …","Property which indicates that an aborts_if should be …","Property which indicates that an aborts_if should be …","Abstract property which can be used together with an …","A property which can be attached to an aborts_with to …","Opposite to the abstract property.","A property which can be attached to any condition to …","Property which can be attached to conditions to make them …","Property which can be attached to a module invariant to …","Internal property attached to conditions if they are …","Property which can be attached to a global invariant to …","A property that can be attached to a global invariant to …","Pragma indicating that invariants are not to be checked …","Pragma indicating that invariants are not to be checked …","Pragma indicating whether emits specification should be …","Pragma indicating whether no emits specification should …","Pragma which indicates that the function’s abort and …","Pragma indicating that the function can only be called …","Pragma indicating whether implementation of function …","Pragma indicating whether implementation of function …","Pragma indicating that requires are also enforced if the …","Pragma defining a random seed.","Pragma defining a timeout.","Pragma indicating an estimate how long verification takes. …","Pragma indicating whether verification should be performed …","Checks whether a pragma is valid in a specific spec block.","A function which determines whether a property is valid …","A helper which reduces specification conditions to …","Represents a translated spec.","","Creates a boolean expression which describes the overall …","Creates a boolean expression which describes the overall …","","","","","","","","","","Returns a sequence of EventStoreIncludes expressions which …","","","Returns true if there are any specs about the abort code.","","","","","","","","Return an iterator of effective pre conditions.","","","","","","","","","","","Translates the specification of function <code>fun_env</code>. This can …","Translate one inline property. If there are any references …","Translates a set of invariants with type instantiations. …","","","","","","","","","","","Representation of a symbol.","A helper to support symbols in formatting.","A pool of symbols. Allows to lookup a symbol by a string …","","","","","","","","","","","","","","","","","","","","","","","","","Looks up a symbol by its string representation. If a …","","Creates a new SymbolPool.","","Returns the string representation of this symbol, as an rc…","","","","","","","","","","","","","","","","Co-variance is allowed in all depths of the recursive type …","","","","","Co-variance is not allowed at all","","","","","","","Represents a primitive (builtin) type.","","","","Co-variance is only allowed for the outermost type …","","","A type substitution.","","Represents a type.","Helper for type displays.","Data providing context for displaying types.","","A helper to derive the set of instantiations for type …","","","Helper to unify types which stem from different generic …","Represents an error resulting from type unification.","","","","","A parameter for type unification that specifies the type …","","","","Binds the type variables.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks whether this type contains a type for which the …","","","","","","","","","","","","","","","","","","","","","","","","Create a <code>Type</code> from <code>t</code>","","","If this is a struct type, return the associated struct env …","Return either a shallow or deep substitution of the type …","Get the unbound type variables in the type.","","","Instantiates type parameters in this type.","Instantiate type parameters in the slice of types.","Instantiate type parameters in the vector of types.","","","","","","","","","","Attempt to convert this type into a normalized::Type","Attempt to convert this type into a normalized::Type","Attempt to convert this type into a …","Attempt to convert this type into a normalized::Type","Attempt to convert this type into a …","Return true if this is an account address","Determines whether this is an immutable reference.","Returns true if this type is incomplete, i.e. contains any …","Determines whether this is a mutable reference.","Returns true if this is any number type.","Return true if this type contains generic types (i.e., …","Determines whether this is a reference.","Return true if this is an account address","Returns true if this is an address or signer type.","Returns true if this type is a specification language only …","Returns true if this type is a specification language only …","Determines whether this type is a struct.","Determines whether this is a struct, or a vector of …","Determines whether this is a type parameter.","Determines whether this type is a vector","","Compute used modules in this type, adding them to the …","","Creates a new substitution.","Create a TypeUnificationAdapter with the goal of unifying …","","Create a TypeUnificationAdapter with the goal of unifying …","","","Find the set of valid instantiation combinations for all …","If this is a struct type, replace the type instantiation.","Require this to be a struct, if so extracts its content.","Skip reference type.","Specializes the type, substituting all variables bound in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert a partial assignment for type parameters into an …","Consume the TypeUnificationAdapter and produce the …","Unify two types, returning the unified type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,2,2,3,3,2,4,2,3,3,3,2,2,5,4,2,4,5,2,6,6,2,0,0,2,3,2,3,2,2,3,2,2,2,6,2,0,0,0,2,6,7,2,7,3,2,2,0,3,3,2,2,5,2,2,2,2,2,2,5,5,5,2,2,3,3,5,0,3,2,2,2,2,0,2,3,7,0,0,2,2,2,2,4,2,0,0,2,2,0,0,0,8,0,5,0,2,2,3,2,2,7,3,2,2,2,2,2,0,0,0,0,0,7,3,2,3,8,0,5,2,2,2,2,2,3,2,2,0,8,5,2,2,9,10,9,3,3,3,3,3,11,5,11,12,13,14,15,16,17,18,19,14,3,6,9,8,11,20,7,21,5,12,12,2,13,4,10,22,15,16,17,18,19,14,3,6,9,8,11,20,7,21,5,12,2,13,4,10,22,5,14,3,6,9,8,11,20,7,21,5,12,2,13,4,10,22,14,3,6,9,8,11,20,7,21,5,12,2,13,4,10,22,7,10,22,21,11,14,21,11,12,5,2,10,22,10,22,22,3,6,7,5,12,2,13,4,10,22,6,7,5,12,2,13,4,10,22,9,5,5,11,11,11,15,16,17,18,19,14,3,3,6,6,9,8,11,20,7,21,5,12,2,13,4,4,10,22,5,15,16,17,18,19,14,3,6,9,8,11,20,7,21,5,5,12,12,2,13,4,10,22,10,10,6,5,12,2,13,4,10,22,11,6,5,12,2,13,4,10,22,21,13,19,5,15,16,17,18,19,14,3,6,9,8,11,20,7,21,5,12,2,13,4,10,22,5,6,14,14,5,10,9,21,19,14,9,11,20,21,21,20,22,5,10,19,14,13,3,7,5,12,2,13,4,10,22,10,5,5,11,14,7,10,22,9,11,21,5,14,5,5,5,5,22,20,5,14,3,6,9,8,11,20,7,21,5,12,2,13,4,10,22,15,16,17,18,3,6,4,15,16,17,18,19,14,3,6,9,8,11,20,7,21,5,12,2,13,4,10,22,15,16,17,18,19,14,3,6,9,8,11,20,7,21,5,12,2,13,4,10,22,19,15,16,17,18,19,14,3,6,9,8,11,20,7,21,5,12,2,13,4,10,22,19,14,14,5,14,5,2,5,5,5,15,16,17,18,19,14,3,6,9,8,11,20,7,21,5,12,2,13,4,10,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,29,30,31,32,33,34,35,36,37,32,33,34,35,36,37,35,37,35,35,38,39,40,41,42,43,44,38,39,40,41,38,40,41,45,46,47,48,49,50,51,48,49,50,51,50,51,52,53,54,55,0,0,56,57,56,57,57,57,56,56,56,56,57,56,57,56,56,56,56,56,57,56,56,56,57,56,57,56,57,56,57,56,56,57,56,0,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,0,0,59,0,59,60,59,60,59,60,59,61,61,61,61,61,60,59,60,61,61,61,61,61,61,61,61,61,60,61,60,61,61,61,60,61,61,61,60,60,59,60,59,60,59,60,59,62,63,64,65,66,64,66,67,0,0,68,67,0,0,0,0,0,69,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,68,68,68,67,0,69,68,69,0,0,67,0,0,0,67,0,69,0,0,0,0,0,0,67,0,70,70,70,70,70,69,67,71,71,72,73,74,75,76,76,67,67,77,78,76,79,80,81,82,83,84,72,73,74,75,85,86,68,70,87,88,89,90,91,92,93,94,64,65,66,95,71,96,69,67,77,78,76,79,80,81,82,83,84,72,73,74,75,85,86,68,70,87,88,89,90,91,92,93,94,64,65,66,95,71,96,69,67,70,70,76,79,80,81,82,83,84,72,73,74,75,85,86,68,88,90,64,65,66,71,69,67,76,79,80,81,82,83,84,72,73,74,75,85,86,68,88,90,64,65,66,71,69,67,76,79,80,81,82,83,84,72,73,74,75,85,86,64,65,69,67,70,70,70,76,68,70,69,68,70,70,70,70,88,76,70,76,76,77,88,76,79,80,81,82,83,84,72,73,74,75,85,86,68,64,65,69,67,76,79,80,81,82,83,84,72,73,74,75,85,86,64,65,69,67,70,70,70,76,70,70,90,88,70,70,70,70,88,88,88,88,70,77,77,77,77,78,76,79,80,81,82,83,84,72,73,74,75,85,86,68,70,87,88,89,90,91,92,93,94,64,65,66,95,71,96,69,67,77,78,76,79,80,81,82,83,84,72,73,74,75,85,86,68,70,87,88,89,90,91,92,93,94,64,65,66,95,71,96,69,67,67,87,87,90,71,88,70,71,71,70,71,71,88,88,70,70,71,88,70,88,90,92,94,71,70,70,70,68,70,90,90,90,90,70,70,70,70,71,88,71,88,88,90,71,71,70,88,88,88,70,88,90,70,70,70,70,79,80,81,82,83,84,72,73,74,75,85,86,67,88,90,92,94,71,71,88,90,92,71,88,90,94,71,71,71,71,70,71,70,70,70,70,70,88,90,92,94,71,97,85,85,71,88,88,88,90,71,70,70,70,70,70,71,70,92,71,71,71,90,90,71,71,71,71,71,70,70,88,88,90,71,88,88,88,88,71,88,88,70,88,88,88,88,70,70,70,88,70,71,71,92,94,88,71,71,90,71,88,88,88,94,88,70,88,88,67,90,67,70,67,70,70,71,67,90,88,67,71,70,79,80,81,82,83,84,72,73,74,75,85,86,67,85,86,87,70,86,85,86,86,70,67,77,78,76,79,80,81,82,83,84,72,73,74,75,85,86,68,70,87,88,89,90,91,92,93,94,64,65,66,95,71,96,69,67,88,88,67,88,88,88,88,67,68,71,71,71,90,71,71,90,71,90,71,71,71,71,90,71,90,71,70,71,88,70,67,88,71,88,90,70,87,88,71,87,70,90,94,71,85,86,87,87,87,76,79,80,81,82,83,84,72,73,74,75,85,86,68,64,65,67,76,79,80,81,82,83,84,72,73,74,75,70,96,70,70,70,70,76,79,80,81,82,83,84,72,73,74,75,85,86,64,65,69,67,67,79,79,67,70,70,88,68,70,70,71,87,76,95,87,88,87,87,87,92,87,87,95,80,81,82,83,84,70,88,90,71,70,76,79,80,81,82,83,84,72,73,74,75,85,86,68,88,90,64,65,66,71,69,67,86,77,78,75,86,79,77,78,76,79,80,81,82,83,84,72,73,74,75,85,86,68,70,87,88,89,90,91,92,93,94,64,65,66,95,71,96,69,69,67,88,77,78,76,79,80,81,82,83,84,72,73,74,75,85,86,68,70,87,88,89,90,91,92,93,94,64,65,66,95,71,96,69,67,77,78,76,79,80,81,82,83,84,72,73,74,75,85,86,68,70,87,88,89,90,91,92,93,94,64,65,66,95,71,96,69,67,67,70,70,70,70,70,70,77,71,71,77,78,76,79,80,81,82,83,84,72,73,74,75,85,86,68,70,87,88,89,90,91,92,93,94,64,65,66,95,71,96,69,67,98,99,0,0,0,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,101,101,101,101,102,101,102,101,101,101,101,101,101,102,101,101,102,101,101,101,101,101,101,101,102,102,102,102,102,102,102,101,101,101,102,102,102,102,102,101,102,101,102,101,101,102,101,0,0,0,103,104,105,103,104,105,104,104,104,105,104,104,104,103,104,105,103,104,105,104,104,103,104,105,105,104,105,104,105,104,103,103,104,105,103,104,105,103,104,105,103,104,105,106,107,108,0,106,108,107,109,106,109,0,106,109,0,106,109,109,107,106,109,0,109,0,0,0,109,0,108,109,0,0,106,106,106,109,0,109,110,110,111,108,112,113,110,114,109,106,111,107,108,112,113,110,114,109,106,111,107,109,106,111,107,109,106,111,107,109,106,109,111,109,109,106,107,109,106,107,114,109,106,106,111,107,108,112,113,110,114,109,106,111,107,109,109,106,109,111,109,109,106,109,109,109,108,112,113,110,114,109,106,111,107,109,106,109,109,109,109,109,109,109,109,109,109,109,109,109,106,109,109,109,109,108,109,109,111,112,109,112,109,106,113,109,109,109,111,110,109,106,111,107,114,106,108,112,113,110,114,109,106,111,107,108,112,113,110,114,109,106,111,107,108,112,113,110,114,109,106,111,107,109,112,111,109,108,112,113,110,114,109,106,111,107,115,116,117,118,119,120,121,122,123,124,118,120,121,123,118,123,125,126,126,125,127,128,129,127,128,129,128],"f":[[[["accountaddress",3]],["biguint",3]],null,[[["biguint",3]],["accountaddress",3]],null,null,null,null,null,[[["formatter",3]],[["result",4,["error"]],["error",3]]],null,null,null,[[["string",3],["vec",3,["string"]]],[["result",6,["btreemap"]],["btreemap",3,["string","numericaladdress"]]]],null,[[],[["result",6,["globalenv"]],["globalenv",3]]],[[],[["result",6,["globalenv"]],["globalenv",3]]],[[["numericaladdress",3],["string",3],["modelbuilderoptions",3],["btreemap",3,["string","numericaladdress"]]],[["result",6,["globalenv"]],["globalenv",3]]],[[["numericaladdress",3],["string",3],["modelbuilderoptions",3],["flags",3],["btreemap",3,["string","numericaladdress"]]],[["result",6,["globalenv"]],["globalenv",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["biguint",3]],[[]],[[["functionvisibility",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["conditionkind",4]],["bool",15]],[[],["expdata",4]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["expdata",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["specfundecl",3]],[[],["conditionkind",4]],[[],["quantkind",4]],[[],["condition",3]],[[],["propertyvalue",4]],[[],["spec",3]],[[],["specblockinfo",3]],[[],["specblocktarget",4]],[[],["globalinvariant",3]],[[],["expdata",4]],[[],["exp",3]],[[],["operation",4]],[[],["localvardecl",3]],[[],["value",4]],[[],["modulename",3]],[[],["qualifiedsymbol",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["specblocktarget",4]],["ordering",4]],[[["modulename",3]],["ordering",4]],[[["qualifiedsymbol",3]],["ordering",4]],null,null,null,null,[[],["spec",3]],[[]],[[["globalenv",3]],["expdisplay",3]],[[["globalenv",3],["nodeid",3]],["operationdisplay",3]],[[["symbolpool",3]],["modulenamedisplay",3]],[[["symbolpool",3]],["qualifiedsymboldisplay",3]],[[["symbolpool",3]],["modulenamedisplay",3]],[[["symbolpool",3]],["qualifiedsymboldisplay",3]],[[["symbolpool",3]],["qualifiedsymboldisplay",3]],[[["conditionkind",4]],["bool",15]],[[["quantkind",4]],["bool",15]],[[["specblocktarget",4]],["bool",15]],[[["expdata",4]],["bool",15]],[[["exp",3]],["bool",15]],[[["operation",4]],["bool",15]],[[["localvardecl",3]],["bool",15]],[[["value",4]],["bool",15]],[[["modulename",3]],["bool",15]],[[["qualifiedsymbol",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[["globalenv",3]],["option",4]],[[["btreeset",3]]],[[]],[[["conditionkind",4]]],[[]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["globalenv",3]],["vec",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["exp",3]],["expdata",4]],[[]],[[["expdata",4]]],[[]],[[]],[[]],[[]],[[]],[[["numericaladdress",3],["symbol",3]],["modulename",3]],[[["str",15],["symbol",3]],["modulename",3]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["globalenv",3],["nodeid",3]],[["option",4,["nodeid"]],["nodeid",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["exp",3]],[[],["bool",15]],null,null,[[["globalenv",3]],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,[[["btreeset",3]]],[[],["symbol",3]],null,null,null,[[["conditionkind",4]],["bool",15]],[[["specblocktarget",4]],["bool",15]],[[["expdata",4]],["bool",15]],[[["exp",3]],["bool",15]],[[["operation",4]],["bool",15]],[[["localvardecl",3]],["bool",15]],[[["value",4]],["bool",15]],[[["modulename",3]],["bool",15]],[[["qualifiedsymbol",3]],["bool",15]],[[["biguint",3],["symbol",3]],["modulename",3]],[[],["nodeid",3]],[[],[["vec",3,["nodeid"]],["nodeid",3]]],null,null,[[["specblocktarget",4]],[["option",4,["ordering"]],["ordering",4]]],[[["modulename",3]],[["option",4,["ordering"]],["ordering",4]]],[[["qualifiedsymbol",3]],[["option",4,["ordering"]],["ordering",4]]],null,null,null,[[["exp",3]],["bool",15]],null,[[["exp",3]],["exp",3]],[[["exp",3]],["exp",3]],[[["exp",3]],["exp",3]],[[["btreeset",3]]],null,null,[[["globalenv",3]],["vec",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[["globalenv",3]],["btreeset",3]],null,[[],["bool",15]],[[],["bool",15]],[[["hashset",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["codewriterlabel",3]],[[]],[[],["codewriterlabel",3]],[[["str",15]]],[[["str",15]]],[[],["string",3]],[[["formatter",3]],["result",6]],[[]],[[]],[[["columnindex",3],["lineindex",3]],[["option",4,["byteindex"]],["byteindex",3]]],[[["byteindex",3]],[["loc",3],["option",4,["loc"]]]],[[]],[[["codewriterlabel",3],["str",15]]],[[]],[[]],[[["loc",3]],["codewriter",3]],[[["fnmut",8]]],[[["loc",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,[[["type",4]],["tempindex",6]],[[],["functionenv",3]],[[],["loc",3]],[[["tempindex",6]],["type",4]],[[["nodeid",3]],[["qualifiedinstid",3,["structid"]],["structid",3]]],[[],["globalenv",3]],[[["biguint",3]],["exp",3]],[[["exp",3]],["exp",3]],[[["vec",3,["exp"]],["exp",3],["operation",4]],["exp",3]],[[["bool",15]],["exp",3]],[[["operation",4]],["exp",3]],[[["type",4],["vec",3,["exp"]],["exp",3],["operation",4]],["exp",3]],[[["operation",4],["exp",3],["vec",3,["exp"]],["type",4],["vec",3,["type"]],["type",4]],["exp",3]],[[["option",4,["exp"]],["type",4],["symbol",3],["exp",3]],["localvardecl",3]],[[["exp",3]],["exp",3]],[[["fieldenv",3],["exp",3]],["exp",3]],[[["exp",3]],["exp",3]],[[["exp",3]],["exp",3]],[[["exp",3]],["exp",3]],[[["qualifiedinstid",3],["quantkind",4]],[["exp",3],["option",4,["exp"]]]],[[["expdata",4]],["exp",3]],[[["operation",4]],[["exp",3],["option",4,["exp"]]]],[[["option",4,["exp"]],["exp",3],["operation",4]],[["exp",3],["option",4,["exp"]]]],[[["str",15],["type",4]],["exp",3]],[[["structid",3],["qualifiedid",3,["structid"]],["quantkind",4]],[["expdata",4],["option",4,["expdata"]]]],[[["exp",3]],["exp",3]],[[["exp",3]],["exp",3]],[[["str",15]],["symbol",3]],[[["tempindex",6]],["exp",3]],[[["type",4]],["exp",3]],[[["type",4],["exp",3],["quantkind",4]],[["exp",3],["option",4,["exp"]]]],[[["type",4],["option",4,["vec"]],["vec",3,["type"]]],["nodeid",3]],[[["type",4]],["tempindex",6]],[[["loc",3]]],[[["nodeid",3]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["exp",3]]],[[["nodeid",3]]],[[]],[[],[["vec",3,["exp"]],["option",4,["vec"]]]],[[]],[[]],[[["globalenv",3]]],[[["exp",3],["nodeid",3]],[["exp",3],["option",4,["exp"]]]],[[["operation",4],["nodeid",3]],[["exp",3],["option",4,["exp"]]]],[[]],[[]],[[["exp",3]],["exp",3]],[[["exp",3]],["exp",3]],[[["exp",3],["nodeid",3]],[["exp",3],["option",4,["exp"]]]],[[["exp",3],["nodeid",3]],[["exp",3],["option",4,["exp"]]]],[[["exp",3],["nodeid",3]],[["exp",3],["option",4,["exp"]]]],[[["symbol",3],["nodeid",3]],[["exp",3],["option",4,["exp"]]]],[[["symbol",3],["nodeid",3]],[["exp",3],["option",4,["exp"]]]],[[["nodeid",3]],[["option",4,["nodeid"]],["nodeid",3]]],[[["nodeid",3]],[["option",4,["nodeid"]],["nodeid",3]]],[[["exp",3],["nodeid",3],["option",4]],[["exp",3],["option",4,["exp"]]]],[[["moduleid",3],["option",4],["nodeid",3],["specvarid",3]],[["exp",3],["option",4,["exp"]]]],[[["tempindex",6],["nodeid",3]],[["exp",3],["option",4,["exp"]]]],[[["tempindex",6],["nodeid",3]],[["exp",3],["option",4,["exp"]]]],[[["value",4],["nodeid",3]],[["exp",3],["option",4,["exp"]]]],[[],[["exp",3],["vec",3,["exp"]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["vec",3,["specblockinfo"]],["specblockinfo",3],["specvardecl",3],["structdata",3],["btreemap",3,["namedconstantid","namedconstantdata"]],["vec",3,["specfundecl"]],["namedconstantid",3],["functiondata",3],["specfundecl",3],["structid",3],["compiledmodule",3],["loc",3],["btreemap",3,["funid","functiondata"]],["sourcemap",3],["vec",3,["specvardecl"]],["spec",3],["funid",3],["namedconstantdata",3],["btreemap",3,["structid","structdata"]]]],[[["fileid",3],["diagnostic",3,["fileid"]]]],[[["byteindex",3],["string",3],["fileid",3],["btreemap",3,["byteindex","string"]]]],[[["globalinvariant",3]]],[[["str",15],["filehash",3],["bool",15]],["fileid",3]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["loc",3]],[[],["loc",3]],[[["ability",4]],["abilityset",3]],[[["abilityset",3]],["abilityset",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4,["rc"]],["rc",3]]],[[],["loc",3]],[[],["moduleid",3]],[[],["namedconstantid",3]],[[],["structid",3]],[[],["fieldid",3]],[[],["funid",3]],[[],["schemaid",3]],[[],["specfunid",3]],[[],["specvarid",3]],[[],["nodeid",3]],[[],["globalid",3]],[[],["qualifiedid",3]],[[],["qualifiedinstid",3]],[[],["verificationscope",4]],[[],["moduleenv",3]],[[],["structenv",3]],[[],["typeparameter",3]],[[],["abilityconstraint",3]],[[],["parameter",3]],[[],["functionenv",3]],[[],["visibility",4]],[[],["abilityset",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["loc",3]],["ordering",4]],[[["moduleid",3]],["ordering",4]],[[["namedconstantid",3]],["ordering",4]],[[["structid",3]],["ordering",4]],[[["fieldid",3]],["ordering",4]],[[["funid",3]],["ordering",4]],[[["schemaid",3]],["ordering",4]],[[["specfunid",3]],["ordering",4]],[[["specvarid",3]],["ordering",4]],[[["nodeid",3]],["ordering",4]],[[["globalid",3]],["ordering",4]],[[["qualifiedid",3]],["ordering",4]],[[["qualifiedinstid",3]],["ordering",4]],[[["typeparameter",3]],["ordering",4]],[[["abilityconstraint",3]],["ordering",4]],[[["visibility",4]],["ordering",4]],[[["abilityset",3]],["ordering",4]],[[["functiondefinitionindex",3],["spec",3],["loc",3],["compiledmodule",3],["symbol",3],["vec",3,["symbol"]]],["functiondata",3]],[[["spec",3],["loc",3],["compiledmodule",3],["symbol",3],["structdefinitionindex",3]],["structdata",3]],[[["loc",3],["type",4],["symbol",3],["value",4]],["namedconstantdata",3]],[[]],[[]],[[]],[[],["visibility",4]],[[],["result",4]],[[["str",15],["severity",4],["loc",3]]],[[["severity",4]],["usize",15]],[[["vec",3],["severity",4],["str",15],["loc",3]]],[[["vec",3,["string"]],["severity",4],["string",3],["str",15],["loc",3]]],[[],["string",3]],[[["globalenv",3]],["locdisplay",3]],[[],["envdisplay",3]],[[["globalenv",3]],["locdisplay",3]],[[],["loc",3]],null,null,[[["loc",3]],["bool",15]],[[["moduleid",3]],["bool",15]],[[["namedconstantid",3]],["bool",15]],[[["structid",3]],["bool",15]],[[["fieldid",3]],["bool",15]],[[["funid",3]],["bool",15]],[[["schemaid",3]],["bool",15]],[[["specfunid",3]],["bool",15]],[[["specvarid",3]],["bool",15]],[[["nodeid",3]],["bool",15]],[[["globalid",3]],["bool",15]],[[["qualifiedid",3]],["bool",15]],[[["qualifiedinstid",3]],["bool",15]],[[["verificationscope",4]],["bool",15]],[[["typeparameter",3]],["bool",15]],[[["abilityconstraint",3]],["bool",15]],[[["visibility",4]],["bool",15]],[[["abilityset",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["str",15],["loc",3]]],[[],["usize",15]],[[["vec",3,["string"]],["string",3],["str",15],["loc",3]]],[[],["fileid",3]],[[["fileid",3]],["u16",15]],[[["u16",15]],["fileid",3]],[[["symbol",3]],[["fieldenv",3],["option",4,["fieldenv"]]]],[[["symbol",3]],[["option",4,["functionenv"]],["functionenv",3]]],[[["identifier",3],["moduleid",3]],[["option",4,["functionenv"]],["functionenv",3]]],[[["modulename",3]],[["option",4,["moduleenv"]],["moduleenv",3]]],[[["moduleid",3]],[["option",4,["moduleenv"]],["moduleenv",3]]],[[["symbol",3]],[["option",4,["moduleenv"]],["moduleenv",3]]],[[["symbol",3]],[["namedconstantenv",3],["option",4,["namedconstantenv"]]]],[[["symbol",3]],[["specvardecl",3],["option",4,["specvardecl"]]]],[[["symbol",3]],[["option",4,["structenv"]],["structenv",3]]],[[["identifier",3]],[["option",4,["structid"]],["structid",3]]],[[["structtag",3]],[["option",4,["qualifiedid"]],["qualifiedid",3,["structid"]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u8",15]],[["abilityset",3],["option",4,["abilityset"]]]],null,null,[[],["abilityset",3]],[[],[["vec",3,["structid"]],["structid",3]]],[[["addressidentifierindex",3]],["biguint",3]],[[],[["type",4],["vec",3,["type"]]]],[[]],[[["u16",15]],["loc",3]],[[]],[[],[["btreeset",3,["qualifiedid"]],["qualifiedid",3,["funid"]]]],[[],[["btreeset",3,["qualifiedid"]],["qualifiedid",3,["funid"]]]],[[["constantpoolindex",3]],["vmconstant",3]],[[["vmconstant",3]],["movevalue",4]],[[],["usize",15]],[[],["usize",15]],[[],["functiondefinitionindex",3]],[[],[["vec",3,["moduleid"]],["moduleid",3]]],[[["loc",3]],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[["loc",3]],[["option",4,["functionenv"]],["functionenv",3]]],[[["loc",3]],[["option",4,["moduleenv"]],["moduleenv",3]]],[[["loc",3]],[["option",4,["structenv"]],["structenv",3]]],[[],[["option",4,["string"]],["string",3]]],[[],[["option",4,["rc"]],["rc",3]]],[[["fieldid",3]],["fieldenv",3]],[[["usize",15]],["fieldenv",3]],[[],["usize",15]],[[]],[[["fileid",3]],["osstr",3]],[[["loc",3]],["option",4]],[[],["usize",15]],[[["filehash",3]],[["fileid",3],["option",4,["fileid"]]]],[[],[["option",4,["functionenv"]],["functionenv",3]]],[[],[["moduleid",3],["btreeset",3,["moduleid"]]]],[[],[["option",4,["rc"]],["rc",3,["string"]]]],[[],[["vec",3,["moduleid"]],["moduleid",3]]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[["str",15]],[["option",4,["functionenv"]],["functionenv",3]]],[[["funid",3],["qualifiedid",3,["funid"]]],["functionenv",3]],[[["funid",3]],["functionenv",3]],[[],["usize",15]],[[["funid",3]],["functiondefinitionindex",3]],[[["funid",3],["qualifiedid",3,["funid"]]],["functionenv",3]],[[]],[[],[["qualifiedid",3,["specvarid"]],["option",4,["qualifiedid"]]]],[[["globalid",3]],[["globalinvariant",3],["option",4,["globalinvariant"]]]],[[["moduleid",3]],[["btreeset",3,["globalid"]],["globalid",3]]],[[["qualifiedinstid",3]],[["btreeset",3,["globalid"]],["globalid",3]]],[[["moduleid",3]],[["vec",3,["globalinvariant"]],["globalinvariant",3]]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["moduleid",3]],[[],["structid",3]],[[],["fieldid",3]],[[],["namedconstantid",3]],[[],["funid",3]],[[["str",15]],[["option",4,["rc"]],["rc",3,["string"]]]],[[],["identifier",3]],[[],[["identifier",3],["option",4,["identifier"]]]],[[],[["identifier",3],["option",4,["identifier"]]]],[[],["identifier",3]],[[],["loc",3]],[[],["loc",3]],[[],["loc",3]],[[],["loc",3]],[[],["usize",15]],[[["usize",15]],["symbol",3]],[[["usize",15]],["type",4]],[[["loc",3]],[["option",4,["location"]],["location",3]]],[[],[["btreemap",3,["qualifiedid","vec"]],["qualifiedid",3,["structid"]],["vec",3,["exp"]]]],[[["moduleid",3]],["moduleenv",3]],[[],["usize",15]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["modulename",3]],[[],["symbol",3]],[[],["symbol",3]],[[],["symbol",3]],[[],["symbol",3]],[[["globalenv",3]],["string",3]],[[["globalenv",3]],["string",3]],[[["globalenv",3]],["string",3]],[[],[["str",15],["rc",3,["str"]]]],[[["namedconstantid",3]],["namedconstantenv",3]],[[],["usize",15]],[[]],[[],[["typeparameter",3],["vec",3,["typeparameter"]]]],[[],[["typeparameter",3],["vec",3,["typeparameter"]]]],[[["nodeid",3]],[["type",4],["vec",3,["type"]]]],[[["nodeid",3]],[["option",4,["vec"]],["vec",3,["type"]]]],[[["nodeid",3]],["loc",3]],[[["nodeid",3]],["type",4]],[[["nodeid",3]],[["type",4],["option",4,["type"]]]],[[["str",15]],["usize",15]],[[["propertybag",6],["str",15]],[["usize",15],["option",4,["usize"]]]],[[],["usize",15]],[[],["usize",15]],[[],[["type",4],["vec",3,["type"]]]],[[],[["vec",3,["parameter"]],["parameter",3]]],[[],["propertybag",6]],[[],[["qualifiedid",3,["structid"]],["structid",3]]],[[],[["funid",3],["qualifiedid",3,["funid"]]]],[[],["usize",15]],[[["usize",15]],["type",4]],[[],[["type",4],["vec",3,["type"]]]],[[],[["string",3],["rc",3,["string"]]]],[[["loc",3]],[["result",4,["str","error"]],["str",15],["error",4]]],[[],[["string",3],["vec",3,["string"]]]],[[],["osstr",3]],[[],["spec",3]],[[],["spec",3]],[[],["spec",3]],[[]],[[["specfunid",3]],["specfundecl",3]],[[]],[[["symbol",3]]],[[],["loc",3]],[[["specvarid",3]],["specvardecl",3]],[[]],[[["qualifiedid",3,["structid"]],["structid",3]],["structenv",3]],[[["structid",3]],["structenv",3]],[[["structdefinitionindex",3]],["structenv",3]],[[],["usize",15]],[[["structdefinitionindex",3]],["structid",3]],[[["qualifiedid",3,["structid"]],["structid",3]],["structenv",3]],[[["moduleid",3],["structid",3]],[["option",4,["structtag"]],["structtag",3]]],[[["moduleid",3],["structid",3]],[["option",4,["mtype"]],["mtype",4]]],[[]],[[],[["moduleenv",3],["vec",3,["moduleenv"]]]],[[],[["btreeset",3,["qualifiedid"]],["qualifiedid",3,["funid"]]]],[[],["functionenv",3]],[[],["type",4]],[[],["type",4]],[[["option",4,["signatureindex"]],["signatureindex",3]],[["type",4],["vec",3,["type"]]]],[[],["typedisplaycontext",4]],[[],["usize",15]],[[],[["typeparameter",3],["vec",3,["typeparameter"]]]],[[],[["typeparameter",3],["vec",3,["typeparameter"]]]],[[["functionhandleindex",3]],["functionenv",3]],[[["bool",15]],[["moduleid",3],["btreeset",3,["moduleid"]]]],[[["bool",15]],[["moduleid",3],["btreeset",3,["moduleid"]]]],[[],["value",4]],[[],["compiledmodule",3]],[[["symbol",3]],["symbol",3]],[[["signaturetoken",4]],["type",4]],[[],[["type",4],["vec",3,["type"]]]],[[["ability",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["str",15]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["usize",15]],[["option",4,["nodeid"]],["nodeid",3]]],null,[[["type",4],["vec",3,["type"]]],["qualifiedinstid",3]],[[]],[[]],[[],["loc",3]],[[["abilityset",3]],["abilityset",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["funid",3]],["functionenv",3]],[[]],[[]],[[["namedconstantid",3]],["namedconstantenv",3]],[[]],[[["structid",3]],["structenv",3]],[[]],[[],["u8",15]],[[],["bool",15]],[[["verificationscope",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["str",15]],["bool",15]],[[],["bool",15]],[[["usize",15]],["bool",15]],[[["usize",15]],["bool",15]],[[["str",15]],["bool",15]],[[["str",15]],["bool",15]],[[["str",15]],["bool",15]],[[["propertybag",6],["str",15]],[["bool",15],["option",4,["bool"]]]],[[],["bool",15]],[[],["bool",15]],[[["moduleid",3],["specfunid",3]],["bool",15]],[[["abilityset",3]],["bool",15]],[[],["bool",15]],[[["usize",15]],["bool",15]],[[["moduleid",3]],["bool",15]],[[],["bool",15]],[[["type",4]],["bool",15]],null,[[["str",15]],["bool",15]],[[["str",15]],["bool",15]],null,null,null,null,null,null,null,null,null,null,[[["loc",3]],["bool",15]],[[["moduleid",3]],["bool",15]],[[["namedconstantid",3]],["bool",15]],[[["structid",3]],["bool",15]],[[["fieldid",3]],["bool",15]],[[["funid",3]],["bool",15]],[[["schemaid",3]],["bool",15]],[[["specfunid",3]],["bool",15]],[[["specvarid",3]],["bool",15]],[[["nodeid",3]],["bool",15]],[[["globalid",3]],["bool",15]],[[["qualifiedid",3]],["bool",15]],[[["qualifiedinstid",3]],["bool",15]],[[["verificationscope",4]],["bool",15]],[[["typeparameter",3]],["bool",15]],[[["abilityconstraint",3]],["bool",15]],[[["abilityset",3]],["bool",15]],[[["fileid",3],["span",3]],["loc",3]],[[["usize",15]]],[[["symbol",3]]],[[["symbol",3]]],[[["symbol",3]]],[[["symbol",3]]],[[["symbol",3]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["loc",3],["type",4]]],[[],["globalid",3]],[[["loc",3],["type",4]],["nodeid",3]],[[],["nodeid",3]],[[],["usize",15]],[[["loc",3]],[["option",4,["ordering"]],["ordering",4]]],[[["moduleid",3]],[["option",4,["ordering"]],["ordering",4]]],[[["namedconstantid",3]],[["option",4,["ordering"]],["ordering",4]]],[[["structid",3]],[["option",4,["ordering"]],["ordering",4]]],[[["fieldid",3]],[["option",4,["ordering"]],["ordering",4]]],[[["funid",3]],[["option",4,["ordering"]],["ordering",4]]],[[["schemaid",3]],[["option",4,["ordering"]],["ordering",4]]],[[["specfunid",3]],[["option",4,["ordering"]],["ordering",4]]],[[["specvarid",3]],[["option",4,["ordering"]],["ordering",4]]],[[["nodeid",3]],[["option",4,["ordering"]],["ordering",4]]],[[["globalid",3]],[["option",4,["ordering"]],["ordering",4]]],[[["qualifiedid",3]],[["option",4,["ordering"]],["ordering",4]]],[[["qualifiedinstid",3]],[["option",4,["ordering"]],["ordering",4]]],[[["typeparameter",3]],[["option",4,["ordering"]],["ordering",4]]],[[["abilityconstraint",3]],[["option",4,["ordering"]],["ordering",4]]],[[["visibility",4]],[["option",4,["ordering"]],["ordering",4]]],[[["abilityset",3]],[["option",4,["ordering"]],["ordering",4]]],[[["abilityset",3]],[["abilityset",3],["result",4,["abilityset","partialvmerror"]],["partialvmerror",3]]],[[],["qualifiedid",3]],[[["type",4],["vec",3,["type"]]],["qualifiedinstid",3]],[[["ability",4]],["abilityset",3]],[[["severity",4]]],[[["fn",8]]],[[],["accountaddress",3]],[[],["result",4]],[[["any",8]]],[[["type",4],["vec",3,["type"]],["nodeid",3]]],[[["verificationscope",4]],["bool",15]],null,[[],["span",3]],null,null,[[["specfunid",3]],["bool",15]],null,null,null,null,null,[[["moduleid",3],["compiledmodule",3],["modulename",3]]],[[["functionhandleindex",3],["functiondefinitionindex",3],["symbol",3]]],[[],["symbol",3]],[[],["symbol",3]],[[],["symbol",3]],[[],["symbol",3]],[[],["symbol",3]],[[],["symbolpool",3]],[[],["symbolpool",3]],[[],["symbolpool",3]],[[],["symbolpool",3]],[[["moveirloc",6]],["loc",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["qualifiedid",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["type",4]],[[],["usize",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u8",15]],[["result",4,["visibility"]],["visibility",4]]],[[],["result",4]],[[],["result",4]],[[["functiondefinitionindex",3]],[["option",4,["funid"]],["funid",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["abilityset",3]],["abilityset",3]],[[],["loc",3]],[[],["moveirloc",6]],[[]],[[["type",4],["vec",3,["type"]],["nodeid",3]]],[[["type",4],["nodeid",3]]],null,null,[[],["functionvisibility",4]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[],["modelbuilderoptions",3]],[[]],[[],["modelbuilderoptions",3]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],null,null,[[]],[[],["result",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15],["specblockcontext",4]],["bool",15]],[[["conditionkind",4],["str",15]],["bool",15]],null,null,null,[[["exp",3]],[["exp",3],["option",4,["exp"]]]],[[],[["exp",3],["option",4,["exp"]]]],null,[[]],[[]],[[]],[[]],null,[[],["translatedspec",3]],null,[[],["exp",3]],[[],["vec",3]],[[]],[[]],[[],["bool",15]],[[]],[[]],null,null,null,null,null,[[]],[[["operation",4],["nodeid",3]],[["exp",3],["option",4,["exp"]]]],[[]],[[]],[[["exp",3]],["exp",3]],[[["symbol",3],["nodeid",3]],[["exp",3],["option",4,["exp"]]]],[[["nodeid",3]],[["option",4,["nodeid"]],["nodeid",3]]],[[["tempindex",6],["nodeid",3]],[["exp",3],["option",4,["exp"]]]],null,null,null,[[["option",4],["bool",15],["functionenv",3]],["translatedspec",3]],[[["exp",3]]],[[["bool",15]],["translatedspec",3]],[[["bool",15]],["translatedspec",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["symbol",3]],[[]],[[["symbol",3]],["ordering",4]],[[]],[[["symbolpool",3]],["symboldisplay",3]],[[["symbol",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[["str",15]],["symbol",3]],[[["symbol",3]],["bool",15]],[[],["symbolpool",3]],[[["symbol",3]],[["option",4,["ordering"]],["ordering",4]]],[[["symbol",3]],[["string",3],["rc",3,["string"]]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u16",15],["type",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["type",4]],[[],["primitivetype",4]],[[],["substitution",3]],[[],["variance",4]],[[]],[[]],[[]],[[]],[[["type",4]],["ordering",4]],[[["primitivetype",4]],["ordering",4]],[[],["bool",15]],[[]],[[["typedisplaycontext",4]],["typedisplay",3]],[[["type",4]],["bool",15]],[[["primitivetype",4]],["bool",15]],[[["variance",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["typetag",4],["globalenv",3]]],[[],["u64",15]],[[],["u64",15]],[[["globalenv",3]],["option",4]],[[["u16",15],["bool",15]],[["type",4],["option",4,["type"]]]],[[],[["u16",15],["btreeset",3,["u16"]]]],[[]],[[]],[[],["type",4]],[[],[["type",4],["vec",3,["type"]]]],[[["type",4],["vec",3,["type"]]],[["type",4],["vec",3,["type"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["globalenv",3]],[["option",4,["mtype"]],["mtype",4]]],[[],[["option",4,["mtype"]],["mtype",4]]],[[["globalenv",3]],[["structtag",3],["option",4,["structtag"]]]],[[["globalenv",3]],[["option",4,["mtype"]],["mtype",4]]],[[["globalenv",3]],[["option",4,["typetag"]],["typetag",4]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["typedisplaycontext",4]],["string",3]],[[["btreeset",3]]],[[["type",4]],["bool",15]],[[]],[[["bool",15],["type",4]]],[[["primitivetype",4]],["type",4]],[[["bool",15]]],[[["type",4]],[["option",4,["ordering"]],["ordering",4]]],[[["primitivetype",4]],[["option",4,["ordering"]],["ordering",4]]],[[["usize",15],["bool",15]],[["btreeset",3,["vec"]],["vec",3,["type"]]]],[[],["type",4]],[[]],[[],["type",4]],[[["type",4]],["type",4]],[[],["symbolpool",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["usize",15],["u16",15],["type",4],["btreemap",3,["u16","type"]]],[["type",4],["vec",3,["type"]]]],[[["variance",4],["bool",15]],["option",4]],[[["variance",4],["type",4]],[["result",4,["type","typeunificationerror"]],["type",4],["typeunificationerror",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[6,"MemoryLabel"],[4,"Operation"],[4,"ConditionKind"],[4,"Value"],[4,"ExpData"],[4,"QuantKind"],[4,"SpecBlockTarget"],[4,"PropertyValue"],[3,"Condition"],[3,"ModuleName"],[3,"Spec"],[3,"Exp"],[3,"LocalVarDecl"],[3,"SpecFunDecl"],[3,"ModuleNameDisplay"],[3,"QualifiedSymbolDisplay"],[3,"ExpDisplay"],[3,"OperationDisplay"],[3,"SpecVarDecl"],[3,"SpecBlockInfo"],[3,"GlobalInvariant"],[3,"QualifiedSymbol"],[13,"LetPost"],[13,"LetPre"],[13,"GlobalInvariant"],[13,"GlobalInvariantUpdate"],[13,"Axiom"],[13,"Invalid"],[13,"Value"],[13,"LocalVar"],[13,"Temporary"],[13,"Call"],[13,"Invoke"],[13,"Lambda"],[13,"Quant"],[13,"Block"],[13,"IfElse"],[13,"Function"],[13,"Pack"],[13,"Select"],[13,"UpdateField"],[13,"Result"],[13,"Global"],[13,"Exists"],[13,"Value"],[13,"Symbol"],[13,"QualifiedSymbol"],[13,"Struct"],[13,"Function"],[13,"FunctionCode"],[13,"Schema"],[13,"Address"],[13,"Number"],[13,"Bool"],[13,"ByteArray"],[3,"CodeWriter"],[3,"CodeWriterLabel"],[8,"ExpGenerator"],[4,"RewriteTarget"],[3,"ExpRewriter"],[8,"ExpRewriterFunctions"],[13,"LocalVar"],[13,"Temporary"],[3,"TypeParameter"],[3,"AbilityConstraint"],[3,"Parameter"],[3,"AbilitySet"],[4,"VerificationScope"],[4,"FunctionVisibility"],[3,"GlobalEnv"],[3,"FunctionEnv"],[3,"SpecFunId"],[3,"SpecVarId"],[3,"NodeId"],[3,"GlobalId"],[3,"Loc"],[3,"EnvDisplay"],[3,"LocDisplay"],[3,"ModuleId"],[3,"NamedConstantId"],[3,"StructId"],[3,"FieldId"],[3,"FunId"],[3,"SchemaId"],[3,"QualifiedId"],[3,"QualifiedInstId"],[3,"ModuleData"],[3,"ModuleEnv"],[3,"StructData"],[3,"StructEnv"],[3,"FieldData"],[3,"FieldEnv"],[3,"NamedConstantData"],[3,"NamedConstantEnv"],[3,"FunctionData"],[3,"ExpInfo"],[8,"GetNameString"],[13,"Only"],[13,"OnlyModule"],[3,"ModelBuilderOptions"],[3,"TranslatedSpec"],[3,"SpecTranslator"],[3,"SymbolDisplay"],[3,"Symbol"],[3,"SymbolPool"],[4,"PrimitiveType"],[4,"Variance"],[4,"TypeUnificationError"],[4,"Type"],[4,"TypeDisplayContext"],[3,"Substitution"],[3,"TypeUnificationAdapter"],[3,"TypeInstantiationDerivation"],[3,"TypeDisplay"],[13,"Primitive"],[13,"Tuple"],[13,"Vector"],[13,"Struct"],[13,"TypeParameter"],[13,"Reference"],[13,"Fun"],[13,"TypeDomain"],[13,"ResourceDomain"],[13,"Var"],[13,"WithEnv"],[13,"WithoutEnv"],[13,"TypeMismatch"],[13,"ArityMismatch"],[13,"CyclicSubstitution"]]},\
"move_oncall_trainer":{"doc":"","t":[3,11,11,12,11,11,11,5,11,11,11,11,11,11,12,12,11,12,5,11,11,11,11,11,12],"n":["NodeInfo","borrow","borrow_mut","chain_id","deref","deref_mut","drop","experiments","fmt","fmt","from","get_client","init","into","json_rpc","local_node_info","new_local","root_key_path","run_experiment","to_string","try_from","try_into","type_id","vzip","waypoint"],"q":["move_oncall_trainer","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1],"f":[null,[[]],[[]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],[["rc",3,["experiment"]],["hashmap",3,["str","rc"]],["str",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[],["clientproxy",3]],[[],["usize",15]],[[]],null,null,[[]],null,[[["clientproxy",3],["experiment",8],["rc",3,["experiment"]]],["result",6]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null],"p":[[3,"NodeInfo"]]},\
"move_package":{"doc":"","t":[3,3,12,11,11,11,11,11,11,11,11,11,0,11,11,12,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,0,11,11,0,12,11,11,11,11,11,11,11,11,11,11,0,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,6,3,3,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,0,6,6,3,3,6,6,6,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,12,12,12,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,13,13,13,17,13,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,6,13,3,6,3,6,6,3,6,6,3,6,13,3,4,6,6,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12],"n":["BuildConfig","ModelConfig","all_files_as_targets","borrow","borrow","borrow_mut","borrow_mut","clap","clone","clone","clone_into","clone_into","compilation","compile_package","deserialize","dev_mode","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from_clap","generate_abis","generate_docs","install_dir","into","into","move_model_for_package","ne","ne","partial_cmp","partial_cmp","resolution","resolution_graph_for_package","serialize","source_package","test_mode","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","build_plan","compiled_package","model_builder","package_layout","BuildPlan","borrow","borrow_mut","clone","clone_into","compile","compile_with_driver","create","fmt","from","into","to_owned","try_from","try_into","type_id","vzip","CompiledPackage","CompiledPackageInfo","ModuleResolutionMetadata","OnDiskCompiledPackage","OnDiskPackage","address_alias_instantiation","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_flags","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compiled_abis","compiled_docs","compiled_package_info","compiled_package_info","compiled_units","dependencies","dependencies","deserialize","deserialize","deserialize","fmt","fmt","fmt","fmt","from","from","from","from","from_path","into","into","into","into","into_compiled_package","module_resolution_metadata","package","package_name","root_path","serialize","serialize","serialize","source_digest","sources","to_owned","to_owned","to_owned","to_owned","transitive_compiled_modules","transitive_compiled_units","transitive_dependencies","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","ModelBuilder","borrow","borrow_mut","build_model","clone","clone_into","create","fmt","from","into","to_owned","try_from","try_into","type_id","vzip","BuildInfo","CompiledABIs","CompiledDocs","CompiledModules","CompiledPackageLayout","CompiledScripts","Root","SourceMaps","Sources","borrow","borrow_mut","clone","clone_into","fmt","from","into","path","to_owned","try_from","try_into","type_id","vzip","resolution_graph","GraphIndex","Renaming","ResolutionGraph","ResolutionPackage","ResolvedGraph","ResolvedPackage","ResolvedTable","ResolvingNamedAddress","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_options","clone","clone","clone","clone_into","clone_into","clone_into","eq","equivalent","fmt","fmt","fmt","from","from","from","get_package","get_package","get_sources","get_sources","graph","into","into","into","ne","new","new","package_path","package_table","renaming","resolution_graph_index","resolution_table","resolve","root_package","root_package_path","source_digest","source_package","to_owned","to_owned","to_owned","transitive_dependencies","transitive_dependencies","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unify","vzip","vzip","vzip","layout","manifest_parser","parsed_manifest","DocTemplates","Examples","Manifest","REFERENCE_TEMPLATE_FILENAME","Scripts","SourcePackageLayout","Sources","Specifications","Tests","borrow","borrow_mut","clone","clone_into","eq","equivalent","fmt","from","into","is_optional","location_str","path","to_owned","try_from","try_into","type_id","vzip","parse_addresses","parse_build_info","parse_dependencies","parse_dev_addresses","parse_move_manifest_from_file","parse_move_manifest_string","parse_package_info","parse_source_manifest","AddressDeclarations","Assign","BuildInfo","Dependencies","Dependency","DevAddressDeclarations","FileName","GitInfo","NamedAddress","PackageDigest","PackageInfo","PackageName","RenameFrom","SourceManifest","SubstOrRename","Substitution","Version","addresses","authors","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","dependencies","dev_address_assignments","dev_dependencies","digest","download_to","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","git_info","git_rev","git_url","into","into","into","into","into","into","language_version","license","local","name","ne","ne","ne","ne","ne","ne","package","subdir","subst","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","version","version","vzip","vzip","vzip","vzip","vzip","vzip","0","0"],"q":["move_package","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_package::compilation","","","","move_package::compilation::build_plan","","","","","","","","","","","","","","","","move_package::compilation::compiled_package","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_package::compilation::model_builder","","","","","","","","","","","","","","","move_package::compilation::package_layout","","","","","","","","","","","","","","","","","","","","","","move_package::resolution","move_package::resolution::resolution_graph","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_package::source_package","","","move_package::source_package::layout","","","","","","","","","","","","","","","","","","","","","","","","","","move_package::source_package::manifest_parser","","","","","","","","move_package::source_package::parsed_manifest","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_package::source_package::parsed_manifest::SubstOrRename",""],"d":["","","","","","","","","","","","","","","","Compile in ‘dev’ mode. The ‘dev-addresses’ and ‘…","","","","","","","","","","Generate ABIs for packages","Generate documentation for packages","Optional installation directory for this after it has been …","","","","","","","","","","","","Compile in ‘test’ mode. The ‘dev-addresses’ and ‘…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents a compiled package in memory.","Represents meta information about a package and the …","Module resolution data","","Represents a compiled package that has been saved to disk. …","The instantiations for all named addresses that were used …","","","","","","","","","The build flags that were used when compiling this package.","","","","","","","","","filename -&gt; json bytes for ScriptABI. Can then be used to …","filename -&gt; doctext","Meta information about the compilation of this …","Information about the package and the specific compilation …","The output compiled bytecode (both module, and scripts)","Packages that this package depends on.","Dependency names for this package.","","","","","","","","","","","","","","","","","","The module resolution {::&lt;module_name&gt; |-&gt; &lt;…","","The name of the compiled package","Path to the root of the package and its data on disk. …","","","","The hash of the source directory at the time of …","The source files in this package that were used for …","","","","","Returns compiled modules for this package and its …","Returns all compiled units for this package in transitive …","Returns <code>CompiledPackage</code>s in dependency order and deduped","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A <code>ResolutionGraph</code> comes in two flavors:","","","","","","","","","","","","Build options","","","","","","","","","","","","","","","","","","","Dependency graph","","","","","","","Where this package is located on the filesystem","A mapping of package name to its resolution","The renaming of addresses performed by this package","Pointer into the <code>ResolutionGraph.graph</code>","The mapping of addresses for this package (and that are in …","","Root package","","The digest of the contents of all source files and …","source manifest for this package","","","","Returns the transitive dependencies of this package in …","Returns the transitive dependencies of this package in …","","","","","","","","","","","","","","","","","","","","References file for documentation generation","","","","","","","","","","","","","","","","","A Move source package is laid out on-disk as a_move_package","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Where the git repo is downloaded to.","","","","","","","","","","","","","","","","","","","","","","","","","","The git revision, AKA, a commit SHA","The git clone url to download from","","","","","","","","","","","","","","","","","","The path under this repo where the move package can be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,2,1,2,1,2,2,1,2,1,0,2,2,2,2,1,2,1,2,1,2,1,2,2,2,2,2,1,2,2,1,2,1,0,2,2,0,2,2,1,2,1,2,1,2,1,2,1,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,4,4,5,6,7,4,5,6,7,4,4,5,6,7,4,5,6,7,5,5,5,6,5,5,6,4,6,7,4,5,6,7,4,5,6,7,7,4,5,6,7,7,4,7,4,7,4,6,7,4,5,4,5,6,7,5,5,5,4,5,6,7,4,5,6,7,4,5,6,7,4,5,6,7,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,10,11,12,10,11,12,11,10,11,12,10,11,12,12,12,10,11,12,10,11,12,13,11,14,12,11,10,11,12,12,10,11,12,11,12,12,12,11,11,11,12,12,10,11,12,14,12,10,11,12,10,11,12,10,11,12,10,10,11,12,0,0,0,15,15,15,0,15,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,17,18,17,18,19,20,21,16,17,18,19,20,21,16,17,17,18,19,20,21,16,17,18,19,20,21,16,21,17,17,17,19,20,17,18,19,20,21,16,17,18,19,20,21,16,17,18,19,20,21,16,17,18,19,20,21,16,19,20,20,17,18,19,20,21,16,21,18,19,18,17,18,19,20,21,16,17,20,19,17,18,19,20,21,16,17,18,19,20,21,16,17,18,19,20,21,16,17,18,19,20,21,16,18,19,17,18,19,20,21,16,22,23],"f":[null,null,null,[[]],[[]],[[]],[[]],[[],["app",3]],[[],["buildconfig",3]],[[],["modelconfig",3]],[[]],[[]],null,[[["path",3]],[["compiledpackage",3],["result",6,["compiledpackage"]]]],[[],["result",4]],null,[[["buildconfig",3]],["bool",15]],[[["modelconfig",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["argmatches",3]]],null,null,null,[[]],[[]],[[["modelconfig",3],["path",3]],[["globalenv",3],["result",6,["globalenv"]]]],[[["buildconfig",3]],["bool",15]],[[["modelconfig",3]],["bool",15]],[[["buildconfig",3]],[["option",4,["ordering"]],["ordering",4]]],[[["modelconfig",3]],[["option",4,["ordering"]],["ordering",4]]],null,[[["path",3]],[["resolvedgraph",6],["result",6,["resolvedgraph"]]]],[[],["result",4]],null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[],["buildplan",3]],[[]],[[],[["compiledpackage",3],["result",6,["compiledpackage"]]]],[[],[["compiledpackage",3],["result",6,["compiledpackage"]]]],[[["resolvedgraph",6]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["compiledpackageinfo",3]],[[],["compiledpackage",3]],[[],["ondiskpackage",3]],[[],["ondiskcompiledpackage",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["path",3]],["result",6]],[[]],[[]],[[]],[[]],[[],[["compiledpackage",3],["result",6,["compiledpackage"]]]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[]],[[]],[[]],[[]],[[],["modules",3]],[[],[["compiledunit",6],["vec",3,["compiledunit"]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[],[["globalenv",3],["result",6,["globalenv"]]]],[[],["modelbuilder",3]],[[]],[[["resolvedgraph",6],["modelconfig",3]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["compiledpackagelayout",4]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["path",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["resolvingnamedaddress",3]],[[],["resolutiongraph",3]],[[],["resolutionpackage",3]],[[]],[[]],[[]],[[["resolutionpackage",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["packagename",6]],["resolvedpackage",6]],[[["packagename",6]],["resolvedpackage",6]],[[["buildconfig",3]],[["vec",3,["filename"]],["result",6,["vec"]]]],[[["buildconfig",3]],[["vec",3,["filename"]],["result",6,["vec"]]]],null,[[]],[[]],[[]],[[["resolutionpackage",3]],["bool",15]],[[["option",4,["accountaddress"]],["accountaddress",3]]],[[["pathbuf",3],["sourcemanifest",3],["buildconfig",3]],[["resolutiongraph",3,["resolvingnamedaddress"]],["result",6,["resolutiongraph"]]]],null,null,null,null,null,[[],[["resolvedgraph",6],["result",6,["resolvedgraph"]]]],null,null,null,null,[[]],[[]],[[]],[[["resolvedgraph",6]],[["vec",3,["packagename"]],["packagename",6]]],[[["resolvedgraph",6]],[["vec",3,["packagename"]],["packagename",6]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["option",4,["accountaddress"]],["accountaddress",3]],["result",6]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["sourcepackagelayout",4]],[[]],[[["sourcepackagelayout",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["bool",15]],[[],["str",15]],[[],["path",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["tv",4]],[["result",6,["addressdeclarations"]],["addressdeclarations",6]]],[[["tv",4]],[["result",6,["buildinfo"]],["buildinfo",3]]],[[["tv",4]],[["dependencies",6],["result",6,["dependencies"]]]],[[["tv",4]],[["devaddressdeclarations",6],["result",6,["devaddressdeclarations"]]]],[[["path",3]],[["result",6,["sourcemanifest"]],["sourcemanifest",3]]],[[["string",3]],[["result",6,["tv"]],["tv",4]]],[[["tv",4]],[["result",6,["packageinfo"]],["packageinfo",3]]],[[["tv",4]],[["result",6,["sourcemanifest"]],["sourcemanifest",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["sourcemanifest",3]],[[],["packageinfo",3]],[[],["dependency",3]],[[],["gitinfo",3]],[[],["buildinfo",3]],[[],["substorrename",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["buildinfo",3]],null,null,null,null,null,[[["sourcemanifest",3]],["bool",15]],[[["packageinfo",3]],["bool",15]],[[["dependency",3]],["bool",15]],[[["gitinfo",3]],["bool",15]],[[["buildinfo",3]],["bool",15]],[[["substorrename",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[["sourcemanifest",3]],["bool",15]],[[["packageinfo",3]],["bool",15]],[[["dependency",3]],["bool",15]],[[["gitinfo",3]],["bool",15]],[[["buildinfo",3]],["bool",15]],[[["substorrename",4]],["bool",15]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null],"p":[[3,"ModelConfig"],[3,"BuildConfig"],[3,"BuildPlan"],[3,"CompiledPackageInfo"],[3,"CompiledPackage"],[3,"OnDiskPackage"],[3,"OnDiskCompiledPackage"],[3,"ModelBuilder"],[4,"CompiledPackageLayout"],[3,"ResolvingNamedAddress"],[3,"ResolutionGraph"],[3,"ResolutionPackage"],[6,"ResolvedGraph"],[6,"ResolvedPackage"],[4,"SourcePackageLayout"],[4,"SubstOrRename"],[3,"SourceManifest"],[3,"PackageInfo"],[3,"Dependency"],[3,"GitInfo"],[3,"BuildInfo"],[13,"RenameFrom"],[13,"Assign"]]},\
"move_prover":{"doc":"","t":[5,0,5,5,5,5,5,5,7,3,12,12,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,11,12,12,12,12,5,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,12,11],"n":["check_errors","cli","create_and_process_bytecode","generate_boogie","run_move_prover","run_move_prover_errors_to_stderr","run_move_prover_with_model","verify_boogie","DEFAULT_OPTIONS","Options","abigen","backend","borrow","borrow_mut","clone","clone_into","create_from_args","create_from_toml","create_from_toml_file","default","deserialize","docgen","enable_debug","errmapgen","experimental_pipeline","fmt","from","into","model_builder","move_deps","move_named_address_values","move_sources","named_addresses_for_options","output_path","prover","run_abigen","run_docgen","run_errmapgen","run_escape","run_read_write_set","script_reach","serialize","setup_logging","setup_logging_for_test","to_owned","try_from","try_into","type_id","verbosity_level","vzip"],"q":["move_prover","","","","","","","","move_prover::cli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Functionality related to the command line interface of the …","Create bytecode and process it.","","","","","","","Represents options provided to the tool. Most of those …","Options for the ABI generator.","Options for the prover backend.","","","","","","Creates options from toml configuration source.","Creates options from toml configuration file.","","","Options for the documentation generator.","Convenience function to enable debugging (like high …","Options for the error map generator. TODO: this currently …","Whether to run experimental pipeline","","","","BEGIN OF STRUCTURED OPTIONS Options for the model builder.","The paths to any dependencies for the Move sources. Those …","The values assigned to named addresses in the Move code …","The paths to the Move sources.","","The path to the boogie output which represents the …","Options for the prover.","Whether to run the ABI generator instead of the prover.","Whether to run the documentation generator instead of the …","Whether to run the error map generator instead of the …","Whether to run the internal reference escape analysis …","Whether to run the read write set analysis instead of the …","Options for printing out modules and functions reachable …","","Sets up logging based on provided options. This should be …","","","","","","Verbosity level for logging.",""],"i":[0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[[[["options",3],["str",15],["globalenv",3]],["result",6]],null,[[["options",3],["globalenv",3]],["functiontargetsholder",3]],[[["options",3],["functiontargetsholder",3],["globalenv",3]],[["result",6,["codewriter"]],["codewriter",3]]],[[["options",3]],["result",6]],[[["options",3]],["result",6]],[[["options",3],["instant",3],["option",4,["instant"]],["globalenv",3]],["result",6]],[[["functiontargetsholder",3],["codewriter",3],["options",3],["globalenv",3]],["result",6]],null,null,null,null,[[]],[[]],[[],["options",3]],[[]],[[],[["result",6,["options"]],["options",3]]],[[["str",15]],[["result",6,["options"]],["options",3]]],[[["str",15]],[["result",6,["options"]],["options",3]]],[[]],[[],["result",4]],null,[[]],null,null,[[["formatter",3]],["result",6]],[[]],[[]],null,null,null,null,[[["btreemap",3]],[["vec",3,["string"]],["string",3]]],null,null,null,null,null,null,null,null,[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]]],"p":[[3,"Options"]]},\
"move_prover_test_utils":{"doc":"","t":[17,0,5,5],"n":["DEFAULT_SENDER","baseline_test","extract_test_directives","verify_or_update_baseline"],"q":["move_prover_test_utils","","","move_prover_test_utils::baseline_test"],"d":["","A module supporting baseline (golden) tests.","","Verifies or updates baseline file for the given generated …"],"i":[0,0,0,0],"f":[null,null,[[["str",15],["path",3]],[["vec",3,["string"]],["result",6,["vec"]]]],[[["str",15],["path",3]],["result",6]]],"p":[]},\
"move_stdlib":{"doc":"","t":[5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,0,5,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],"n":["build_doc","build_error_code_map","build_nursery_doc","build_stdlib_doc","error_descriptions","move_nursery_docs_full_path","move_nursery_files","move_stdlib_docs_full_path","move_stdlib_errmap_full_path","move_stdlib_files","move_stdlib_modules_full_path","move_stdlib_named_addresses","natives","path_in_crate","unit_testing_files","utils","all_natives","bcs","debug","event","hash","signer","unit_test","vector","native_to_bytes","native_print","native_print_stack_trace","write_to_event_store","native_sha2_256","native_sha3_256","native_borrow_address","native_create_signers_for_testing","native_borrow","native_destroy_empty","native_empty","native_length","native_pop","native_push_back","native_swap","time_it"],"q":["move_stdlib","","","","","","","","","","","","","","","","move_stdlib::natives","","","","","","","","move_stdlib::natives::bcs","move_stdlib::natives::debug","","move_stdlib::natives::event","move_stdlib::natives::hash","","move_stdlib::natives::signer","move_stdlib::natives::unit_test","move_stdlib::natives::vector","","","","","","","move_stdlib::utils"],"d":["","","","","","","","","","","","","","","","","","","","","","","","","Rust implementation of Move’s …","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[[[["vec",3,["string"]],["btreemap",3,["string","numericaladdress"]],["str",15],["option",4,["string"]],["numericaladdress",3],["bool",15],["string",3]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[]],[[],["string",3]],[[],[["vec",3,["string"]],["string",3]]],[[],["string",3]],[[],["string",3]],[[],[["vec",3,["string"]],["string",3]]],[[],["string",3]],[[],[["btreemap",3,["string","numericaladdress"]],["numericaladdress",3],["string",3]]],null,[[],["pathbuf",3]],[[],[["vec",3,["string"]],["string",3]]],null,[[["accountaddress",3]],["nativefunctiontable",6]],null,null,null,null,null,null,null,[[["vec",3,["type"]],["vecdeque",3,["value"]],["value",3],["nativecontext",3],["type",4]],[["partialvmresult",6,["nativeresult"]],["nativeresult",3]]],[[["vec",3,["type"]],["vecdeque",3,["value"]],["value",3],["nativecontext",3],["type",4]],[["partialvmresult",6,["nativeresult"]],["nativeresult",3]]],[[["vec",3,["type"]],["vecdeque",3,["value"]],["value",3],["nativecontext",3],["type",4]],[["partialvmresult",6,["nativeresult"]],["nativeresult",3]]],[[["vec",3,["type"]],["vecdeque",3,["value"]],["value",3],["nativecontext",3],["type",4]],[["partialvmresult",6,["nativeresult"]],["nativeresult",3]]],[[["vec",3,["type"]],["vecdeque",3,["value"]],["value",3],["nativecontext",3],["type",4]],[["partialvmresult",6,["nativeresult"]],["nativeresult",3]]],[[["vec",3,["type"]],["vecdeque",3,["value"]],["value",3],["nativecontext",3],["type",4]],[["partialvmresult",6,["nativeresult"]],["nativeresult",3]]],[[["vec",3,["type"]],["vecdeque",3,["value"]],["value",3],["nativecontext",3],["type",4]],[["partialvmresult",6,["nativeresult"]],["nativeresult",3]]],[[["vec",3,["type"]],["vecdeque",3,["value"]],["value",3],["nativecontext",3],["type",4]],[["partialvmresult",6,["nativeresult"]],["nativeresult",3]]],[[["vec",3,["type"]],["vecdeque",3,["value"]],["value",3],["nativecontext",3],["type",4]],[["partialvmresult",6,["nativeresult"]],["nativeresult",3]]],[[["vec",3,["type"]],["vecdeque",3,["value"]],["value",3],["nativecontext",3],["type",4]],[["partialvmresult",6,["nativeresult"]],["nativeresult",3]]],[[["vec",3,["type"]],["vecdeque",3,["value"]],["value",3],["nativecontext",3],["type",4]],[["partialvmresult",6,["nativeresult"]],["nativeresult",3]]],[[["vec",3,["type"]],["vecdeque",3,["value"]],["value",3],["nativecontext",3],["type",4]],[["partialvmresult",6,["nativeresult"]],["nativeresult",3]]],[[["vec",3,["type"]],["vecdeque",3,["value"]],["value",3],["nativecontext",3],["type",4]],[["partialvmresult",6,["nativeresult"]],["nativeresult",3]]],[[["vec",3,["type"]],["vecdeque",3,["value"]],["value",3],["nativecontext",3],["type",4]],[["partialvmresult",6,["nativeresult"]],["nativeresult",3]]],[[["vec",3,["type"]],["vecdeque",3,["value"]],["value",3],["nativecontext",3],["type",4]],[["partialvmresult",6,["nativeresult"]],["nativeresult",3]]],[[["str",15]]]],"p":[]},\
"move_symbol_pool":{"doc":"A global, uniqued cache of strings that is never purged. …","t":[0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["symbol","Symbol","as_ref","as_str","borrow","borrow_mut","clone","clone_into","cmp","deref","deserialize","eq","fmt","fmt","from","from","from","from","hash","into","ne","partial_cmp","serialize","to_owned","to_string","try_from","try_into","type_id"],"q":["move_symbol_pool","move_symbol_pool::symbol","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Represents a string that has been cached.","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,null,[[],["str",15]],[[],["str",15]],[[]],[[]],[[],["symbol",3]],[[]],[[["symbol",3]],["ordering",4]],[[],["str",15]],[[],["result",4]],[[["symbol",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["cow",4,["str"]],["str",15]]],[[["str",15]]],[[["string",3]]],[[]],[[]],[[["symbol",3]],["bool",15]],[[["symbol",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["result",4]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"Symbol"]]},\
"move_transactional_test_runner":{"doc":"","t":[0,0,0,3,16,16,16,8,3,16,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,10,11,11,11,10,10,11,11,11,11,11,11,10,11,11,5,11,11,11,11,11,11,10,11,11,13,3,13,13,3,13,13,3,4,13,3,13,13,4,4,3,13,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,12,12,12,12,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,5,5,5],"n":["framework","tasks","vm_test_harness","CompiledState","ExtraInitArgs","ExtraPublishArgs","ExtraRunArgs","MoveTestAdapter","ProcessedModule","Subcommand","add","borrow","borrow","borrow_mut","borrow_mut","call_function","compiled_state","default_syntax","dep_modules","deref","deref","deref_mut","deref_mut","drop","drop","execute_script","from","from","handle_command","handle_subcommand","init","init","init","interface_files","into","into","new","publish_module","resolve_address","resolve_named_address","run_test_impl","try_from","try_from","try_into","try_into","type_id","type_id","view_data","vzip","vzip","Anonymous","EmptyCommand","IR","Init","InitCommand","Named","Publish","PublishCommand","RawAddress","Run","RunCommand","Source","Subcommand","SyntaxChoice","TaskCommand","TaskInput","View","ViewCommand","address","args","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clap","clap","clap","clap","clap","clap","clone","clone_into","command","command_lines_stop","data","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_str","gas_budget","gas_budget","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","map","name","name","named_addresses","number","parse","resource","signers","start_line","stop_line","syntax","syntax","taskify","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_args","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","1","1","1","format_vm_error","run_test","view_resource_in_move_storage"],"q":["move_transactional_test_runner","","","move_transactional_test_runner::framework","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_transactional_test_runner::tasksmove_transactional_test_runner::tasks::RawAddress","","move_transactional_test_runner::tasks::TaskCommand","","","","","","","","move_transactional_test_runner::vm_test_harness","",""],"di":[0,0,0,0,1,1,1,0,0,1,2,3,2,3,2,1,1,1,2,3,2,3,2,3,2,1,3,2,1,1,1,3,2,2,3,2,2,1,2,2,0,3,2,3,2,3,2,1,3,2,4,0,5,6,0,4,6,0,0,6,0,5,6,0,0,0,6,0,7,8,4,9,5,10,11,8,7,6,12,4,9,5,10,11,8,7,6,12,10,11,8,7,6,12,5,5,9,9,9,4,9,5,10,11,8,7,6,12,4,9,5,10,11,8,7,6,12,4,9,5,10,11,8,7,6,12,5,5,4,9,5,10,11,8,7,6,12,4,9,5,10,11,8,7,6,12,10,11,8,7,6,12,5,11,8,4,9,5,10,11,8,7,6,12,4,9,5,10,11,8,7,6,12,9,9,8,10,9,4,7,8,9,9,11,8,0,5,4,9,5,10,11,8,7,6,12,4,9,5,10,11,8,7,6,12,8,4,9,5,10,11,8,7,6,12,4,9,5,10,11,8,7,6,12,13,14,15,16,17,18,19,15,16,17,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,[[["compiledmodule",3],["option",4,["symbol"]],["symbol",3]]],[[]],[[]],[[]],[[]],[[["u64",15],["option",4,["u64"]],["typetag",4],["moduleid",3],["transactionargument",4],["vec",3,["transactionargument"]],["rawaddress",4],["identstr",3],["vec",3,["rawaddress"]],["vec",3,["typetag"]]],["result",6]],[[],["compiledstate",3]],[[],["syntaxchoice",4]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["u64",15],["option",4,["u64"]],["typetag",4],["transactionargument",4],["compiledscript",3],["vec",3,["transactionargument"]],["vec",3,["rawaddress"]],["rawaddress",4],["vec",3,["typetag"]]],["result",6]],[[]],[[]],[[["taskinput",3,["taskcommand"]],["taskcommand",4]],[["result",6,["option"]],["option",4,["string"]]]],[[["taskinput",3]],[["result",6,["option"]],["option",4,["string"]]]],[[["option",4,["taskinput"]],["taskinput",3],["syntaxchoice",4],["option",4,["fullycompiledprogram"]],["fullycompiledprogram",3]]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[["btreemap",3,["numericaladdress"]],["option",4,["fullycompiledprogram"]],["numericaladdress",3],["fullycompiledprogram",3]]],[[["u64",15],["option",4,["identifier"]],["option",4,["u64"]],["compiledmodule",3],["identifier",3]],["result",6]],[[["rawaddress",4]],["accountaddress",3]],[[["str",15]],["accountaddress",3]],[[["option",4,["fullycompiledprogram"]],["fullycompiledprogram",3],["path",3]],[["result",6,["box"]],["box",3,["error"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["vec",3,["typetag"]],["typetag",4],["identstr",3],["moduleid",3],["accountaddress",3]],[["string",3],["result",6,["string"]]]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["syntaxchoice",4]],[[]],null,null,null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["syntaxchoice",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["str",15]],["result",6]],null,null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["taskinput",3]],null,null,null,null,[[["str",15]],["result",6]],null,null,null,null,null,null,[[["path",3]],[["result",6,["vec"]],["vec",3,["taskinput"]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,[[["vmerror",3]],["string",3]],[[["path",3]],[["result",6,["box"]],["box",3,["error"]]]],[[["vec",3,["typetag"]],["typetag",4],["identstr",3],["moduleid",3],["accountaddress",3]],[["string",3],["result",6,["string"]]]]],"p":[[8,"MoveTestAdapter"],[3,"CompiledState"],[3,"ProcessedModule"],[4,"RawAddress"],[4,"SyntaxChoice"],[4,"TaskCommand"],[3,"ViewCommand"],[3,"RunCommand"],[3,"TaskInput"],[3,"InitCommand"],[3,"PublishCommand"],[3,"EmptyCommand"],[13,"Named"],[13,"Anonymous"],[13,"Init"],[13,"Publish"],[13,"Run"],[13,"View"],[13,"Subcommand"]]},\
"move_unit_test":{"doc":"","t":[3,11,11,11,0,12,11,11,11,11,12,11,11,11,12,11,11,11,11,12,11,12,12,12,14,12,12,11,12,0,0,11,11,11,11,12,11,11,5,13,4,13,13,13,3,3,3,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["UnitTestingConfig","borrow","borrow_mut","build_test_plan","cargo_runner","check_stackless_vm","clap","clone","clone_into","default_with_bound","dep_files","deref","deref_mut","drop","filter","fmt","from","from_clap","init","instruction_execution_bound","into","list","named_address_values","num_threads","register_move_unit_tests","report_statistics","report_storage_on_error","run_and_report_unit_tests","source_files","test_reporter","test_runner","to_owned","try_from","try_into","type_id","verbose","vzip","with_named_addresses","run_tests_with_config_and_filter","Aborted","FailureReason","Mismatch","NoAbort","Property","TestFailure","TestResults","TestRunInfo","TestStatistics","Timeout","Unknown","WrongAbort","aborted","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","combine","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","elapsed_time","eq","eq","eq","equivalent","equivalent","equivalent","failure_reason","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","function_ident","init","init","init","init","init","instructions_executed","into","into","into","into","into","mismatch","ne","ne","ne","new","new","new","new","no_abort","partial_cmp","partial_cmp","partial_cmp","property","render_error","report_statistics","storage_state","summarize","test_failure","test_run_info","test_success","timeout","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unknown","vm_error","vzip","vzip","vzip","vzip","vzip","wrong_abort","0","0","0","0","0","0","1","1","2","move_vm_change_set","move_vm_return_values","stackless_vm_change_set","stackless_vm_return_values","SharedTestingConfig","TestRunner","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","filter","from","from","init","init","into","into","new","run","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["move_unit_test","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_unit_test::cargo_runner","move_unit_test::test_reporter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_unit_test::test_reporter::FailureReason","","","","","","","","","","","","","move_unit_test::test_runner","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","Build a test plan from a unit test config","","Use the stackless bytecode interpreter to run the tests …","","","","Create a unit testing config for use with …","Dependency files","","","","A filter string to determine which unit tests to run","","","","","Bound the number of instructions that can be executed by …","","List all tests","Named address mapping","Number of threads to use for running tests.","","Report test statistics at the end of testing","Show the storage state at the end of execution of a …","Public entry point to Move unit testing as a library …","Source files","","","","","","","Verbose mode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all tests passed, <code>false</code> if there was a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Test state common to all tests","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,1,1,1,1,0,2,0,2,2,2,0,0,0,0,2,2,2,2,2,3,4,5,6,2,3,4,5,6,2,3,4,5,6,2,3,4,5,6,2,3,4,5,2,3,4,5,6,2,3,4,5,6,2,3,4,5,6,4,2,3,4,2,3,4,3,2,3,4,5,6,2,3,4,5,6,4,2,3,4,5,6,4,2,3,4,5,6,2,2,3,4,3,4,5,6,2,2,3,4,2,3,6,3,6,5,3,5,2,2,3,4,5,6,2,3,4,5,6,2,3,4,5,6,2,3,4,5,6,2,3,2,3,4,5,6,2,7,8,9,10,11,12,8,9,8,13,13,13,13,0,0,14,15,14,15,14,15,14,15,14,15,15,14,15,14,15,14,15,15,15,14,15,14,15,14,15,14,15],"f":[null,[[]],[[]],[[],[["testplan",3],["option",4,["testplan"]]]],null,null,[[],["app",3]],[[],["unittestingconfig",3]],[[]],[[["u64",15],["option",4,["u64"]]]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[["formatter",3]],["result",6]],[[]],[[["argmatches",3]]],[[],["usize",15]],null,[[]],null,null,null,null,null,null,[[["send",8],["nativefunctiontable",6],["testplan",3],["option",4,["nativefunctiontable"]],["write",8]],["result",6]],null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[["numericaladdress",3],["string",3],["btreemap",3,["string","numericaladdress"]]]],[[["option",4,["str"]],["nativefunctiontable",6],["str",15],["unittestingconfig",3],["option",4,["nativefunctiontable"]]]],null,null,null,null,null,null,null,null,null,null,null,null,[[["u64",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["failurereason",4]],[[],["testfailure",3]],[[],["testruninfo",3]],[[],["teststatistics",3]],[[],["testresults",3]],[[]],[[]],[[]],[[]],[[]],[[["failurereason",4]],["ordering",4]],[[["testfailure",3]],["ordering",4]],[[["testruninfo",3]],["ordering",4]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[["failurereason",4]],["bool",15]],[[["testfailure",3]],["bool",15]],[[["testruninfo",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],null,[[]],[[]],[[]],[[]],[[]],[[["vec",3,["vec"]],["vmresult",6,["changeset"]],["vmresult",6,["vec"]],["changeset",3]]],[[["failurereason",4]],["bool",15]],[[["testfailure",3]],["bool",15]],[[["testruninfo",3]],["bool",15]],[[["testruninfo",3],["option",4,["vmerror"]],["option",4,["string"]],["vmerror",3],["string",3],["failurereason",4]]],[[["u64",15],["string",3],["duration",3]]],[[]],[[["testplan",3],["teststatistics",3]]],[[]],[[["failurereason",4]],[["option",4,["ordering"]],["ordering",4]]],[[["testfailure",3]],[["option",4,["ordering"]],["ordering",4]]],[[["testruninfo",3]],[["option",4,["ordering"]],["ordering",4]]],[[["string",3]]],[[["testplan",3]],["string",3]],[[["mutex",3]],["result",6]],null,[[["mutex",3]],[["result",6,["bool"]],["bool",15]]],[[["moduletestplan",3],["testfailure",3]]],null,[[["testruninfo",3],["moduletestplan",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[["u64",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["str",15]]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["u64",15],["numericaladdress",3],["btreemap",3,["string","numericaladdress"]],["usize",15],["bool",15],["nativefunctiontable",6],["testplan",3],["option",4,["nativefunctiontable"]],["string",3]],["result",6]],[[["mutex",3]],[["result",6,["testresults"]],["testresults",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]]],"p":[[3,"UnitTestingConfig"],[4,"FailureReason"],[3,"TestFailure"],[3,"TestRunInfo"],[3,"TestStatistics"],[3,"TestResults"],[13,"NoAbort"],[13,"WrongAbort"],[13,"Aborted"],[13,"Timeout"],[13,"Property"],[13,"Unknown"],[13,"Mismatch"],[3,"SharedTestingConfig"],[3,"TestRunner"]]},\
"move_vm_integration_tests":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"move_vm_runtime":{"doc":"The core Move VM logic.","t":[0,0,0,0,0,14,3,11,11,11,11,11,11,11,11,5,3,11,11,11,11,11,11,11,11,11,11,3,6,6,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["data_cache","logging","move_vm","native_functions","session","trace","AccountDataCache","borrow","borrow_mut","from","into","try_from","try_into","type_id","vzip","expect_no_verification_errors","MoveVM","borrow","borrow_mut","from","into","new","new_session","try_from","try_into","type_id","vzip","NativeContext","NativeFunction","NativeFunctionTable","borrow","borrow_mut","cost_table","from","into","print_stack_trace","save_event","try_from","try_into","type_id","type_to_type_layout","vzip","Session","borrow","borrow_mut","execute_function","execute_script","execute_script_function","finish","from","get_type_layout","into","num_mutated_accounts","publish_module","publish_module_bundle","try_from","try_into","type_id","vzip"],"q":["move_vm_runtime","","","","","","move_vm_runtime::data_cache","","","","","","","","","move_vm_runtime::logging","move_vm_runtime::move_vm","","","","","","","","","","","move_vm_runtime::native_functions","","","","","","","","","","","","","","","move_vm_runtime::session","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","Create a new Session backed by the given storage.","","","","","","","","","","","","","","","","","","","","","","","Execute a Move function with the given arguments. This is …","Execute a transaction script.","Execute a Move script function with the given arguments.","Finish up the session and produce the side effects.","","","","","Publish the given module.","Publish a series of modules.","","","",""],"i":[0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,2,2,2,2,2,2,2,2,2,2,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4],"f":[null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["vmerror",3]],["vmerror",3]],null,[[]],[[]],[[]],[[]],[[],["vmresult",6]],[[],[["moveresolver",8],["session",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,[[]],[[]],[[],["costtable",3]],[[]],[[]],[[],["partialvmresult",6]],[[["u64",15],["u8",15],["vec",3,["u8"]],["type",4],["value",3]],[["partialvmresult",6,["bool"]],["bool",15]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["type",4]],[["partialvmresult",6,["option"]],["option",4,["movetypelayout"]]]],[[]],null,[[]],[[]],[[["vec",3,["typetag"]],["vec",3,["vec"]],["moduleid",3],["typetag",4],["identstr",3],["vec",3,["u8"]],["gasstatus",3]],[["vmresult",6,["vec"]],["vec",3,["vec"]]]],[[["vec",3,["typetag"]],["u8",15],["accountaddress",3],["vec",3,["u8"]],["vec",3,["vec"]],["vec",3,["accountaddress"]],["typetag",4],["gasstatus",3]],["vmresult",6]],[[["vec",3,["typetag"]],["accountaddress",3],["vec",3,["u8"]],["vec",3,["vec"]],["vec",3,["accountaddress"]],["moduleid",3],["typetag",4],["identstr",3],["gasstatus",3]],["vmresult",6]],[[],["vmresult",6]],[[]],[[["typetag",4]],[["movetypelayout",4],["vmresult",6,["movetypelayout"]]]],[[]],[[["accountaddress",3]],["u64",15]],[[["accountaddress",3],["u8",15],["vec",3,["u8"]],["gasstatus",3]],["vmresult",6]],[[["vec",3,["vec"]],["accountaddress",3],["vec",3,["u8"]],["gasstatus",3]],["vmresult",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"AccountDataCache"],[3,"MoveVM"],[3,"NativeContext"],[3,"Session"]]},\
"move_vm_test_utils":{"doc":"","t":[3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BlankStorage","DeltaStorage","InMemoryStorage","apply","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","fmt","fmt","fmt","from","from","from","get_module","get_module","get_module","get_resource","get_resource","get_resource","into","into","into","new","new","new","publish_or_overwrite_module","publish_or_overwrite_resource","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["move_vm_test_utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A dummy storage containing no modules or resources.","The new storage can be used for additional computations …","Simple in-memory storage that can be used as a Move VM …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,1,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1],"f":[null,null,null,[[["changeset",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["blankstorage",3]],[[],["deltastorage",3]],[[],["inmemorystorage",3]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["moduleid",3]],[["option",4,["vec"]],["result",6,["option"]]]],[[["moduleid",3]],[["option",4,["vec"]],["result",6,["option"]]]],[[["moduleid",3]],[["option",4,["vec"]],["result",6,["option"]]]],[[["accountaddress",3],["structtag",3]],[["option",4,["vec"]],["result",6,["option"]]]],[[["accountaddress",3],["structtag",3]],[["option",4,["vec"]],["result",6,["option"]]]],[[["accountaddress",3],["structtag",3]],[["option",4,["vec"]],["result",6,["option"]]]],[[]],[[]],[[]],[[]],[[["changeset",3]]],[[]],[[["moduleid",3],["vec",3,["u8"]],["u8",15]]],[[["u8",15],["structtag",3],["vec",3,["u8"]],["accountaddress",3]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]]],"p":[[3,"InMemoryStorage"],[3,"BlankStorage"],[3,"DeltaStorage"]]},\
"move_vm_transactional_tests":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"move_vm_types":{"doc":"","t":[0,0,0,0,14,0,8,10,10,10,10,10,13,13,13,13,13,13,13,13,13,13,13,3,7,13,4,13,13,13,13,13,13,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,5,0,13,13,13,13,13,13,13,3,17,13,4,13,13,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,12,12,12,12,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,3,6,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,13,13,3,4,17,4,3,13,17,3,3,3,3,13,13,13,17,8,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,5,5,5,5,5,5],"n":["data_store","gas_schedule","loaded_data","natives","pop_arg","values","DataStore","emit_event","exists_module","load_module","load_resource","publish_module","BCS_TO_BYTES","BORROW","BORROW_MUT","CREATE_SIGNER","DESTROY_EMPTY","DESTROY_SIGNER","ED25519_THRESHOLD_VERIFY","ED25519_VALIDATE_KEY","ED25519_VERIFY","EMIT_EVENT","EMPTY","GasStatus","INITIAL_GAS_SCHEDULE","LENGTH","NativeCostIndex","POP_BACK","PUSH_BACK","SHA2_256","SHA3_256","SIGNER_BORROW","SWAP","borrow","borrow","borrow_mut","borrow_mut","calculate_intrinsic_gas","charge_instr","charge_instr_with_size","charge_intrinsic_gas","clone","clone_into","cmp","cost_table","deduct_gas","eq","fmt","from","from","hash","into","into","new","new_from_instructions","new_unmetered","partial_cmp","remaining_gas","set_metering","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","zero_cost_schedule","runtime_types","Address","Bool","MutableReference","Reference","Signer","Struct","StructInstantiation","StructType","TYPE_DEPTH_MAX","TyParam","Type","U128","U64","U8","Vector","abilities","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","eq","eq","fields","fmt","fmt","from","from","hash","hash","into","into","module","name","ne","ne","partial_cmp","partial_cmp","struct_def","subst","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","type_param_constraints","type_parameters","vzip","vzip","0","0","0","0","0","0","1","function","ABORTED","ABORT_TYPE_MISMATCH_ERROR","ARITHMETIC_ERROR","BACKWARD_INCOMPATIBLE_MODULE_UPDATE","BAD_CHAIN_ID","BAD_HEADER_TABLE","BAD_MAGIC","BAD_TRANSACTION_FEE_CURRENCY","BAD_U128","BAD_U64","BOOLEAN_OP_TYPE_MISMATCH_ERROR","BORROWFIELD_BAD_FIELD_ERROR","BORROWFIELD_EXISTS_MUTABLE_BORROW_ERROR","BORROWFIELD_TYPE_MISMATCH_ERROR","BORROWGLOBAL_TYPE_MISMATCH_ERROR","BORROWGLOBAL_WITHOUT_KEY_ABILITY","BORROWLOC_EXISTS_BORROW_ERROR","BORROWLOC_REFERENCE_ERROR","BORROWLOC_UNAVAILABLE_ERROR","BR_TYPE_MISMATCH_ERROR","CALLED_SCRIPT_VISIBLE_FROM_NON_SCRIPT_VISIBLE","CALL_BORROWED_MUTABLE_REFERENCE_ERROR","CALL_STACK_OVERFLOW","CALL_TYPE_MISMATCH_ERROR","CODE_DESERIALIZATION_ERROR","CONSTRAINT_NOT_SATISFIED","COPYLOC_EXISTS_BORROW_ERROR","COPYLOC_UNAVAILABLE_ERROR","COPYLOC_WITHOUT_COPY_ABILITY","CURRENCY_INFO_DOES_NOT_EXIST","CYCLIC_MODULE_DEPENDENCY","CYCLIC_MODULE_FRIENDSHIP","DATA_FORMAT_ERROR","DUPLICATE_ACQUIRES_ANNOTATION","DUPLICATE_ELEMENT","DUPLICATE_MODULE_NAME","DUPLICATE_NATIVE_FUNCTION","DUPLICATE_TABLE","EMPTY_CODE_UNIT","EMPTY_VALUE_STACK","EQUALITY_OP_TYPE_MISMATCH_ERROR","EVENT_KEY_MISMATCH","EXCEEDED_MAX_TRANSACTION_SIZE","EXECUTED","EXECUTE_SCRIPT_FUNCTION_CALLED_ON_NON_SCRIPT_VISIBLE","EXECUTION_STACK_OVERFLOW","EXISTS_WITHOUT_KEY_ABILITY_OR_BAD_ARGUMENT","EXTRANEOUS_ACQUIRES_ANNOTATION","FAILED_TO_DESERIALIZE_ARGUMENT","FAILED_TO_DESERIALIZE_RESOURCE","FAILED_TO_SERIALIZE_WRITE_SET_CHANGES","FEATURE_UNDER_GATING","FIELD_MISSING_TYPE_ABILITY","FREEZEREF_EXISTS_MUTABLE_BORROW_ERROR","FREEZEREF_TYPE_MISMATCH_ERROR","FUNCTION_RESOLUTION_FAILURE","GAS_UNIT_PRICE_ABOVE_MAX_BOUND","GAS_UNIT_PRICE_BELOW_MIN_BOUND","GENERIC_MEMBER_OPCODE_MISMATCH","GLOBAL_REFERENCE_ERROR","INDEX_OUT_OF_BOUNDS","INSUFFICIENT_BALANCE_FOR_TRANSACTION_FEE","INTEGER_OP_TYPE_MISMATCH_ERROR","INTERNAL_TYPE_ERROR","INVALID_ACQUIRES_ANNOTATION","INVALID_AUTH_KEY","INVALID_CONSTANT_TYPE","INVALID_FALL_THROUGH","INVALID_FLAG_BITS","INVALID_FRIEND_DECL_WITH_MODULES_IN_DEPENDENCIES","INVALID_FRIEND_DECL_WITH_MODULES_OUTSIDE_ACCOUNT_ADDRESS","INVALID_FRIEND_DECL_WITH_SELF","INVALID_GAS_SPECIFIER","INVALID_LOOP_BREAK","INVALID_LOOP_CONTINUE","INVALID_LOOP_SPLIT","INVALID_MAIN_FUNCTION_SIGNATURE","INVALID_MODULE_HANDLE","INVALID_MODULE_PUBLISHER","INVALID_OPERATION_IN_SCRIPT","INVALID_PARAM_TYPE_FOR_DESERIALIZATION","INVALID_PHANTOM_TYPE_PARAM_POSITION","INVALID_SIGNATURE","INVALID_SIGNATURE_TOKEN","INVALID_WRITE_SET","LINKER_ERROR","LOOKUP_FAILED","LOOP_IN_INSTANTIATION_GRAPH","MALFORMED","MALFORMED_CONSTANT_DATA","MAX_GAS_UNITS_BELOW_MIN_TRANSACTION_GAS_UNITS","MAX_GAS_UNITS_EXCEEDS_MAX_GAS_UNITS_BOUND","MISSING_ACQUIRES_ANNOTATION","MISSING_DATA","MISSING_DEPENDENCY","MODULE_ADDRESS_DOES_NOT_MATCH_SENDER","MOVEFROM_TYPE_MISMATCH_ERROR","MOVEFROM_WITHOUT_KEY_ABILITY","MOVELOC_EXISTS_BORROW_ERROR","MOVELOC_UNAVAILABLE_ERROR","MOVETO_TYPE_MISMATCH_ERROR","MOVETO_WITHOUT_KEY_ABILITY","NEGATIVE_STACK_SIZE_WITHIN_BLOCK","NO_ACCOUNT_ROLE","NO_MODULE_HANDLES","NUMBER_OF_ARGUMENTS_MISMATCH","NUMBER_OF_SIGNER_ARGUMENTS_MISMATCH","NUMBER_OF_TYPE_ARGUMENTS_MISMATCH","NativeResult","OUT_OF_GAS","PACK_TYPE_MISMATCH_ERROR","PC_OVERFLOW","POP_WITHOUT_DROP_ABILITY","POSITIVE_STACK_SIZE_AT_BLOCK_END","PartialVMError","PartialVMResult","READREF_EXISTS_MUTABLE_BORROW_ERROR","READREF_TYPE_MISMATCH_ERROR","READREF_WITHOUT_COPY_ABILITY","RECURSIVE_STRUCT_DEFINITION","REJECTED_WRITE_SET","RESOURCE_ALREADY_EXISTS","RESOURCE_DOES_NOT_EXIST","RET_BORROWED_MUTABLE_REFERENCE_ERROR","RET_TYPE_MISMATCH_ERROR","SECONDARY_KEYS_ADDRESSES_COUNT_MISMATCH","SENDING_ACCOUNT_DOES_NOT_EXIST","SENDING_ACCOUNT_FROZEN","SEQUENCE_NONCE_INVALID","SEQUENCE_NUMBER_TOO_BIG","SEQUENCE_NUMBER_TOO_NEW","SEQUENCE_NUMBER_TOO_OLD","SIGNERS_CONTAIN_DUPLICATES","STLOC_TYPE_MISMATCH_ERROR","STLOC_UNSAFE_TO_DESTROY_ERROR","STORAGE_ERROR","StatusCode","TOO_MANY_LOCALS","TRANSACTION_EXPIRED","TYPE_MISMATCH","TYPE_RESOLUTION_FAILURE","UNABLE_TO_DESERIALIZE_ACCOUNT","UNEXPECTED_DESERIALIZATION_ERROR","UNEXPECTED_ERROR_FROM_KNOWN_MOVE_FUNCTION","UNEXPECTED_SIGNATURE_TYPE","UNEXPECTED_VERIFIER_ERROR","UNIMPLEMENTED_HANDLE","UNKNOWN_ABILITY","UNKNOWN_BINARY_ERROR","UNKNOWN_INVARIANT_VIOLATION_ERROR","UNKNOWN_MODULE","UNKNOWN_NATIVE_STRUCT_FLAG","UNKNOWN_OPCODE","UNKNOWN_RUNTIME_STATUS","UNKNOWN_SCRIPT","UNKNOWN_SERIALIZED_TYPE","UNKNOWN_SIGNATURE_TYPE","UNKNOWN_STATUS","UNKNOWN_TABLE_TYPE","UNKNOWN_VALIDATION_STATUS","UNKNOWN_VERIFICATION_ERROR","UNKNOWN_VERSION","UNPACK_TYPE_MISMATCH_ERROR","UNREACHABLE","UNSAFE_RET_LOCAL_OR_RESOURCE_STILL_BORROWED","UNSAFE_RET_UNUSED_VALUES_WITHOUT_DROP","VALUE_DESERIALIZATION_ERROR","VALUE_SERIALIZATION_ERROR","VEC_BORROW_ELEMENT_EXISTS_MUTABLE_BORROW_ERROR","VEC_UPDATE_EXISTS_MUTABLE_BORROW_ERROR","VERIFICATION_ERROR","VERIFIER_INVARIANT_VIOLATION","VM_MAX_TYPE_DEPTH_REACHED","VM_MAX_VALUE_DEPTH_REACHED","VM_STARTUP_FAILURE","WRITEREF_EXISTS_BORROW_ERROR","WRITEREF_NO_MUTABLE_REFERENCE_ERROR","WRITEREF_TYPE_MISMATCH_ERROR","WRITEREF_WITHOUT_DROP_ABILITY","ZERO_SIZED_STRUCT","all_data","append_message_with_separator","arbitrary_with","at_code_offset","at_code_offsets","at_index","at_indices","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cost","deserialize","eq","err","finish","fmt","fmt","fmt","from","from","from","hash","into","into","into","major_status","map_partial_vm_result_empty","map_partial_vm_result_one","native_gas","new","ok","partial_cmp","result","serialize","source","status_type","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_message","with_sub_status","values_impl","Changed","Deleted","GlobalValue","GlobalValueEffect","INDEX_OUT_OF_BOUNDS","IntegerValue","Locals","None","POP_EMPTY_VEC","Reference","SignerRef","Struct","StructRef","U128","U64","U8","VEC_UNPACK_PARITY_MISMATCH","VMValueCast","Value","Vector","VectorRef","add_checked","address","as_move_value","bit_and","bit_or","bit_xor","bool","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_elem","borrow_field","borrow_global","borrow_loc","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_signer","cached","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast_u128","cast_u64","cast_u8","copy_loc","copy_value","debug","deserialize_constant","destroy_empty","div_checked","empty","equals","exists","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","ge","gt","into","into","into","into","into","into","into","into","into","into","into","into_effect","into_value","is_mutated","le","len","lt","move_from","move_loc","move_to","mul_checked","new","none","pack","pack","pop","prop","push_back","read_ref","read_ref","rem_checked","shl_checked","shr_checked","signer","signer_reference","simple_deserialize","simple_deserialize","simple_serialize","simple_serialize","size","size","size","size","store_loc","struct_","sub_checked","swap","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u128","u64","u8","unpack","unpack","value_as","value_as","vector_address","vector_bool","vector_for_testing_only","vector_u128","vector_u64","vector_u8","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_ref","0","0","0","0","print_locals","print_reference","print_value","layout_and_value_strategy","layout_strategy","value_strategy_with_layout"],"q":["move_vm_types","","","","","","move_vm_types::data_store","","","","","","move_vm_types::gas_schedule","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_vm_types::loaded_data","move_vm_types::loaded_data::runtime_types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","move_vm_types::loaded_data::runtime_types::Type","","","","","","","move_vm_types::natives","move_vm_types::natives::functionmove_vm_types::values","move_vm_types::values::values_implmove_vm_types::values::values_impl::GlobalValueEffect","move_vm_types::values::values_impl::IntegerValue","","","move_vm_types::values::values_impl::debug","","","move_vm_types::values::values_impl::prop","",""],"d":["","This module lays out the basic abstract costing schedule …","Loaded definition of code data used in runtime.","","Return the argument at the top of the stack.","","Provide an implementation for bytecodes related to data …","Emit an event to the EventStore","Check if this module exists.","Get the serialized format of a <code>CompiledModule</code> given a …","Try to load a resource from remote storage and create a …","Publish a module.","","","","","","","","","","","","The Move VM implementation of state for gas metering.","","","","","","","","","","","","","","Calculate the intrinsic gas for the transaction based upon …","Charge an instruction and fail if not enough gas units are …","Charge an instruction over data with a given size and fail …","Charge gas related to the overall size of a transaction …","","","","Return the <code>CostTable</code> behind this <code>GasStatus</code>.","Charge a given amount of gas and fail if not enough gas …","","","","","","","","Initialize the gas state with metering enabled.","","Initialize the gas state with metering disabled.","","Return the gas left.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Native Function Support","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Result of a native function execution requires charges for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","We don’t derive Arbitrary on this enum because it is too …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Append the message <code>message</code> to the message field of the VM …","","","","","","","","","","","","","","","","","The cost for running that function, whether successfully …","","","Failed execution. The failure is a runtime failure in the …","","","","","","","","","","","","","Convert a PartialVMResult&lt;()&gt; into a PartialVMResult","Convert a PartialVMResult into a PartialVMResult","Return the native gas entry in <code>CostTable</code> for the given key.","","Return values of a successful execution.","","Result of execution. This is either the return values or …","","","Return the status type for this status code","","","","","","","","","","","","","","","","","","","","Updated with a new value","The value was removed","A wrapper around <code>GlobalValueImpl</code>, representing a “slot”…","Simple enum for the change state of a GlobalValue, used by …","","An integer value in Move.","The locals for a function frame. It allows values to be …","There was no value, or the value was not changed","","A generic Move reference that offers two functionalities: …","","A Move struct.","A reference to a Move struct that allows you to take a …","","","","","","A Move value – a wrapper around <code>ValueImpl</code> which can be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a “unowned” reference to a signer value …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,0,0,2,0,2,2,2,2,2,2,3,2,3,2,0,3,3,3,2,2,2,3,3,2,2,3,2,2,3,2,3,0,3,2,3,3,2,3,2,3,2,3,2,3,2,0,0,4,4,4,4,4,4,4,0,0,4,0,4,4,4,4,5,5,4,5,4,5,4,5,4,5,4,5,4,5,5,4,5,4,5,4,5,4,5,5,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,5,5,4,6,7,8,9,10,11,8,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,12,12,12,12,12,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,13,13,13,13,14,13,12,14,13,12,13,12,13,12,12,14,12,12,14,13,13,13,12,14,13,12,12,14,13,12,13,14,14,0,13,14,12,14,12,13,12,13,12,13,14,13,12,12,14,13,12,14,13,12,14,13,12,13,13,0,15,15,0,0,0,0,0,15,0,0,0,0,0,16,16,16,0,0,0,0,0,16,17,17,16,16,16,17,15,18,19,20,21,22,17,23,16,24,25,19,21,25,23,15,18,19,20,21,22,17,23,16,24,25,18,25,26,17,17,17,17,17,17,17,17,17,17,17,17,17,16,16,16,16,16,16,23,17,0,17,20,16,20,17,25,18,19,20,21,22,17,17,23,23,16,24,25,15,18,19,20,21,22,17,23,16,24,25,16,16,15,18,19,20,21,22,17,23,16,24,25,25,16,25,16,19,16,25,23,25,16,23,25,20,24,19,0,19,21,22,16,16,16,17,17,17,24,17,24,22,17,24,25,23,17,16,19,17,23,15,18,19,20,21,22,17,23,16,24,25,15,18,19,20,21,22,17,23,16,24,25,15,18,19,20,21,22,17,23,16,24,25,17,17,17,20,24,17,16,17,17,17,17,17,17,15,18,19,20,21,22,17,23,16,24,25,22,27,28,29,30,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,[[["u64",15],["u8",15],["vec",3,["u8"]],["value",3],["type",4]],["partialvmresult",6]],[[["moduleid",3]],[["vmresult",6,["bool"]],["bool",15]]],[[["moduleid",3]],[["vmresult",6,["vec"]],["vec",3,["u8"]]]],[[["accountaddress",3],["type",4]],[["globalvalue",3],["partialvmresult",6,["globalvalue"]]]],[[["vec",3,["u8"]],["u8",15],["moduleid",3]],["vmresult",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[["abstractmemorysize",3,["gascarrier"]],["gasconstants",3],["gascarrier",6]],[["internalgasunits",3,["gascarrier"]],["gascarrier",6]]],[[["opcodes",4]],["partialvmresult",6]],[[["abstractmemorysize",3,["gascarrier"]],["opcodes",4],["gascarrier",6]],["partialvmresult",6]],[[["abstractmemorysize",3,["gascarrier"]],["gascarrier",6]],["vmresult",6]],[[],["nativecostindex",4]],[[]],[[["nativecostindex",4]],["ordering",4]],[[],["costtable",3]],[[["internalgasunits",3,["gascarrier"]],["gascarrier",6]],["partialvmresult",6]],[[["nativecostindex",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["gascarrier",6],["gasunits",3,["gascarrier"]],["costtable",3]]],[[["vec",3],["gascost",3],["vec",3,["gascost"]]],["costtable",3]],[[]],[[["nativecostindex",4]],[["option",4,["ordering"]],["ordering",4]]],[[],[["gascarrier",6],["gasunits",3,["gascarrier"]]]],[[["bool",15]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[],["costtable",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["structtype",3]],[[],["type",4]],[[]],[[]],[[["structtype",3]],["ordering",4]],[[["type",4]],["ordering",4]],[[["structtype",3]],["bool",15]],[[["type",4]],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["structtype",3]],["bool",15]],[[["type",4]],["bool",15]],[[["structtype",3]],[["option",4,["ordering"]],["ordering",4]]],[[["type",4]],[["option",4,["ordering"]],["ordering",4]]],null,[[],[["partialvmresult",6,["type"]],["type",4]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[["char",15],["string",3]],["partialvmerror",3]],[[]],[[["u16",15],["functiondefinitionindex",3]],["partialvmerror",3]],[[["global",3],["vec",3,["global"]]],["partialvmerror",3]],[[["u16",15],["indexkind",4]],["partialvmerror",3]],[[["vec",3,["global"]],["global",3]],["partialvmerror",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["partialvmerror",3]],[[],["statuscode",4]],[[]],[[]],[[["statuscode",4]],["ordering",4]],null,[[],[["statuscode",4],["result",4,["statuscode"]]]],[[["statuscode",4]],["bool",15]],[[["internalgasunits",3,["gascarrier"]],["u64",15],["gascarrier",6]]],[[["location",4]],["vmerror",3]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["statuscode",4]],[[["gascarrier",6],["internalgasunits",3,["gascarrier"]],["partialvmresult",6]],["partialvmresult",6]],[[["gascarrier",6],["internalgasunits",3,["gascarrier"]],["value",3],["partialvmresult",6,["value"]]],["partialvmresult",6]],[[["usize",15],["nativecostindex",4],["costtable",3]],[["internalgasunits",3,["gascarrier"]],["gascarrier",6]]],[[["statuscode",4]],["partialvmerror",3]],[[["internalgasunits",3,["gascarrier"]],["gascarrier",6],["smallvec",3]]],[[["statuscode",4]],[["option",4,["ordering"]],["ordering",4]]],null,[[],["result",4]],[[],[["option",4,["error"]],["error",8]]],[[],["statustype",4]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u64",15]],[["statuscode",4],["result",4,["statuscode"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[["string",3]],["partialvmerror",3]],[[["u64",15]],["partialvmerror",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["partialvmresult",6]],[[["accountaddress",3]]],[[["movetypelayout",4]],["movevalue",4]],[[],["partialvmresult",6]],[[],["partialvmresult",6]],[[],["partialvmresult",6]],[[["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15],["type",4]],[["value",3],["partialvmresult",6,["value"]]]],[[["usize",15]],[["value",3],["partialvmresult",6,["value"]]]],[[],[["value",3],["partialvmresult",6,["value"]]]],[[["usize",15]],[["value",3],["partialvmresult",6,["value"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["value",3],["partialvmresult",6,["value"]]]],[[["value",3]],["partialvmresult",6]],[[],["partialvmresult",6]],[[],[["partialvmresult",6,["bool"]],["bool",15]]],[[],[["structref",3],["partialvmresult",6,["structref"]]]],[[],[["struct",3],["partialvmresult",6,["struct"]]]],[[],[["partialvmresult",6,["reference"]],["reference",3]]],[[],[["integervalue",4],["partialvmresult",6,["integervalue"]]]],[[],[["accountaddress",3],["partialvmresult",6,["accountaddress"]]]],[[],[["partialvmresult",6,["u128"]],["u128",15]]],[[],[["u64",15],["partialvmresult",6,["u64"]]]],[[],[["partialvmresult",6,["u8"]],["u8",15]]],[[],[["partialvmresult",6,["signerref"]],["signerref",3]]],[[],[["vec",3,["u8"]],["partialvmresult",6,["vec"]]]],[[],[["vectorref",3],["partialvmresult",6,["vectorref"]]]],[[],[["vector",3],["partialvmresult",6,["vector"]]]],[[],[["partialvmresult",6,["u8"]],["u8",15]]],[[],[["partialvmresult",6,["u128"]],["u128",15]]],[[],[["u64",15],["partialvmresult",6,["u64"]]]],[[],[["partialvmresult",6,["u128"]],["u128",15]]],[[],[["u64",15],["partialvmresult",6,["u64"]]]],[[],[["partialvmresult",6,["u8"]],["u8",15]]],[[["usize",15]],[["value",3],["partialvmresult",6,["value"]]]],[[],["partialvmresult",6]],null,[[["constant",3]],[["option",4,["value"]],["value",3]]],[[["type",4]],["partialvmresult",6]],[[],["partialvmresult",6]],[[["type",4]],[["value",3],["partialvmresult",6,["value"]]]],[[],[["partialvmresult",6,["bool"]],["bool",15]]],[[],[["partialvmresult",6,["bool"]],["bool",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["partialvmresult",6,["bool"]],["bool",15]]],[[],[["partialvmresult",6,["bool"]],["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["globalvalueeffect",4,["value"]],["partialvmresult",6,["globalvalueeffect"]]]],[[],["value",3]],[[],["bool",15]],[[],[["partialvmresult",6,["bool"]],["bool",15]]],[[["type",4]],[["value",3],["partialvmresult",6,["value"]]]],[[],[["partialvmresult",6,["bool"]],["bool",15]]],[[],[["value",3],["partialvmresult",6,["value"]]]],[[["usize",15]],[["value",3],["partialvmresult",6,["value"]]]],[[["value",3]],["partialvmresult",6]],[[],["partialvmresult",6]],[[["usize",15]]],[[]],[[["value",3],["type",4],["vec",3,["value"]]],[["value",3],["partialvmresult",6,["value"]]]],[[["intoiterator",8]]],[[["type",4]],[["value",3],["partialvmresult",6,["value"]]]],null,[[["value",3],["type",4]],["partialvmresult",6]],[[],[["value",3],["partialvmresult",6,["value"]]]],[[],[["value",3],["partialvmresult",6,["value"]]]],[[],["partialvmresult",6]],[[["u8",15]],["partialvmresult",6]],[[["u8",15]],["partialvmresult",6]],[[["accountaddress",3]]],[[["accountaddress",3]]],[[["movetypelayout",4]],[["option",4,["value"]],["value",3]]],[[["movestructlayout",4]],[["option",4,["struct"]],["struct",3]]],[[["movetypelayout",4]],[["option",4,["vec"]],["vec",3,["u8"]]]],[[["movestructlayout",4]],[["option",4,["vec"]],["vec",3,["u8"]]]],[[],[["abstractmemorysize",3,["gascarrier"]],["gascarrier",6]]],[[],[["abstractmemorysize",3,["gascarrier"]],["gascarrier",6]]],[[],[["abstractmemorysize",3,["gascarrier"]],["gascarrier",6]]],[[],[["abstractmemorysize",3,["gascarrier"]],["gascarrier",6]]],[[["usize",15],["value",3]],["partialvmresult",6]],[[["struct",3]]],[[],["partialvmresult",6]],[[["usize",15],["type",4]],["partialvmresult",6]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["u128",15]]],[[["u64",15]]],[[["u8",15]]],[[["u64",15],["type",4]],[["vec",3,["value"]],["partialvmresult",6,["vec"]]]],[[],["partialvmresult",6]],[[],["partialvmresult",6]],[[],["partialvmresult",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["value",3]],["partialvmresult",6]],null,null,null,null,[[["locals",3]],["partialvmresult",6]],[[["reference",3]],["partialvmresult",6]],[[["value",3]],["partialvmresult",6]],[[]],[[]],[[["movetypelayout",4]]]],"p":[[8,"DataStore"],[4,"NativeCostIndex"],[3,"GasStatus"],[4,"Type"],[3,"StructType"],[13,"Vector"],[13,"Struct"],[13,"StructInstantiation"],[13,"Reference"],[13,"MutableReference"],[13,"TyParam"],[4,"StatusCode"],[3,"PartialVMError"],[3,"NativeResult"],[4,"GlobalValueEffect"],[4,"IntegerValue"],[3,"Value"],[3,"SignerRef"],[3,"VectorRef"],[3,"Vector"],[3,"StructRef"],[3,"Reference"],[3,"Locals"],[3,"Struct"],[3,"GlobalValue"],[8,"VMValueCast"],[13,"Changed"],[13,"U8"],[13,"U64"],[13,"U128"]]},\
"mvhashmap":{"doc":"","t":[4,3,13,13,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Error","MVHashMap","NotInMap","UnexpectedWrite","Version","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","init","init","into","into","len","new_from","new_from_parallel","read","skip","skip_if_not_set","try_from","try_from","try_into","try_into","type_id","type_id","write"],"q":["mvhashmap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","A structure that holds placeholders for each write to the …","","","","","","","","","","","","","","","","","","Get the number of keys in the MVHashMap.","Create the MVHashMap structure from a list of possible …","Create the MVHashMap structure from a list of possible …","Get the value of <code>key</code> at <code>version</code>. Returns Ok(val) if such …","Skips writing to <code>key</code> at <code>version</code>. Function will return an …","Skips writing to <code>key</code> at <code>version</code> if that entry hasn’t …","","","","","","","Write to <code>key</code> at <code>version</code>. Function will return an error if …"],"i":[0,0,1,1,0,2,1,2,1,2,1,2,1,2,1,1,2,1,2,1,2,1,2,2,2,2,2,2,2,1,2,1,2,1,2],"f":[null,null,null,null,null,[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[["vec",3]]],[[["vec",3]]],[[["version",6]],[["result",4,["option"]],["option",4,["version"]]]],[[["version",6]],[["result",4,["error"]],["error",4]]],[[["version",6]],[["result",4,["error"]],["error",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["version",6]],[["result",4,["error"]],["error",4]]]],"p":[[4,"Error"],[3,"MVHashMap"]]},\
"netcore":{"doc":"Core types and traits for building Peer to Peer networks.","t":[0,0,5,5,4,16,13,16,16,13,16,16,8,8,0,11,11,11,11,0,11,11,11,10,11,11,11,11,11,11,11,10,0,0,11,0,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,6,6,6,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11],"n":["framing","transport","read_u16frame","write_u16frame","ConnectionOrigin","Error","Inbound","Inbound","Listener","Outbound","Outbound","Output","Transport","TransportExt","and_then","and_then","as_str","borrow","borrow_mut","boxed","boxed","clone","clone_into","dial","eq","equivalent","fmt","fmt","from","hash","into","listen_on","memory","proxy_protocol","serialize","tcp","test_only_hash","to_owned","to_string","try_from","try_into","type_id","vzip","AndThen","AndThenFuture","AndThenStream","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","dial","fmt","fmt","from","from","from","into","into","into","into_future","listen_on","poll","poll_next","try_from","try_from","try_from","try_into","try_into","try_into","try_poll","try_poll_next","type_id","type_id","type_id","vzip","vzip","vzip","BoxedTransport","Inbound","Listener","Outbound","borrow","borrow_mut","dial","from","into","listen_on","try_from","try_into","type_id","vzip","Listener","MemoryTransport","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","dial","fmt","fmt","from","from","into","into","listen_on","new","poll_next","to_owned","try_from","try_from","try_into","try_into","try_poll_next","type_id","type_id","vzip","vzip","read_header","TcpListenerStream","TcpOutbound","TcpSocket","TcpTransport","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","dial","fmt","fmt","from","from","from","from","into","into","into","into","into_future","listen_on","new","nodelay","poll","poll_close","poll_flush","poll_next","poll_read","poll_write","resolve_and_connect","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_poll","try_poll_next","ttl","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip"],"q":["netcore","","netcore::framing","","netcore::transport","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","netcore::transport::and_then","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","netcore::transport::boxed","","","","","","","","","","","","","","netcore::transport::memory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","netcore::transport::proxy_protocol","netcore::transport::tcp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Low-level module for establishing connections with peers","Read a u16 length prefixed frame from <code>Stream</code> into <code>buf</code>.","Write the contents of <code>buf</code> to <code>stream</code> prefixed with a u16 …","Origin of how a Connection was established.","The Error type of errors which can happen while …","<code>Inbound</code> indicates that we are the listener for this …","A pending <code>Output</code> for an inbound connection, obtained from …","A stream of <code>Inbound</code> connections and the address of the …","<code>Outbound</code> indicates that we are the dialer for this …","A pending <code>Output</code> for an outbound connection, obtained from …","The result of establishing a connection.","A Transport is responsible for establishing connections …","An extension trait for <code>Transport</code>s that provides a variety …","","Applies a function producing an asynchronous result to …","","","","","Turns a <code>Transport</code> into an abstract boxed transport.","","","Dials the given <code>NetworkAddress</code>, returning a future for a …","","","","","","","","Listens on the given <code>NetworkAddress</code>, returning a stream of …","","An implementation of ProxyProtocol for HAProxy","","TCP Transport","","","","","","","","An <code>AndThen</code> is a transport which applies a closure (F) to …","Future generated by the <code>AndThen</code> transport.","Listener stream returned by listen_on on an AndThen …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See the boxed method for more information.","","","","","","","","","","","","","","","Transport to build in-memory connections","","","","","","","","","","","","","","","","","","","","","","","","","","","","Read a proxy protocol event and unwrap the address …","","","A wrapper around a tokio TcpStream","Transport to build TCP connections","","","","","","","","","","","","","","","","","","","","","","","","","","<code>TCP_NODELAY</code> to set for opened sockets, or <code>None</code> to keep …","","","","","","","Note: we need to take ownership of this <code>NetworkAddress</code> …","","","","","","","","","","","","TTL to set for opened sockets, or <code>None</code> to keep default.","","","","","","","",""],"i":[0,0,0,0,0,1,2,1,1,2,1,1,0,0,0,3,2,2,2,0,3,2,2,1,2,2,2,2,2,2,2,1,0,0,2,0,2,2,2,2,2,2,2,0,0,0,4,5,6,4,5,6,4,5,6,4,5,6,4,5,6,6,4,6,5,4,5,6,4,5,6,6,5,4,5,6,4,5,6,0,0,0,0,7,7,7,7,7,7,7,7,7,7,0,0,8,9,8,9,8,8,8,8,8,9,8,9,8,9,8,9,9,8,8,9,8,9,9,8,9,8,9,0,0,0,0,0,10,11,12,13,10,11,12,13,12,12,12,12,12,13,10,11,12,13,10,11,12,13,11,12,13,12,11,13,13,10,13,13,0,12,10,11,12,13,10,11,12,13,11,10,12,10,11,12,13,10,11,12,13],"f":[null,null,[[["bytesmut",3]]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[],["andthen",3]],[[],["str",15]],[[]],[[]],null,[[],["boxedtransport",3]],[[],["connectionorigin",4]],[[]],[[["peerid",3],["networkaddress",3]],["result",4]],[[["connectionorigin",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["networkaddress",3]],["result",4]],null,null,[[],["result",4]],null,[[],["hashvalue",3]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["peerid",3],["networkaddress",3]],["result",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["networkaddress",3]],["result",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["context",3],["pin",3]],["poll",4]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[["peerid",3],["networkaddress",3]],["result",4]],[[]],[[]],[[["networkaddress",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[]],[[]],[[],["memorytransport",3]],[[]],[[],["memorytransport",3]],[[["peerid",3],["networkaddress",3]],["result",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["networkaddress",3]],["result",4]],[[["memorylistener",3]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[["networkaddress",3]]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["tcptransport",3]],[[]],[[],["tcptransport",3]],[[["peerid",3],["networkaddress",3]],["result",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["networkaddress",3]],["result",4]],[[["tcpstream",3]]],null,[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],[["result",6],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",6],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["result",6,["usize"]],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",6,["usize"]],["poll",4,["result"]]]],[[["networkaddress",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["context",3],["pin",3]],["poll",4]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]]],"p":[[8,"Transport"],[4,"ConnectionOrigin"],[8,"TransportExt"],[3,"AndThen"],[3,"AndThenStream"],[3,"AndThenFuture"],[3,"BoxedTransport"],[3,"MemoryTransport"],[3,"Listener"],[3,"TcpListenerStream"],[3,"TcpOutbound"],[3,"TcpTransport"],[3,"TcpSocket"]]},\
"network":{"doc":"","t":[6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,3,8,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,4,3,4,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,4,4,13,13,13,18,13,13,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,17,17,17,17,17,7,7,7,7,7,7,7,7,7,7,7,7,17,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,17,17,17,17,17,5,5,5,5,5,5,5,5,5,5,5,5,13,13,3,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,7,5,5,5,5,3,4,13,13,3,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,3,4,4,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,5,5,13,13,4,4,3,13,13,13,13,13,6,13,13,13,13,13,13,3,4,4,4,3,13,13,13,13,13,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,4,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,6,6,5,0,0,0,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,3,4,6,3,3,13,3,13,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,3,8,4,13,8,13,3,3,8,8,13,13,8,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,10,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,3,3,3,3,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,0,0,0,13,13,13,13,13,4,3,13,13,13,13,13,4,13,4,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,0,13,3,13,13,13,4,13,13,4,3,3,13,4,13,3,6,4,6,3,13,13,3,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,17,3,17,17,8,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11],"n":["ConnectivityRequest","DisconnectReason","ProtocolId","application","connectivity_manager","constants","counters","error","fuzzing","logging","noise","peer","peer_manager","protocols","testutils","transport","interface","storage","types","AppData","AppDataKey","MultiNetworkSender","NetworkInterface","app_data","borrow","borrow_mut","clone","clone_into","connected_peers","deref","deref_mut","drop","filtered_peers","fmt","from","init","into","new","peer_metadata_storage","peers","send_rpc","send_to","send_to_many","sender","to_owned","try_from","try_into","type_id","vzip","LockingHashMap","PeerMetadataStorage","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","init","init","insert","insert","insert_connection","into","into","keys","keys","networks","new","new","read","read","read_all","read_all","read_filtered","read_filtered","remove","remove","remove_connection","test","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write","write","write_lock","write_lock","Connected","Disconnected","Disconnecting","NotFound","PeerError","PeerInfo","PeerState","active_connection","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","is_connected","new","partial_cmp","status","supports_protocol","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Config","ConnectivityManager","ConnectivityRequest","DiscoverySource","File","GetConnectedSize","GetDialQueueSize","NUM_VARIANTS","OnChainValidatorSet","UpdateDiscoveredPeers","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone_into","cmp","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","erased_serialize","erased_serialize","fmt","fmt","fmt","from","from","from","hash","init","init","init","into","into","into","new","partial_cmp","serialize","serialize","start","test_only_hash","test_only_hash","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0","0","1","ConnectivityManagerBuilder","ConnectivityManagerService","borrow","borrow_mut","conn_mgr_reqs_tx","create","deref","deref_mut","drop","from","init","into","start","try_from","try_into","type_id","vzip","INBOUND_RPC_TIMEOUT_MS","MAX_CONCURRENT_INBOUND_RPCS","MAX_CONCURRENT_NETWORK_NOTIFS","MAX_CONCURRENT_NETWORK_REQS","MAX_CONCURRENT_OUTBOUND_RPCS","MAX_FRAME_SIZE","NETWORK_CHANNEL_SIZE","CANCELED_LABEL","DECLINED_LABEL","DIEM_CONNECTIONS","DIEM_CONNECTIONS_REJECTED","DIEM_NETWORK_CONNECTION_UPGRADE_TIME","DIEM_NETWORK_DIRECT_SEND_BYTES","DIEM_NETWORK_DIRECT_SEND_MESSAGES","DIEM_NETWORK_DISCOVERY_NOTES","DIEM_NETWORK_INBOUND_RPC_HANDLER_LATENCY","DIEM_NETWORK_OUTBOUND_RPC_REQUEST_LATENCY","DIEM_NETWORK_PEER_CONNECTED","DIEM_NETWORK_PENDING_CONNECTION_UPGRADES","DIEM_NETWORK_RPC_BYTES","DIEM_NETWORK_RPC_MESSAGES","FAILED_LABEL","INVALID_NETWORK_MESSAGES","NETWORK_RATE_LIMIT_METRICS","PEER_SEND_FAILURES","PENDING_CONNECTION_HANDLER_NOTIFICATIONS","PENDING_CONNECTIVITY_MANAGER_REQUESTS","PENDING_DIRECT_SEND_NOTIFICATIONS","PENDING_DIRECT_SEND_REQUESTS","PENDING_DISCOVERY_NETWORK_EVENTS","PENDING_HEALTH_CHECKER_NETWORK_EVENTS","PENDING_NETWORK_NOTIFICATIONS","PENDING_NETWORK_REQUESTS","PENDING_PEER_DIRECT_SEND_NOTIFICATIONS","PENDING_PEER_MANAGER_DIAL_REQUESTS","PENDING_PEER_MANAGER_REQUESTS","PENDING_PEER_NETWORK_NOTIFICATIONS","PENDING_PEER_REQUESTS","PENDING_PEER_RPC_NOTIFICATIONS","PENDING_RPC_NOTIFICATIONS","PENDING_RPC_REQUESTS","PENDING_WIRE_MESSAGES","RECEIVED_LABEL","REQUEST_LABEL","RESPONSE_LABEL","SENT_LABEL","SUCCEEDED_LABEL","connection_upgrade_time","connections","connections_rejected","direct_send_bytes","direct_send_messages","inbound_rpc_handler_latency","inc_by_with_context","outbound_rpc_request_latency","peer_connected","pending_connection_upgrades","rpc_bytes","rpc_messages","BcsError","IoError","NetworkError","NetworkErrorKind","NotConnected","PeerManagerError","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","init","init","into","into","source","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","exchange_handshake_input","fuzz_network_handshake_protocol_exchange","fuzz_network_handshake_protocol_negotiation","perform_handshake_input","NetworkSchema","borrow","borrow_mut","connection_id","connection_metadata","connection_metadata_with_address","connection_origin","deref","deref_mut","discovery_source","drop","from","init","into","network_address","network_context","new","remote_peer","try_from","try_into","type_id","visit","vzip","error","fuzzing","handshake","stream","BuildClientHandshakeMessageFailed","BuildServerHandshakeMessageFailed","ClientExpectingDifferentPubkey","ClientFinalizeFailed","ClientFlushFailed","ClientPeerIdMismatch","ClientReadFailed","ClientWriteFailed","InvalidClientPeerId","MissingAntiReplayTimestamp","MissingServerPublicKey","NoiseHandshakeError","SelfDialDetected","ServerParseClient","ServerReadFailed","ServerReplayDetected","ServerWriteFailed","UnauthenticatedClient","UnauthenticatedClientPubkey","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","init","into","should_security_log","to_string","try_from","try_into","type_id","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","1","1","1","1","1","1","2","KEYPAIRS","fuzz_initiator","fuzz_post_handshake","fuzz_responder","generate_corpus","AntiReplayTimestamps","HandshakeAuthMode","MaybeMutual","Mutual","NoiseUpgrader","TIMESTAMP_SIZE","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","init","init","init","into","into","into","is_replay","maybe_mutual","mutual","network_context","new","now","server_only","store_timestamp","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upgrade_inbound","upgrade_outbound","upgrade_with_noise","vzip","vzip","vzip","0","anti_replay_timestamps","trusted_peers","NoiseStream","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","get_remote_static","init","into","new","poll_close","poll_flush","poll_read","poll_write","try_from","try_into","type_id","vzip","ConnectionLost","DisconnectReason","Peer","PeerNotification","PeerRequest","RecvMessage","RecvRpc","Requested","SendDirectSend","SendRpc","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","equivalent","erased_serialize","fmt","fmt","fmt","fmt","from","from","from","from","fuzzing","init","init","init","init","into","into","into","into","ne","new","serialize","start","test_only_hash","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","0","0","0","0","fuzz","generate_corpus","AlreadyConnected","BcsError","ConnectionNotification","ConnectionRequest","ConnectionRequestSender","DialPeer","DisconnectPeer","Disconnected","Error","IoError","IpAddrTokenBucketLimiter","LostPeer","MpscSendError","NewConnection","NewPeer","NotConnected","OneshotSenderDropped","PeerManager","PeerManagerError","PeerManagerNotification","PeerManagerRequest","PeerManagerRequestSender","RecvMessage","RecvRpc","SendDirectSend","SendRpc","ShuttingDownPeer","TransportError","TransportNotification","WireReadError","WireWriteError","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone","clone","clone_into","clone_into","clone_into","conn_notifs_channel","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dial_peer","disconnect_peer","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_transport_error","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","listen_addr","ne","new","new","new","send_rpc","send_to","send_to_many","serialize","serialize","serialize","serialize","source","start","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_connected_peers_metrics","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","1","1","2","0","0","1","1","2","0","0","0","0","0","0","0","0","0","0","0","1","1","0","0","1","1","0","0","1","AuthenticationMode","MaybeMutual","Mutual","PeerManagerBuilder","add_client","add_connection_event_listener","add_p2p_service","add_service","borrow","borrow","borrow_mut","borrow_mut","build","connection_reqs_tx","create","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","init","init","into","into","listen_address","start","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","Receiver","Sender","new","direct_send","health_checker","identity","network","rpc","wire","Message","borrow","borrow_mut","clone","clone_into","data","deref","deref_mut","drop","eq","equivalent","erased_serialize","fmt","from","init","into","mdata","ne","protocol_id","protocol_id","serialize","test_only_hash","to_owned","try_from","try_into","type_id","vzip","HealthChecker","HealthCheckerMsg","HealthCheckerNetworkEvents","HealthCheckerNetworkSender","Ping","Ping","Pong","Pong","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","disconnect_peer","drop","drop","drop","drop","drop","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","from","from","from","from","from","init","init","init","init","init","into","into","into","into","into","network_endpoint_config","new","new","send_rpc","serialize","serialize","serialize","start","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","0","0","HealthCheckerBuilder","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","new","start","try_from","try_into","type_id","vzip","exchange_handshake","AppConfig","ApplicationNetworkSender","Event","LostPeer","Message","Message","NetworkEvents","NetworkSender","NewNetworkEvents","NewNetworkSender","NewPeer","RpcRequest","SerializedRequest","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","clone","clone","clone_into","clone_into","data","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dial_peer","disconnect_peer","drop","drop","drop","drop","eq","fmt","fmt","from","from","from","from","inbound_queue","init","init","init","init","into","into","into","into","is_terminated","new","new","new","new","p2p","poll_next","protocol_id","protocols","send_rpc","send_rpc","send_to","send_to","send_to_many","send_to_many","service","size_hint","to_message","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","0","0","0","0","1","1","2","3","InboundRpcRequest","InboundRpcs","OutboundRpcRequest","OutboundRpcs","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","data","data","data","data","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","erased_serialize","error","fmt","fmt","from","from","from","from","handle_completed_request","handle_inbound_request","handle_inbound_response","handle_outbound_request","init","init","init","init","into","into","into","into","new","new","next_completed_request","next_completed_response","protocol_id","protocol_id","protocol_id","protocol_id","res_tx","res_tx","send_outbound_response","serialize","test_only_hash","timeout","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","ApplicationError","BcsError","Error","InvalidRpcResponse","IoError","MpscSendError","NotConnected","RpcError","TimedOut","TooManyPending","UnexpectedResponseChannelCancel","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","from","from","from","from","from","init","into","source","to_string","try_from","try_into","type_id","vzip","0","0","0","0","0","0","0","handshake","messaging","v1","ConsensusDirectSendBcs","ConsensusDirectSendJson","ConsensusRpcBcs","ConsensusRpcJson","DiscoveryDirectSend","HandshakeError","HandshakeMsg","HealthCheckerRpc","InvalidChainId","InvalidNetworkId","MempoolDirectSend","MempoolRpc","MessagingProtocolVersion","NoCommonProtocols","ProtocolId","ProtocolIdSet","StateSyncDirectSend","StorageServiceRpc","V1","all","all_known","arbitrary_with","arbitrary_with","arbitrary_with","as_str","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_id","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","contains","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","empty","eq","eq","eq","eq","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bytes","from_iter","from_iter","hash","hash","init","init","init","init","init","insert","intersect","into","into","into","into","into","is_empty","iter","ne","ne","network_id","partial_cmp","perform_handshake","serialize","serialize","serialize","serialize","supported_protocols","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_bytes","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","vzip","vzip","vzip","vzip","vzip","0","0","1","1","v1","DeserializeError","DirectSendMsg","DirectSendMsg","DirectSendMsg","Error","ErrorCode","IoError","IoError","NetworkMessage","NetworkMessageSink","NetworkMessageStream","NotSupported","NotSupportedType","ParsingError","ParsingErrorType","Priority","ReadError","RequestId","RpcRequest","RpcRequest","RpcRequest","RpcResponse","RpcResponse","SerializeError","WriteError","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","ne","ne","ne","ne","ne","ne","ne","network_message_frame_codec","new","new","parsing_error","poll_close","poll_flush","poll_next","poll_ready","priority","priority","priority","protocol_id","protocol_id","raw_msg","raw_request","raw_response","request_id","request_id","serialize","serialize","serialize","serialize","serialize","serialize","serialize","source","source","start_send","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","1","2","0","0","fake_socket","ReadOnlyTestSocket","ReadOnlyTestSocketVec","ReadWriteTestSocket","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","new","new","new_pair","poll_close","poll_close","poll_close","poll_flush","poll_flush","poll_flush","poll_read","poll_read","poll_read","poll_write","poll_write","poll_write","save_writing","set_fragmented_read","set_fragmented_read","set_fragmented_read","set_fragmented_write","set_trailing","set_trailing","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Connection","ConnectionId","ConnectionMetadata","DIEM_TCP_TRANSPORT","DiemNetTransport","SUPPORTED_MESSAGING_PROTOCOL","TRANSPORT_TIMEOUT","TSocket","UpgradeContext","addr","application_protocols","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","connection_id","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dial","dial","drop","drop","drop","drop","drop","eq","eq","equivalent","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","init","init","init","init","init","into","into","into","into","into","listen_on","listen_on","messaging_protocol","metadata","mock","mock_with_role_and_origin","ne","ne","new","new","new","origin","remote_peer_id","role","serialize","serialize","socket","test_only_hash","test_only_hash","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upgrade_outbound","vzip","vzip","vzip","vzip","vzip"],"q":["network","","","","","","","","","","","","","","","","network::application","","","network::application::interface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","network::application::storage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","network::application::types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","network::connectivity_manager","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","network::connectivity_manager::ConnectivityRequest","","","","network::connectivity_manager::builder","","","","","","","","","","","","","","","","","network::constants","","","","","","","network::counters","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","network::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","network::fuzzing","","","","network::logging","","","","","","","","","","","","","","","","","","","","","","","network::noise","","","","network::noise::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","network::noise::error::NoiseHandshakeError","","","","","","","","","","","","","","","","","","","","","","","","","network::noise::fuzzing","","","","","network::noise::handshake","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","network::noise::handshake::HandshakeAuthMode","","","network::noise::stream","","","","","","","","","","","","","","","","","","","","network::peer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","network::peer::PeerNotification","","network::peer::PeerRequest","","network::peer::fuzzing","","network::peer_managernetwork::peer_manager::ConnectionNotification","","","","","network::peer_manager::ConnectionRequest","","","","","network::peer_manager::PeerManagerError","","","","","","","","","network::peer_manager::PeerManagerNotification","","","","network::peer_manager::PeerManagerRequest","","","","network::peer_manager::TransportNotification","","","network::peer_manager::builder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","network::peer_manager::builder::AuthenticationMode","","network::peer_manager::conn_notifs_channel","","","network::protocols","","","","","","network::protocols::direct_send","","","","","","","","","","","","","","","","","","","","","","","","","","","network::protocols::health_checker","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","network::protocols::health_checker::HealthCheckerMsg","","network::protocols::health_checker::builder","","","","","","","","","","","","","","","network::protocols::identity","network::protocols::network","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","network::protocols::network::Event","","","","","","","","network::protocols::rpc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","network::protocols::rpc::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","network::protocols::rpc::error::RpcError","","","","","","","network::protocols::wire","","network::protocols::wire::handshake","network::protocols::wire::handshake::v1","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","network::protocols::wire::handshake::v1::HandshakeError","","","","network::protocols::wire::messaging","network::protocols::wire::messaging::vnetwork::protocols::wire::messaging::v1::ErrorCode","","network::protocols::wire::messaging::v1::NetworkMessage","","","","network::protocols::wire::messaging::v1::NotSupportedType","","network::protocols::wire::messaging::v1::ReadError","","","","network::protocols::wire::messaging::v1::WriteError","","network::testutils","network::testutils::fake_socket","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","network::transport","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","The ConnectivityManager actor is responsible for ensuring …","","","","","This module is to contain all networking logging …","This crate implements wrappers around our Noise …","<code>Peer</code> manages a single connection to a remote peer after …","The PeerManager module is responsible for establishing …","Protocols used by network module for external APIs and …","","","","","","The application specific data to be stored","The application specific key for <code>AppData</code>","","A generic <code>NetworkInterface</code> for applications to connect to …","Application specific data interface","","","","","Retrieve only connected peers","","","","Filter peers with according <code>filter</code>","","","","","","Provides the <code>PeerMetadataStorage</code> for other functions.  Not …","Retrieve PeerInfo for the node","","","","Give a copy of the sender for the network","","","","","","A generic locking hash map with ability to read before …","Metadata storage for peers across all of networking.  …","","","","","","","","","","","","","","","","","Insert new entry","Insert new entry","","","","","All keys of the hash map","","Create a new <code>PeerMetadataStorage</code> <code>NetworkId</code>s must be known …","","","Get a clone of the value","Read a clone of the entire state","Read a clone of the entire state","","Filtered read clone based on keys or values","Remove old entries","Remove old entries","","","","","","","","","","","Take in a function to modify the data, must handle …","Take in a function to modify the data, must handle …","Get the underlying <code>RwLock</code> of the map.  Usage is …","Get the underlying <code>RwLock</code> of the map.  Usage is …","","","","","Errors related to the peer layer in the <code>NetworkInterface</code>","Descriptor of a Peer and how it should rank","The current state of a <code>Peer</code> at any one time TODO: Allow …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The ConnectivityManager actor.","Requests received by the <code>ConnectivityManager</code> manager actor …","Different sources for peer addresses, ordered by priority …","","Gets current size of connected peers. This is useful in …","Gets current size of dial queue. This is useful in tests.","The number of variants in this enum.","","Update set of discovered peers and associated info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new instance of the <code>ConnectivityManager</code> actor.","","","","Starts the <code>ConnectivityManager</code> actor.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A collection of constants and default values for …","Limit on concurrent Inbound RPC requests before …","","","Limit on concurrent Outbound RPC requests before …","","","","","","","","","","","","","","","","","","","","","Counter of pending Connection Handler notifications to …","Channel Counters","Counter of pending Direct Send notifications to Network …","Counter of pending requests in Direct Send","Counter of pending network events to Discovery.","Counter of pending network events to Health Checker.","Counters(queued,dequeued,dropped) related to inbound …","Counter of pending requests in Network Provider","Counter of pending DirectSend events from Peer to …","Counter of pending dial requests in Peer Manager","Counter of pending requests in Peer Manager","Counter of pending connection notifications from Peer to …","Counter of pending requests for each remote peer","Counter of pending RPC events from Peer to Rpc actor.","Counter of pending RPC notifications to Network Provider","Counter of pending requests in RPC","Counter of messages pending in queue to be sent out on the …","","","","","","","","","","","","Increments the counter based on <code>NetworkContext</code>","","","","","","","","Errors propagated from the network module.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds two HandshakeMsg and serializes the second one. It …","Fuzzing the handshake protocol, which negotiates protocols …","Same function as fuzz_network_handshake_protocol_exchange …","Builds two HandshakeMsg and serializes the second one. It …","","","","","","","","","","","","","","","","","","","","","","","","","","The handshake module implements the handshake part of the …","The socket module implements the post-handshake part of …","","","","","","","","","","","","Different errors than can be raised when negotiating a …","","","","","","","","","","","","","","","","","","Errors that are either clear bugs or indicate some …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fuzz a client during the handshake","Fuzz a peer post-handshake","Fuzz a server during the handshake","","In a mutually authenticated network, a client message is …","Noise handshake authentication mode.","In <code>MaybeMutual</code> mode, the dialer authenticates the server …","In <code>Mutual</code> mode, both sides will authenticate each other …","The Noise configuration to be used to perform a protocol …","The timestamp is sent as a payload, so that it is …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the timestamp has already been observed …","","","The validator’s network context","Create a new NoiseConfig with the provided keypair and …","obtain the current timestamp","","Stores the timestamp","","","","","","","","","","Perform an inbound protocol upgrade on this connection.","Perform an outbound protocol upgrade on this connection.","Perform a protocol upgrade on an underlying connection. In …","","","","","","","A Noise stream with a remote peer.","","","","","","","","Pull out the static public key of the remote","","","Create a NoiseStream from a socket and a noise …","","","","","","","","","","The reason for closing a connection.","The <code>Peer</code> actor manages a single connection to another …","Notifications that <code>Peer</code> sends to the <code>PeerManager</code>.","Requests <code>Peer</code> receives from the <code>PeerManager</code>.","A new message has been received from peer.","A new RPC request has been received from peer.","","Fire-and-forget style message send to peer.","Send an RPC request to peer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fuzz the <code>Peer</code> actor’s inbound message handling.","Generate a sequence of <code>NetworkMessage</code>, bcs serialize them, …","","","","","Convenience wrapper which makes it easy to issue …","","","","","","","Connection to a peer has been terminated. This could have …","","","Connection with a new peer has been established.","","","Responsible for handling and maintaining connections to …","","Notifications sent by PeerManager to upstream actors.","Request received by PeerManager from upstream actors.","Convenience wrapper which makes it easy to issue …","A new message has been received from a remote peer.","A new RPC request has been received from a remote peer.","Fire-and-forget style message send to a remote peer.","Send an RPC request to a remote peer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>conn_notifs_channel</code> is a channel which delivers to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the <code>NetworkAddress</code> we’re listening for incoming …","","Construct a new PeerManager actor","Construct a new PeerManagerRequestSender with a raw …","Construct a new ConnectionRequestSender with a raw …","Sends a unary RPC to a remote peer and waits to either …","Send a fire-and-forget direct-send message to remote peer.","Send the <em>same</em> message to many recipients using the …","","","","","","Start listening on the set address and return a future …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Inbound and Outbound connections are always secured with …","Inbound connections will first be checked against the …","Both dialer and listener will verify public keys of each …","","Register a client that’s interested in some set of …","","Register a peer-to-peer service (i.e., both client and …","Register a service for handling some protocols.","","","","","Create the configured transport and start PeerManager. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Protocol used to ensure peer liveness","Protocol used to exchange supported protocol information …","Convenience Network API for Diem","Implementation of the unary RPC protocol as per DiemNet …","This module defines the structs transported during the …","","","","","","","","","","","","","","","","","The serialized request data received from the sender. At …","","","The <code>ProtocolId</code> for which of our upstream application …","","","","","","","","The actor performing health checks by running the Ping …","","The interface from Network to HealthChecker layer.","The interface from HealthChecker to Networking layer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configuration for the network endpoints to support …","Create new instance of the <code>HealthChecker</code> actor.","","Send a HealthChecker Ping RPC request to remote peer …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The Handshake exchange protocol.","Configuration needed for DiemNet applications to register …","A simplified version of <code>NetworkSender</code> that doesn’t use …","Events received by network clients in a validator","Peer with which we’ve lost our connection.","","New inbound direct-send message from peer.","A <code>Stream</code> of <code>Event&lt;TMessage&gt;</code> from the lower network layer …","<code>NetworkSender</code> is the generic interface from upper network …","Trait specifying the signature for <code>new()</code> <code>NetworkEvents</code>","Trait specifying the signature for <code>new()</code> <code>NetworkSender</code>s","Peer which we have a newly established connection with.","New inbound rpc request. The request is fulfilled by …","Generalized functionality for any request across <code>DirectSend</code>…","","","","","","","","","DiemNet client configuration. Requires the set of …","","","","","","","","","","","","","","","Request that a given Peer be dialed at the provided …","Request that a given Peer be disconnected and …","","","","","","","","","","","","The config for the inbound message queue from network to …","","","","","","","","","","","","","","DiemNet peer-to-peer service configuration. A peer-to-peer …","","","The set of protocols needed for this application.","","Send a protobuf rpc request to a single recipient while …","Send a protobuf message to a single recipient. Provides a …","","Send a protobuf message to a many recipients. Provides a …","","DiemNet service configuration. Requires both the set of …","","Converts the <code>SerializedMessage</code> into its deserialized …","","","","","","","","","","","","","","","","","","","","","","","","","","","A wrapper struct for an inbound rpc request and its …","<code>InboundRpcs</code> handles new inbound rpc requests off the wire, …","A wrapper struct for an outbound rpc request and its …","<code>OutboundRpcs</code> handles new outbound rpc requests made from …","","","","","","","","","","","The serialized request data received from the sender. At …","The serialized request data to be sent to the receiver. At …","","","","","","","","","","","","","","","Rpc protocol errors","","","","","","","Handle a newly completed task from the …","Handle a new inbound <code>RpcRequest</code> message off the wire.","Handle a new inbound <code>RpcResponse</code> message. If we have a …","Handle a new outbound rpc request from the application …","","","","","","","","","","","Method for <code>Peer</code> actor to drive the pending outbound rpc …","Method for <code>Peer</code> actor to drive the pending inbound rpc …","","","The <code>ProtocolId</code> for which of our upstream application …","The remote peer’s application module that should handle …","Channel over which the rpc response is sent from the upper …","Channel over which the rpc response is sent from the rpc …","Handle a completed response from the application handler. …","","","The timeout duration for the entire rpc call. If the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This module defines the structs transported during the …","","","","","","An enum to list the possible errors during the diem …","The HandshakeMsg contains a mapping from …","","","","","","Enum representing different versions of the Diem network …","","Unique identifier associated with each application …","A compact representation for a set of <code>ProtocolId</code>s. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns if the protocol is set.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Insert a new protocol into the set.","Find the intersection between two sets of protocols.","","","","","","","Iterate over all <code>ProtocolId</code>s, ignoring any that our node …","","","","","This function:","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the union of two sets of protocols.","","","","","","","","","","This module defines the DiemNet v1 message types, how they …","","","","","","","","","Most primitive message type set on the network.","A <code>Sink</code> of outbound <code>NetworkMessage</code>s that will be serialized …","A <code>Stream</code> of inbound <code>NetworkMessage</code>s read and deserialized …","A message was received for a protocol that is not …","Flags an unsupported network message.  This is a message …","Failed to parse NetworkMessage when interpreting according …","Flags an invalid network message with as much header …","Create alias Priority for u8.","Errors from reading and deserializing network messages off …","Create alias RequestId for <code>u32</code>.","","","","","","","Errors from serializing and sending network messages on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a fully configured length-delimited codec for …","","","","","","","","Request priority in the range 0..=255.","Response priority in the range 0..=255. This will likely …","Message priority in the range 0..=255.","<code>protocol_id</code> is a variant of the ProtocolId enum.","<code>protocol_id</code> is a variant of the ProtocolId enum.","Message payload.","Request payload. This will be parsed by the …","Response payload.","RequestId for the RPC Request.","RequestId for corresponding request. This is copied as is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This module exposes two types of sockets useful for tests:","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new pair of sockets","Attempt to close the channel. Cannot Fail.","Attempt to close the channel. Cannot Fail.","Attempt to close the channel. Cannot Fail.","","","","","","","","","","the vec passed as argument will expand to store any writes …","reads will be done byte-by-byte","reads will be done byte-by-byte","reads will be done byte-by-byte","writes will be done byte-by-byte","reads will never return pending, but 0s","reads will never return pending, but 0s","","","","","","","","","","","","","The <code>Connection</code> struct consists of connection metadata and …","Unique local identifier for a connection.","Metadata associated with an established and fully upgraded …","tcp::Transport with Diem-specific configuration applied.","The common DiemNet Transport.","Currently supported messaging protocol version. TODO: Add …","A timeout for the connection to open and complete all of …","A trait alias for “socket-like” things.","Common context for performing both inbound and outbound …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Dial a peer at <code>addr</code>. If the <code>addr</code> is not supported or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Listen on address <code>addr</code>. If the <code>addr</code> is not supported or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Upgrade an inbound connection. This means we run a Noise …","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,2,2,2,2,1,2,2,2,1,2,2,2,2,2,1,1,2,2,2,1,2,2,2,2,2,0,0,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,3,4,3,4,3,3,4,3,4,3,4,3,4,3,4,3,3,3,4,3,4,3,4,3,4,3,4,3,4,5,5,5,6,0,0,0,7,6,7,5,6,7,5,6,7,5,6,7,5,5,6,7,5,6,7,5,6,7,5,6,5,6,5,6,7,5,6,7,5,6,7,5,6,7,5,7,7,5,7,7,6,7,5,6,7,5,6,7,5,6,7,5,6,7,5,8,0,0,0,8,9,9,8,8,9,10,8,9,10,8,9,0,8,8,8,10,8,9,10,8,9,10,8,9,8,8,8,9,8,8,9,10,8,9,8,10,8,9,10,8,9,10,8,8,9,10,8,9,8,8,10,8,9,10,8,9,10,8,9,10,8,9,11,12,13,11,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,15,15,16,15,16,15,15,15,16,15,16,15,16,15,15,15,16,16,15,15,16,16,16,16,16,16,15,16,15,16,15,16,15,16,15,16,15,16,15,16,15,16,15,0,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,18,18,18,18,18,18,18,18,18,18,18,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,26,27,28,29,30,32,33,34,30,0,0,0,0,0,0,0,35,35,0,36,35,37,36,35,37,36,36,35,37,36,35,37,36,35,37,36,35,37,36,35,37,36,35,37,36,36,35,35,37,37,36,35,36,35,37,36,35,37,36,35,37,36,37,37,37,35,37,36,38,39,39,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,41,0,0,0,0,42,42,41,43,43,44,43,42,41,44,43,42,41,41,41,44,43,42,41,44,43,42,41,44,43,42,41,42,41,41,41,43,42,41,41,44,43,42,41,0,44,43,42,41,44,43,42,41,42,44,41,44,41,41,41,44,43,42,41,44,43,42,41,44,43,42,41,44,43,42,41,45,46,47,48,0,0,49,49,0,0,0,50,50,51,49,49,0,52,49,51,52,49,49,0,0,0,0,0,53,53,54,54,49,49,0,49,49,55,49,56,57,54,53,50,52,51,55,49,56,57,54,53,50,52,51,0,56,57,52,56,57,52,0,55,49,56,57,54,53,50,52,51,55,49,56,57,54,53,50,52,51,57,57,55,49,56,57,54,53,50,52,51,52,54,50,52,51,49,49,56,57,54,53,50,52,52,51,55,49,49,49,49,49,49,49,49,56,57,54,53,50,52,51,49,55,49,56,57,54,53,50,52,51,55,49,56,57,54,53,50,52,51,55,52,55,56,57,56,56,56,54,50,52,51,49,55,54,50,52,51,56,57,52,49,52,55,49,56,57,54,53,50,52,51,55,49,56,57,54,53,50,52,51,55,49,56,57,54,53,50,52,51,55,55,49,56,57,54,53,50,52,51,58,59,58,59,59,60,61,60,61,60,62,63,64,65,66,67,68,69,70,71,72,71,72,73,74,73,74,75,76,76,0,77,77,0,78,78,78,78,78,77,78,77,78,78,78,78,77,78,77,78,77,77,78,77,78,77,78,77,78,78,78,77,78,77,78,77,78,77,79,80,0,0,0,0,0,0,0,0,0,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,0,0,0,0,0,82,0,82,83,84,82,85,86,83,84,82,85,86,0,84,82,85,86,84,82,85,86,83,84,82,85,86,83,84,82,85,86,82,85,86,84,83,84,82,85,86,82,85,86,82,85,86,83,84,82,85,86,83,84,82,85,86,83,84,82,85,86,0,83,84,84,82,85,86,83,82,85,86,84,82,85,86,83,84,82,85,86,83,84,82,85,86,83,84,82,85,86,83,84,82,85,86,87,88,0,89,89,89,89,89,89,89,89,89,89,89,89,89,89,0,0,0,0,90,0,90,0,0,0,0,90,90,0,90,91,92,93,90,91,92,93,91,91,93,91,93,94,91,90,91,92,93,90,91,92,93,93,93,90,91,92,93,90,90,93,90,91,92,93,91,90,91,92,93,90,91,92,93,92,95,96,92,93,91,92,94,91,97,93,93,97,93,97,91,92,94,91,93,90,91,92,93,90,91,92,93,90,91,92,93,90,91,92,93,98,99,100,101,98,99,99,99,0,0,0,0,102,103,104,105,102,103,104,105,104,105,104,105,102,103,104,105,102,103,104,105,102,103,104,105,104,105,0,104,105,102,103,104,105,103,102,103,103,102,103,104,105,102,103,104,105,102,103,103,102,104,105,104,105,104,105,102,105,105,105,102,103,104,105,102,103,104,105,102,103,104,105,102,103,104,105,106,106,106,106,106,106,106,0,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,107,108,109,110,111,112,113,0,0,0,114,114,114,114,114,0,0,114,115,115,114,114,0,115,0,0,114,114,116,114,117,114,117,116,114,114,117,116,115,118,114,117,116,115,118,118,114,117,116,118,114,117,116,118,116,117,117,118,114,117,116,115,118,114,117,116,115,118,114,117,116,118,114,117,116,115,118,117,114,117,116,115,114,116,115,114,117,116,118,114,114,117,116,116,115,115,118,118,114,117,116,115,118,114,117,117,114,116,114,117,116,115,118,117,117,114,117,116,115,118,117,117,117,115,118,116,118,114,117,116,118,118,114,117,116,118,114,114,117,116,118,114,116,115,118,114,117,116,115,118,114,117,116,115,118,114,117,116,115,118,117,114,117,116,115,118,119,120,119,120,0,121,0,122,123,122,0,121,124,0,0,0,125,0,125,0,0,0,0,0,122,123,0,122,124,0,122,125,126,123,127,128,129,122,125,126,123,127,128,129,121,124,130,131,122,125,126,123,127,128,129,121,124,130,131,122,125,126,123,127,128,129,122,125,126,123,127,128,129,122,125,126,123,127,128,129,121,124,130,131,122,125,126,123,127,128,129,121,124,130,131,122,125,126,123,127,128,129,122,125,126,123,127,128,129,121,124,130,131,122,125,126,123,127,128,129,122,125,126,123,127,128,129,122,125,126,123,127,128,129,121,121,124,124,122,125,126,123,127,128,129,121,121,124,124,130,131,122,125,126,123,127,128,129,121,124,130,131,122,125,126,123,127,128,129,121,124,130,131,122,125,126,123,127,128,129,0,130,131,125,131,131,130,131,127,128,129,127,129,129,127,128,127,128,122,125,126,123,127,128,129,121,124,131,122,125,126,123,127,128,129,122,125,126,123,127,128,129,121,124,122,125,126,123,127,128,129,121,124,130,131,122,125,126,123,127,128,129,121,124,130,131,130,122,125,126,123,127,128,129,121,124,130,131,122,125,126,123,127,128,129,121,124,130,131,132,133,134,135,136,137,138,139,140,141,140,140,142,143,0,0,0,0,144,145,146,144,145,146,144,145,146,144,145,146,144,145,146,144,145,146,144,145,146,144,145,146,144,145,146,144,145,146,144,145,146,144,145,146,144,145,146,144,145,146,146,144,145,146,146,144,145,144,145,146,144,145,146,144,145,146,144,145,146,0,0,0,0,0,0,0,0,0,147,147,148,149,150,147,151,148,149,150,147,151,150,147,150,147,147,150,148,149,150,147,151,148,149,150,147,151,149,149,148,149,150,147,151,150,147,150,150,147,150,147,147,151,148,149,150,150,147,151,150,148,149,150,147,151,148,149,150,147,151,149,149,147,151,147,147,150,147,148,149,147,147,147,147,150,147,151,150,147,150,147,147,148,149,150,147,151,148,149,150,147,151,148,149,150,147,151,0,148,149,150,147,151],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["lockinghashmap",3]],[[]],[[]],[[],["multinetworksender",3]],[[]],[[["networkid",4]],[["peerinfo",3],["hashmap",3,["peernetworkid","peerinfo"]],["peernetworkid",3]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["networkid",4],["fnmut",8]],[["peerinfo",3],["hashmap",3,["peernetworkid","peerinfo"]],["peernetworkid",3]]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[["hashmap",3,["networkid"]],["networkid",4]]],[[],["peermetadatastorage",3]],[[["networkid",4]],[["peerinfo",3],["hashmap",3,["peernetworkid","peerinfo"]],["peernetworkid",3]]],[[["peernetworkid",3],["duration",3]]],[[["peernetworkid",3]],[["networkerror",3],["result",4,["networkerror"]]]],[[],[["networkerror",3],["result",4,["networkerror"]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["peerinfo",3],["peernetworkid",3]]],[[]],[[["networkid",4],["connectionmetadata",3]]],[[]],[[]],[[["networkid",4]],[["peernetworkid",3],["vec",3,["peernetworkid"]]]],[[],["vec",3]],[[]],[[],[["arc",3,["peermetadatastorage"]],["peermetadatastorage",3]]],[[]],[[["peernetworkid",3]],[["peerinfo",3],["option",4,["peerinfo"]]]],[[],["option",4]],[[["networkid",4]],[["peerinfo",3],["hashmap",3,["peernetworkid","peerinfo"]],["peernetworkid",3]]],[[],["hashmap",3]],[[["networkid",4],["fnmut",8]],[["peerinfo",3],["hashmap",3,["peernetworkid","peerinfo"]],["peernetworkid",3]]],[[["fnmut",8]],["hashmap",3]],[[["peernetworkid",3]]],[[]],[[["connectionmetadata",3],["networkid",4]]],[[],[["arc",3,["peermetadatastorage"]],["peermetadatastorage",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[["peernetworkid",3],["fnonce",8]],[["result",4,["peererror"]],["peererror",4]]],[[["fnonce",8]],[["result",4,["peererror"]],["peererror",4]]],[[["networkid",4]],[["hashmap",3,["peerid","peerinfo"]],["rwlockwriteguard",3,["hashmap"]]]],[[],[["rwlockwriteguard",3,["hashmap"]],["hashmap",3]]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["peererror",4]],[[],["peerinfo",3]],[[],["peerstate",4]],[[]],[[]],[[]],[[["peerstate",4]],["ordering",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["peererror",4]],["bool",15]],[[["peerstate",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[],["bool",15]],[[["connectionmetadata",3]]],[[["peerstate",4]],[["option",4,["ordering"]],["ordering",4]]],null,[[["protocolid",4]],["bool",15]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["discoverysource",4]],[[]],[[["discoverysource",4]],["ordering",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["discoverysource",4]],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["error",3],["result",4,["ok","error"]],["ok",3]]],[[["serializer",8]],[["error",3],["result",4,["ok","error"]],["ok",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[["networkcontext",3],["arc",3,["rwlock"]],["peerset",6],["receiver",3,["connectivityrequest"]],["timeservice",4],["rwlock",3,["peerset"]],["duration",3],["usize",15],["receiver",6],["bool",15],["option",4,["usize"]],["connectivityrequest",4],["connectionrequestsender",3]]],[[["discoverysource",4]],[["option",4,["ordering"]],["ordering",4]]],[[],["result",4]],[[],["result",4]],[[]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[],[["sender",3,["connectivityrequest"]],["connectivityrequest",4]]],[[["u64",15],["arc",3,["rwlock"]],["peerset",6],["connectionrequestsender",3],["timeservice",4],["rwlock",3,["peerset"]],["usize",15],["receiver",6],["bool",15],["option",4,["usize"]],["networkcontext",3]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[["handle",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["connectionorigin",4],["networkcontext",3],["str",15]],["histogram",3]],[[["connectionorigin",4],["networkcontext",3]],["intgauge",6]],[[["connectionorigin",4],["networkcontext",3]],["intcounter",6]],[[["networkcontext",3],["str",15]],["intcounter",6]],[[["networkcontext",3],["str",15]],["intcounter",6]],[[["protocolid",4],["networkcontext",3]],["histogram",3]],[[["u64",15],["networkcontext",3],["str",15],["intcountervec",6]]],[[["protocolid",4],["networkcontext",3]],["histogram",3]],[[["i64",15],["networkcontext",3],["peerid",3]]],[[["connectionorigin",4],["networkcontext",3]],["intgauge",6]],[[["networkcontext",3],["str",15]],["intcounter",6]],[[["networkcontext",3],["str",15]],["intcounter",6]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["networkerrorkind",4]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["networkerrorkind",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["peermanagererror",4]],["networkerror",3]],[[["error",4]],["networkerror",3]],[[["error",3]],["networkerror",3]],[[["error",3]],["networkerror",3]],[[["networkerrorkind",4]],["networkerror",3]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],[["error",8],["option",4,["error"]]]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[["handshakemsg",3],["vec",3,["u8"]],["u8",15]]],[[["handshakemsg",3]]],[[]],null,[[]],[[]],[[["connectionid",3]]],[[["connectionmetadata",3]]],[[["connectionmetadata",3]]],[[["connectionorigin",4]]],[[["usize",15]]],[[["usize",15]]],[[["discoverysource",4]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[["networkaddress",3]]],[[["networkcontext",3]]],[[["networkcontext",3]]],[[["peerid",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["visitor",8]]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[],["bool",15]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[["valuegenerator",3]],[["vec",3,["u8"]],["u8",15]]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["antireplaytimestamps",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[["u64",15],["publickey",3]],["bool",15]],[[["arc",3,["rwlock"]],["rwlock",3,["peerset"]]]],[[["arc",3,["rwlock"]],["rwlock",3,["peerset"]]]],null,[[["handshakeauthmode",4],["privatekey",3],["networkcontext",3]]],[[]],[[]],[[["u64",15],["publickey",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[["publickey",3]]],[[["connectionorigin",4],["option",4,["publickey"]],["publickey",3]]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[],["publickey",3]],[[],["usize",15]],[[]],[[["noisesession",3]]],[[["pin",3],["context",3]],[["result",6],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",6],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["disconnectreason",4]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["peernotification",4]],["bool",15]],[[["disconnectreason",4]],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["error",3],["result",4,["ok","error"]],["ok",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[["peernotification",4]],["bool",15]],[[["handle",3],["peernotification",4],["transportnotification",4],["timeservice",4],["protocolid",6],["usize",15],["receiver",3,["protocolid","peerrequest"]],["sender",3,["protocolid","peernotification"]],["networkcontext",3],["option",4,["sharedbucket"]],["sender",3,["transportnotification"]],["connection",3],["duration",3],["sharedbucket",6],["u32",15],["peerrequest",4]]],[[],["result",4]],[[]],[[],["hashvalue",3]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[["valuegenerator",3]],[["vec",3,["u8"]],["u8",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["peermanagerrequestsender",3]],[[],["connectionrequestsender",3]],[[],["connectionnotification",4]],[[]],[[]],[[]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["peerid",3],["networkaddress",3]]],[[["peerid",3]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["connectionnotification",4]],["bool",15]],[[["serializer",8]],[["error",3],["result",4,["ok","error"]],["ok",3]]],[[["serializer",8]],[["error",3],["result",4,["ok","error"]],["ok",3]]],[[["serializer",8]],[["error",3],["result",4,["ok","error"]],["ok",3]]],[[["serializer",8]],[["error",3],["result",4,["ok","error"]],["ok",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["readerror",4]]],[[]],[[["error",3]]],[[["error",3]]],[[["senderror",3]]],[[["error",4]]],[[["canceled",3]]],[[["writeerror",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["into",8,["error"]],["error",3]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["networkaddress",3]],[[["connectionnotification",4]],["bool",15]],[[["handle",3],["connectionrequest",4],["protocolid",6],["timeservice",4],["receiver",3,["peerid","connectionrequest"]],["usize",15],["receiver",3,["peermanagerrequest"]],["ipaddrtokenbucketlimiter",6],["peermanagerrequest",4],["networkcontext",3],["arc",3,["rwlock"]],["sender",3,["peermanagernotification"]],["peermetadatastorage",3],["rwlock",3,["peerset"]],["vec",3,["sender"]],["sender",6],["peerid",3],["arc",3,["peermetadatastorage"]],["networkaddress",3],["hashmap",3,["protocolid","sender"]]]],[[["sender",3,["peermanagerrequest"]],["peermanagerrequest",4]]],[[["sender",3,["peerid","connectionrequest"]],["peerid",3],["connectionrequest",4]]],[[["bytes",3],["peerid",3],["protocolid",6],["duration",3]]],[[["bytes",3],["peerid",3],["protocolid",6]],[["peermanagererror",4],["result",4,["peermanagererror"]]]],[[["bytes",3],["protocolid",6]],[["peermanagererror",4],["result",4,["peermanagererror"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["error",8],["option",4,["error"]]]],[[]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["appconfig",3]]],[[],["receiver",6]],[[["appconfig",3]]],[[["appconfig",3]]],[[]],[[]],[[]],[[]],[[["handle",3]]],[[],[["sender",3,["peerid","connectionrequest"]],["peerid",3],["connectionrequest",4]]],[[["arc",3,["rwlock"]],["peermetadatastorage",3],["timeservice",4],["rwlock",3,["peerset"]],["authenticationmode",4],["option",4,["ratelimitconfig"]],["usize",15],["chainid",3],["ratelimitconfig",3],["bool",15],["arc",3,["peermetadatastorage"]],["networkaddress",3],["networkcontext",3]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["networkaddress",3]],[[["handle",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,[[]],null,null,null,null,null,null,null,[[]],[[]],[[],["message",3]],[[]],[[],["bytes",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["message",3]],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["error",3],["result",4,["ok","error"]],["ok",3]]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],null,[[["message",3]],["bool",15]],[[],["protocolid",6]],null,[[],["result",4]],[[],["hashvalue",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["healthcheckernetworksender",3]],[[],["healthcheckermsg",4]],[[],["ping",3]],[[],["pong",3]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["peerid",3]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["serializer",8]],[["error",3],["result",4,["ok","error"]],["ok",3]]],[[["serializer",8]],[["error",3],["result",4,["ok","error"]],["ok",3]]],[[["serializer",8]],[["error",3],["result",4,["ok","error"]],["ok",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[],["appconfig",3]],[[["duration",3],["u64",15],["healthchecknetworkinterface",3],["timeservice",4],["networkcontext",3]]],[[["peermanagerrequestsender",3],["connectionrequestsender",3]]],[[["healthcheckermsg",4],["peerid",3],["duration",3]],[["pin",3,["box"]],["box",3,["future"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[["u64",15],["arc",3,["peermetadatastorage"]],["peermetadatastorage",3],["timeservice",4],["healthcheckernetworksender",3],["healthcheckernetworkevents",6],["networkcontext",3]]],[[["handle",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["handshakemsg",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["appconfig",3]],[[],["networksender",3]],[[]],[[]],[[],["bytes",3]],[[],["appconfig",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["peerid",3],["networkaddress",3]]],[[["peerid",3]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["event",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["peerid",3],["peermanagernotification",4],["receiver",3,["peermanagernotification"]],["connectionnotification",4],["receiver",3,["peerid","connectionnotification"]]]],[[["peermanagerrequestsender",3],["connectionrequestsender",3]]],[[["peerid",3],["peermanagernotification",4],["receiver",3,["peermanagernotification"]],["connectionnotification",4],["receiver",3,["peerid","connectionnotification"]]]],[[["peermanagerrequestsender",3],["connectionrequestsender",3]]],[[["config",3]]],[[["pin",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[],["protocolid",6]],null,[[["peerid",3],["duration",3]],[["pin",3,["box"]],["box",3,["future"]]]],[[["duration",3],["peerid",3],["protocolid",6]]],[[["peerid",3],["protocolid",6]],[["networkerror",3],["result",4,["networkerror"]]]],[[["peerid",3]],[["networkerror",3],["result",4,["networkerror"]]]],[[["protocolid",6]],[["networkerror",3],["result",4,["networkerror"]]]],[[],[["networkerror",3],["result",4,["networkerror"]]]],[[["config",3]]],[[]],[[],[["result",6],["deserialize",8]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bytes",3]],[[],["bytes",3]],null,null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["bool",15]],[[["serializer",8]],[["error",3],["result",4,["ok","error"]],["ok",3]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["requestid",6],["result",4,["rpcerror"]],["rpcerror",4]]],[[["sender",3],["rpcrequest",3]],[["result",4,["rpcerror"]],["rpcerror",4]]],[[["rpcresponse",3]]],[[["sender",3],["outboundrpcrequest",3]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[["duration",3],["peerid",3],["u32",15],["timeservice",4],["networkcontext",3]]],[[["peerid",3],["u32",15],["timeservice",4],["networkcontext",3]]],[[]],[[]],[[],["protocolid",6]],[[],["protocolid",6]],null,null,null,null,[[["sender",3],["result",4,["rpcresponse","rpcerror"]],["rpcresponse",3],["rpcerror",4]]],[[],["result",4]],[[],["hashvalue",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["elapsed",3]],["rpcerror",4]],[[["canceled",3]]],[[["peermanagererror",4]]],[[["senderror",3]]],[[["error",4]]],[[["error",3]]],[[["error",3]]],[[]],[[],["usize",15]],[[]],[[],[["error",8],["option",4,["error"]]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["protocolid",4]],[[],["protocolidset",3]],[[],["messagingprotocolversion",4]],[[],["handshakemsg",3]],[[]],[[]],[[]],[[]],[[["messagingprotocolversion",4]],["ordering",4]],[[["protocolid",4]],["bool",15]],[[],["protocolidset",3]],[[],["handshakemsg",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["protocolid",4]],["bool",15]],[[["protocolidset",3]],["bool",15]],[[["messagingprotocolversion",4]],["bool",15]],[[["handshakeerror",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["error",3],["result",4,["ok","error"]],["ok",3]]],[[["serializer",8]],[["error",3],["result",4,["ok","error"]],["ok",3]]],[[["serializer",8]],[["error",3],["result",4,["ok","error"]],["ok",3]]],[[["serializer",8]],[["error",3],["result",4,["ok","error"]],["ok",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[],[["result",6],["deserialize",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["protocolid",4]]],[[["protocolidset",3]],["protocolidset",3]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[["protocolidset",3]],["bool",15]],[[["handshakeerror",4]],["bool",15]],null,[[["messagingprotocolversion",4]],[["option",4,["ordering"]],["ordering",4]]],[[["handshakemsg",3]],[["result",4,["handshakeerror"]],["handshakeerror",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],[["vec",3,["u8"]],["result",6,["vec"]]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["protocolidset",3]],["protocolidset",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["networkmessage",4]],[[],["errorcode",4]],[[],["parsingerrortype",3]],[[],["notsupportedtype",4]],[[],["rpcrequest",3]],[[],["rpcresponse",3]],[[],["directsendmsg",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["networkmessage",4]],["bool",15]],[[["errorcode",4]],["bool",15]],[[["parsingerrortype",3]],["bool",15]],[[["notsupportedtype",4]],["bool",15]],[[["rpcrequest",3]],["bool",15]],[[["rpcresponse",3]],["bool",15]],[[["directsendmsg",3]],["bool",15]],[[["serializer",8]],[["error",3],["result",4,["ok","error"]],["ok",3]]],[[["serializer",8]],[["error",3],["result",4,["ok","error"]],["ok",3]]],[[["serializer",8]],[["error",3],["result",4,["ok","error"]],["ok",3]]],[[["serializer",8]],[["error",3],["result",4,["ok","error"]],["ok",3]]],[[["serializer",8]],[["error",3],["result",4,["ok","error"]],["ok",3]]],[[["serializer",8]],[["error",3],["result",4,["ok","error"]],["ok",3]]],[[["serializer",8]],[["error",3],["result",4,["ok","error"]],["ok",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["error",3]]],[[]],[[["error",3]]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["networkmessage",4]],["bool",15]],[[["errorcode",4]],["bool",15]],[[["parsingerrortype",3]],["bool",15]],[[["notsupportedtype",4]],["bool",15]],[[["rpcrequest",3]],["bool",15]],[[["rpcresponse",3]],["bool",15]],[[["directsendmsg",3]],["bool",15]],[[["usize",15]],["lengthdelimitedcodec",3]],[[["usize",15],["sharedbucket",6],["option",4,["sharedbucket"]]]],[[["usize",15],["sharedbucket",6],["option",4,["sharedbucket"]]]],[[["u8",15]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["error",8],["option",4,["error"]]]],[[],[["error",8],["option",4,["error"]]]],[[["pin",3],["networkmessage",4]],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[["vec",3,["u8"]],["u8",15]]],[[]],[[["pin",3],["context",3]],[["result",6],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",6],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",6],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",6],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",6],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",6],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["vec",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["connectionid",3]],[[],["connectionmetadata",3]],[[]],[[]],null,[[],["connectionid",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["peerid",3],["networkaddress",3]],["result",6]],[[["peerid",3],["networkaddress",3]],["result",6]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["connectionid",3]],["bool",15]],[[["connectionmetadata",3]],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["error",3],["result",4,["ok","error"]],["ok",3]]],[[["serializer",8]],[["error",3],["result",4,["ok","error"]],["ok",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["u32",15]],["connectionid",3]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[["networkaddress",3]],["result",6]],[[["networkaddress",3]],["result",6]],null,null,[[["peerid",3]],["connectionmetadata",3]],[[["connectionorigin",4],["peerid",3],["peerrole",4]],["connectionmetadata",3]],[[["connectionid",3]],["bool",15]],[[["connectionmetadata",3]],["bool",15]],[[["u8",15],["chainid",3],["messagingprotocolversion",4],["protocolidset",3],["btreemap",3,["messagingprotocolversion","protocolidset"]],["noiseupgrader",3],["networkid",4]]],[[["u8",15],["protocolidset",3],["timeservice",4],["privatekey",3],["handshakeauthmode",4],["chainid",3],["bool",15],["networkcontext",3]]],[[["peerid",3],["peerrole",4],["messagingprotocolversion",4],["connectionorigin",4],["connectionid",3],["networkaddress",3],["protocolidset",3]],["connectionmetadata",3]],null,null,null,[[],["result",4]],[[],["result",4]],null,[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["arc",3,["upgradecontext"]],["upgradecontext",3],["peerid",3],["publickey",3],["networkaddress",3]]],[[]],[[]],[[]],[[]],[[]]],"p":[[8,"NetworkInterface"],[3,"MultiNetworkSender"],[3,"PeerMetadataStorage"],[3,"LockingHashMap"],[4,"PeerState"],[4,"PeerError"],[3,"PeerInfo"],[4,"DiscoverySource"],[4,"ConnectivityRequest"],[3,"ConnectivityManager"],[13,"UpdateDiscoveredPeers"],[13,"GetConnectedSize"],[13,"GetDialQueueSize"],[3,"ConnectivityManagerBuilder"],[4,"NetworkErrorKind"],[3,"NetworkError"],[3,"NetworkSchema"],[4,"NoiseHandshakeError"],[13,"BuildClientHandshakeMessageFailed"],[13,"ClientWriteFailed"],[13,"ClientReadFailed"],[13,"ClientFlushFailed"],[13,"ClientFinalizeFailed"],[13,"ServerReadFailed"],[13,"InvalidClientPeerId"],[13,"ClientExpectingDifferentPubkey"],[13,"ServerParseClient"],[13,"UnauthenticatedClientPubkey"],[13,"UnauthenticatedClient"],[13,"ClientPeerIdMismatch"],[13,"MissingAntiReplayTimestamp"],[13,"ServerReplayDetected"],[13,"BuildServerHandshakeMessageFailed"],[13,"ServerWriteFailed"],[4,"HandshakeAuthMode"],[3,"AntiReplayTimestamps"],[3,"NoiseUpgrader"],[13,"MaybeMutual"],[13,"Mutual"],[3,"NoiseStream"],[4,"DisconnectReason"],[4,"PeerNotification"],[4,"PeerRequest"],[3,"Peer"],[13,"RecvRpc"],[13,"RecvMessage"],[13,"SendRpc"],[13,"SendDirectSend"],[4,"PeerManagerError"],[4,"ConnectionRequest"],[4,"TransportNotification"],[4,"ConnectionNotification"],[4,"PeerManagerNotification"],[4,"PeerManagerRequest"],[3,"PeerManager"],[3,"PeerManagerRequestSender"],[3,"ConnectionRequestSender"],[13,"NewPeer"],[13,"LostPeer"],[13,"DialPeer"],[13,"DisconnectPeer"],[13,"Error"],[13,"IoError"],[13,"TransportError"],[13,"NotConnected"],[13,"AlreadyConnected"],[13,"MpscSendError"],[13,"BcsError"],[13,"WireReadError"],[13,"WireWriteError"],[13,"RecvRpc"],[13,"RecvMessage"],[13,"SendRpc"],[13,"SendDirectSend"],[13,"NewConnection"],[13,"Disconnected"],[4,"AuthenticationMode"],[3,"PeerManagerBuilder"],[13,"MaybeMutual"],[13,"Mutual"],[3,"Message"],[4,"HealthCheckerMsg"],[3,"HealthChecker"],[3,"HealthCheckerNetworkSender"],[3,"Ping"],[3,"Pong"],[13,"Ping"],[13,"Pong"],[3,"HealthCheckerBuilder"],[4,"Event"],[3,"AppConfig"],[3,"NetworkEvents"],[3,"NetworkSender"],[8,"SerializedRequest"],[8,"NewNetworkEvents"],[8,"NewNetworkSender"],[8,"ApplicationNetworkSender"],[13,"Message"],[13,"RpcRequest"],[13,"NewPeer"],[13,"LostPeer"],[3,"InboundRpcs"],[3,"OutboundRpcs"],[3,"InboundRpcRequest"],[3,"OutboundRpcRequest"],[4,"RpcError"],[13,"Error"],[13,"IoError"],[13,"BcsError"],[13,"NotConnected"],[13,"ApplicationError"],[13,"MpscSendError"],[13,"TooManyPending"],[4,"ProtocolId"],[4,"HandshakeError"],[4,"MessagingProtocolVersion"],[3,"ProtocolIdSet"],[3,"HandshakeMsg"],[13,"InvalidChainId"],[13,"InvalidNetworkId"],[4,"ReadError"],[4,"NetworkMessage"],[4,"NotSupportedType"],[4,"WriteError"],[4,"ErrorCode"],[3,"ParsingErrorType"],[3,"RpcRequest"],[3,"RpcResponse"],[3,"DirectSendMsg"],[3,"NetworkMessageStream"],[3,"NetworkMessageSink"],[13,"ParsingError"],[13,"NotSupported"],[13,"Error"],[13,"RpcRequest"],[13,"RpcResponse"],[13,"DirectSendMsg"],[13,"RpcRequest"],[13,"DirectSendMsg"],[13,"DeserializeError"],[13,"IoError"],[13,"SerializeError"],[13,"IoError"],[3,"ReadOnlyTestSocket"],[3,"ReadOnlyTestSocketVec"],[3,"ReadWriteTestSocket"],[3,"ConnectionMetadata"],[3,"UpgradeContext"],[3,"DiemNetTransport"],[3,"ConnectionId"],[3,"Connection"]]},\
"network_builder":{"doc":"","t":[13,13,13,13,13,13,13,4,13,13,13,11,11,0,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,5,11,12,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ApplicationError","BcsError","Error","InvalidRpcResponse","IoError","MpscSendError","NotConnected","RpcError","TimedOut","TooManyPending","UnexpectedResponseChannelCancel","borrow","borrow_mut","builder","deref","deref_mut","drop","dummy","fmt","fmt","from","from","from","from","from","from","from","from","init","into","source","to_string","try_from","try_into","type_id","vzip","0","0","0","0","0","0","0","NetworkBuilder","add_client","add_connectivity_manager","add_p2p_service","add_service","borrow","borrow_mut","build","conn_mgr_reqs_tx","create","deref","deref_mut","drop","from","init","into","listen_address","network_context","new","new_for_test","start","try_from","try_into","type_id","vzip","0","DummyMsg","DummyNetwork","DummyNetworkEvents","DummyNetworkSender","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","dialer_events","dialer_peer_id","dialer_sender","drop","drop","drop","eq","erased_serialize","fmt","from","from","from","init","init","init","into","into","into","listener_events","listener_peer_id","listener_sender","ne","network_endpoint_config","new","runtime","send_rpc","send_to","serialize","setup_network","test_only_hash","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["network_builder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","network_builder::RpcError","","","","","","","network_builder::builder","","","","","","","","","","","","","","","","","","","","","","","","","network_builder::dummy","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","Remotely authenticated vs. unauthenticated network …","","","","Integration tests for validator_network.","","","","","","","","","","","","","","","","","","","","","","","","","","Build Network module with custom configuration values. …","Register a new client application with network. Return the …","Add a [<code>ConnectivityManager</code>] to the network.","Register a new Peer-to-Peer (both client and service) …","Register a new service application with network. Return …","","","Create the configured Networking components.","","Create a new NetworkBuilder based on the provided …","","","","","","","","","Return a new NetworkBuilder initialized with default …","","Start the built Networking components.","","","","","","","","TODO(davidiw): In DummyNetwork, replace DummyMsg with a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The following sets up a 2 peer network and verifies …","","","","","","","","","","","","","","",""],"i":[1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,4,5,6,7,8,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,0,0,0,0,11,10,12,11,10,12,10,12,10,12,11,10,12,11,10,12,10,11,11,11,11,10,12,10,10,10,11,10,12,11,10,12,11,10,12,11,11,11,10,0,12,11,12,12,10,0,10,10,12,11,10,12,11,10,12,11,10,12,11,10,12],"f":[null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["error",4]],["rpcerror",4]],[[]],[[["error",3]],["rpcerror",4]],[[["senderror",3]],["rpcerror",4]],[[["peermanagererror",4]],["rpcerror",4]],[[["elapsed",3]],["rpcerror",4]],[[["canceled",3]],["rpcerror",4]],[[["error",3]],["rpcerror",4]],[[],["usize",15]],[[]],[[],[["option",4,["error"]],["error",8]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,[[["appconfig",3]],["newnetworksender",8]],[[["usize",15],["rwlock",3,["peerset"]],["peerset",6],["u64",15],["bool",15],["arc",3,["rwlock"]]]],[[["appconfig",3]]],[[["appconfig",3]],["newnetworkevents",8]],[[]],[[]],[[["handle",3]]],[[],[["option",4,["sender"]],["sender",3,["connectivityrequest"]]]],[[["arc",3,["peermetadatastorage"]],["chainid",3],["networkconfig",3],["peermetadatastorage",3],["eventsubscriptionservice",3],["roletype",4],["timeservice",4],["option",4,["eventsubscriptionservice"]]],["networkbuilder",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[],["networkaddress",3]],[[],["networkcontext",3]],[[["arc",3,["peermetadatastorage"]],["peermetadatastorage",3],["networkaddress",3],["authenticationmode",4],["ratelimitconfig",3],["arc",3,["rwlock"]],["networkcontext",3],["rwlock",3,["peerset"]],["usize",15],["bool",15],["option",4,["ratelimitconfig"]],["timeservice",4],["chainid",3]]],[[["chainid",3],["authenticationmode",4],["peerset",6],["arc",3,["peermetadatastorage"]],["peermetadatastorage",3],["arc",3,["rwlock"]],["networkcontext",3],["rwlock",3,["peerset"]],["timeservice",4],["networkaddress",3]],["networkbuilder",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["dummymsg",3]],[[],["dummynetworksender",3]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],null,null,null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["dummymsg",3]],["bool",15]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],null,null,null,[[["dummymsg",3]],["bool",15]],[[],["appconfig",3]],[[["connectionrequestsender",3],["peermanagerrequestsender",3]]],null,[[["dummymsg",3],["peerid",3],["duration",3]],[["box",3,["future"]],["pin",3,["box"]]]],[[["dummymsg",3],["peerid",3]],[["result",4,["networkerror"]],["networkerror",3]]],[[],["result",4]],[[],["dummynetwork",3]],[[],["hashvalue",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]]],"p":[[4,"RpcError"],[13,"Error"],[13,"IoError"],[13,"BcsError"],[13,"NotConnected"],[13,"ApplicationError"],[13,"MpscSendError"],[13,"TooManyPending"],[3,"NetworkBuilder"],[3,"DummyMsg"],[3,"DummyNetwork"],[3,"DummyNetworkSender"]]},\
"network_discovery":{"doc":"","t":[3,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["DiscoveryChangeListener","DiscoveryError","IO","Parsing","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","discovery_source","drop","drop","file","fmt","from","from","init","init","into","into","start","try_from","try_from","try_into","try_into","type_id","type_id","validator_set","vzip","vzip","0","0"],"q":["network_discovery","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","network_discovery::DiscoveryError",""],"d":["A union type for all implementations of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,2,1,2,1,2,1,2,1,2,2,1,2,1,2,1,2,1,2,1,2,2,1,2,1,2,1,2,2,1,3,4],"f":[null,null,null,null,[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["discoverysource",4]],[[["usize",15]]],[[["usize",15]]],[[["sender",3,["connectivityrequest"]],["duration",3],["timeservice",4],["networkcontext",3],["path",3],["connectivityrequest",4]]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["handle",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["sender",3,["connectivityrequest"]],["storage",4],["encryptor",3,["storage"]],["reconfignotificationlistener",6],["networkcontext",3],["publickey",3],["connectivityrequest",4]]],[[]],[[]],null,null],"p":[[4,"DiscoveryError"],[3,"DiscoveryChangeListener"],[13,"IO"],[13,"Parsing"]]},\
"num_variants":{"doc":"Add an associated constant to an enum describing the …","t":[24],"n":["NumVariants"],"q":["num_variants"],"d":["Derives an associated constant with the number of variants …"],"i":[0],"f":[null],"p":[]},\
"offchain":{"doc":"","t":[0,0,0,0,0,13,13,13,4,3,4,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,3,11,11,5,11,11,11,11,5,11,11,11,11,11,11,4,13,13,13,4,13,4,3,4,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,3,3,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,4,3,13,4,13,3,3,4,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,4,4,13,13,3,13,13,13,3,4,3,3,13,3,3,13,17,17,13,13,13,4,3,13,13,13,13,13,13,13,3,12,12,12,12,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,12,11,12,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["identifier","jws","payment_command","subaddress","types","AccountAddress","Bech32","DM","HumanReadablePrefix","Intent","IntentIdentifierError","PDM","Parse","Subaddress","TDM","Url","account_address","amount","as_str","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","currency","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_str","from_str","hash","hash","hrp","into","into","into","ne","partial_cmp","partial_cmp","source","subaddress","to_encoded_string","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0","0","0","0","JwsError","borrow","borrow_mut","deserialize","fmt","fmt","from","into","serialize","source","to_string","try_from","try_into","type_id","vzip","Actor","ClearSoftMatch","EvaluateKycData","Inbound","Origin","Outbound","PaymentAction","PaymentCommand","PaymentState","Ready","Receiver","RecieverAbort","RecieverSend","RecieverSoft","RecieverSoftSend","ReviewKycData","Sender","SenderAbort","SenderInit","SenderSoft","SenderSoftSend","SubmitTransaction","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cid","clone","clone","clone","clone_into","clone_into","clone_into","counterparty_actor","counterparty_actor","counterparty_actor_object","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","follow_up_action","follow_up_action","from","from","from","from","from","from_payment","into","into","into","into","into","is_inbound","is_outbound","is_valid_transition","my_actor","my_actor_object","new","origin","payment","payment_state","reference_id","to_owned","to_owned","to_owned","to_request","trigger_actor","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","LENGTH","Subaddress","SubaddressParseError","ZERO","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bytes","from_hex","generate","hash","into","into","ne","new","partial_cmp","to_hex","to_owned","to_owned","to_string","to_string","to_vec","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Abort","AbortCode","ActionType","AddressObject","Charge","Command","Command","CommandRequestObject","CommandResponseObject","CommandStatus","Conflict","Entity","ErrorCode","Failure","FundPullPreApprovalCommand","Individual","InvalidCommandProducer","InvalidFieldValue","InvalidHttpHeader","InvalidInitialOrPriorNotFound","InvalidJson","InvalidJws","InvalidJwsSignature","InvalidObject","InvalidOriginalPaymentReferenceId","InvalidOverwrite","InvalidRecipientSignature","InvalidTransition","KycDataObject","KycDataObjectType","KycDataObjectVersion","MissingField","MissingHttpHeader","NationalIdObject","NeedsKycData","NoKycNeeded","None","OffChainError","OffChainErrorType","PaymentActionObject","PaymentActorObject","PaymentCommand","PaymentCommandObject","PaymentObject","Protocol","REQUEST_ID_HEADER","REQUEST_SENDER_ADDRESS","ReadyForSettlement","Rejected","SoftMatch","Status","StatusObject","Success","Unknown","UnknownAddress","UnknownCommandType","UnknownField","UnsupportedCurrency","V1","WriteOnceError","abort_code","abort_message","action","action","actor_object_by_actor","additional_kyc_data","additional_kyc_data","address","address","amount","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cid","city","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","command","country","country","currency","default","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dob","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","given_name","id_type","id_value","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_parts","into_payment","kyc_data","kyc_data","kyc_data_type","legal_entity_name","line1","line2","metadata","national_id","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new_entity","new_individual","originial_payment_reference_id","payment","place_of_birth","postal_code","receiver","receiver","recipient_signature","recipient_signature","reference_id","reference_id","sender","sender","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","state","status","status","status","status","surname","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_write_once_fields","validate_write_once_fields","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0"],"q":["offchain","","","","","offchain::identifier","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","offchain::identifier::IntentIdentifierError","","","","","offchain::jws","","","","","","","","","","","","","","","offchain::payment_command","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","offchain::subaddress","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","offchain::typesoffchain::types::Command"],"d":["","","","","","","","","Defines the available HRPs (human readable prefix) as …","Intent is a struct holdind data decoded from Diem Intent …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decode Diem intent identifier …","","","","","","","","","","","","","Encode Intent as a Diem intent identifier …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The number of bytes in an address.","","","Hex address: 0x0","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates the actor wishes to abort this payment, instaed …","","","Represents a physical address","","","","","","","Command object is in conflict with another different …","","","","","","The HTTP request sender is not the right actor to send the …","Invalid / unknown enum field values.UUID field value does …","One of the following potential errors:","could not find command by reference_id for a non-initial …","Request content is not valid Json","Invalid JWS format (compact) or protected header","JWS signature verification failed","Object is not valid, type does not match The Command …","Could not find data by the original_payment_reference_id …","Overwrite a write-once/immutable field value","Either:","As we only allow one actor action at a time, and the next …","A <code>KycDataObject</code> represents the required information for a …","","","Either:","Missing HTTP header <code>X-REQUEST-ID</code> or …","Represents a national ID.","KYC data about the subaddresses is required by this actor.","PaymentActionObject#amount is under travel rule threshold, …","No status is yet set from this actor.","","","","A <code>PaymentActorObject</code> represents a participant in a payment …","","","Some fields are immutable after they are defined once. …","","A header set with a unique UUID (according to RFC4122 with …","A header with the HTTP request sender’s VASP DIP-5 …","Transaction is ready for settlement according to this …","The payment is rejected. It should not be used in the …","Actor’s KYC data resulted in a soft-match, request …","","","","Unknown Error Code","The DIP-5 account identifier address in the command object …","Invalid/unsupported command_type.","A field is unknown for an object.","Field payment.action.currency value is a valid Diem …","","","In the case of an <code>abort</code> status, this field may be used to …","Additional details about this error. To be used only when …","Populated in the request. This value indicates the …","Number of cryptocurrency + currency type (XUS, etc.)1 + …","","","Freeform KYC data. If a soft-match occurs, this field can …","Address of the sender/receiver account. Addresses may be …","Physical address data for this account","Amount of the transfer. Base units are the same as for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The city, district, suburb, town, or village","","","","","","","","","","","","","","","","","","","","","","","","","","","","Two-letter country code …","Two-letter country code …","One of the supported on-chain currency types - ex. XUS, …","","Description of the payment. To be displayed to the user. …","","","","","","","","","","","","","","","","","","","","","Date of birth for the holder of this account. Specified as …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Legal given name of the user for which this KYC data …","Indicates the type of the ID","Indicates the national ID value - for example, a social …","","","","","","","","","","","","","","","","","","","","","","","","","The KYC data for this account. This field is optional but …","","Name of the legal entity. Used when subaddress represents …","Address line 1","Address line 2 - apartment, unit, etc.","Can be specified by the respective VASP to hold metadata …","National ID information for the holder of this account","","","","","","","","","","","","","","","Used to refer an old payment known to the other VASP. For …","","Place of birth for this user. line1 and line2 fields …","ZIP or postal code","","Information about the receiver in this payment","","Signature of the recipient of this transaction encoded in …","","Unique reference ID of this payment on the payment …","","Information about the sender in this payment","","","","","","","","","","","","","","","","","","","","","State, county, province, region.","","","Status of the payment from the perspective of this actor. …","Status of the payment from the perspective of this actor. …","Legal surname of the user for which this KYC data Object …","","","","","","","","","","","","","","","","","","","","","Unix time indicating the time that the payment Command was …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,1,1,2,0,0,0,2,1,1,2,1,3,3,2,3,1,2,3,1,2,3,2,3,2,3,2,3,3,2,3,2,1,1,2,2,3,1,1,1,1,1,2,3,2,3,2,3,3,1,2,3,3,2,1,3,3,3,2,1,2,3,1,2,3,1,2,3,1,2,3,1,2,4,5,6,7,8,0,9,9,0,9,9,9,9,0,9,9,9,9,9,9,0,10,10,11,0,11,0,0,0,12,13,12,12,12,12,10,13,12,12,12,12,10,10,11,13,14,12,10,11,13,14,12,14,11,13,12,11,13,12,13,14,14,11,13,12,11,13,12,11,13,14,12,10,14,10,11,13,14,12,12,10,11,13,14,12,11,11,12,14,14,14,14,14,14,14,11,13,12,14,12,10,11,13,14,12,10,11,13,14,12,10,11,13,14,12,10,11,13,14,12,15,0,0,15,15,16,15,16,15,16,15,16,15,15,15,15,15,15,15,16,16,15,16,15,15,15,15,15,16,15,15,15,15,15,16,15,16,15,15,16,15,16,15,16,15,16,17,0,0,0,18,0,19,0,0,0,20,21,0,22,23,21,20,20,20,20,20,20,20,20,20,20,20,20,0,0,0,20,20,0,17,20,17,0,0,0,0,23,0,0,19,0,0,17,24,17,0,0,22,20,20,20,20,20,25,0,26,26,27,28,28,29,29,29,30,27,31,22,32,19,20,33,23,34,29,18,27,28,26,17,24,35,36,30,21,25,37,31,22,32,19,20,33,23,34,29,18,27,28,26,17,24,35,36,30,21,25,37,31,36,29,18,27,28,26,17,24,35,36,30,21,25,37,29,18,27,28,26,17,24,35,36,30,21,25,37,31,35,36,27,36,28,31,22,32,19,20,33,23,34,29,18,27,28,26,17,24,35,36,30,21,25,30,22,32,19,20,33,29,18,27,28,26,17,24,35,36,30,21,25,37,22,32,19,20,33,18,17,24,21,25,37,22,32,19,20,33,29,18,27,28,26,17,24,35,36,30,21,25,37,31,22,32,19,20,33,23,34,29,18,27,28,26,17,24,35,36,30,21,25,37,30,35,35,31,22,32,19,20,33,23,34,29,18,27,28,26,17,24,35,36,30,21,25,37,31,34,29,29,30,30,36,36,29,30,32,33,29,27,28,26,35,36,30,31,32,34,30,30,28,34,30,36,28,28,28,28,28,28,28,28,31,22,32,19,20,33,23,34,29,18,27,28,26,17,24,35,36,30,21,25,36,29,26,29,26,30,31,22,32,19,20,33,23,34,29,18,27,28,26,17,24,35,36,30,21,25,27,29,18,27,28,26,17,24,35,36,30,21,25,37,31,22,32,19,20,33,23,34,29,18,27,28,26,17,24,35,36,30,21,25,37,31,22,32,19,20,33,23,34,29,18,27,28,26,17,24,35,36,30,21,25,37,31,22,32,19,20,33,23,34,29,18,27,28,26,17,24,35,36,30,21,25,37,29,28,31,22,32,19,20,33,23,34,29,18,27,28,26,17,24,35,36,30,21,25,37,38],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["accountaddress",3]],[[],[["u64",15],["option",4,["u64"]]]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["intent",3]],[[],["humanreadableprefix",4]],[[]],[[]],[[["intent",3]],["ordering",4]],[[["humanreadableprefix",4]],["ordering",4]],[[],[["option",4,["currency"]],["currency",4]]],[[["intent",3]],["bool",15]],[[["humanreadableprefix",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["accountaddressparseerror",3]]],[[["parseerror",4]]],[[["error",4]]],[[["subaddressparseerror",3]]],[[]],[[["str",15]],[["result",4,["intent","intentidentifiererror"]],["intent",3],["intentidentifiererror",4]]],[[["str",15]],[["result",4,["intentidentifiererror"]],["intentidentifiererror",4]]],[[]],[[]],[[],["humanreadableprefix",4]],[[]],[[]],[[]],[[["intent",3]],["bool",15]],[[["intent",3]],[["option",4,["ordering"]],["ordering",4]]],[[["humanreadableprefix",4]],[["option",4,["ordering"]],["ordering",4]]],[[],[["option",4,["error"]],["error",8]]],[[],["subaddress",3]],[[],[["result",4,["string","intentidentifiererror"]],["string",3],["intentidentifiererror",4]]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[],[["result",4,["jwserror"]],["jwserror",3],["deserializeowned",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],[["result",4,["string","jwserror"]],["string",3],["jwserror",3]]],[[],[["option",4,["error"]],["error",8]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["uuid",3]],[[],["origin",4]],[[],["actor",4]],[[],["paymentstate",4]],[[]],[[]],[[]],[[]],[[],["actor",4]],[[],["paymentactorobject",3]],[[["origin",4]],["bool",15]],[[["actor",4]],["bool",15]],[[["paymentstate",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["paymentstate",4],["actor",4]],[["paymentaction",4],["option",4,["paymentaction"]]]],[[],[["paymentaction",4],["option",4,["paymentaction"]]]],[[]],[[]],[[]],[[]],[[]],[[["paymentobject",3]],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["actor",4]],[[],["paymentactorobject",3]],[[["paymentobject",3],["origin",4],["actor",4],["option",4],["uuid",3]],[["result",4,["str"]],["str",15]]],[[],["origin",4]],[[],["paymentobject",3]],[[],["paymentstate",4]],[[],["uuid",3]],[[]],[[]],[[]],[[],["commandrequestobject",3]],[[],["actor",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[],["subaddress",3]],[[],["subaddressparseerror",3]],[[]],[[]],[[["subaddress",3]],["ordering",4]],[[["subaddress",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["asref",8]],[["result",4,["subaddressparseerror"]],["subaddressparseerror",3]]],[[["asref",8]],[["result",4,["subaddressparseerror"]],["subaddressparseerror",3]]],[[]],[[]],[[]],[[]],[[["subaddress",3]],["bool",15]],[[]],[[["subaddress",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["string",3]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],[["vec",3,["u8"]],["u8",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["actor",4]],["paymentactorobject",3]],[[],[["str",15],["option",4,["str"]]]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["uuid",3]],null,[[],["paymentactorobject",3]],[[],["actiontype",4]],[[],["paymentactionobject",3]],[[],["paymentobject",3]],[[],["statusobject",3]],[[],["status",4]],[[],["abortcode",4]],[[],["nationalidobject",3]],[[],["addressobject",3]],[[],["kycdataobject",3]],[[],["kycdataobjecttype",4]],[[],["kycdataobjectversion",4]],[[],["writeonceerror",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["command",4]],null,null,null,[[],["addressobject",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["commandstatus",4]],["bool",15]],[[["commandresponseobject",3]],["bool",15]],[[["offchainerrortype",4]],["bool",15]],[[["errorcode",4]],["bool",15]],[[["offchainerror",3]],["bool",15]],[[["paymentactorobject",3]],["bool",15]],[[["actiontype",4]],["bool",15]],[[["paymentactionobject",3]],["bool",15]],[[["paymentobject",3]],["bool",15]],[[["statusobject",3]],["bool",15]],[[["status",4]],["bool",15]],[[["abortcode",4]],["bool",15]],[[["nationalidobject",3]],["bool",15]],[[["addressobject",3]],["bool",15]],[[["kycdataobject",3]],["bool",15]],[[["kycdataobjecttype",4]],["bool",15]],[[["kycdataobjectversion",4]],["bool",15]],[[["writeonceerror",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["paymentobject",3]],[[],[["option",4,["kycdataobject"]],["kycdataobject",3]]],null,null,null,null,null,null,null,[[["commandresponseobject",3]],["bool",15]],[[["offchainerror",3]],["bool",15]],[[["paymentactorobject",3]],["bool",15]],[[["paymentactionobject",3]],["bool",15]],[[["paymentobject",3]],["bool",15]],[[["statusobject",3]],["bool",15]],[[["nationalidobject",3]],["bool",15]],[[["addressobject",3]],["bool",15]],[[["kycdataobject",3]],["bool",15]],[[["command",4],["uuid",3]]],[[["commandstatus",4]]],[[["paymentobject",3]]],[[]],[[]],null,[[],["paymentobject",3]],null,null,[[],["paymentactorobject",3]],null,[[],[["str",15],["option",4,["str"]]]],null,[[],["uuid",3]],null,[[],["paymentactorobject",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["statusobject",3]],[[],["status",4]],null,null,null,[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["result",4,["writeonceerror"]],["writeonceerror",3]]],[[],[["result",4,["writeonceerror"]],["writeonceerror",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null],"p":[[4,"IntentIdentifierError"],[4,"HumanReadablePrefix"],[3,"Intent"],[13,"AccountAddress"],[13,"Bech32"],[13,"Parse"],[13,"Subaddress"],[13,"Url"],[3,"JwsError"],[4,"PaymentAction"],[4,"Origin"],[4,"PaymentState"],[4,"Actor"],[3,"PaymentCommand"],[3,"Subaddress"],[3,"SubaddressParseError"],[4,"Status"],[4,"ActionType"],[4,"OffChainErrorType"],[4,"ErrorCode"],[4,"KycDataObjectType"],[4,"CommandStatus"],[4,"Command"],[4,"AbortCode"],[4,"KycDataObjectVersion"],[3,"StatusObject"],[3,"PaymentActionObject"],[3,"PaymentObject"],[3,"PaymentActorObject"],[3,"KycDataObject"],[3,"CommandRequestObject"],[3,"CommandResponseObject"],[3,"OffChainError"],[3,"PaymentCommandObject"],[3,"NationalIdObject"],[3,"AddressObject"],[3,"WriteOnceError"],[13,"PaymentCommand"]]},\
"prover_lab":{"doc":"","t":[0,0,0,3,3,5,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,12,5,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,17,17,5,5,3,8,11,11,5,11,11,10,11,11,11,5,5,11,11,11,11,11],"n":["benchmark","plot","z3log","Benchmark","BenchmarkData","benchmark","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","config","data","duration","fmt","fmt","from","from","into","into","name","read_benchmark","sort","stats_benchmarks","status","sum","take","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","COLOR_PALETTE","DARK_GRAY","GRAY","GRAY_PALETTE","LIGHT_GRAY","MEDIUM_GRAY","plot_benchmarks_to_file","plot_svg","IntoIterSorted","ModelExt","borrow","borrow_mut","compute_instantiation_times","from","from","id2s","into","into_iter","next","plot_instantiations","process_file","size_hint","try_from","try_into","type_id","vzip"],"q":["prover_lab","","","prover_lab::benchmark","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","prover_lab::plot","","","","","","","","prover_lab::z3log","","","","","","","","","","","","","","","","",""],"d":["","","","Represents a benchmark.","A data entry of a benchmark.","","","","","","","","","","The simple name of the configuration.","The associated data.","","","","","","","","","Read benchmark from data file.","Sort the benchmark data by longest duration.","Print statistics for the given set of benchmarks. TODO: …","","Sum the durations of the samples in the benchmark.","Shrink benchmark to the first count samples.","","","","","","","","","","","","","","","","","Plot a set of benchmarks to an SVG file. The first entry …","","","Helper trait to print es by their id.","","","Compute top instantiated terms and retrieve the “…","","","","","","","Plot the instantiations.","Read z3tracer model from  file.","","","","",""],"i":[0,0,0,0,0,0,1,2,1,2,1,2,1,2,1,1,2,1,2,1,2,1,2,2,0,1,0,2,1,1,1,2,1,2,1,2,1,2,1,2,0,0,0,0,0,0,0,0,0,0,3,3,0,3,3,4,3,3,3,0,0,3,3,3,3,3],"f":[null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["benchmark",3]],[[],["benchmarkdata",3]],[[]],[[]],null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,[[["str",15]],[["result",6,["benchmark"]],["benchmark",3]]],[[]],[[],["string",3]],null,[[],["u32",15]],[[["usize",15]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,[[["str",15]],["result",6]],[[],["result",6]],null,null,[[]],[[]],[[["model",3]],["vec",3]],[[]],[[["binaryheap",3]]],[[["ident",3]],["string",3]],[[]],[[]],[[],["option",4]],[[["str",15],["usize",15]],["svgwrapper",3]],[[["str",15]],[["result",6,["model"]],["model",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"Benchmark"],[3,"BenchmarkData"],[3,"IntoIterSorted"],[8,"ModelExt"]]},\
"prover_mutation":{"doc":"","t":[0,5],"n":["mutator","mutate"],"q":["prover_mutation","prover_mutation::mutator"],"d":["",""],"i":[0,0],"f":[null,[[]]],"p":[]},\
"proxy":{"doc":"","t":[3,11,11,11,11,11,11,11,11,11,11],"n":["Proxy","borrow","borrow_mut","from","http","https","into","new","try_from","try_into","type_id"],"q":["proxy","","","","","","","","","",""],"d":["","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1],"f":[null,[[]],[[]],[[]],[[["str",15]],[["str",15],["option",4,["str"]]]],[[["str",15]],[["str",15],["option",4,["str"]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"Proxy"]]},\
"read_write_set":{"doc":"","t":[3,5,5,11,11,11,11,11,11,11,11,11,11,11],"n":["ReadWriteSetAnalysis","analyze","analyze_sorted","borrow","borrow_mut","from","get_function_env","get_summary","into","normalize_all_scripts","try_from","try_into","type_id","vzip"],"q":["read_write_set","","","","","","","","","","","","",""],"d":["","Infer read/write set results for <code>modules</code>. The <code>modules</code> list …","Like analyze_unsorted, but assumes that <code>modules</code> is already …","","","","Returns the FunctionEnv for <code>module</code>::<code>fun</code> Returns <code>None</code> if …","Return an overapproximation access paths read/written by …","","Normalize the analysis result computed from the …","","","",""],"i":[0,0,0,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[],[["result",6,["readwritesetanalysis"]],["readwritesetanalysis",3]]],[[],[["result",6,["readwritesetanalysis"]],["readwritesetanalysis",3]]],[[]],[[]],[[]],[[["identstr",3],["moduleid",3]],[["option",4,["functionenv"]],["functionenv",3]]],[[["identstr",3],["moduleid",3]],[["readwritesetstate",3],["option",4,["readwritesetstate"]]]],[[]],[[["vec",3]],["normalizedreadwritesetanalysis",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"ReadWriteSetAnalysis"]]},\
"read_write_set_dynamic":{"doc":"","t":[3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ConcretizedFormals","ConcretizedSecondaryIndexes","NormalizedReadWriteSetAnalysis","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","concretize_secondary_indexes","deref","deref","fmt","fmt","fmt","fmt","from","from","from","from_args","get_canonical_summary","get_concretized_keys","get_concretized_summary","get_keys_read","get_keys_read","get_keys_written","get_keys_written","get_partially_concretized_summary","into","into","into","may_have_secondary_indexes","new","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["read_write_set_dynamic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A read/write set state with no unbound formals or type …","A read/write set state with no secondary indexes and no …","","","","","","","","Concretize all secondary indexes in <code>self</code> using …","","","","","","","","","","Construct a <code>ConcretizedFormals</code> from <code>accesses</code> by binding …","","Returns an overapproximation of the <code>ResourceKey</code>’s in …","Returns an overapproximation of the access paths in global …","Returns an overapproximation of the <code>ResourceKey</code>’s in …","Return the <code>ResourceKey</code>’s read by <code>self</code>.","Returns an overapproximation of the <code>ResourceKey</code>’s in …","Return the <code>ResourceKey</code>’s that may be written by <code>self</code>. …","Returns the access paths in global storage that will be …","","","","Return <code>true</code> if <code>module</code>::<code>fun</code> may read an address from the …","","","","","","","","","","","","","","",""],"i":[0,0,0,1,2,3,1,2,3,2,2,3,2,2,3,3,1,2,3,2,1,1,1,1,2,1,2,1,1,2,3,1,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3],"f":[null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4,["concretizedsecondaryindexes"]],["concretizedsecondaryindexes",3]]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["readwriteset",3]],[["concretizedformals",3],["result",6,["concretizedformals"]]]],[[["moduleid",3],["identstr",3]],[["option",4,["readwriteset"]],["readwriteset",3]]],[[["moduleid",3],["identstr",3],["bool",15]],[["result",6,["vec"]],["vec",3,["resourcekey"]]]],[[["moduleid",3],["identstr",3]],[["result",6,["concretizedsecondaryindexes"]],["concretizedsecondaryindexes",3]]],[[["moduleid",3],["identstr",3]],[["result",6,["vec"]],["vec",3,["resourcekey"]]]],[[],[["option",4,["vec"]],["vec",3,["resourcekey"]]]],[[["moduleid",3],["identstr",3]],[["result",6,["vec"]],["vec",3,["resourcekey"]]]],[[],[["option",4,["vec"]],["vec",3,["resourcekey"]]]],[[["moduleid",3],["identstr",3],["modulecache",3]],[["concretizedformals",3],["result",6,["concretizedformals"]]]],[[]],[[]],[[]],[[["moduleid",3],["identstr",3]],[["result",6,["bool"]],["bool",15]]],[[["btreemap",3,["moduleid","btreemap"]],["btreemap",3,["identifier","readwriteset"]],["moduleid",3]]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]]],"p":[[3,"NormalizedReadWriteSetAnalysis"],[3,"ConcretizedFormals"],[3,"ConcretizedSecondaryIndexes"]]},\
"read_write_set_types":{"doc":"","t":[4,3,13,13,13,13,4,13,13,3,3,4,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12],"n":["Access","AccessPath","Const","Field","Formal","Global","Offset","Read","ReadWrite","ReadWriteSet","Root","RootAddress","TrieNode","VectorIndex","Write","add_access_path","add_offset","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_keys_read","get_keys_written","has_secondary_index","into","into","into","into","into","into","into","is_read","is_write","iter_paths","ne","ne","ne","new","new","new_global_constant","offset","offsets","partial_cmp","partial_cmp","partial_cmp","partial_cmp","root","root","root","sub_actuals","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0"],"q":["read_write_set_types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","read_write_set_types::Offset","","read_write_set_types::RootAddress",""],"d":["An access to local or global state","","","Index into contents of a struct by field offset","","A type index into global storage. Only follows a field or …","Offset of an access path: either a field, vector index, or …","Read via RHS * or exists","Could be read or written","","","","","Unknown index into a vector","Written via LHS *, move_to, or move_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,2,1,2,0,3,3,0,0,0,0,2,3,4,5,3,2,6,1,7,5,4,3,2,6,1,7,5,4,3,2,6,1,7,5,4,3,2,6,1,7,5,4,2,1,7,3,2,1,7,3,2,2,6,1,7,7,5,5,4,4,3,2,6,1,7,5,4,4,4,5,3,2,6,1,7,5,4,3,3,4,2,1,7,6,4,5,5,5,3,2,1,7,5,7,5,4,3,2,6,1,7,5,4,2,7,5,4,3,2,6,1,7,5,4,3,2,6,1,7,5,4,7,3,2,6,1,7,5,4,3,2,6,1,7,5,4,8,9,10,11],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["accesspath",3],["access",4]]],[[["offset",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["access",4]],[[],["offset",4]],[[],["trienode",3]],[[],["rootaddress",4]],[[],["root",3]],[[],["accesspath",3]],[[],["readwriteset",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["offset",4]],["ordering",4]],[[["rootaddress",4]],["ordering",4]],[[["root",3]],["ordering",4]],[[["access",4]],["bool",15]],[[["offset",4]],["bool",15]],[[["rootaddress",4]],["bool",15]],[[["root",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4,["vec"]],["vec",3,["resourcekey"]]]],[[],[["option",4,["vec"]],["vec",3,["resourcekey"]]]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["option",4]],[[["offset",4]],["bool",15]],[[["rootaddress",4]],["bool",15]],[[["root",3]],["bool",15]],[[]],[[]],[[["accountaddress",3],["type",4]]],[[]],null,[[],[["option",4,["ordering"]],["ordering",4]]],[[["offset",4]],[["option",4,["ordering"]],["ordering",4]]],[[["rootaddress",4]],[["option",4,["ordering"]],["ordering",4]]],[[["root",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["root",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null],"p":[[4,"RootAddress"],[4,"Offset"],[4,"Access"],[3,"ReadWriteSet"],[3,"AccessPath"],[3,"TrieNode"],[3,"Root"],[13,"Field"],[13,"Global"],[13,"Const"],[13,"Formal"]]},\
"resource_viewer":{"doc":"","t":[13,3,4,13,13,3,13,13,13,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12],"n":["Address","AnnotatedMoveStruct","AnnotatedMoveValue","Bool","Bytes","MoveValueAnnotator","Struct","U128","U64","U8","Vector","abilities","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","fmt","fmt","from","from","from","get_module","get_resource_bytes","get_type","into","into","into","move_struct_fields","new","serialize","serialize","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_","type_id","type_id","type_id","value","view_function_arguments","view_resource","view_value","vzip","vzip","vzip","0","0","0","0","0","0","0","0","1"],"q":["resource_viewer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","resource_viewer::AnnotatedMoveValue","","","","","","","",""],"d":["","","AnnotatedMoveValue is a fully expanded version of on chain …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,0,0,1,1,0,1,1,1,1,1,2,3,2,1,3,2,1,2,1,2,1,2,2,1,1,3,2,1,3,3,1,3,2,1,3,3,2,1,2,1,2,1,3,2,1,3,2,1,2,3,2,1,2,3,3,3,3,2,1,4,5,6,7,8,9,10,11,9],"f":[null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["annotatedmovestruct",3]],[[],["annotatedmovevalue",4]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["moduleid",3]],[["rc",3,["compiledmodule"]],["result",6,["rc"]]]],[[["accountaddress",3],["structtag",3]],[["option",4,["vec"]],["vec",3,["u8"]]]],[[],["typetag",4]],[[]],[[]],[[]],[[["structtag",3]],[["result",6,["vec"]],["vec",3]]],[[]],[[["serializer",8]],["result",6]],[[["serializer",8]],["result",6]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[["identstr",3],["moduleid",3]],[["result",6,["vec"]],["vec",3,["annotatedmovevalue"]]]],[[["structtag",3]],[["annotatedmovestruct",3],["result",6,["annotatedmovestruct"]]]],[[["typetag",4]],[["annotatedmovevalue",4],["result",6,["annotatedmovevalue"]]]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null],"p":[[4,"AnnotatedMoveValue"],[3,"AnnotatedMoveStruct"],[3,"MoveValueAnnotator"],[13,"U8"],[13,"U64"],[13,"U128"],[13,"Bool"],[13,"Address"],[13,"Vector"],[13,"Bytes"],[13,"Struct"]]},\
"safety_rules":{"doc":"","t":[3,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,3,3,3,13,13,13,8,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,10,11,10,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,6,5,5,5,5,5,5,5,5,5,5,5,5,5],"n":["ConsensusState","Error","InconsistentExecutionResult","IncorrectEpoch","IncorrectLastVotedRound","IncorrectPreferredRound","IncorrectRound","InternalError","InvalidAccumulatorExtension","InvalidEpochChangeProof","InvalidLedgerInfo","InvalidOrderedLedgerInfo","InvalidProposal","InvalidQuorumCertificate","InvalidTimeoutCertificate","NotInitialized","NotSafeToTimeout","NotSafeToVote","PersistentSafetyStorage","Process","SafetyRules","SafetyRulesManager","SecureStorageMissingDataError","SecureStorageUnexpectedError","SerializationError","TSafetyRules","ValidatorKeyNotFound","ValidatorNotInSet","VoteProposalSignatureNotFound","author","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","clone","clone","clone_into","clone_into","consensus_key_for_version","consensus_state","consensus_state","construct_and_sign_vote","construct_and_sign_vote","construct_and_sign_vote_two_chain","construct_and_sign_vote_two_chain","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","drop","epoch","eq","eq","equivalent","erased_serialize","erased_serialize","execution_public_key","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","fuzzing_utils","in_validator_set","init","init","init","init","init","init","initialize","initialize","initialize","internal_store","into","into","into","into","into","into","last_voted_round","ne","ne","new","new","new","new","new","new_local","new_process","new_serializer","new_thread","one_chain_round","preferred_round","safety_data","safety_data","serialize","serialize","set_safety_data","set_waypoint","sign","sign_commit_vote","sign_commit_vote","sign_proposal","sign_proposal","sign_timeout","sign_timeout","sign_timeout_with_qc","sign_timeout_with_qc","start","test_only_hash","test_only_hash","test_utils","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","waypoint","waypoint","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","1","1","1","1","2","2","3","3","arb_accumulator_extension_proof","arb_block","arb_block_data","arb_block_type_proposal","arb_epoch_change_proof","arb_epoch_state","arb_maybe_signed_vote_proposal","arb_quorum_cert","arb_safety_rules_input","arb_timeout","arb_validator_consensus_info","fuzzing","fuzz_construct_and_sign_vote","fuzz_handle_message","fuzz_initialize","fuzz_sign_proposal","fuzz_sign_timeout","Proof","empty_proof","make_genesis","make_proposal_with_parent","make_proposal_with_parent_and_overrides","make_proposal_with_qc","make_proposal_with_qc_and_proof","make_timeout_cert","test_safety_rules","test_safety_rules_uninitialized","test_serializer","test_storage","validator_signers_to_ledger_info","validator_signers_to_waypoint"],"q":["safety_rulessafety_rules::Error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","safety_rules::fuzzing_utils","","","","","","","","","","","","safety_rules::fuzzing_utils::fuzzing","","","","","safety_rules::test_utils","","","","","","","","","","","","",""],"d":["Public representation of the internal state of SafetyRules …","Different reasons for proposal rejection","","","","","","","","","","","","","","","","","SafetyRules needs an abstract storage interface to act as …","","@TODO consider a cache of verified QCs to cut down on …","","","","","Interface for SafetyRules","","","","","","","","","","","","","","","","","","","","","","","Provides the internal state of SafetyRules for monitoring …","","Attempts to vote for a given proposal following the voting …","","Sign the vote with 2-chain protocol.","","","","","","","","","","","","","","","","","","","","","","","Returns the current epoch","","","","","","","","","","","","","","","","","","","","","Indicating whether the validator is validator set","","","","","","","Initialize SafetyRules using an Epoch ending LedgerInfo, …","Use this to instantiate a PersistentStorage for a new data …","","","","","","","","","Returns the last round that was voted on","","","Use this to instantiate a PersistentStorage with an …","","Constructs a new instance of SafetyRules with the given …","","","","","","","The round of the highest QuorumCert.","A “preferred block” is the two-chain head with the …","","Return a copy of the safety data.","","","","","","As the holder of the private key, SafetyRules also signs a …","","As the holder of the private key, SafetyRules also signs …","","As the holder of the private key, SafetyRules also signs …","","Sign the timeout together with highest qc for 2-chain …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Last known checkpoint this should map to a LedgerInfo that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a safety rules instance for testing purposes.","Returns a safety rules instance that has not been …","Returns a simple serializer for testing purposes.","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,0,1,1,1,2,2,3,4,5,6,1,2,3,4,5,6,1,5,6,1,6,1,2,7,4,7,4,7,4,6,2,3,4,5,6,1,2,3,4,5,6,1,6,1,2,3,4,5,6,1,6,6,1,6,6,1,2,6,6,1,1,2,3,4,5,6,1,1,1,1,0,6,2,3,4,5,6,1,7,2,4,2,2,3,4,5,6,1,6,6,1,2,3,4,5,6,5,5,5,5,6,6,2,6,6,1,2,2,2,7,4,7,4,7,4,7,4,3,6,1,0,6,1,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,8,10,11,23,24,26,23,24,23,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["author",6],["error",4],["result",4,["author","error"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["box",3,["tsafetyrules"]],["tsafetyrules",8]]],[[],["consensusstate",3]],[[],["error",4]],[[]],[[]],[[["ed25519publickey",3]],[["result",4,["ed25519privatekey","error"]],["ed25519privatekey",3],["error",4]]],[[],[["consensusstate",3],["error",4],["result",4,["consensusstate","error"]]]],[[],[["consensusstate",3],["error",4],["result",4,["consensusstate","error"]]]],[[["maybesignedvoteproposal",3]],[["vote",3],["error",4],["result",4,["vote","error"]]]],[[["maybesignedvoteproposal",3]],[["vote",3],["error",4],["result",4,["vote","error"]]]],[[["maybesignedvoteproposal",3],["option",4,["twochaintimeoutcertificate"]],["twochaintimeoutcertificate",3]],[["vote",3],["error",4],["result",4,["vote","error"]]]],[[["maybesignedvoteproposal",3],["option",4,["twochaintimeoutcertificate"]],["twochaintimeoutcertificate",3]],[["vote",3],["error",4],["result",4,["vote","error"]]]],[[],["consensusstate",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["u64",15]],[[["consensusstate",3]],["bool",15]],[[["error",4]],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["error",3],["ok",3],["result",4,["ok","error"]]]],[[["serializer",8]],[["error",3],["ok",3],["result",4,["ok","error"]]]],[[],[["ed25519publickey",3],["error",4],["result",4,["ed25519publickey","error"]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["error",3]]],[[["error",4]]],[[["error",4]]],null,[[],["bool",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["epochchangeproof",3]],[["error",4],["result",4,["error"]]]],[[["author",6],["waypoint",3],["bool",15],["ed25519privatekey",3],["storage",4]]],[[["epochchangeproof",3]],[["error",4],["result",4,["error"]]]],[[],["storage",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["round",6]],[[["consensusstate",3]],["bool",15]],[[["error",4]],["bool",15]],[[["storage",4],["bool",15]]],[[["safetyrulesconfig",3]]],[[["persistentsafetystorage",3],["bool",15]]],[[["safetyrulesconfig",3]]],[[["safetydata",3],["waypoint",3],["bool",15]]],[[["persistentsafetystorage",3],["bool",15]]],[[["u64",15],["socketaddr",4]]],[[["persistentsafetystorage",3],["bool",15]]],[[["u64",15],["persistentsafetystorage",3],["bool",15]]],[[],["round",6]],[[],["round",6]],[[],[["safetydata",3],["error",4],["result",4,["safetydata","error"]]]],[[],["safetydata",3]],[[],["result",4]],[[],["result",4]],[[["safetydata",3]],[["error",4],["result",4,["error"]]]],[[["waypoint",3]],[["error",4],["result",4,["error"]]]],[[["ed25519publickey",3],["string",3]],[["error",4],["ed25519signature",3],["result",4,["ed25519signature","error"]]]],[[["ledgerinfowithsignatures",4],["ledgerinfo",3]],[["error",4],["ed25519signature",3],["result",4,["ed25519signature","error"]]]],[[["ledgerinfowithsignatures",4],["ledgerinfo",3]],[["error",4],["ed25519signature",3],["result",4,["ed25519signature","error"]]]],[[["blockdata",3]],[["error",4],["ed25519signature",3],["result",4,["ed25519signature","error"]]]],[[["blockdata",3]],[["error",4],["ed25519signature",3],["result",4,["ed25519signature","error"]]]],[[["timeout",3]],[["error",4],["ed25519signature",3],["result",4,["ed25519signature","error"]]]],[[["timeout",3]],[["error",4],["ed25519signature",3],["result",4,["ed25519signature","error"]]]],[[["option",4,["twochaintimeoutcertificate"]],["twochaintimeout",3],["twochaintimeoutcertificate",3]],[["error",4],["ed25519signature",3],["result",4,["ed25519signature","error"]]]],[[["option",4,["twochaintimeoutcertificate"]],["twochaintimeout",3],["twochaintimeoutcertificate",3]],[["error",4],["ed25519signature",3],["result",4,["ed25519signature","error"]]]],[[]],[[],["hashvalue",3]],[[],["hashvalue",3]],null,[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["waypoint",3],["result",4,["waypoint","error"]],["error",4]]],[[],["waypoint",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["maybesignedvoteproposal",3]],[["vote",3],["error",4],["result",4,["vote","error"]]]],[[["safetyrulesinput",4]],[["vec",3,["u8"]],["error",4],["result",4,["vec","error"]]]],[[["epochchangeproof",3]],[["error",4],["result",4,["error"]]]],[[["blockdata",3]],[["error",4],["ed25519signature",3],["result",4,["ed25519signature","error"]]]],[[["timeout",3]],[["error",4],["ed25519signature",3],["result",4,["ed25519signature","error"]]]],null,[[],["proof",6]],[[["validatorsigner",3]]],[[["maybesignedvoteproposal",3],["option",4,["maybesignedvoteproposal"]],["validatorsigner",3],["option",4,["ed25519privatekey"]],["round",6],["payload",6],["ed25519privatekey",3]],["maybesignedvoteproposal",3]],[[["maybesignedvoteproposal",3],["option",4,["maybesignedvoteproposal"]],["u64",15],["option",4,["u64"]],["option",4,["ed25519privatekey"]],["epochstate",3],["option",4,["epochstate"]],["validatorsigner",3],["round",6],["payload",6],["ed25519privatekey",3]],["maybesignedvoteproposal",3]],[[["quorumcert",3],["validatorsigner",3],["option",4,["ed25519privatekey"]],["round",6],["ed25519privatekey",3]],["maybesignedvoteproposal",3]],[[["quorumcert",3],["validatorsigner",3],["proof",6],["round",6],["payload",6],["ed25519privatekey",3],["option",4,["ed25519privatekey"]]],["maybesignedvoteproposal",3]],[[["round",6],["validatorsigner",3],["quorumcert",3]],["twochaintimeoutcertificate",3]],[[],["safetyrules",3]],[[],["safetyrules",3]],[[],["serializerservice",3]],[[["validatorsigner",3]],["persistentsafetystorage",3]],[[],["ledgerinfo",3]],[[],["waypoint",3]]],"p":[[4,"Error"],[3,"PersistentSafetyStorage"],[3,"Process"],[3,"SafetyRules"],[3,"SafetyRulesManager"],[3,"ConsensusState"],[8,"TSafetyRules"],[13,"IncorrectEpoch"],[13,"IncorrectRound"],[13,"IncorrectLastVotedRound"],[13,"IncorrectPreferredRound"],[13,"InvalidAccumulatorExtension"],[13,"InvalidEpochChangeProof"],[13,"InternalError"],[13,"InvalidProposal"],[13,"InvalidQuorumCertificate"],[13,"NotInitialized"],[13,"SecureStorageMissingDataError"],[13,"SecureStorageUnexpectedError"],[13,"SerializationError"],[13,"ValidatorKeyNotFound"],[13,"ValidatorNotInSet"],[13,"NotSafeToVote"],[13,"NotSafeToTimeout"],[13,"InvalidTimeoutCertificate"],[13,"InconsistentExecutionResult"],[13,"InvalidOrderedLedgerInfo"]]},\
"schemadb":{"doc":"This library implements a schematized DB on top of RocksDB…","t":[13,6,3,17,13,6,6,4,3,3,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,16,8,8,8,16,8,5,10,10,10,10,10],"n":["Backward","ColumnFamilyName","DB","DEFAULT_CF_NAME","Forward","Options","ReadOptions","ScanDirection","SchemaBatch","SchemaIterator","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","create_checkpoint","default","define_schema","delete","flush_all","fmt","fmt","from","from","from","from","get","get_property","into","into","into","into","into_iter","iter","new","next","open","open_as_secondary","open_readonly","put","put","range_delete","rev_iter","schema","seek","seek_for_prev","seek_to_first","seek_to_last","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write_schemas","COLUMN_FAMILY_NAME","Key","KeyCodec","Schema","SeekKeyCodec","Value","ValueCodec","assert_encode_decode","decode_key","decode_value","encode_key","encode_seek_key","encode_value"],"q":["schemadb","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","schemadb::schema","","","","","","","","","","","",""],"d":["","Type alias to improve readability.","This DB is a schematized RocksDB wrapper where all data …","Name for the <code>default</code> column family that’s always open by …","","Type alias to <code>rocksdb::Options</code>.","Type alias to <code>rocksdb::ReadOptions</code>. See <code>rocksdb doc</code>","","<code>SchemaBatch</code> holds a collection of updates that can be …","DB Iterator parameterized on <code>Schema</code> that seeks with …","","","","","","","","","Creates new physical DB checkpoint in directory specified …","","Macro for defining a SchemaDB schema.","Adds a delete operation to the batch.","Flushes all memtable data. This is only used for testing …","","","","","","","Reads single record by key.","","","","","","","Returns a forward <code>SchemaIterator</code> on a certain schema.","Creates an empty batch.","","Create db with all the column families provided if it doesn…","Open db as secondary. This allows to read the DB in …","Open db in readonly mode Note that this still assumes there…","Adds an insert/update operation to the batch.","Writes single record.","Delete all keys in range [begin, end).","Returns a backward <code>SchemaIterator</code> on a certain schema.","This module provides traits that define the behavior of a …","Seeks to the first key whose binary representation is …","Seeks to the last key whose binary representation is less …","Seeks to the first key.","Seeks to the last key.","","","","","","","","","","","","","Writes a group of records wrapped in a <code>SchemaBatch</code>.","The column family name associated with this struct. Note: …","Type of the key.","This trait defines a type that can serve as a <code>Schema::Key</code>.","This trait defines a schema: an association of a column …","This defines a type that can be used to seek a …","Type of the value.","This trait defines a type that can serve as a <code>Schema::Value</code>…","Helper used in tests to assert a (key, value) pair for a …","Converts bytes fetched from DB to <code>Self</code>.","Converts bytes fetched from DB to <code>Self</code>.","Converts <code>self</code> to bytes to be stored in DB.","Converts <code>self</code> to bytes which is used to seek the …","Converts <code>self</code> to bytes to be stored in DB."],"i":[1,0,0,0,1,0,0,0,0,0,1,2,3,4,1,2,3,4,4,3,0,3,4,3,4,1,2,3,4,4,4,1,2,3,4,2,4,3,2,4,4,4,3,4,4,4,0,2,2,2,2,1,2,3,4,1,2,3,4,1,2,3,4,4,5,5,0,0,0,5,0,0,6,7,6,8,7],"f":[null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["asref",8,["path"]],["path",3]],["result",6]],[[],["schemabatch",3]],null,[[],["result",6]],[[],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],[["option",4],["result",6,["option"]]]],[[["str",15]],[["result",6,["u64"]],["u64",15]]],[[]],[[]],[[]],[[]],[[]],[[["readoptions",6]],[["schemaiterator",3],["result",6,["schemaiterator"]]]],[[]],[[],["option",4]],[[["options",3],["columnfamilyname",6],["vec",3,["columnfamilyname"]],["str",15]],["result",6]],[[["asref",8,["path"]],["options",3],["columnfamilyname",6],["vec",3,["columnfamilyname"]],["path",3],["str",15]],["result",6]],[[["options",3],["columnfamilyname",6],["vec",3,["columnfamilyname"]],["str",15]],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[["readoptions",6]],[["schemaiterator",3],["result",6,["schemaiterator"]]]],null,[[],["result",6]],[[],["result",6]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["schemabatch",3]],["result",6]],null,null,null,null,null,null,null,[[]],[[],["result",6]],[[],["result",6]],[[],[["result",6,["vec"]],["vec",3,["u8"]]]],[[],[["result",6,["vec"]],["vec",3,["u8"]]]],[[],[["result",6,["vec"]],["vec",3,["u8"]]]]],"p":[[4,"ScanDirection"],[3,"SchemaIterator"],[3,"SchemaBatch"],[3,"DB"],[8,"Schema"],[8,"KeyCodec"],[8,"ValueCodec"],[8,"SeekKeyCodec"]]},\
"scratchpad":{"doc":"This crate provides in-memory representation of Diem core …","t":[4,13,13,13,8,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,12,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,5,11,11,11,11,11,11,11,11,11,5,11,11,11,11,12],"n":["AccountStatus","DoesNotExist","ExistsInDB","ExistsInScratchPad","ProofRead","SparseMerkleTree","Unknown","batch_update","batches_update","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","fmt","fmt","from","from","generate_node_hashes","get","get_proof","init","init","into","into","ne","new","root_hash","serial_update","test_utils","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","naive_smt","proof_reader","proptest_helpers","NaiveSmt","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","from","get_proof","get_root_hash","init","into","new","to_owned","try_from","try_into","type_id","update","vzip","ProofReader","borrow","borrow_mut","default","deref","deref_mut","drop","from","get_proof","init","into","new","try_from","try_into","type_id","vzip","Action","Commit","Execute","arb_smt_correctness_case","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","init","into","test_smt_correctness_impl","try_from","try_into","type_id","vzip","0"],"q":["scratchpad","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","scratchpad::AccountStatus","scratchpad::test_utils","","","scratchpad::test_utils::naive_smt","","","","","","","","","","","","","","","","","","","","","scratchpad::test_utils::proof_reader","","","","","","","","","","","","","","","","scratchpad::test_utils::proptest_helpers","","","","","","","","","","","","","","","","","","scratchpad::test_utils::proptest_helpers::Action"],"d":["<code>AccountStatus</code> describes the result of querying an account …","The account does not exist in either the tree or DB. This …","The account does not exist in the tree, but exists in DB. …","The account exists in the tree, therefore we can give its …","A type that implements <code>ProofRead</code> can provide proof for …","The Sparse Merkle Tree implementation.","We do not know if this account exists or not and need to …","Constructs a new Sparse Merkle Tree by applying <code>updates</code>, …","Constructs a new Sparse Merkle Tree, returns the SMT root …","","","","","","","","","","","","","","","","","","","","This is a helper function that compares an updated …","Queries a <code>key</code> in this <code>SparseMerkleTree</code>.","Gets verified proof for this key in persistent storage.","","","","","","Constructs a Sparse Merkle Tree with a root hash. This is …","Returns the root hash of this tree.","Constructs a new Sparse Merkle Tree as if we are updating …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,0,0,1,2,2,1,2,1,2,2,2,2,1,2,1,2,1,2,1,1,1,2,1,2,2,2,3,1,2,1,2,1,2,2,2,0,2,1,2,1,2,1,2,1,2,4,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,7,7,0,7,7,7,7,7,7,7,7,7,0,7,7,7,7,8],"f":[null,null,null,null,null,null,null,[[["vec",3]],[["result",4,["updateerror"]],["updateerror",4]]],[[["vec",3,["vec"]],["vec",3]],[["updateerror",4],["result",4,["updateerror"]]]],[[]],[[]],[[]],[[]],[[],["sparsemerkletree",3]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["accountstatus",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["vec",3,["hashvalue"]],["hashvalue",3]],[["hashmap",3,["nibblepath","hashvalue"]],["nibblepath",3],["hashvalue",3]]],[[["hashvalue",3]],["accountstatus",4]],[[["hashvalue",3]],[["sparsemerkleproof",3],["option",4,["sparsemerkleproof"]]]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["accountstatus",4]],["bool",15]],[[["hashvalue",3]]],[[],["hashvalue",3]],[[["vec",3,["vec"]],["vec",3]],[["result",4,["updateerror"]],["updateerror",4]]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[],["naivesmt",3]],[[]],[[],["naivesmt",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["hashvalue",3]],[["sparsemerkleproof",3],["cryptohash",8]]],[[],["hashvalue",3]],[[],["usize",15]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],null,[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["hashvalue",3]],[["sparsemerkleproof",3],["option",4,["sparsemerkleproof"]]]],[[],["usize",15]],[[]],[[["vec",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[["action",4],["vec",3,["action"]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null],"p":[[4,"AccountStatus"],[3,"SparseMerkleTree"],[8,"ProofRead"],[13,"ExistsInScratchPad"],[3,"NaiveSmt"],[3,"ProofReader"],[4,"Action"],[13,"Execute"]]},\
"scratchpad_benchmark":{"doc":"","t":[5],"n":["run_benchmark"],"q":["scratchpad_benchmark"],"d":[""],"i":[0],"f":[[[["usize",15],["u64",15],["pathbuf",3]]]],"p":[]},\
"sdk_compatibility":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"seed_peer_generator":{"doc":"","t":[0,5],"n":["utils","gen_validator_full_node_seed_peer_config"],"q":["seed_peer_generator","seed_peer_generator::utils"],"d":["","Retrieve the Fullnode seed peers from JSON-RPC"],"i":[0,0],"f":[null,[[["string",3]],[["result",6,["peerset"]],["peerset",6]]]],"p":[]},\
"serializer_tests":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"short_hex_str":{"doc":"","t":[8,3,18,18,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11],"n":["AsShortHexStr","InputTooShortError","LENGTH","SOURCE_LENGTH","ShortHexStr","as_str","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","eq","fmt","fmt","fmt","fmt","from","from","hash","into","into","ne","partial_cmp","serialize","short_str","to_owned","to_string","to_string","try_from","try_from","try_from_bytes","try_into","try_into","type_id","type_id"],"q":["short_hex_str","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","An efficient container for formatting a byte slice as a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Format a new <code>ShortHexStr</code> from a byte slice.","","","",""],"i":[0,0,1,1,0,1,1,2,1,2,1,1,1,1,1,1,2,2,1,2,1,1,2,1,1,1,3,1,1,2,1,2,1,1,2,1,2],"f":[null,null,null,null,null,[[],["str",15]],[[]],[[]],[[]],[[]],[[],["shorthexstr",3]],[[]],[[["shorthexstr",3]],["ordering",4]],[[["shorthexstr",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["shorthexstr",3]],["bool",15]],[[["shorthexstr",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["result",4]],[[],["shorthexstr",3]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["shorthexstr","inputtooshorterror"]],["inputtooshorterror",3],["shorthexstr",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"ShortHexStr"],[3,"InputTooShortError"],[8,"AsShortHexStr"]]},\
"shuffle":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"shuffle_custom_move_code":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"shuffle_custom_node":{"doc":"","t":[17,5,5,0,0,5,5,5,5],"n":["MOVE_EXTENSION","build_move_sources","generate_validator_config","release","utils","generate_script_abis","generate_script_builder","iterate_directory","time_it"],"q":["shuffle_custom_node","","","","","shuffle_custom_node::release","","shuffle_custom_node::utils",""],"d":["","","","","","","","Helper function to iterate through all the files in the …",""],"i":[0,0,0,0,0,0,0,0,0],"f":[null,[[["path",3]],["result",6]],[[["vec",3,["vec"]],["vmpublishingoption",3],["vec",3,["u8"]],["path",3]],[["validatorconfig",3],["result",6,["validatorconfig"]]]],null,null,[[["path",3]]],[[["path",3]]],[[["path",3]]],[[["str",15]]]],"p":[]},\
"shuffle_transaction_builder":{"doc":"","t":[0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["framework","AddCurrencyToAccount","AddRecoveryRotationCapability","AddValidatorAndReconfigure","AddVaspDomain","BurnTxnFees","BurnWithAmount","CancelBurnWithAmount","CreateChildVaspAccount","CreateDesignatedDealer","CreateParentVaspAccount","CreateRecoveryAddress","CreateValidatorAccount","CreateValidatorOperatorAccount","CreateVaspDomains","ForceExpire","FreezeAccount","InitializeDiemConsensusConfig","MintCoin","OptInToCrsn","PeerToPeerBySigners","PeerToPeerWithMetadata","Preburn","PublishSharedEd25519PublicKey","RegisterValidatorConfig","RemoveValidatorAndReconfigure","RemoveVaspDomain","RotateAuthenticationKey","RotateAuthenticationKeyWithNonce","RotateAuthenticationKeyWithNonceAdmin","RotateAuthenticationKeyWithRecoveryAddress","RotateDualAttestationInfo","RotateSharedEd25519PublicKey","ScriptCall","ScriptFunctionCall","SetGasConstants","SetValidatorConfigAndReconfigure","SetValidatorOperator","SetValidatorOperatorWithNonceAdmin","TieredMint","UnfreezeAccount","UpdateDiemConsensusConfig","UpdateDiemVersion","UpdateDualAttestationLimit","UpdateExchangeRate","UpdateMintingAbility","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decode","encode","encode_add_currency_to_account_script_function","encode_add_recovery_rotation_capability_script_function","encode_add_validator_and_reconfigure_script_function","encode_add_vasp_domain_script_function","encode_burn_txn_fees_script_function","encode_burn_with_amount_script_function","encode_cancel_burn_with_amount_script_function","encode_create_child_vasp_account_script_function","encode_create_designated_dealer_script_function","encode_create_parent_vasp_account_script_function","encode_create_recovery_address_script_function","encode_create_validator_account_script_function","encode_create_validator_operator_account_script_function","encode_create_vasp_domains_script_function","encode_force_expire_script_function","encode_freeze_account_script_function","encode_initialize_diem_consensus_config_script_function","encode_mint_coin_script_function","encode_opt_in_to_crsn_script_function","encode_peer_to_peer_by_signers_script_function","encode_peer_to_peer_with_metadata_script_function","encode_preburn_script_function","encode_publish_shared_ed25519_public_key_script_function","encode_register_validator_config_script_function","encode_remove_validator_and_reconfigure_script_function","encode_remove_vasp_domain_script_function","encode_rotate_authentication_key_script_function","encode_rotate_authentication_key_with_nonce_admin_script_function","encode_rotate_authentication_key_with_nonce_script_function","encode_rotate_authentication_key_with_recovery_address_script_function","encode_rotate_dual_attestation_info_script_function","encode_rotate_shared_ed25519_public_key_script_function","encode_set_gas_constants_script_function","encode_set_validator_config_and_reconfigure_script_function","encode_set_validator_operator_script_function","encode_set_validator_operator_with_nonce_admin_script_function","encode_tiered_mint_script_function","encode_unfreeze_account_script_function","encode_update_diem_consensus_config_script_function","encode_update_diem_version_script_function","encode_update_dual_attestation_limit_script_function","encode_update_exchange_rate_script_function","encode_update_minting_ability_script_function","eq","eq","fmt","fmt","from","from","into","into","ne","partial_cmp","partial_cmp","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","add_all_currencies","add_all_currencies","add_all_currencies","addr","address","address","allow_minting","amount","amount","amount","amount","amount","amount","auth_key_prefix","auth_key_prefix","auth_key_prefix","auth_key_prefix","auth_key_prefix","child_address","child_initial_balance","coin_type","coin_type","coin_type","coin_type","config","consensus_pubkey","consensus_pubkey","crsn_size","currency","currency","currency","currency","currency","currency","default_account_size","designated_dealer_address","domain","domain","fullnode_network_addresses","fullnode_network_addresses","gas_unit_scaling_factor","global_memory_per_byte_cost","global_memory_per_byte_write_cost","human_name","human_name","human_name","human_name","intrinsic_gas_per_byte","large_transaction_cutoff","major","max_price_per_gas_unit","max_transaction_size_in_bytes","maximum_number_of_gas_units","metadata","metadata","metadata_signature","min_price_per_gas_unit","min_transaction_gas_units","mint_amount","new_account_address","new_account_address","new_account_address","new_exchange_rate_denominator","new_exchange_rate_numerator","new_key","new_key","new_key","new_key","new_key","new_micro_xdx_limit","new_url","operator_account","operator_account","operator_name","operator_name","payee","preburn_address","preburn_address","public_key","public_key","recovery_address","recovery_address","shift_amount","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","sliding_nonce","tier_index","to_freeze_account","to_recover","to_unfreeze_account","token","token","token","validator_account","validator_account","validator_address","validator_address","validator_name","validator_name","validator_network_addresses","validator_network_addresses"],"q":["shuffle_transaction_builder","shuffle_transaction_builder::framework","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","shuffle_transaction_builder::framework::ScriptFunctionCall","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Conversion library between a structured representation of …","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Structured representation of a call into a known Move …","Structured representation of a call into a known Move …","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","","","","","","","","","Try to recognize a Diem <code>TransactionPayload</code> and convert it …","Build a Diem <code>TransactionPayload</code> from a structured object …","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","Summary","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,2,1,2,1,2,1,1,2,1,2,1,2,1,2,1,2,1,2,1,3,4,5,4,6,7,8,9,10,11,12,13,14,3,4,5,15,16,3,3,17,3,5,18,19,20,21,22,23,4,12,13,24,8,25,18,6,7,20,21,25,25,25,4,5,15,16,25,25,26,25,25,25,12,13,13,25,25,18,5,15,16,24,24,27,28,29,30,31,32,31,33,34,33,34,13,10,11,35,36,37,30,38,39,10,4,5,15,16,40,41,42,28,29,25,34,18,43,19,26,32,24,18,40,30,43,10,11,14,20,21,39,42,39,42,20,21],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["scriptcall",4]],[[],["scriptfunctioncall",4]],[[]],[[]],[[["transactionpayload",4]],[["option",4,["scriptfunctioncall"]],["scriptfunctioncall",4]]],[[],["transactionpayload",4]],[[["typetag",4]],["transactionpayload",4]],[[["accountaddress",3]],["transactionpayload",4]],[[["u64",15],["u8",15],["accountaddress",3],["vec",3,["u8"]]],["transactionpayload",4]],[[["vec",3,["u8"]],["accountaddress",3],["u8",15]],["transactionpayload",4]],[[["typetag",4]],["transactionpayload",4]],[[["u64",15],["accountaddress",3],["typetag",4]],["transactionpayload",4]],[[["u64",15],["accountaddress",3],["typetag",4]],["transactionpayload",4]],[[["u64",15],["accountaddress",3],["u8",15],["bool",15],["vec",3,["u8"]],["typetag",4]],["transactionpayload",4]],[[["u64",15],["accountaddress",3],["u8",15],["bool",15],["vec",3,["u8"]],["typetag",4]],["transactionpayload",4]],[[["u64",15],["accountaddress",3],["u8",15],["bool",15],["vec",3,["u8"]],["typetag",4]],["transactionpayload",4]],[[],["transactionpayload",4]],[[["u64",15],["accountaddress",3],["u8",15],["vec",3,["u8"]]],["transactionpayload",4]],[[["u64",15],["accountaddress",3],["u8",15],["vec",3,["u8"]]],["transactionpayload",4]],[[],["transactionpayload",4]],[[["u64",15]],["transactionpayload",4]],[[["u64",15],["accountaddress",3]],["transactionpayload",4]],[[["u64",15]],["transactionpayload",4]],[[["u64",15]],["transactionpayload",4]],[[["u64",15]],["transactionpayload",4]],[[["u64",15],["u8",15],["vec",3,["u8"]],["typetag",4]],["transactionpayload",4]],[[["u64",15],["accountaddress",3],["u8",15],["vec",3,["u8"]],["typetag",4]],["transactionpayload",4]],[[["u64",15],["typetag",4]],["transactionpayload",4]],[[["vec",3,["u8"]],["u8",15]],["transactionpayload",4]],[[["accountaddress",3],["u8",15],["vec",3,["u8"]]],["transactionpayload",4]],[[["u64",15],["u8",15],["accountaddress",3],["vec",3,["u8"]]],["transactionpayload",4]],[[["vec",3,["u8"]],["accountaddress",3],["u8",15]],["transactionpayload",4]],[[["vec",3,["u8"]],["u8",15]],["transactionpayload",4]],[[["u64",15],["vec",3,["u8"]],["u8",15]],["transactionpayload",4]],[[["u64",15],["vec",3,["u8"]],["u8",15]],["transactionpayload",4]],[[["vec",3,["u8"]],["accountaddress",3],["u8",15]],["transactionpayload",4]],[[["vec",3,["u8"]],["u8",15]],["transactionpayload",4]],[[["vec",3,["u8"]],["u8",15]],["transactionpayload",4]],[[["u64",15]],["transactionpayload",4]],[[["accountaddress",3],["u8",15],["vec",3,["u8"]]],["transactionpayload",4]],[[["vec",3,["u8"]],["u8",15],["accountaddress",3]],["transactionpayload",4]],[[["u64",15],["u8",15],["accountaddress",3],["vec",3,["u8"]]],["transactionpayload",4]],[[["u64",15],["accountaddress",3],["typetag",4]],["transactionpayload",4]],[[["u64",15],["accountaddress",3]],["transactionpayload",4]],[[["u64",15],["vec",3,["u8"]],["u8",15]],["transactionpayload",4]],[[["u64",15]],["transactionpayload",4]],[[["u64",15]],["transactionpayload",4]],[[["u64",15],["typetag",4]],["transactionpayload",4]],[[["typetag",4],["bool",15]],["transactionpayload",4]],[[["scriptcall",4]],["bool",15]],[[["scriptfunctioncall",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["scriptfunctioncall",4]],["bool",15]],[[["scriptcall",4]],[["option",4,["ordering"]],["ordering",4]]],[[["scriptfunctioncall",4]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"ScriptFunctionCall"],[4,"ScriptCall"],[13,"CreateChildVaspAccount"],[13,"CreateDesignatedDealer"],[13,"CreateParentVaspAccount"],[13,"AddVaspDomain"],[13,"RemoveVaspDomain"],[13,"UpdateMintingAbility"],[13,"MintCoin"],[13,"BurnWithAmount"],[13,"CancelBurnWithAmount"],[13,"PeerToPeerBySigners"],[13,"PeerToPeerWithMetadata"],[13,"Preburn"],[13,"CreateValidatorAccount"],[13,"CreateValidatorOperatorAccount"],[13,"BurnTxnFees"],[13,"TieredMint"],[13,"UpdateDiemConsensusConfig"],[13,"RegisterValidatorConfig"],[13,"SetValidatorConfigAndReconfigure"],[13,"OptInToCrsn"],[13,"AddCurrencyToAccount"],[13,"UpdateExchangeRate"],[13,"SetGasConstants"],[13,"UpdateDiemVersion"],[13,"RotateAuthenticationKey"],[13,"RotateAuthenticationKeyWithNonce"],[13,"RotateAuthenticationKeyWithNonceAdmin"],[13,"RotateAuthenticationKeyWithRecoveryAddress"],[13,"RotateDualAttestationInfo"],[13,"UpdateDualAttestationLimit"],[13,"SetValidatorOperator"],[13,"SetValidatorOperatorWithNonceAdmin"],[13,"PublishSharedEd25519PublicKey"],[13,"RotateSharedEd25519PublicKey"],[13,"AddRecoveryRotationCapability"],[13,"ForceExpire"],[13,"AddValidatorAndReconfigure"],[13,"FreezeAccount"],[13,"InitializeDiemConsensusConfig"],[13,"RemoveValidatorAndReconfigure"],[13,"UnfreezeAccount"]]},\
"smoke_test":{"doc":"","t":[0,0,0,0,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["event_fetcher","fullnode","replay_tooling","rest_api","scripts_and_modules","transaction","verifying_client","EventFetcher","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","name","run","try_from","try_into","type_id","vzip","LaunchFullnode","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","init","into","name","run","try_from","try_into","type_id","vzip","ReplayTooling","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","name","run","try_from","try_into","type_id","vzip","GetIndex","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","name","run","try_from","try_into","type_id","vzip","ExecuteCustomModuleAndScript","MalformedScript","borrow","borrow","borrow_mut","borrow_mut","compile_program","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","name","name","run","run","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ExternalTransactionSigner","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","name","run","try_from","try_into","type_id","vzip","VerifyingClientEquivalence","VerifyingGetLatestMetadata","VerifyingSubmit","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","init","init","init","into","into","into","name","name","name","run","run","run","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["smoke_test","","","","","","","smoke_test::event_fetcher","","","","","","","","","","","","","","","smoke_test::fullnode","","","","","","","","","","","","","","","","smoke_test::replay_tooling","","","","","","","","","","","","","","","smoke_test::rest_api","","","","","","","","","","","","","","","smoke_test::scripts_and_modules","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoke_test::transaction","","","","","","","","","","","","","","","smoke_test::verifying_client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compile Move program","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,5,6,5,6,0,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,8,9,10,8,9,10,8,9,10,8,9,10,8,9,10,8,9,10,8,9,10,8,9,10,8,9,10,8,9,10,8,9,10,8,9,10,8,9,10,8,9,10],"f":[null,null,null,null,null,null,null,null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[],["str",15]],[[["publicusagecontext",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[],["str",15]],[[["networkcontext",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[],["str",15]],[[["publicusagecontext",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[],["str",15]],[[["publicusagecontext",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[]],[[]],[[["str",15]],[["vec",3,["u8"]],["result",6,["vec"]]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["str",15]],[[],["str",15]],[[["admincontext",3]],["result",6]],[[["admincontext",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[],["str",15]],[[["publicusagecontext",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[["publicusagecontext",3]],["forgeresult",6]],[[["publicusagecontext",3]],["forgeresult",6]],[[["publicusagecontext",3]],["forgeresult",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]]],"p":[[3,"EventFetcher"],[3,"LaunchFullnode"],[3,"ReplayTooling"],[3,"GetIndex"],[3,"MalformedScript"],[3,"ExecuteCustomModuleAndScript"],[3,"ExternalTransactionSigner"],[3,"VerifyingClientEquivalence"],[3,"VerifyingSubmit"],[3,"VerifyingGetLatestMetadata"]]},\
"socket_bench_server":{"doc":"","t":[3,11,11,5,5,11,11,11,11,11,11,11,11,12,5,5,12,12,11,11,11,11],"n":["Args","borrow","borrow_mut","build_memsocket_noise_transport","build_tcp_noise_transport","deref","deref_mut","drop","fmt","from","from_env","init","into","msg_lens","server_stream_handler","start_stream_server","tcp_addr","tcp_noise_addr","try_from","try_into","type_id","vzip"],"q":["socket_bench_server","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","Build a MemorySocket + Noise transport","Build a Tcp + Noise transport","","","","","","","","","","Server side handler for send throughput benchmark when the …","","","","","","",""],"i":[0,1,1,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1],"f":[null,[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[]],null,[[]],[[["networkaddress",3],["handle",3]],["networkaddress",3]],null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"Args"]]},\
"spec_flatten":{"doc":"","t":[3,13,4,13,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,11,12],"n":["FlattenOptions","Inline","SimplificationPass","TrimAbortsIf","borrow","borrow","borrow_mut","borrow_mut","clap","clone","clone","clone_into","clone_into","dump_stepwise","dump_stepwise_raw","fmt","from","from","from_clap","from_str","into","into","pipeline","run","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","workflow"],"q":["spec_flatten","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Options passed into the specification flattening tool.","","List of simplification passes available","","","","","","","","","","","Dump stepwise result","Dump stepwise result in raw exp printing format","","","","","","","","Simplification processing pipeline","","","","","","","","","","","","Options common and shared by the proving workflow and all …"],"i":[0,1,0,1,1,2,1,2,2,1,2,1,2,2,2,1,1,2,2,1,1,2,2,0,1,2,1,2,1,2,1,2,1,2,2],"f":[null,null,null,null,[[]],[[]],[[]],[[]],[[],["app",3]],[[],["simplificationpass",4]],[[],["flattenoptions",3]],[[]],[[]],null,null,[[["formatter",3]],["result",6]],[[]],[[]],[[["argmatches",3]]],[[["str",15]],["result",6]],[[]],[[]],null,[[["flattenoptions",3]],["result",6]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null],"p":[[4,"SimplificationPass"],[3,"FlattenOptions"]]},\
"state_sync_v1":{"doc":"Used to perform catching up between nodes for committed …","t":[0,0,0,0,0,0,0,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,13,13,4,13,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,13,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,12,12,12,4,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,11,11,12,11,11,11,11,11,11,12,11,11,11,11,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,8,10,10,10,10,10,10,10,5,5,13,13,6,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["bootstrapper","chunk_request","chunk_response","client","coordinator","error","executor_proxy","fuzzing","network","shared_components","StateSyncBootstrapper","bootstrap","bootstrap_with_executor_proxy","borrow","borrow_mut","create_client","deref","deref_mut","drop","from","init","into","try_from","try_into","type_id","vzip","GetChunkRequest","HighestAvailable","TargetLedgerInfo","TargetType","Waypoint","arbitrary_with","arbitrary_with","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","current_epoch","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","epoch","eq","eq","equivalent","equivalent","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","from","from","init","init","into","into","known_version","limit","ne","ne","new","serialize","serialize","target","test_only_hash","test_only_hash","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","version","vzip","vzip","0","0","target_li","timeout_ms","GetChunkResponse","LedgerInfoForWaypoint","ProgressiveLedgerInfo","ResponseLedgerInfo","VerifiableLedgerInfo","arbitrary_with","arbitrary_with","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","equivalent","equivalent","erased_serialize","erased_serialize","fmt","fmt","fmt","from","from","init","init","into","into","ne","ne","new","response_li","serialize","serialize","test_only_hash","test_only_hash","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","txn_list_with_proof","type_id","type_id","version","vzip","vzip","0","end_of_epoch_li","highest_li","target_li","waypoint_li","CoordinatorMessage","GetSyncState","StateSyncClient","WaitForInitialization","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","get_state","init","init","into","into","new","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","wait_until_initialized","0","0","SyncRequest","borrow","borrow_mut","consensus_sync_notification","deref","deref_mut","drop","from","init","into","last_commit_timestamp","try_from","try_into","type_id","vzip","CallbackSendFailed","ConsensusIsExecuting","Error","FullNodeSyncRequest","IntegerOverflow","InvalidChunkRequest","InvalidStateSyncPeer","NetworkError","NoAvailablePeers","NoSyncRequestFound","NoTransactionsCommitted","OldSyncRequestVersion","ProcessInvalidChunk","ReceivedChunkForOutdatedRequest","ReceivedChunkFromDownstream","ReceivedEmptyChunk","ReceivedNonSequentialChunk","ReceivedWrongChunkType","SenderDroppedError","SyncedBeyondTarget","UnexpectedError","UninitializedError","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","erased_serialize","fmt","fmt","from","from","from","from","from","from","init","into","ne","serialize","test_only_hash","to_owned","to_string","try_from","try_into","type_id","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","1","1","1","2","2","ExecutorProxyTrait","execute_chunk","get_chunk","get_epoch_change_ledger_info","get_epoch_ending_ledger_info","get_local_storage_state","get_version_timestamp","publish_event_notifications","arb_state_sync_msg","test_state_sync_msg_fuzzer_impl","GetChunkRequest","GetChunkResponse","StateSyncEvents","StateSyncMessage","StateSyncSender","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","erased_serialize","fmt","from","from","init","init","into","into","network_endpoint_config","new","send_rpc","send_to","serialize","test_only_hash","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","SyncState","borrow","borrow_mut","clone","clone_into","committed_epoch","committed_ledger_info","committed_version","deref","deref_mut","drop","fmt","from","init","into","new","synced_version","to_owned","trusted_epoch","try_from","try_into","type_id","verify_ledger_info","vzip"],"q":["state_sync_v1","","","","","","","","","","state_sync_v1::bootstrapper","","","","","","","","","","","","","","","","state_sync_v1::chunk_request","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","state_sync_v1::chunk_request::TargetType","","","","state_sync_v1::chunk_response","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","state_sync_v1::chunk_response::ResponseLedgerInfo","","","","","state_sync_v1::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","state_sync_v1::client::CoordinatorMessage","","state_sync_v1::coordinator","","","","","","","","","","","","","","","state_sync_v1::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","state_sync_v1::error::Error","","","","","","","","","","","","","","","","","","","","","","","","","state_sync_v1::executor_proxy","","","","","","","","state_sync_v1::fuzzing","","state_sync_v1::network","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","state_sync_v1::network::StateSyncMessage","","state_sync_v1::shared_components","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","Interface between State Sync and Network layers.","","Creates and bootstraps new state syncs and creates clients …","","","","","","","","","","","","","","","","","The response is built relative to the highest available …","The response is built relative to the target (or end of …","We’re currently considering several types of chunk …","The response is built relative to a LedgerInfo at a given …","","","","","","","","","","","Epoch the chunk response is supposed to belong to (i.e., …","","","","","","","","","","","","","","","","","","","","","","","","","","The response should start with <code>known_version + 1</code>.","Max size of a chunk response.","","","","","","The target of the given request.","","","","","","","","","","","","","","","","","","","","The returned chunk is bounded by the end of the …","During the initial catchup upon startup the chunks carry …","A response to <code>TargetType::HighestAvailable</code> chunk request …","The response can carry different LedgerInfo types …","A typical response carries a LedgerInfo with signatures …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The proofs are built relative to the LedgerInfo in …","","","","","","","","","","","","Chunk of transactions with proof corresponding to the …","","","The version of the LedgerInfo relative to which the …","","","","","","","","Messages used by the StateSyncClient for communication …","","A client used for communicating with a …","","","","","","","","","","","","","","Returns information about the state sync internal state. …","","","","","","","","","","","","","","Waits until state sync is caught up with the waypoint …","","","A sync request for a specified target ledger info.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proxies interactions with execution and storage for state …","Execute and commit a batch of transactions","Gets chunk of transactions given the known version, target …","Get the epoch changing ledger info for the given epoch so …","Get ledger info at an epoch boundary version.","Sync the local state with the latest in storage.","Returns the ledger’s timestamp for the given version in …","Publishes on-chain event notifications and …","","","","","The interface from Network to StateSync layer.","State sync network messages","The interface from StateSync to Networking layer.","","","","","","","","","","","","","","","","","","","","","","","","Configuration for the network endpoints to support state …","","","","","","","","","","","","","","","","","","SyncState contains the following fields:","","","","","","","","","","","","","","","","Returns the highest available version in the local …","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,2,0,2,2,3,2,3,2,3,2,3,2,3,3,2,3,2,3,2,3,2,3,2,2,3,2,3,2,3,2,2,3,3,2,3,2,3,2,3,3,3,2,3,3,2,3,3,2,3,2,3,2,3,2,3,2,3,2,3,2,2,3,4,5,6,6,0,7,7,0,7,7,8,7,8,7,8,7,8,7,8,7,8,7,8,7,8,7,8,7,8,7,8,7,8,7,8,8,7,8,7,8,7,8,7,8,8,8,7,8,7,8,7,8,8,7,8,7,8,8,7,8,7,7,8,9,10,11,11,10,0,12,0,12,12,13,12,13,12,13,12,13,12,13,12,13,13,12,13,12,13,13,12,13,12,13,12,13,12,13,13,14,15,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,17,17,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,21,25,27,30,33,27,30,0,36,36,36,36,36,36,36,0,0,37,37,0,0,0,37,38,37,38,37,38,37,38,37,38,37,38,37,37,38,37,37,37,38,37,38,37,38,0,38,38,38,37,37,37,38,37,38,37,38,37,38,37,38,39,40,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41],"f":[null,null,null,null,null,null,null,null,null,null,null,[[["consensusnotificationlistener",3],["eventsubscriptionservice",3],["nodeconfig",3],["chunkexecutor",8],["box",3,["chunkexecutor"]],["arc",3,["dbreader"]],["dbreader",8],["mempoolnotificationsender",8],["vec",3],["waypoint",3]]],[[["consensusnotificationlistener",3],["runtime",3],["nodeconfig",3],["mempoolnotificationsender",8],["vec",3],["waypoint",3],["executorproxytrait",8]]],[[]],[[]],[[],["statesyncclient",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["targettype",4]],[[],["getchunkrequest",3]],[[]],[[]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[],[["u64",15],["option",4,["u64"]]]],[[["targettype",4]],["bool",15]],[[["getchunkrequest",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],null,null,[[["targettype",4]],["bool",15]],[[["getchunkrequest",3]],["bool",15]],[[["u64",15],["targettype",4],["version",6]]],[[],["result",4]],[[],["result",4]],null,[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],[["u64",15],["option",4,["u64"]]]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["responseledgerinfo",4]],[[],["getchunkresponse",3]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["responseledgerinfo",4]],["bool",15]],[[["getchunkresponse",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["responseledgerinfo",4]],["bool",15]],[[["getchunkresponse",3]],["bool",15]],[[["transactionlistwithproof",6],["responseledgerinfo",4]]],null,[[],["result",4]],[[],["result",4]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["version",6]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["coordinatormessage",4],["unboundedsender",3,["coordinatormessage"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,[[]],[[]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["error",4]],[[]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],[[["error",4]],["bool",15]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["error",4]]],[[["networkerror",3]]],[[["senderror",3]]],[[["canceled",3]]],[[]],[[["error",4]]],[[],["usize",15]],[[]],[[["error",4]],["bool",15]],[[],["result",4]],[[],["hashvalue",3]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["transactionlistwithproof",6],["option",4,["ledgerinfowithsignatures"]],["ledgerinfowithsignatures",4]],[["result",4,["error"]],["error",4]]],[[["u64",15]],[["transactionlistwithproof",6],["error",4],["result",4,["transactionlistwithproof","error"]]]],[[["u64",15]],[["result",4,["ledgerinfowithsignatures","error"]],["error",4],["ledgerinfowithsignatures",4]]],[[["u64",15]],[["result",4,["ledgerinfowithsignatures","error"]],["error",4],["ledgerinfowithsignatures",4]]],[[],[["result",4,["syncstate","error"]],["syncstate",3],["error",4]]],[[["u64",15]],[["u64",15],["error",4],["result",4,["u64","error"]]]],[[["vec",3,["contractevent"]],["contractevent",4]],[["result",4,["error"]],["error",4]]],[[]],[[["statesyncmessage",4]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["statesyncmessage",4]],[[],["statesyncsender",3]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["serializer",8]],[["result",4,["ok","error"]],["ok",3],["error",3]]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["appconfig",3]],[[["peermanagerrequestsender",3],["connectionrequestsender",3]]],[[["peerid",3],["statesyncmessage",4],["duration",3]],[["box",3,["future"]],["pin",3,["box"]]]],[[["peerid",3],["statesyncmessage",4]],[["result",4,["networkerror"]],["networkerror",3]]],[[],["result",4]],[[],["hashvalue",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,[[]],[[]],[[],["syncstate",3]],[[]],[[],["u64",15]],[[],["ledgerinfowithsignatures",4]],[[],["u64",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[["epochstate",3],["executedtrees",3],["ledgerinfowithsignatures",4]]],[[],["u64",15]],[[]],[[],["u64",15]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["ledgerinfowithsignatures",4]],[["result",4,["error"]],["error",4]]],[[]]],"p":[[3,"StateSyncBootstrapper"],[4,"TargetType"],[3,"GetChunkRequest"],[13,"TargetLedgerInfo"],[13,"Waypoint"],[13,"HighestAvailable"],[4,"ResponseLedgerInfo"],[3,"GetChunkResponse"],[13,"VerifiableLedgerInfo"],[13,"LedgerInfoForWaypoint"],[13,"ProgressiveLedgerInfo"],[4,"CoordinatorMessage"],[3,"StateSyncClient"],[13,"GetSyncState"],[13,"WaitForInitialization"],[3,"SyncRequest"],[4,"Error"],[13,"CallbackSendFailed"],[13,"IntegerOverflow"],[13,"InvalidChunkRequest"],[13,"InvalidStateSyncPeer"],[13,"NetworkError"],[13,"NoAvailablePeers"],[13,"NoSyncRequestFound"],[13,"OldSyncRequestVersion"],[13,"ProcessInvalidChunk"],[13,"ReceivedChunkForOutdatedRequest"],[13,"ReceivedChunkFromDownstream"],[13,"ReceivedEmptyChunk"],[13,"ReceivedNonSequentialChunk"],[13,"ReceivedWrongChunkType"],[13,"SenderDroppedError"],[13,"SyncedBeyondTarget"],[13,"UninitializedError"],[13,"UnexpectedError"],[8,"ExecutorProxyTrait"],[4,"StateSyncMessage"],[3,"StateSyncSender"],[13,"GetChunkRequest"],[13,"GetChunkResponse"],[3,"SyncState"]]},\
"state_sync_v2":{"doc":"This is an empty skeleton library for state sync v2.","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"storage_client":{"doc":"","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["StorageClient","borrow","borrow_mut","deref","deref_mut","drop","from","get_account_state_with_proof","get_account_state_with_proof_by_version","get_account_state_with_proof_by_version","get_account_transaction","get_account_transactions","get_block_timestamp","get_epoch_ending_ledger_info","get_epoch_ending_ledger_infos","get_event_by_version_with_proof","get_events","get_events_with_proofs","get_latest_account_state","get_latest_ledger_info","get_latest_state_root","get_latest_tree_state","get_startup_info","get_startup_info","get_state_proof","get_state_proof_with_ledger_info","get_transaction_by_hash","get_transaction_by_version","get_transaction_outputs","get_transactions","init","into","new","save_transactions","save_transactions","try_from","try_into","type_id","vzip"],"q":["storage_client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["version",6],["accountaddress",3]],[["result",6,["accountstatewithproof"]],["accountstatewithproof",6]]],[[["version",6],["accountaddress",3]],[["result",4,["error"]],["error",4]]],[[["u64",15],["accountaddress",3]],["result",6]],[[["u64",15],["version",6],["bool",15],["accountaddress",3]],[["result",6,["option"]],["option",4,["transactionwithproof"]]]],[[["u64",15],["version",6],["bool",15],["accountaddress",3]],[["result",6,["accounttransactionswithproof"]],["accounttransactionswithproof",6]]],[[["u64",15]],[["u64",15],["result",6,["u64"]]]],[[["u64",15]],[["result",6,["ledgerinfowithsignatures"]],["ledgerinfowithsignatures",4]]],[[["u64",15]],[["result",6,["epochchangeproof"]],["epochchangeproof",3]]],[[["u64",15],["eventkey",3]],[["result",6,["eventbyversionwithproof"]],["eventbyversionwithproof",6]]],[[["u64",15],["order",4],["eventkey",3]],[["result",6,["vec"]],["vec",3]]],[[["u64",15],["order",4],["eventkey",3],["option",4,["u64"]]],[["vec",3,["eventwithproof"]],["result",6,["vec"]]]],[[["accountaddress",3]],[["option",4,["accountstateblob"]],["result",6,["option"]]]],[[],[["result",6,["ledgerinfowithsignatures"]],["ledgerinfowithsignatures",4]]],[[],["result",6]],[[],[["treestate",3],["result",6,["treestate"]]]],[[],[["result",4,["option","error"]],["option",4,["startupinfo"]],["error",4]]],[[],[["result",6,["option"]],["option",4,["startupinfo"]]]],[[["u64",15]],[["stateproof",3],["result",6,["stateproof"]]]],[[["u64",15],["ledgerinfowithsignatures",4]],[["stateproof",3],["result",6,["stateproof"]]]],[[["bool",15],["version",6],["hashvalue",3]],[["result",6,["option"]],["option",4,["transactionwithproof"]]]],[[["u64",15],["version",6],["bool",15]],[["transactionwithproof",6],["result",6,["transactionwithproof"]]]],[[["u64",15],["version",6]],[["transactionoutputlistwithproof",6],["result",6,["transactionoutputlistwithproof"]]]],[[["u64",15],["bool",15]],[["transactionlistwithproof",6],["result",6,["transactionlistwithproof"]]]],[[],["usize",15]],[[]],[[["socketaddr",4],["u64",15]]],[[["version",6],["ledgerinfowithsignatures",4],["option",4,["ledgerinfowithsignatures"]]],["result",6]],[[["transactiontocommit",3],["version",6],["option",4,["ledgerinfowithsignatures"]],["vec",3,["transactiontocommit"]],["ledgerinfowithsignatures",4]],[["result",4,["error"]],["error",4]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"StorageClient"]]},\
"storage_interface":{"doc":"","t":[13,8,3,8,13,4,3,13,13,8,4,3,13,13,13,3,4,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,10,10,10,11,10,10,10,11,10,11,10,10,11,10,11,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,0,11,11,11,11,11,11,11,11,11,11,11,12,12,10,11,11,11,11,11,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,12,12,12,12,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6],"n":["Ascending","DbReader","DbReaderWriter","DbWriter","Descending","Error","GetAccountStateWithProofByVersionRequest","GetAccountStateWithProofByVersionRequest","GetStartupInfoRequest","MoveDbReader","Order","SaveTransactionsRequest","SaveTransactionsRequest","SerializationError","ServiceError","StartupInfo","StorageRequest","TreeState","account_state_root_hash","address","batch_fetch_resources","batch_fetch_resources_by_version","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","committed_tree_state","default_protocol","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","describe","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fetch_synced_version","first_version","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_arc","get_account_state_with_proof","get_account_state_with_proof_by_version","get_account_transaction","get_account_transactions","get_accumulator_consistency_proof","get_accumulator_root_hash","get_accumulator_summary","get_block_timestamp","get_epoch_ending_ledger_info","get_epoch_ending_ledger_infos","get_epoch_state","get_event_by_version_with_proof","get_events","get_events_with_proofs","get_last_version_before_timestamp","get_latest_account_state","get_latest_commit_metadata","get_latest_ledger_info","get_latest_state_root","get_latest_transaction_info_option","get_latest_tree_state","get_latest_version","get_startup_info","get_state_proof","get_state_proof_with_ledger_info","get_transaction_by_hash","get_transaction_by_version","get_transaction_outputs","get_transactions","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","latest_epoch_state","latest_ledger_info","ledger_frozen_subtree_hashes","ledger_info_with_signatures","mock","ne","ne","ne","ne","ne","new","new","new","new","new","new_for_testing","num_transactions","reader","save_transactions","serialize","serialize","serialize","serialize","serialize","serialize","state_view","synced_tree_state","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","txns_to_commit","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrap","writer","0","error","0","0","DbReaderWriter","MockDbReaderWriter","borrow","borrow_mut","deref","deref_mut","drop","from","get_account_state_with_proof","get_account_state_with_proof_by_version","get_account_transaction","get_account_transactions","get_block_timestamp","get_epoch_ending_ledger_info","get_epoch_ending_ledger_infos","get_event_by_version_with_proof","get_events","get_events_with_proofs","get_latest_account_state","get_latest_ledger_info","get_latest_state_root","get_latest_tree_state","get_startup_info","get_state_proof","get_state_proof_with_ledger_info","get_transaction_by_hash","get_transaction_by_version","get_transaction_outputs","get_transactions","init","into","save_transactions","try_from","try_into","type_id","vzip","VerifiedStateView","borrow","borrow_mut","default_protocol","deref","deref_mut","drop","from","get","id","init","into","is_genesis","new","try_from","try_into","type_id","vzip","VerifiedStateView"],"q":["storage_interfacestorage_interface::Error","","storage_interface::StorageRequest","","storage_interface::default_protocol","storage_interface::mock","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","storage_interface::state_view","","","","","","","","","","","","","","","","","","storage_interface::state_view::default_protocol"],"d":["","Trait that is implemented by a DB that supports certain …","","Trait that is implemented by a DB that supports certain …","","","","","","","","","","","","","Network types for storage service","","","The access path to query with.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the account state corresponding to the given …","","Returns a transaction that is the <code>seq_num</code>-th one …","Returns the list of transactions sent by an account with …","Gets an <code>AccumulatorConsistencyProof</code> starting from …","Gets the transaction accumulator root hash at specified …","A convenience function for building a …","See <code>DiemDB::get_block_timestamp</code>.","Get the ledger info of the epoch that <code>known_version</code> …","See <code>DiemDB::get_epoch_ending_ledger_infos</code>.","","Returns the [<code>NewBlockEvent</code>] for the block containing the …","Returns events by given event key","Returns events by given event key","Gets the version of the last transaction committed before …","See <code>DiemDB::get_latest_account_state</code>.","Returns the latest version and committed block timestamp","Returns the latest ledger info.","See <code>DiemDB::get_latest_state_root</code>.","Gets the latest transaction info. N.B. Unlike …","Gets the latest TreeState no matter if db has been …","Returns the latest ledger info.","Gets information needed from storage during the main node …","Returns proof of new state relative to version known to …","Returns proof of new state for a given ledger info with …","See <code>DiemDB::get_transaction_by_hash</code>.","See <code>DiemDB::get_transaction_by_version</code>.","See <code>DiemDB::get_transaction_outputs</code>.","See <code>DiemDB::get_transactions</code>.","","","","","","","","","","","","","","","","","If the above ledger info doesn’t carry a validator set, …","The latest ledger info.","","","This module provides mock dbreader for tests.","","","","","","","","","Constructor.","Constructor.","","","","Persist transactions. Called by the executor module when …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The version the query is based on.","","","","","","","","","","","","","","","","This is a mock of the DbReaderWriter in tests.","","","","","","","","","","","","","","","Returns events by given event key","Returns events by given event key","","Returns the latest ledger info.","","","","","","","","","","","","","","","","","<code>VerifiedStateView</code> is like a snapshot of the global state …","","","","","","","","","","","","","Constructs a <code>VerifiedStateView</code> with persistent state view …","","","","",""],"i":[1,0,0,0,1,0,0,2,2,0,0,0,2,3,3,0,0,0,4,5,6,6,7,4,3,1,8,2,5,9,7,4,3,1,8,2,5,9,7,4,1,8,2,5,9,7,4,1,8,2,5,9,7,0,7,4,3,1,8,2,5,9,7,4,3,1,8,2,5,9,4,7,4,3,2,5,9,7,4,3,1,8,2,5,9,7,4,3,1,5,9,7,4,1,5,9,7,4,3,2,5,9,6,9,7,4,3,3,2,5,9,7,4,3,3,3,3,1,8,2,5,9,8,6,6,6,6,6,6,6,6,6,6,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,4,3,1,8,2,5,9,7,4,3,1,8,2,5,9,7,7,4,9,0,7,4,3,5,9,7,4,8,5,9,7,4,8,10,7,4,3,2,5,9,0,7,7,4,3,2,5,9,7,4,1,8,2,5,9,3,7,4,3,1,8,2,5,9,7,4,3,1,8,2,5,9,9,7,4,3,1,8,2,5,9,5,7,4,3,1,8,2,5,9,8,8,11,12,13,14,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,16,16,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["vec",3,["accesspath"]],["accesspath",3]],[["vec",3,["vec"]],["result",6,["vec"]]]],[[["vec",3,["accesspath"]],["accesspath",3],["version",6]],[["vec",3,["vec"]],["result",6,["vec"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["startupinfo",3]],[[],["treestate",3]],[[],["order",4]],[[],["dbreaderwriter",3]],[[],["storagerequest",4]],[[],["getaccountstatewithproofbyversionrequest",3]],[[],["savetransactionsrequest",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["str",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["startupinfo",3]],["bool",15]],[[["treestate",3]],["bool",15]],[[["error",4]],["bool",15]],[[["order",4]],["bool",15]],[[["getaccountstatewithproofbyversionrequest",3]],["bool",15]],[[["savetransactionsrequest",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["serializer",8]],[["ok",3],["error",3],["result",4,["ok","error"]]]],[[["serializer",8]],[["ok",3],["error",3],["result",4,["ok","error"]]]],[[["serializer",8]],[["ok",3],["error",3],["result",4,["ok","error"]]]],[[["serializer",8]],[["ok",3],["error",3],["result",4,["ok","error"]]]],[[["serializer",8]],[["ok",3],["error",3],["result",4,["ok","error"]]]],[[["serializer",8]],[["ok",3],["error",3],["result",4,["ok","error"]]]],[[],[["u64",15],["result",6,["u64"]]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["error",4]]],[[["error",3]]],[[]],[[["error",4]]],[[]],[[]],[[]],[[]],[[]],[[["arc",3],["dbreader",8],["dbwriter",8]]],[[["accountaddress",3],["version",6]],[["result",6,["accountstatewithproof"]],["accountstatewithproof",3]]],[[["accountaddress",3],["version",6]],["result",6]],[[["u64",15],["accountaddress",3],["bool",15],["version",6]],[["option",4,["transactionwithproof"]],["result",6,["option"]]]],[[["u64",15],["accountaddress",3],["bool",15],["version",6]],[["accounttransactionswithproof",3],["result",6,["accounttransactionswithproof"]]]],[[["option",4,["version"]],["version",6]],[["accumulatorconsistencyproof",3],["result",6,["accumulatorconsistencyproof"]]]],[[["version",6]],[["hashvalue",3],["result",6,["hashvalue"]]]],[[["version",6]],[["result",6,["transactionaccumulatorsummary"]],["transactionaccumulatorsummary",3]]],[[["u64",15]],[["u64",15],["result",6,["u64"]]]],[[["u64",15]],[["ledgerinfowithsignatures",4],["result",6,["ledgerinfowithsignatures"]]]],[[["u64",15]],[["epochchangeproof",3],["result",6,["epochchangeproof"]]]],[[],["epochstate",3]],[[["u64",15],["eventkey",3]],[["eventbyversionwithproof",3],["result",6,["eventbyversionwithproof"]]]],[[["u64",15],["eventkey",3],["order",4]],[["result",6,["vec"]],["vec",3]]],[[["u64",15],["eventkey",3],["option",4,["u64"]],["order",4]],[["result",6,["vec"]],["vec",3,["eventwithproof"]]]],[[["u64",15],["version",6]],[["result",6,["version"]],["version",6]]],[[["accountaddress",3]],[["option",4,["accountstateblob"]],["result",6,["option"]]]],[[],["result",6]],[[],[["ledgerinfowithsignatures",4],["result",6,["ledgerinfowithsignatures"]]]],[[],["result",6]],[[],[["option",4],["result",6,["option"]]]],[[],[["treestate",3],["result",6,["treestate"]]]],[[],[["result",6,["version"]],["version",6]]],[[],[["option",4,["startupinfo"]],["result",6,["option"]]]],[[["u64",15]],[["stateproof",3],["result",6,["stateproof"]]]],[[["u64",15],["ledgerinfowithsignatures",4]],[["stateproof",3],["result",6,["stateproof"]]]],[[["bool",15],["hashvalue",3],["version",6]],[["option",4,["transactionwithproof"]],["result",6,["option"]]]],[[["bool",15],["version",6]],[["transactionwithproof",3],["result",6,["transactionwithproof"]]]],[[["u64",15],["version",6]],[["result",6,["transactionoutputlistwithproof"]],["transactionoutputlistwithproof",3]]],[[["u64",15],["bool",15],["version",6]],[["result",6,["transactionlistwithproof"]],["transactionlistwithproof",3]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[["startupinfo",3]],["bool",15]],[[["treestate",3]],["bool",15]],[[["error",4]],["bool",15]],[[["getaccountstatewithproofbyversionrequest",3]],["bool",15]],[[["savetransactionsrequest",3]],["bool",15]],[[["treestate",3],["ledgerinfowithsignatures",4],["option",4,["treestate"]],["option",4,["epochstate"]],["epochstate",3]]],[[["hashvalue",3],["leafcount",6],["vec",3,["hashvalue"]]]],[[["dbreader",8],["dbwriter",8]]],[[["accountaddress",3],["version",6]]],[[["vec",3,["transactiontocommit"]],["transactiontocommit",3],["ledgerinfowithsignatures",4],["option",4,["ledgerinfowithsignatures"]],["version",6]]],[[]],null,null,[[["option",4,["ledgerinfowithsignatures"]],["ledgerinfowithsignatures",4],["version",6]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["dbreader",8],["dbwriter",8]]],null,null,null,null,null,null,null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["accountaddress",3],["version",6]],[["accountstatewithproof",3,["transactioninfo"]],["result",6,["accountstatewithproof"]]]],[[["accountaddress",3],["version",6]],["result",6]],[[["u64",15],["accountaddress",3],["bool",15],["version",6]],[["result",6,["option"]],["option",4,["transactionwithproof"]]]],[[["u64",15],["accountaddress",3],["bool",15],["version",6]],[["result",6,["accounttransactionswithproof"]],["accounttransactionswithproof",6]]],[[["u64",15]],[["u64",15],["result",6,["u64"]]]],[[["u64",15]],[["ledgerinfowithsignatures",4],["result",6,["ledgerinfowithsignatures"]]]],[[["u64",15]],[["epochchangeproof",3],["result",6,["epochchangeproof"]]]],[[["u64",15],["eventkey",3]],[["eventbyversionwithproof",3,["transactioninfo"]],["result",6,["eventbyversionwithproof"]]]],[[["u64",15],["eventkey",3],["order",4]],[["result",6,["vec"]],["vec",3]]],[[["u64",15],["eventkey",3],["option",4,["u64"]],["order",4]],[["vec",3,["eventwithproof"]],["result",6,["vec"]]]],[[["accountaddress",3]],[["option",4,["accountstateblob"]],["result",6,["option"]]]],[[],[["ledgerinfowithsignatures",4],["result",6,["ledgerinfowithsignatures"]]]],[[],["result",6]],[[],[["treestate",3],["result",6,["treestate"]]]],[[],[["option",4,["startupinfo"]],["result",6,["option"]]]],[[["u64",15]],[["stateproof",3],["result",6,["stateproof"]]]],[[["u64",15],["ledgerinfowithsignatures",4]],[["stateproof",3],["result",6,["stateproof"]]]],[[["bool",15],["hashvalue",3],["version",6]],[["result",6,["option"]],["option",4,["transactionwithproof"]]]],[[["bool",15],["version",6]],[["result",6,["transactionwithproof"]],["transactionwithproof",6]]],[[["u64",15],["version",6]],[["transactionoutputlistwithproof",6],["result",6,["transactionoutputlistwithproof"]]]],[[["u64",15],["bool",15],["version",6]],[["transactionlistwithproof",6],["result",6,["transactionlistwithproof"]]]],[[],["usize",15]],[[]],[[["option",4,["ledgerinfowithsignatures"]],["ledgerinfowithsignatures",4],["version",6]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["accesspath",3]],[["option",4,["vec"]],["result",6,["option"]]]],[[],["stateviewid",4]],[[],["usize",15]],[[]],[[],["bool",15]],[[["hashvalue",3],["stateviewid",4],["arc",3,["dbreader"]],["sparsemerkletree",3],["dbreader",8],["option",4,["version"]],["version",6]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null],"p":[[4,"Order"],[4,"StorageRequest"],[4,"Error"],[3,"TreeState"],[3,"GetAccountStateWithProofByVersionRequest"],[8,"DbReader"],[3,"StartupInfo"],[3,"DbReaderWriter"],[3,"SaveTransactionsRequest"],[8,"DbWriter"],[13,"SerializationError"],[13,"ServiceError"],[13,"GetAccountStateWithProofByVersionRequest"],[13,"SaveTransactionsRequest"],[3,"MockDbReaderWriter"],[3,"VerifiedStateView"]]},\
"storage_service":{"doc":"This crate implements the storage service.","t":[3,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11],"n":["StorageService","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","init","into","start_storage_service_with_db","to_owned","try_from","try_into","type_id","vzip"],"q":["storage_service","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","Starts storage service with a given DiemDB","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1],"f":[null,[[]],[[]],[[],["storageservice",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[["nodeconfig",3],["arc",3,["diemdb"]],["diemdb",3]],["joinhandle",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"StorageService"]]},\
"storage_service_client":{"doc":"","t":[4,13,3,13,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["Error","RpcError","StorageServiceClient","StorageServiceError","StorageServiceMultiSender","StorageServiceNetworkSender","app_data","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from","init","init","init","into","into","into","network_endpoint_config","new","new","peer_metadata_storage","send_request","send_rpc","send_to","sender","source","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0"],"q":["storage_service_client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","storage_service_client::Error",""],"d":["","","The interface for sending Storage Service requests and …","","A network sender that dispatches across multiple networks.","The Storage Service network sender for a single network.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,0,1,0,0,2,1,2,3,1,2,3,2,3,2,3,1,2,3,1,2,3,1,2,3,1,1,2,3,1,1,1,2,3,1,2,3,1,2,3,0,2,3,2,2,3,3,2,1,2,3,1,1,2,3,1,2,3,1,2,3,1,2,3,4,5],"f":[null,null,null,null,null,null,[[],["lockinghashmap",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["storageserviceclient",3]],[[],["storageservicenetworksender",3]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["rpcerror",4]]],[[["storageserviceerror",4]]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[],["appconfig",3]],[[["arc",3,["peermetadatastorage"]],["storageservicemultisender",6],["peermetadatastorage",3]]],[[["peermanagerrequestsender",3],["connectionrequestsender",3]]],[[],["peermetadatastorage",3]],[[["duration",3],["storageservicerequest",4],["peernetworkid",3]]],[[["duration",3],["storageservicemessage",4],["peerid",3]],[["pin",3,["box"]],["box",3,["future"]]]],[[["storageservicemessage",4],["peerid",3]],[["result",4,["networkerror"]],["networkerror",3]]],[[],["storageservicemultisender",6]],[[],[["option",4,["error"]],["error",8]]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null],"p":[[4,"Error"],[3,"StorageServiceClient"],[3,"StorageServiceNetworkSender"],[13,"RpcError"],[13,"StorageServiceError"]]},\
"storage_service_server":{"doc":"","t":[4,3,17,17,17,17,17,17,13,3,8,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,10,11,10,11,10,11,10,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,6,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Error","Handler","MAX_ACCOUNT_STATES_CHUNK_SIZE","MAX_CONCURRENT_REQUESTS","MAX_EPOCH_CHUNK_SIZE","MAX_TRANSACTION_CHUNK_SIZE","MAX_TRANSACTION_OUTPUT_CHUNK_SIZE","STORAGE_SERVER_VERSION","StorageErrorEncountered","StorageReader","StorageReaderInterface","StorageServiceServer","UnexpectedErrorEncountered","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","eq","erased_serialize","fmt","fmt","from","from","from","from","get_account_states_chunk_with_proof","get_account_states_chunk_with_proof","get_data_summary","get_data_summary","get_epoch_ending_ledger_infos","get_epoch_ending_ledger_infos","get_number_of_accounts","get_number_of_accounts","get_transaction_outputs_with_proof","get_transaction_outputs_with_proof","get_transactions_with_proof","get_transactions_with_proof","init","init","init","init","into","into","into","into","ne","network","new","new","new","serialize","start","test_only_hash","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","0","0","NetworkRequest","ResponseSender","StorageServiceNetworkEvents","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","network_endpoint_config","new","new","poll_next","send","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["storage_service_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","storage_service_server::Error","","storage_service_server::network","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","The <code>Handler</code> is the “pure” inbound request handler. It …","","","Storage server constants.","","","","","The underlying implementation of the …","The interface into local storage (e.g., the Diem DB) used …","The server-side actor for the storage service. Handles …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a chunk holding a list of account states starting …","","Returns a data summary of the underlying storage state.","","Returns a list of epoch ending ledger infos, starting at …","","Returns the number of accounts in the account state tree …","","Returns a list of transaction outputs with a proof …","","Returns a list of transactions with a proof relative to the","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A channel for fulfilling a pending StorageService RPC …","A stream of requests from network. Each request also comes …","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,1,0,0,0,1,2,1,3,4,2,1,3,4,3,1,3,4,1,3,4,2,1,3,4,2,1,3,4,1,2,1,3,4,1,1,1,1,2,1,3,4,5,4,5,4,5,4,5,4,5,4,5,4,2,1,3,4,2,1,3,4,1,0,2,3,4,1,2,1,1,3,4,1,2,1,3,4,2,1,3,4,2,1,3,4,2,1,3,4,6,7,0,0,0,8,9,8,9,8,9,8,9,8,9,8,9,8,9,8,9,0,8,9,8,9,8,9,8,9,8,9,8,9],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["storageservicerequest",4]],[["result",6,["storageserviceresponse"]],["storageserviceresponse",4]]],[[],["error",4]],[[],["handler",3]],[[],["storagereader",3]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["error",4]],["bool",15]],[[["serializer",8]],[["ok",3],["error",3],["result",4,["ok","error"]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["u64",15]],[["accountstateschunkwithproof",3],["error",4],["result",6,["accountstateschunkwithproof","error"]]]],[[["u64",15]],[["accountstateschunkwithproof",3],["error",4],["result",6,["accountstateschunkwithproof","error"]]]],[[],[["error",4],["result",6,["datasummary","error"]],["datasummary",3]]],[[],[["error",4],["result",6,["datasummary","error"]],["datasummary",3]]],[[["u64",15]],[["error",4],["result",6,["epochchangeproof","error"]],["epochchangeproof",3]]],[[["u64",15]],[["error",4],["result",6,["epochchangeproof","error"]],["epochchangeproof",3]]],[[["u64",15]],[["result",6,["u64","error"]],["u64",15],["error",4]]],[[["u64",15]],[["result",6,["u64","error"]],["u64",15],["error",4]]],[[["u64",15]],[["transactionoutputlistwithproof",6],["result",6,["transactionoutputlistwithproof","error"]],["error",4]]],[[["u64",15]],[["transactionoutputlistwithproof",6],["result",6,["transactionoutputlistwithproof","error"]],["error",4]]],[[["u64",15],["bool",15]],[["result",6,["transactionlistwithproof","error"]],["transactionlistwithproof",6],["error",4]]],[[["u64",15],["bool",15]],[["result",6,["transactionlistwithproof","error"]],["transactionlistwithproof",6],["error",4]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[["error",4]],["bool",15]],null,[[["handle",3],["storageservicenetworkevents",3]]],[[]],[[["arc",3,["dbreader"]],["dbreader",8]]],[[],["result",4]],[[]],[[],["hashvalue",3]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["appconfig",3]],[[["receiver",3,["peermanagernotification"]],["receiver",3,["peerid","connectionnotification"]],["connectionnotification",4],["peermanagernotification",4],["peerid",3]]],[[["sender",3,["result"]],["result",6,["bytes","rpcerror"]]]],[[["pin",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[["result",6,["storageserviceresponse"]],["storageserviceresponse",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]]],"p":[[4,"Error"],[3,"StorageServiceServer"],[3,"Handler"],[3,"StorageReader"],[8,"StorageReaderInterface"],[13,"StorageErrorEncountered"],[13,"UnexpectedErrorEncountered"],[3,"StorageServiceNetworkEvents"],[3,"ResponseSender"]]},\
"storage_service_types":{"doc":"","t":[12,13,3,3,3,3,6,3,13,13,13,13,13,13,13,13,13,13,3,13,13,6,3,13,3,13,4,4,4,4,13,3,13,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["0","AccountStatesChunkWithProof","AccountStatesChunkWithProofRequest","CompleteDataRange","DataSummary","DegenerateRangeError","Epoch","EpochEndingLedgerInfoRequest","EpochEndingLedgerInfos","GetAccountStatesChunkWithProof","GetEpochEndingLedgerInfos","GetNumberOfAccountsAtVersion","GetServerProtocolVersion","GetStorageServerSummary","GetTransactionOutputsWithProof","GetTransactionsWithProof","InternalError","NumberOfAccountsAtVersion","ProtocolMetadata","Request","Response","Result","ServerProtocolVersion","ServerProtocolVersion","StorageServerSummary","StorageServerSummary","StorageServiceError","StorageServiceMessage","StorageServiceRequest","StorageServiceResponse","TransactionOutputsWithProof","TransactionOutputsWithProofRequest","TransactionsWithProof","TransactionsWithProofRequest","UnexpectedResponseError","account_states","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_service","can_service","can_service","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","contains","data_summary","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","epoch_ending_ledger_infos","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expected_end_epoch","expected_num_account_states","expected_num_outputs","expected_num_transactions","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_genesis","highest","include_events","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_get_storage_server_summary","lowest","max_account_states_chunk_size","max_epoch_chunk_size","max_transaction_chunk_size","max_transaction_output_chunk_size","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","proof_version","proof_version","protocol_metadata","protocol_version","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","start_account_index","start_epoch","start_version","start_version","synced_ledger_info","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","test_only_hash","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","transaction_outputs","transactions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],"q":["storage_service_typesstorage_service_types::StorageServiceMessage","","storage_service_types::StorageServiceRequest","","","","","storage_service_types::StorageServiceResponse","","","","","",""],"d":["","","A storage service request for fetching a list of account …","A struct representing a contiguous, non-empty data range …","A summary of the data actually held by the storage service …","","A type alias for different epochs.","A storage service request for fetching a list of epoch …","","","","","","","","","","","A summary of the protocol metadata for the storage service …","A request to the storage service.","A response from the storage service. If there was an error …","","The protocol version run by this server. Clients request …","","A storage server summary, containing a summary of the …","","A storage service error that can be returned to the client …","A single storage service message sent or received over …","A storage service request.","A storage service response.","","A storage service request for fetching a transaction …","","A storage service request for fetching a transaction list …","","The range of account states held in storage, e.g., if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true iff the given data item is within this range","","","","","","","","","","","","","","","The range of epoch ending ledger infos in storage, e.g., …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The ledger info corresponding to the highest synced …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The range of transaction outputs held in storage, e.g., if …","The range of transactions held in storage, e.g., if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,2,0,0,0,0,0,0,2,3,3,3,3,3,3,3,4,2,0,5,5,0,0,2,0,2,0,0,0,0,2,0,2,0,0,6,4,5,3,2,1,7,8,9,10,11,12,13,6,14,15,4,5,3,2,1,7,8,9,10,11,12,13,6,14,15,12,13,6,4,5,3,2,1,7,8,9,10,11,12,13,6,14,15,4,5,3,2,1,7,8,9,10,11,12,13,6,14,15,15,12,4,5,3,2,7,8,9,10,11,12,13,6,15,6,4,3,2,7,8,9,10,11,12,13,6,15,4,3,2,7,8,9,10,11,12,13,6,15,10,7,8,9,4,4,5,3,2,1,1,7,8,9,10,11,12,13,6,14,14,15,4,5,3,2,1,7,8,9,10,11,12,13,6,14,15,15,15,9,4,5,3,2,1,7,8,9,10,11,12,13,6,14,15,3,15,13,13,13,13,2,3,2,7,8,9,10,11,12,13,6,15,15,8,9,12,11,4,5,3,2,7,8,9,10,11,12,13,6,15,7,10,8,9,6,4,5,3,2,7,8,9,10,11,12,13,6,15,4,5,3,2,1,7,8,9,10,11,12,13,6,14,15,4,1,14,6,6,4,5,3,2,1,7,8,9,10,11,11,12,12,13,6,14,15,4,5,3,2,1,7,8,9,10,11,12,13,6,14,15,4,5,3,2,1,7,8,9,10,11,12,13,6,14,15,7,4,5,3,2,1,7,8,9,10,11,12,13,6,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["storageservicerequest",4]],["bool",15]],[[["storageservicerequest",4]],["bool",15]],[[["storageservicerequest",4]],["bool",15]],[[],["storageserviceerror",4]],[[],["storageservicemessage",4]],[[],["storageservicerequest",4]],[[],["storageserviceresponse",4]],[[],["unexpectedresponseerror",3]],[[],["accountstateschunkwithproofrequest",3]],[[],["transactionoutputswithproofrequest",3]],[[],["transactionswithproofrequest",3]],[[],["epochendingledgerinforequest",3]],[[],["serverprotocolversion",3]],[[],["storageserversummary",3]],[[],["protocolmetadata",3]],[[],["datasummary",3]],[[],["degeneraterangeerror",3]],[[],["completedatarange",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",6]],null,[[["storageserviceerror",4]],["bool",15]],[[["storageservicerequest",4]],["bool",15]],[[["storageserviceresponse",4]],["bool",15]],[[["accountstateschunkwithproofrequest",3]],["bool",15]],[[["transactionoutputswithproofrequest",3]],["bool",15]],[[["transactionswithproofrequest",3]],["bool",15]],[[["epochendingledgerinforequest",3]],["bool",15]],[[["serverprotocolversion",3]],["bool",15]],[[["storageserversummary",3]],["bool",15]],[[["protocolmetadata",3]],["bool",15]],[[["datasummary",3]],["bool",15]],[[["completedatarange",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[]],null,null,null,null,[[],["str",15]],[[["storageservicerequest",4]],["bool",15]],[[["storageserviceresponse",4]],["bool",15]],[[["accountstateschunkwithproofrequest",3]],["bool",15]],[[["transactionoutputswithproofrequest",3]],["bool",15]],[[["transactionswithproofrequest",3]],["bool",15]],[[["epochendingledgerinforequest",3]],["bool",15]],[[["serverprotocolversion",3]],["bool",15]],[[["storageserversummary",3]],["bool",15]],[[["protocolmetadata",3]],["bool",15]],[[["datasummary",3]],["bool",15]],[[["completedatarange",3]],["bool",15]],[[],[["result",6,["degeneraterangeerror"]],["degeneraterangeerror",3]]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[],["hashvalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["storageserviceresponse",4]],["result",6]],[[["storageserviceresponse",4]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"UnexpectedResponseError"],[4,"StorageServiceResponse"],[4,"StorageServiceRequest"],[4,"StorageServiceError"],[4,"StorageServiceMessage"],[3,"DataSummary"],[3,"AccountStatesChunkWithProofRequest"],[3,"TransactionOutputsWithProofRequest"],[3,"TransactionsWithProofRequest"],[3,"EpochEndingLedgerInfoRequest"],[3,"ServerProtocolVersion"],[3,"StorageServerSummary"],[3,"ProtocolMetadata"],[3,"DegenerateRangeError"],[3,"CompleteDataRange"],[13,"Request"],[13,"Response"],[13,"GetAccountStatesChunkWithProof"],[13,"GetEpochEndingLedgerInfos"],[13,"GetNumberOfAccountsAtVersion"],[13,"GetTransactionOutputsWithProof"],[13,"GetTransactionsWithProof"],[13,"AccountStatesChunkWithProof"],[13,"EpochEndingLedgerInfos"],[13,"NumberOfAccountsAtVersion"],[13,"ServerProtocolVersion"],[13,"StorageServerSummary"],[13,"TransactionOutputsWithProof"],[13,"TransactionsWithProof"]]},\
"swiss_knife":{"doc":"","t":[0,3,5,11,11,5,12,11,12,5,5,11,5,11,5,11,11,11,11,11,11],"n":["helpers","Response","account_address_parser","borrow","borrow_mut","coin_tag_parser","data","deserialize","error_message","exit_success_with_data","exit_with_error","from","hex_decode","into","read_stdin","serialize","test_only_hash","try_from","try_into","type_id","vzip"],"q":["swiss_knife","swiss_knife::helpers","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,1,0,1,1,1,0,0,1,0,1,0,1,1,1,1,1,1],"f":[null,null,[[["str",15]],["accountaddress",3]],[[]],[[]],[[["str",15]],["typetag",4]],null,[[],["result",4]],null,[[["serialize",8]]],[[["display",8]]],[[]],[[["str",15]],[["vec",3,["u8"]],["u8",15]]],[[]],[[],["string",3]],[[],["result",4]],[[],["hashvalue",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"Response"]]},\
"test_generation":{"doc":"","t":[13,4,13,13,5,0,11,0,11,5,0,11,11,0,0,11,0,11,11,14,11,5,5,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,11,0,11,11,11,14,11,14,3,3,13,4,3,13,13,3,4,13,13,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,17,3,17,17,17,17,17,17,17,17,17,17,11,11,11,11,11,11,11,5,12,12,12,12,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,4,6,6,13,6,6,3,13,13,11,11,11,11,12,11,11,5,11,11,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,13,13,13,4,3,5,5,11,11,11,11,11,5,5,11,11,11,5,5,5,11,11,11,5,5,5,5,5,5,5,5,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,11,11,11,11,11,11,11,11,12],"n":["ExecutionFailure","Status","Valid","VerificationFailure","abilities","abstract_state","borrow","borrow_graph","borrow_mut","bytecode_generation","bytecode_generator","clone","clone_into","config","control_flow_graph","eq","error","fmt","from","function_instantiation_for_state","into","module_frame_generation","run_generation","state_control_flow","state_create_struct","state_create_struct_from_inst","state_function_can_acquire_resource","state_local_availability_is","state_local_exists","state_local_has_ability","state_local_place","state_local_set","state_local_take","state_local_take_borrow","state_memory_safe","state_never","state_register_dereference","state_stack_bin_op","state_stack_function_call","state_stack_function_inst_call","state_stack_function_inst_popn","state_stack_function_popn","state_stack_has","state_stack_has_ability","state_stack_has_integer","state_stack_has_polymorphic_eq","state_stack_has_reference","state_stack_has_struct","state_stack_has_struct_inst","state_stack_is_castable","state_stack_local_polymorphic_eq","state_stack_pop","state_stack_push","state_stack_push_register","state_stack_push_register_borrow","state_stack_ref_polymorphic_eq","state_stack_satisfies_function_inst_signature","state_stack_satisfies_function_signature","state_stack_satisfies_struct_signature","state_stack_struct_borrow_field","state_stack_struct_borrow_field_inst","state_stack_struct_has_field","state_stack_struct_has_field_inst","state_stack_struct_inst_popn","state_stack_struct_popn","state_stack_unpack_struct","state_stack_unpack_struct_inst","state_struct_has_key","state_struct_inst_has_key","struct_instantiation_for_state","summaries","to_owned","transitions","try_from","try_into","type_id","unpack_instantiation_for_state","vzip","with_ty_param","AbstractState","AbstractValue","Available","BorrowState","CallGraph","Either","Immutable","InstantiableModule","Mutability","Mutable","Unavailable","abilities","abort","acquires_global_resources","add_call","add_field_instantiation","add_function_instantiation","add_instantiation","add_struct_instantiation","allow_control_flow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_depth","call_graph","can_call","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","eq","eq","eq","eq","field_instantiantiation_at","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_locals","function_instantiantiation_at","get_locals","has_aborted","instantiantiation_at","instantiate","instantiation","into","into","into","into","into","into","is_control_flow_allowed","is_final","is_generic","local_availability_is","local_exists","local_get","local_has_ability","local_insert","local_place","local_set","local_take","local_take_borrow","max_calling_depth","module","module","ne","ne","new","new","new","new_primitive","new_reference","new_struct","new_value","register_copy","register_move","register_set","stack_len","stack_peek","stack_pop","stack_push","stack_push_register","struct_instantiantiation_at","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","token","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","BorrowGraph","EdgeType","Strong","Weak","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","edges_consistent","eq","eq","fmt","fmt","fresh_partition","from","from","into","into","ne","new","partition_freezable","partition_mutability","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BytecodeGenerator","FunctionGenerationContext","apply_instruction","borrow","borrow","borrow_mut","borrow_mut","bytecode_len","clone","clone_into","eq","fmt","fmt","from","from","function_handle_index","generate","generate_block","generate_module","incr_instruction_count","inhabit_with_bytecode_seq","into","into","locals_len","ne","new","new","starting_call_height","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ALLOW_MEMORY_UNSAFE","Args","CALL_STACK_LIMIT","EXECUTE_UNVERIFIED_MODULE","GAS_METERING","INHABITATION_INSTRUCTION_LIMIT","MAX_CFG_BLOCKS","MUTATION_TOLERANCE","NEGATE_PRECONDITIONS","NEGATION_PROBABILITY","RUN_ON_VM","VALUE_STACK_LIMIT","borrow","borrow_mut","clap","fmt","from","from_clap","into","module_generation_settings","num_iterations","num_threads","output_path","seed","try_from","try_into","type_id","vzip","BasicBlock","CFG","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","fmt","fmt","from","from","get_basic_blocks","get_basic_blocks_mut","get_children_ids","get_locals_in","get_locals_out","get_parent_ids","into","into","new","new","num_children","num_parents","serialize","serialize_block_order","set_instructions","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","VMError","borrow","borrow_mut","fmt","fmt","from","into","new","to_string","try_from","try_into","type_id","vzip","Effects","FunctionInstantiableEffect","InstantiableEffect","NoTyParams","NonInstantiableEffect","Precondition","Summary","TyParams","TyParamsCall","borrow","borrow","borrow_mut","borrow_mut","effects","from","from","instruction_summary","into","into","preconditions","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","0","1","1","2","2","Left","Other","Right","StackBinOpResult","Subst","abilities_for_instantiation","abilities_for_token","borrow","borrow","borrow_mut","borrow_mut","check_and_add","create_struct","create_struct_from_inst","default","from","from","function_can_acquire_resource","get_function_instantiation_for_state","get_struct_instantiation_for_state","instantiation","into","into","local_availability_is","local_exists","local_has_ability","local_place","local_set","local_take","local_take_borrow","memory_safe","new","register_dereference","stack_bin_op","stack_function_call","stack_function_inst_call","stack_function_inst_popn","stack_function_popn","stack_has","stack_has_ability","stack_has_all_abilities","stack_has_integer","stack_has_polymorphic_eq","stack_has_reference","stack_has_struct","stack_has_struct_inst","stack_local_polymorphic_eq","stack_pop","stack_push","stack_push_register","stack_push_register_borrow","stack_ref_polymorphic_eq","stack_satisfies_function_inst_signature","stack_satisfies_function_signature","stack_satisfies_struct_instantiation","stack_satisfies_struct_signature","stack_struct_borrow_field","stack_struct_borrow_field_inst","stack_struct_has_field","stack_struct_has_field_inst","stack_struct_inst_popn","stack_struct_popn","stack_top_is_castable_to","stack_unpack_struct","stack_unpack_struct_inst","stack_unpack_struct_instantiation","struct_abilities","struct_inst_abilities","struct_ref_instantiation","subst","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0"],"q":["test_generation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","test_generation::abstract_state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","test_generation::borrow_graph","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","test_generation::bytecode_generator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","test_generation::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","test_generation::control_flow_graph","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","test_generation::error","","","","","","","","","","","","","test_generation::summaries","","","","","","","","","","","","","","","","","","","","","","","","","","","","test_generation::summaries::Effects","","","","","","","test_generation::transitions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","test_generation::transitions::StackBinOpResult"],"d":["","","","","","","","","","","","","","","","","","","","Determine the proper type instantiation for function call …","","","Run generate_bytecode for the range passed in and test …","Predicate that is false for every state, unless control …","Wrapper for enclosing the arguments of <code>stack_pack_struct</code> …","","Wrapper for enclosing the arguments of …","Wrapper for enclosing the arguments of …","Wrapper for enclosing the arguments of <code>local_exists</code> so …","Wrapper for enclosing the arguments of …","Wrapper for enclosing the arguments of <code>local_palce</code> so that …","Wrapper for enclosing the arguments of <code>local_set</code> so that …","Wrapper for enclosing the arguments of <code>local_take</code> so that …","Wrapper for enclosing the arguments of <code>local_take_borrow</code> …","Wrapper for enclosing the arguments of <code>memory_safe</code> so that …","Predicate that is false for every state.","Wrapper for enclosing the arguments of <code>register_dereference</code>…","","Wrapper for enclosing the arguments of <code>stack_function_call</code> …","","","Wrapper for enclosing the arguments of <code>stack_function_popn</code> …","Wrapper for enclosing the arguments of <code>stack_has</code> so that …","Wrapper for enclosing the arguments of <code>stack_kind_is</code> so …","Wrapper for enclosing the arguments of <code>stack_has_integer</code> …","Wrapper for for enclosing the arguments of …","Wrapper for enclosing the arguments of <code>stack_has_reference</code> …","Wrapper for enclosing the arguments of <code>stack_has_struct</code> so …","","Determines if the type at the top of the abstract stack is …","Wrapper for enclosing the arguments of …","Wrapper for enclosing the arguments of <code>stack_pop</code> so that …","Wrapper for enclosing the arguments of <code>stack_push</code> so that …","Wrapper for enclosing the arguments of <code>stack_push_register</code> …","Wrapper for enclosing the arguments of …","Wrapper for enclosing the arguments of …","","Wrapper for enclosing the arguments of …","Wrapper for enclosing the arguments of …","Wrapper for enclosing the arguments of …","","Wrapper for enclosing the arguments of <code>struct_has_field</code> so …","","Wrapper for enclosing the arguments of …","Wrapper for enclosing the arguments of <code>stack_struct_popn</code> …","Wrapper for enclosing the arguments of <code>stack_unpack_struct</code> …","","Wrapper for enclosing the arguments of <code>struct_abilities</code> so …","","Determine the proper type instantiation for struct in the …","","","","","","","Determine the proper type instantiation for struct in the …","","A wrapper around type instantiation, that allows …","An AbstractState represents an abstract view of the …","This models a value on the stack or in the locals","","The BorrowState denotes whether a local is <code>Available</code> or …","","When we don’t need to specify whether the reference is …","Represents an immutable reference","During the generation of a bytecode sequence, specific …","This models the mutability of a reference","Represents a mutable reference","","Represents the abilities of the value","Set the abstract state to be <code>aborted</code> when a precondition …","The global resources acquired by the function …","","If the <code>instantiant</code> is not in the <code>field_instantiations</code> …","If the <code>instantiant</code> is not in the <code>function_instantiations</code> …","If the <code>instantiant</code> is not in the <code>instantiations</code> table, …","If the <code>instantiant</code> is not in the <code>struct_instantiations</code> …","Set the abstract state to allow generation of control flow …","","","","","","","","","","","","","None if recursive, Some(index) if non-recursive, and index …","","","","","","","","","","","","","","","","","","","","Returns the struct instantiation at <code>index</code>. Errors if the …","","","","","","","","","","","","","","","Create a new AbstractState given a list of <code>SignatureTokens</code> …","Returns the struct instantiation at <code>index</code>. Errors if the …","Get all of the locals","Whether the state is aborted","Returns the type instantiation at <code>index</code>. Errors if the …","Consumes self, and adds the instantiations that have been …","A vector of type kinds for any generic function type …","","","","","","","Predicate determining if control flow instructions can be …","The final state is one where the stack is empty","Predicate on whether the type of the abstract value is …","Check whether a local is in a particular <code>BorrowState</code> If …","Check if the local at index <code>i</code> exists","Get the local at index <code>i</code> if it exists","Check whether a local has a particular <code>Ability</code> If the …","Insert a local at index <code>i</code> as <code>Available</code>","Insert a local at index <code>i</code> as <code>Available</code> from the register …","Set the availability of the local at index <code>i</code> If it does …","Place the local at index <code>i</code> if it exists into the register …","Place a reference to the local at index <code>i</code> if it exists …","","","The module state","","","","","Create a new AbstractState with empty stack, locals, and …","Create a new primitive <code>AbstractValue</code> given its type; the …","Create a new reference <code>AbstractValue</code> given its type and …","Create a new struct <code>AbstractValue</code> given its type and kind","","Get the register value","Get the register value and set it to <code>None</code>","Set the register value and set it to <code>None</code>","Get the length of the stack.","Get the <code>AbstractValue</code> at index <code>index</code> on the stack if it …","Remove an <code>AbstractValue</code> from the stack if it exists to the …","Add a <code>AbstractValue</code> to the stack","Add a <code>AbstractValue</code> to the stack from the register If the …","Returns the struct instantiation at <code>index</code>. Errors if the …","","","","","","","","","Represents the type of the value","","","","","","","","","","","","","","","","","","","","","","","","","The <code>BorrowGraph</code> stores information sufficient to determine …","The <code>EdgeType</code> is either weak or strong. A weak edge …","","","","","","","","","","","Determine whether two edges are consistent; i.e. whether …","","","","","Add a new partition to the graph containing nonce <code>n</code> This …","","","","","","Construct a new <code>BorrowGraph</code> given the number of locals it …","Determine whether the given partition is freezable. This …","Determine whether a partition is mutable, immutable, or …","","","","","","","","","","","Generates a sequence of bytecode instructions. This …","Context containing information about a function","Transition an abstract state, <code>state</code> to the next state and …","","","","","","","","","","","","","","Generate the body of a function definition given a set of …","Given a valid starting state <code>abstract_state_in</code>, generate a …","","","Generate a sequence of instructions whose overall effect …","","","","","","The <code>BytecodeGenerator</code> is instantiated with a seed to use …","","","","","","","","","","","Whether generation of instructions that require borrow …","Command line arguments for the tool","Call stack height limit. This is defined in the VM, and is …","Whether generated modules will be executed even if they …","Whether gas will be metered when running generated …","Certain randomly generated types can lead to extremely …","This defines the maximum number of blocks that will be …","This defines how tolerant the generator will be about …","Whether preconditions will be negated to generate invalid …","The probability that preconditions will be negated for a …","Whether the generated programs should be run on the VM …","The value stack size limit. This is defined in the VM and …","","","","","","","","The module generation settings that are used for …","The optional number of programs that will be generated. If …","The optional number of threads to use for test generation.","Path where a serialized module should be saved. If <code>None</code>, …","The optional seed used for test generation.","","","","","This represents a basic block in a control flow graph","A control flow graph","","","","","","","","","","","","","","Get a reference to all of the basic blocks of the CFG","Get a mutable reference to all of the basic blocks of the …","Retrieve the block IDs of all children of the given basic …","Get the locals coming into the block","Get the locals going out of the block","Retrieve the block IDs of all parents of the given basic …","","","","Construct a control flow graph that contains empty basic …","Retrieve the number of children the given basic block …","Retrieve the number of parents the given basic block …","Serialize the control flow graph into a sequence of …","Decide the serialization order of the blocks in the CFG","Set the list of instructions that comprise the block","","","","","","","","","","","This struct represents an error that is returned during the","","","","","","","","","","","","","","","","","A <code>Effect</code> is a function that transforms on <code>AbstractState</code> to …","A <code>Precondition</code> is a boolean predicate on an <code>AbstractState</code>.","The <code>Summary</code> of a bytecode instruction contains a list of …","","","","","","","","","","Return the <code>Summary</code> for a bytecode instruction, <code>instruction</code>","","","","","","","","","","","","","","","","","","","","","","","A substitution is a mapping from type formal index to the …","Given a locals signature index, determine the abilities …","Given a signature token, returns the abilities of this …","","","","","NB that the position of arguments here matters. We can …","Construct a struct from abstract values on the stack The …","","","","","Whether the function acquires any global resources or not","","","Return the instantiation from the substitution that has …","","","Check whether the local at <code>index</code> is of the given …","Check whether the local at <code>index</code> exists","Check whether the local at <code>index</code> has the given ability","Insert the register value into the locals at <code>index</code>","Set the availability of local at <code>index</code>","Put copy of the local at <code>index</code> in register","Put reference to local at <code>index</code> in register","TODO: This is a temporary function that represents memory …","","Dereference the value stored in the register. If the value …","Perform a binary operation using the top two values on the …","Simulate calling the function at <code>function_index</code>","","","Pop the number of stack values required to call the …","Determine whether the stack is at least of size <code>index</code>. If …","Determine the abstract value at <code>index</code> is of the given …","","Determine whether the stack contains an integer value at …","Determine whether two tokens on the stack have the same …","Determine whether the stack has a reference at <code>index</code> with …","Determine if a struct (of the given signature) is at the …","","Determine whether an abstract value on the stack and a …","Pop from the top of the stack.","Push given abstract_value to the top of the stack.","Push to the top of the stack from the register.","Push a reference to a register value with the given …","Determine whether an abstract value on the stack that is a …","","Determine whether the function at the given index can be …","","Determine whether the struct at the given index can be …","Push the field at <code>field_index</code> of a struct as an …","","","","","Pop the number of stack values required to construct the …","","Push the fields of a struct as <code>AbstractValue</code>s to the stack","","","Determine if a struct at the given index is a resource","","","","","","","","","","","",""],"i":[1,0,1,1,0,0,1,0,1,0,0,1,1,0,0,1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,0,1,0,0,0,2,0,0,3,3,0,0,3,2,4,5,5,6,7,7,7,7,5,2,4,3,6,7,5,2,4,3,6,7,5,6,5,6,2,4,3,6,7,5,2,4,3,6,7,5,5,2,4,3,6,7,2,4,4,3,6,7,5,5,2,4,3,6,7,5,5,7,5,5,7,7,5,2,4,3,6,7,5,5,5,4,5,5,5,5,5,5,5,5,5,6,7,5,4,6,6,7,5,4,4,4,4,5,5,5,5,5,5,5,5,7,2,4,3,6,7,5,4,5,4,2,4,3,6,7,5,2,4,3,6,7,5,2,4,3,6,7,5,2,4,3,6,7,5,0,0,8,8,8,9,8,9,8,9,8,9,9,8,9,8,9,9,8,9,8,9,9,9,9,9,8,9,8,9,8,9,8,9,8,9,0,0,10,11,10,11,10,11,11,11,11,11,10,11,10,11,10,10,10,11,10,11,10,11,11,11,10,11,11,11,10,11,10,11,10,11,10,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,12,12,12,0,12,12,12,12,12,12,12,12,0,0,13,14,13,14,13,14,13,14,13,13,14,13,14,14,14,14,13,13,14,13,14,13,14,14,14,14,14,13,13,14,13,14,13,14,13,14,13,14,0,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,16,0,0,0,16,16,16,17,16,17,17,16,17,0,16,17,17,16,17,16,17,16,17,16,17,18,19,20,19,20,19,20,21,21,21,0,0,0,0,21,22,21,22,22,0,0,22,21,22,0,0,0,22,21,22,0,0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,21,22,21,22,21,22,21,22,23],"f":[null,null,null,null,[[["signaturetoken",4]],["abilityset",3]],null,[[]],null,[[]],[[["u64",15],["compiledmodule",3],["option",4,["string"]],["status",4],["receiver",3,["compiledmodule"]],["string",3],["stdrng",3],["sender",3,["status"]]]],null,[[],["status",4]],[[]],null,null,[[["status",4]],["bool",15]],null,[[["formatter",3]],["result",6]],[[]],null,[[]],[[["u64",15],["compiledmodule",3],["option",4,["u64"]],["sender",3,["compiledmodule"]],["receiver",3,["status"]],["status",4]]],[[["args",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,[[["functionhandleindex",3]]],[[["fieldinstantiation",3]],["fieldinstantiationindex",3]],[[["functioninstantiation",3]],["functioninstantiationindex",3]],[[["signaturetoken",4],["vec",3,["signaturetoken"]]],["signatureindex",3]],[[["structdefinstantiation",3]],["structdefinstantiationindex",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["functionhandleindex",3]],[["usize",15],["option",4,["usize"]]]],null,[[["functionhandleindex",3]],[["functionhandleindex",3],["vec",3,["functionhandleindex"]]]],[[],["borrowstate",4]],[[],["abstractvalue",3]],[[],["mutability",4]],[[],["callgraph",3]],[[],["instantiablemodule",3]],[[],["abstractstate",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["borrowstate",4]],["bool",15]],[[["abstractvalue",3]],["bool",15]],[[["mutability",4]],["bool",15]],[[["callgraph",3]],["bool",15]],[[["fieldinstantiationindex",3]],["fieldinstantiation",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["compiledmodule",3],["hashmap",3,["usize"]],["structdefinitionindex",3],["vec",3,["structdefinitionindex"]],["usize",15],["vec",3,["abilityset"]],["abilityset",3],["callgraph",3]],["abstractstate",3]],[[["functioninstantiationindex",3]],["functioninstantiation",3]],[[],["hashmap",3]],[[],["bool",15]],[[["signatureindex",3]],["vec",3]],[[],["compiledmodule",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["usize",15],["borrowstate",4]],[["vmerror",3],["result",4,["bool","vmerror"]],["bool",15]]],[[["usize",15]],["bool",15]],[[["usize",15]],["option",4]],[[["usize",15],["ability",4]],[["vmerror",3],["result",4,["bool","vmerror"]],["bool",15]]],[[["usize",15],["abstractvalue",3],["borrowstate",4]]],[[["usize",15]],[["result",4,["vmerror"]],["vmerror",3]]],[[["usize",15],["borrowstate",4]],[["result",4,["vmerror"]],["vmerror",3]]],[[["usize",15]],[["result",4,["vmerror"]],["vmerror",3]]],[[["usize",15],["mutability",4]],[["result",4,["vmerror"]],["vmerror",3]]],[[["functionhandleindex",3]],["usize",15]],null,null,[[["abstractvalue",3]],["bool",15]],[[["callgraph",3]],["bool",15]],[[["usize",15]]],[[["compiledmodule",3]]],[[],["abstractstate",3]],[[["signaturetoken",4]],["abstractvalue",3]],[[["abilityset",3],["signaturetoken",4]],["abstractvalue",3]],[[["abilityset",3],["signaturetoken",4]],["abstractvalue",3]],[[["abilityset",3],["signaturetoken",4]],["abstractvalue",3]],[[],[["abstractvalue",3],["option",4,["abstractvalue"]]]],[[],[["abstractvalue",3],["option",4,["abstractvalue"]]]],[[["abstractvalue",3]]],[[],["usize",15]],[[["usize",15]],[["abstractvalue",3],["option",4,["abstractvalue"]]]],[[],[["result",4,["vmerror"]],["vmerror",3]]],[[["abstractvalue",3]]],[[],[["result",4,["vmerror"]],["vmerror",3]]],[[["structdefinstantiationindex",3]],["structdefinstantiation",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[],["edgetype",4]],[[],["borrowgraph",3]],[[]],[[]],[[],["bool",15]],[[["edgetype",4]],["bool",15]],[[["borrowgraph",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],[["result",4,["string"]],["string",3]]],[[]],[[]],[[]],[[]],[[["borrowgraph",3]],["bool",15]],[[["u8",15]],["borrowgraph",3]],[[["u16",15]],[["string",3],["result",4,["bool","string"]],["bool",15]]],[[["u16",15]],[["string",3],["result",4,["mutability","string"]],["mutability",4]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,[[["bytecode",4],["functiongenerationcontext",3],["bool",15],["vec",3],["abstractstate",3]],[["option",4,["abstractstate"]],["abstractstate",3]]],[[]],[[]],[[]],[[]],null,[[],["functiongenerationcontext",3]],[[]],[[["functiongenerationcontext",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],null,[[["functionhandle",3],["compiledmodule",3],["functiongenerationcontext",3],["callgraph",3]],[["vec",3,["bytecode"]],["option",4,["vec"]]]],[[["abstractstate",3],["compiledmodule",3],["functiongenerationcontext",3]],["option",4]],[[["compiledmodule",3]],[["compiledmodule",3],["option",4,["compiledmodule"]]]],[[],["option",4]],[[["instantiablemodule",3],["signaturetoken",4]],[["vec",3,["bytecode"]],["bytecode",4]]],[[]],[[]],null,[[["functiongenerationcontext",3]],["bool",15]],[[["usize",15],["u64",15],["functionhandleindex",3]]],[[["stdrng",3]]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["app",3]],[[["formatter",3]],["result",6]],[[]],[[["argmatches",3]]],[[]],[[],["modulegeneratoroptions",3]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[]],[[]],[[],["basicblock",3]],[[],["cfg",3]],[[]],[[]],[[],["basicblock",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["hashmap",3]],[[],["hashmap",3]],[[["u16",15]],[["u16",15],["vec",3,["u16"]]]],[[],["hashmap",3]],[[],["hashmap",3]],[[["u16",15]],[["u16",15],["vec",3,["u16"]]]],[[]],[[]],[[],["basicblock",3]],[[["signature",3],["u16",15],["stdrng",3]],["cfg",3]],[[["u16",15]],["u8",15]],[[["u16",15]],["u8",15]],[[],[["vec",3,["bytecode"]],["bytecode",4]]],[[],[["u16",15],["vec",3,["u16"]]]],[[["vec",3,["bytecode"]],["bytecode",4]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["string",3]],["vmerror",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,[[]],[[]],[[["bytecode",4],["bool",15]],["summary",3]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[["abstractstate",3]],[["vec",3,["abilityset"]],["abilityset",3]]],[[["abstractstate",3],["signaturetoken",4]],["abilityset",3]],[[]],[[]],[[]],[[]],[[["abstractstate",3],["signaturetoken",4]],["bool",15]],[[["abstractstate",3],["option",4,["signatureindex"]],["structdefinitionindex",3],["signatureindex",3]],[["result",4,["abstractstate","vmerror"]],["vmerror",3],["abstractstate",3]]],[[["abstractstate",3],["structdefinstantiationindex",3]],[["result",4,["abstractstate","vmerror"]],["vmerror",3],["abstractstate",3]]],[[],["subst",3]],[[]],[[]],[[["abstractstate",3]],["bool",15]],[[["abstractstate",3],["functioninstantiationindex",3]]],[[["abstractstate",3],["structdefinstantiationindex",3],["bool",15]]],[[],[["signaturetoken",4],["vec",3,["signaturetoken"]]]],[[]],[[]],[[["abstractstate",3],["u8",15],["borrowstate",4]],["bool",15]],[[["abstractstate",3],["u8",15]],["bool",15]],[[["abstractstate",3],["u8",15],["ability",4]],["bool",15]],[[["abstractstate",3],["u8",15]],[["result",4,["abstractstate","vmerror"]],["vmerror",3],["abstractstate",3]]],[[["abstractstate",3],["u8",15],["borrowstate",4]],[["result",4,["abstractstate","vmerror"]],["vmerror",3],["abstractstate",3]]],[[["abstractstate",3],["u8",15]],[["result",4,["abstractstate","vmerror"]],["vmerror",3],["abstractstate",3]]],[[["abstractstate",3],["u8",15],["mutability",4]],[["result",4,["abstractstate","vmerror"]],["vmerror",3],["abstractstate",3]]],[[["abstractstate",3],["usize",15],["option",4,["usize"]]],["bool",15]],[[]],[[["abstractstate",3]],[["result",4,["abstractstate","vmerror"]],["vmerror",3],["abstractstate",3]]],[[["abstractstate",3],["stackbinopresult",4]],[["result",4,["abstractstate","vmerror"]],["vmerror",3],["abstractstate",3]]],[[["abstractstate",3],["option",4,["signatureindex"]],["functionhandleindex",3],["signatureindex",3]],[["result",4,["abstractstate","vmerror"]],["vmerror",3],["abstractstate",3]]],[[["abstractstate",3],["functioninstantiationindex",3]],[["result",4,["abstractstate","vmerror"]],["vmerror",3],["abstractstate",3]]],[[["abstractstate",3],["functioninstantiationindex",3]],[["result",4,["abstractstate","vmerror"]],["vmerror",3],["abstractstate",3]]],[[["abstractstate",3],["functionhandleindex",3]],[["result",4,["abstractstate","vmerror"]],["vmerror",3],["abstractstate",3]]],[[["abstractstate",3],["usize",15],["abstractvalue",3],["option",4,["abstractvalue"]]],["bool",15]],[[["abstractstate",3],["usize",15],["ability",4]],["bool",15]],[[["abstractstate",3],["usize",15],["abilityset",3]],["bool",15]],[[["abstractstate",3],["usize",15]],["bool",15]],[[["abstractstate",3],["usize",15]],["bool",15]],[[["abstractstate",3],["usize",15],["mutability",4]],["bool",15]],[[["abstractstate",3],["structdefinitionindex",3]],["bool",15]],[[["abstractstate",3],["structdefinstantiationindex",3]],["bool",15]],[[["abstractstate",3],["usize",15]],["bool",15]],[[["abstractstate",3]],[["result",4,["abstractstate","vmerror"]],["vmerror",3],["abstractstate",3]]],[[["abstractstate",3],["abstractvalue",3]],[["result",4,["abstractstate","vmerror"]],["vmerror",3],["abstractstate",3]]],[[["abstractstate",3]],[["result",4,["abstractstate","vmerror"]],["vmerror",3],["abstractstate",3]]],[[["abstractstate",3],["mutability",4]],[["result",4,["abstractstate","vmerror"]],["vmerror",3],["abstractstate",3]]],[[["abstractstate",3],["usize",15]],["bool",15]],[[["abstractstate",3],["functioninstantiationindex",3]]],[[["abstractstate",3],["functionhandleindex",3]]],[[["abstractstate",3],["structdefinstantiationindex",3],["bool",15]]],[[["abstractstate",3],["option",4,["signatureindex"]],["structdefinitionindex",3],["signatureindex",3]]],[[["abstractstate",3],["fieldhandleindex",3]],[["result",4,["abstractstate","vmerror"]],["vmerror",3],["abstractstate",3]]],[[["abstractstate",3],["fieldinstantiationindex",3]],[["result",4,["abstractstate","vmerror"]],["vmerror",3],["abstractstate",3]]],[[["abstractstate",3],["fieldhandleindex",3]],["bool",15]],[[["abstractstate",3],["fieldinstantiationindex",3]],["bool",15]],[[["abstractstate",3],["structdefinstantiationindex",3]],[["result",4,["abstractstate","vmerror"]],["vmerror",3],["abstractstate",3]]],[[["abstractstate",3],["structdefinitionindex",3]],[["result",4,["abstractstate","vmerror"]],["vmerror",3],["abstractstate",3]]],[[["abstractstate",3],["signaturetoken",4]],["bool",15]],[[["abstractstate",3],["option",4,["signatureindex"]],["structdefinitionindex",3],["signatureindex",3]],[["result",4,["abstractstate","vmerror"]],["vmerror",3],["abstractstate",3]]],[[["abstractstate",3],["structdefinstantiationindex",3]],[["result",4,["abstractstate","vmerror"]],["vmerror",3],["abstractstate",3]]],[[["abstractstate",3]]],[[["abstractstate",3],["structdefinitionindex",3],["signature",3]],["abilityset",3]],[[["abstractstate",3],["structdefinstantiationindex",3]],["abilityset",3]],[[["abstractstate",3]],[["result",4,["vec","vmerror"]],["vmerror",3],["vec",3,["signaturetoken"]]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null],"p":[[4,"Status"],[4,"BorrowState"],[4,"Mutability"],[3,"AbstractValue"],[3,"AbstractState"],[3,"CallGraph"],[3,"InstantiableModule"],[4,"EdgeType"],[3,"BorrowGraph"],[3,"BytecodeGenerator"],[3,"FunctionGenerationContext"],[3,"Args"],[3,"BasicBlock"],[3,"CFG"],[3,"VMError"],[4,"Effects"],[3,"Summary"],[13,"NoTyParams"],[13,"TyParams"],[13,"TyParamsCall"],[4,"StackBinOpResult"],[3,"Subst"],[13,"Other"]]},\
"testcases":{"doc":"","t":[0,0,0,5,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["compatibility_test","fixed_tps_test","gas_price_test","generate_traffic","partial_nodes_down_test","performance_test","SimpleValidatorUpgrade","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","name","run","try_from","try_into","type_id","vzip","FixedTpsTest","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","name","run","try_from","try_into","type_id","vzip","NonZeroGasPrice","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","name","run","try_from","try_into","type_id","vzip","PartialNodesDown","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","name","run","try_from","try_into","type_id","vzip","PerformanceBenchmark","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","name","run","try_from","try_into","type_id","vzip"],"q":["testcases","","","","","","testcases::compatibility_test","","","","","","","","","","","","","","","testcases::fixed_tps_test","","","","","","","","","","","","","","","testcases::gas_price_test","","","","","","","","","","","","","","","testcases::partial_nodes_down_test","","","","","","","","","","","","","","","testcases::performance_test","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5],"f":[null,null,null,[[["networkcontext",3],["u64",15],["option",4,["u64"]],["duration",3]],[["result",6,["txnstats"]],["txnstats",3]]],null,null,null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[],["str",15]],[[["networkcontext",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[],["str",15]],[[["networkcontext",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[],["str",15]],[[["networkcontext",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[],["str",15]],[[["networkcontext",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[],["str",15]],[[["networkcontext",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"SimpleValidatorUpgrade"],[3,"FixedTpsTest"],[3,"NonZeroGasPrice"],[3,"PartialNodesDown"],[3,"PerformanceBenchmark"]]},\
"transaction_builder_generator":{"doc":"","t":[16,8,0,0,0,10,0,0,5,5,0,0,3,11,11,11,11,11,11,5,5,5,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,5,3,11,11,11,11,11,11,5,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,5,3,11,11,11,11,11,11,5,11,11,11,11,3,11,11,11,11,11,11,5,11,11,11,11,3,11,11,11,11,11,11,5,5,11,11,11,11],"n":["Error","SourceInstaller","cpp","csharp","golang","install_transaction_builders","java","python3","read_abis","read_custom_code_from_paths","rust","typescript","Installer","borrow","borrow_mut","from","install_transaction_builders","into","new","output","output_library_body","output_library_header","try_from","try_into","type_id","vzip","Installer","borrow","borrow_mut","from","install_transaction_builders","into","new","try_from","try_into","type_id","vzip","write_source_files","Installer","borrow","borrow_mut","from","install_transaction_builders","into","new","output","try_from","try_into","type_id","vzip","Installer","borrow","borrow_mut","from","install_transaction_builders","into","new","try_from","try_into","type_id","vzip","write_source_files","Installer","borrow","borrow_mut","from","install_transaction_builders","into","new","output","try_from","try_into","type_id","vzip","Installer","borrow","borrow_mut","from","install_transaction_builders","into","new","output","try_from","try_into","type_id","vzip","Installer","borrow","borrow_mut","from","install_transaction_builders","into","new","output","replace_keywords","try_from","try_into","type_id","vzip"],"q":["transaction_builder_generator","","","","","","","","","","","","transaction_builder_generator::cpp","","","","","","","","","","","","","","transaction_builder_generator::csharp","","","","","","","","","","","","transaction_builder_generator::golang","","","","","","","","","","","","transaction_builder_generator::java","","","","","","","","","","","","transaction_builder_generator::python3","","","","","","","","","","","","transaction_builder_generator::rust","","","","","","","","","","","","transaction_builder_generator::typescript","","","","","","","","","","","",""],"d":["","How to copy ABI-generated source code for a given language.","Support for code-generation in C++17.","Support for code-generation in C#","Support for code-generation in Go &gt;= 1.13.","Create a module exposing the transaction builders for the …","Support for code-generation in Java 8.","Support for code-generation in Python 3.","Read all ABI files the specified directories. This …","How to read custom code to inject in Diem containers.","Support for code-generation in Rust.","Support for code-generation in TypeScript.","","","","","","","","Output a header-only library providing C++ transaction …","Output the function definitions of a library providing C++ …","Output the headers of a library providing C++ transaction …","","","","","","","","","","","","","","","","Output transaction builders and decoders in C# for the …","","","","","","","","Output transaction builders and decoders in Go for the …","","","","","","","","","","","","","","","","Output transaction builders and decoders in Java for the …","","","","","","","","Output transaction builders in Python for the given ABIs.","","","","","","","","","","","","Output transaction builders in Rust for the given ABIs. If …","","","","","","","","","","","","Output transaction builders and decoders in TypeScript for …","Walks through the registry replacing variables known to be …","","","",""],"i":[1,0,0,0,0,1,0,0,0,0,0,0,0,2,2,2,2,2,2,0,0,0,2,2,2,2,0,3,3,3,3,3,3,3,3,3,3,0,0,4,4,4,4,4,4,0,4,4,4,4,0,5,5,5,5,5,5,5,5,5,5,0,0,6,6,6,6,6,6,0,6,6,6,6,0,7,7,7,7,7,7,0,7,7,7,7,0,8,8,8,8,8,8,0,0,8,8,8,8],"f":[null,null,null,null,null,[[["str",15]],["result",4]],null,null,[[],[["result",6,["vec"]],["vec",3,["scriptabi"]]]],[[],["customcode",6]],null,null,null,[[]],[[]],[[]],[[["str",15]],["result",4]],[[]],[[["pathbuf",3]]],[[["write",8],["str",15],["option",4,["str"]]],["result",6]],[[["write",8],["str",15],["option",4,["str"]]],["result",6]],[[["write",8],["str",15],["option",4,["str"]]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[]],[[["str",15]],["result",4]],[[]],[[["pathbuf",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["pathbuf",3],["str",15]],["result",6]],null,[[]],[[]],[[]],[[["str",15]],["result",4]],[[]],[[["pathbuf",3],["option",4,["string"]],["string",3]]],[[["option",4,["string"]],["string",3],["write",8]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[]],[[["str",15]],["result",4]],[[]],[[["pathbuf",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["pathbuf",3],["str",15]],["result",6]],null,[[]],[[]],[[]],[[["str",15]],["result",4]],[[]],[[["pathbuf",3],["option",4,["string"]],["string",3]]],[[["option",4,["string"]],["string",3],["write",8]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[]],[[["str",15]],["result",4]],[[]],[[["pathbuf",3],["string",3]]],[[["bool",15],["write",8]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[]],[[["str",15]],["result",4]],[[]],[[["pathbuf",3]]],[[["write",8]],["result",6]],[[["btreemap",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[8,"SourceInstaller"],[3,"Installer"],[3,"Installer"],[3,"Installer"],[3,"Installer"],[3,"Installer"],[3,"Installer"],[3,"Installer"]]},\
"vm_genesis":{"doc":"","t":[13,13,7,4,3,3,12,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,12,5,5,11,11,11,11,11,11,12,12,12,11,12,12,12,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Compiled","Fresh","GENESIS_KEYPAIR","GenesisOptions","TestValidator","Validator","address","auth_key","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","consensus_pubkey","data","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","encode_genesis_change_set","encode_genesis_transaction","eq","equivalent","fmt","fmt","from","from","from","full_node_network_address","generate_genesis_change_set_for_testing","generate_test_genesis","init","init","init","into","into","into","key","name","network_address","new_test_set","operator_address","operator_auth_key","operator_name","test_genesis_change_set_and_validators","test_genesis_transaction","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["vm_genesis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","An enum specifying whether the compiled stdlib/scripts …","","","The Diem account address of the validator","Authentication key for the validator","","","","","","","","","Ed25519 public key used to sign consensus messages","","","","","","","","","","","","","","","","","","","","<code>NetworkAddress</code> for the validator’s full node","Generate an artificial genesis <code>ChangeSet</code> for testing","","","","","","","","","UTF8-encoded name for the validator","<code>NetworkAddress</code> for the validator","","The Diem account address of the validator’s operator …","Authentication key for the operator","UTF8-encoded name of the operator","","","","","","","","","","","","","","",""],"i":[1,1,0,0,0,0,2,2,3,1,2,3,1,2,2,2,2,3,3,1,2,3,1,2,3,1,2,0,0,1,1,1,2,3,1,2,2,0,0,3,1,2,3,1,2,3,2,2,3,2,2,2,0,0,2,3,1,2,3,1,2,3,1,2,3,1,2],"f":[null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["validator",3]],[[]],null,null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["onchainconsensusconfig",4],["chainid",3],["ed25519publickey",3],["vmpublishingoption",3]],["changeset",3]],[[["option",4,["vmpublishingoption"]],["onchainconsensusconfig",4],["chainid",3],["ed25519publickey",3],["vmpublishingoption",3]],["transaction",4]],[[["genesisoptions",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],null,[[["genesisoptions",4]],["changeset",3]],[[["usize",15],["option",4,["usize"]],["vmpublishingoption",3]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],null,null,null,[[["usize",15],["option",4,["usize"]]],[["vec",3,["testvalidator"]],["testvalidator",3]]],null,null,null,[[["usize",15],["option",4,["usize"]]]],[[],["transaction",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]]],"p":[[4,"GenesisOptions"],[3,"Validator"],[3,"TestValidator"]]},\
"vm_validator":{"doc":"","t":[0,0,0,17,17,17,17,3,17,17,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,16,11,11,11,11,11,11,11,11,5,11,11,11,10,11,11,11,11,11,10,11,11],"n":["mocks","vm_validator","mock_vm_validator","ACCOUNT_DNE_TEST_ADD","INSUFFICIENT_BALANCE_TEST_ADD","INVALID_AUTH_KEY_TEST_ADD","INVALID_SIG_TEST_ADD","MockVMValidator","SEQ_NUMBER_TOO_NEW_TEST_ADD","SEQ_NUMBER_TOO_OLD_TEST_ADD","TXN_EXPIRATION_TIME_TEST_ADD","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","init","into","restart","to_owned","try_from","try_into","type_id","validate_transaction","validate_transaction","vzip","TransactionValidation","VMValidator","ValidationInstance","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","get_account_sequence_number","init","into","new","restart","restart","to_owned","try_from","try_into","type_id","validate_transaction","validate_transaction","vzip"],"q":["vm_validator","","vm_validator::mocks","vm_validator::mocks::mock_vm_validator","","","","","","","","","","","","","","","","","","","","","","","","","","vm_validator::vm_validator","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","returns account’s sequence number from storage","","","","Restart the transaction validation instance","","","","","","Validate a txn from client","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,2,3,3,3,3,3,3,3,3,0,3,3,3,2,3,3,3,3,3,2,3,3],"f":[null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["mockvmvalidator",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[["onchainconfigpayload",3]],["result",6]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["signedtransaction",3]],[["vmvalidatorresult",3],["result",6,["vmvalidatorresult"]]]],[[["signedtransaction",3]],["vmvalidatorresult",3]],[[]],null,null,null,[[]],[[]],[[],["vmvalidator",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["accountaddress",3],["dbreader",8]],[["accountsequenceinfo",4],["result",6,["accountsequenceinfo"]]]],[[],["usize",15]],[[]],[[["arc",3,["dbreader"]],["dbreader",8]]],[[["onchainconfigpayload",3]],["result",6]],[[["onchainconfigpayload",3]],["result",6]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["signedtransaction",3]],[["vmvalidatorresult",3],["result",6,["vmvalidatorresult"]]]],[[["signedtransaction",3]],[["vmvalidatorresult",3],["result",6,["vmvalidatorresult"]]]],[[]]],"p":[[3,"MockVMValidator"],[8,"TransactionValidation"],[3,"VMValidator"]]},\
"x_core":{"doc":"","t":[12,13,13,3,13,13,13,13,13,13,13,13,13,6,13,13,4,13,4,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["0","Absent","CwdNotInProjectRoot","DebugIgnore","Dependency","Exec","FromHex","GitRoot","Guppy","HakariCargoToml","HakariTomlOut","Io","NonUtf8Path","Result","RootMember","Serde","SystemError","TargetSpec","WorkspaceStatus","WorkspaceSubset","WorkspaceSubsets","XCoreContext","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_replacement","borrow_replacement","borrow_replacement","borrow_replacement","borrow_replacement","borrow_replacement","build_set","clone","clone","clone","clone","clone_boxed","clone_boxed","clone_boxed","clone_boxed","clone_boxed","clone_boxed","clone_boxed","clone_boxed","clone_into","clone_into","clone_into","clone_into","cmp","config","core_config","current_dir","current_dir_is_root","current_rel_dir","de","default_members","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_hex","get","git","git_cli","git_root","guppy","hakari_builder","hakari_cargo_toml","hakari_toml_options","hakari_toml_out","hash","hash","init","init","init","init","init","init","initials","into","into","into","into","into","into","io","iter","ne","new","new","new","package_graph","partial_cmp","partition_workspace_names","project_root","root_members","self_address_mut","self_address_mut","self_address_mut","self_address_mut","self_address_mut","self_address_mut","self_address_mut","self_address_mut","ser","source","status_of","subsets","target_spec","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","0","cmd","context","context","context","context","context","context","context","current_dir","err","err","err","err","err","err","err","err","path","project_root","status","SubsetConfig","XCoreConfig","borrow","borrow","borrow_mut","borrow_mut","borrow_replacement","borrow_replacement","clone","clone","clone_boxed","clone_boxed","clone_boxed","clone_boxed","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","from","from","hakari","init","init","into","into","ne","ne","root_members","self_address_mut","self_address_mut","self_address_mut","self_address_mut","serialize","serialize","subsets","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","GitCli","GitHash","borrow","borrow","borrow_mut","borrow_mut","borrow_replacement","borrow_replacement","clone","clone","clone_boxed","clone_boxed","clone_boxed","clone_boxed","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","files_changed_between","fmt","fmt","fmt","from","from","from_hex","init","init","into","into","is_git_repo","merge_base","ne","new","package_graph_at","self_address_mut","self_address_mut","self_address_mut","self_address_mut","to_owned","to_owned","tracked_files","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["x_corex_core::SystemError","","","","","","","","","","","","","","","","","","","","","x_core::core_config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x_core::git","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","This package ID is not a dependency of the workspace …","","A newtype wrapper that causes this field to be ignored …","This package ID is a dependency of the workspace subset, …","","","","","","","","","Type alias for the return type for <code>run</code> methods.","This package ID is a root member of the workspace subset.","","A system error that happened while running a lint.","","The status of a particular package ID in a <code>WorkspaceSubset</code>.","Information collected about a subset of members of a …","Contains information about all the subsets specified in …","Core context shared across all of x.","","","","","","","","","","","","","","","","","","","Returns the set of packages and features that would be …","","","","","","","","","","","","","","","","","","Returns the core config.","","Returns the current working directory for this process.","Returns true if x has been run from the project root.","Returns the current working directory for this process, …","","Returns information about default members.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns information about the subset by name.","","Returns the Git CLI for this workspace.","","","Returns a Hakari builder for this workspace.","","Returns the default Hakari TOML options for this workspace.","","","","","","","","","","Returns the initial members that this subset was …","","","","","","","","Iterate over all named subsets.","","Constructs a new store for workspace subsets.","Creates a new subset by simulating a Cargo build on the …","Creates a new XCoreContext.","Returns the package graph for this workspace.","","For a given list of workspace packages, returns a tuple of …","Returns the project root for this workspace.","Returns a list of root packages in this subset, ignoring …","","","","","","","","","","","Returns the status of the given package ID in the subset.","Returns information about the subsets for this workspace.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Core configuration for x.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Config for Hakari (workspace-hack management).","","","","","","","The root members in this subset","","","","","","","Subsets of this workspace","","","","","","","","","","","Support for source control operations through running Git …","A Git hash.","","","","","","","","","","","","","","","","","","","","","","","Returns the files changed between the given commits, or …","","","","","","Creates a new Git hash from a hex-encoded string.","","","","","","Returns the merge base of the current commit (<code>HEAD</code>) with …","","Creates a new instance of the Git CLI.","Returns a package graph for the given commit, using a …","","","","","","","Returns the files tracked by Git in this working copy.","","","","","","","",""],"i":[1,2,3,0,2,3,3,3,3,3,3,3,3,0,2,3,0,3,0,0,0,0,1,3,4,5,2,6,1,3,4,5,2,6,1,3,4,5,2,6,5,1,4,5,2,1,1,4,4,5,5,2,2,1,4,5,2,1,6,0,6,6,6,3,4,1,1,3,4,5,2,6,1,1,3,4,5,2,6,1,3,4,5,2,6,1,2,1,2,1,3,3,4,5,2,6,1,3,4,5,2,6,3,4,0,6,3,3,6,3,6,3,1,2,1,3,4,5,2,6,5,1,3,4,5,2,6,3,4,1,4,5,6,6,1,6,6,5,1,1,4,4,5,5,2,2,3,3,5,6,3,1,4,5,2,3,1,3,4,5,2,6,1,3,4,5,2,6,1,3,4,5,2,6,1,3,4,5,2,6,7,8,9,10,11,12,13,14,15,16,9,10,11,12,13,17,14,15,17,16,8,0,0,18,19,18,19,18,19,18,19,18,18,19,19,18,19,18,19,18,19,18,19,18,19,18,19,18,19,18,19,18,19,18,18,19,18,19,18,19,19,18,18,19,19,18,19,18,18,19,18,19,18,19,18,19,18,19,0,0,20,21,20,21,20,21,20,21,20,20,21,21,20,21,20,21,20,21,20,21,21,21,20,20,21,21,20,21,21,20,21,20,21,20,20,21,20,20,20,20,21,21,20,21,20,20,21,20,21,20,21,20,21],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["cargoset",3]],[[],["debugignore",3]],[[],["workspacesubsets",3]],[[],["workspacesubset",3]],[[],["workspacestatus",4]],[[],[["global",3],["box",3,["nonsyncfeatures","global"]],["nonsyncfeatures",8]]],[[],[["global",3],["box",3,["defaultfeatures","global"]],["defaultfeatures",8]]],[[],[["global",3],["box",3,["nonsyncfeatures","global"]],["nonsyncfeatures",8]]],[[],[["global",3],["box",3,["defaultfeatures","global"]],["defaultfeatures",8]]],[[],[["global",3],["box",3,["nonsyncfeatures","global"]],["nonsyncfeatures",8]]],[[],[["global",3],["box",3,["defaultfeatures","global"]],["defaultfeatures",8]]],[[],[["global",3],["box",3,["defaultfeatures","global"]],["defaultfeatures",8]]],[[],[["global",3],["box",3,["nonsyncfeatures","global"]],["nonsyncfeatures",8]]],[[]],[[]],[[]],[[]],[[["debugignore",3]],["ordering",4]],[[],["xcoreconfig",3]],null,[[],["utf8path",3]],[[],["bool",15]],[[],["utf8path",3]],[[]],[[],["workspacesubset",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["debugignore",3]],["bool",15]],[[["workspacestatus",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["fromhexerror",4]]],[[],[["option",4,["workspacesubset"]],["workspacesubset",3]]],null,[[],[["result",6,["gitcli"]],["gitcli",3]]],[[]],[[["error",4]]],[[],[["hakaribuilder",3],["result",6,["hakaribuilder"]]]],[[["cargotomlerror",4]]],[[],["tomloptions",3]],[[["tomlouterror",4]]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["featureset",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["error",3]]],[[]],[[["debugignore",3]],["bool",15]],[[["utf8path",3],["packagegraph",3],["btreemap",3]],["result",6]],[[["cargooptions",3],["packageset",3]]],[[["utf8pathbuf",3],["xcoreconfig",3],["utf8path",3]],["result",6]],[[],[["result",6,["packagegraph"]],["packagegraph",3]]],[[["debugignore",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["result",6]],[[],["utf8path",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4,["error"]],["error",8]]],[[["packageid",3]],["workspacestatus",4]],[[],[["result",6,["workspacesubsets"]],["workspacesubsets",3]]],[[["targetspecerror",4]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["xcoreconfig",3]],[[],["subsetconfig",3]],[[],[["global",3],["box",3,["nonsyncfeatures","global"]],["nonsyncfeatures",8]]],[[],[["global",3],["box",3,["defaultfeatures","global"]],["defaultfeatures",8]]],[[],[["global",3],["box",3,["defaultfeatures","global"]],["defaultfeatures",8]]],[[],[["global",3],["box",3,["nonsyncfeatures","global"]],["nonsyncfeatures",8]]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["xcoreconfig",3]],["bool",15]],[[["subsetconfig",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],null,[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["xcoreconfig",3]],["bool",15]],[[["subsetconfig",3]],["bool",15]],null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["gitcli",3]],[[],["githash",3]],[[],[["global",3],["box",3,["defaultfeatures","global"]],["defaultfeatures",8]]],[[],[["global",3],["box",3,["nonsyncfeatures","global"]],["nonsyncfeatures",8]]],[[],[["global",3],["box",3,["nonsyncfeatures","global"]],["nonsyncfeatures",8]]],[[],[["global",3],["box",3,["defaultfeatures","global"]],["defaultfeatures",8]]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["githash",3]],["bool",15]],[[],["bool",15]],[[["str",15],["option",4,["str"]]],[["result",6,["utf8paths0"]],["utf8paths0",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["result",6]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["utf8path",3]],[["result",6,["bool"]],["bool",15]]],[[["str",15]],[["result",6,["githash"]],["githash",3]]],[[["githash",3]],["bool",15]],[[["utf8path",3]],["result",6]],[[["githash",3]],[["packagegraph",3],["result",6,["packagegraph"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["utf8paths0",3],["result",6,["utf8paths0"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]]],"p":[[3,"DebugIgnore"],[4,"WorkspaceStatus"],[4,"SystemError"],[3,"WorkspaceSubsets"],[3,"WorkspaceSubset"],[3,"XCoreContext"],[13,"GitRoot"],[13,"Exec"],[13,"FromHex"],[13,"Guppy"],[13,"HakariCargoToml"],[13,"HakariTomlOut"],[13,"Io"],[13,"Serde"],[13,"TargetSpec"],[13,"CwdNotInProjectRoot"],[13,"NonUtf8Path"],[3,"XCoreConfig"],[3,"SubsetConfig"],[3,"GitCli"],[3,"GitHash"]]},\
"x_lint":{"doc":"Lint engine.","t":[13,13,13,13,13,3,4,4,3,3,8,13,13,13,4,4,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,18,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,6,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Content","Error","Executed","FilePath","GlobExemption","LintFormatter","LintKind","LintLevel","LintMessage","LintSource","Linter","NonUtf8Content","Package","Project","RunStatus","SkipReason","Skipped","UnsupportedExtension","UnsupportedFile","UnsupportedPackage","Warning","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_replacement","borrow_replacement","borrow_replacement","borrow_replacement","borrow_replacement","borrow_replacement","borrow_replacement","clone","clone","clone","clone","clone","clone_boxed","clone_boxed","clone_boxed","clone_boxed","clone_boxed","clone_boxed","clone_boxed","clone_boxed","clone_boxed","clone_boxed","clone_into","clone_into","clone_into","clone_into","clone_into","content","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","file_path","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","init","init","init","init","init","init","init","into","into","into","into","into","into","into","kind","level","message","name","name","ne","ne","ne","new","new","package","prelude","project","runner","self_address_mut","self_address_mut","self_address_mut","self_address_mut","self_address_mut","self_address_mut","self_address_mut","self_address_mut","self_address_mut","self_address_mut","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write","write_kind","0","0","name","workspace_path","0","0","0","0","0","BINARY_FILE_CUTOFF","ContentContext","ContentLinter","borrow","borrow_mut","borrow_replacement","content","content_bytes","deref","deref_mut","drop","file_ctx","fmt","from","init","into","is_binary","pre_run","run","try_from","try_into","type_id","vzip","FilePathContext","FilePathLinter","borrow","borrow_mut","borrow_replacement","clone","clone_boxed","clone_boxed","clone_into","deref","deref_mut","drop","extension","file_path","fmt","from","init","into","new","project_ctx","run","self_address_mut","self_address_mut","to_owned","try_from","try_into","type_id","vzip","PackageContext","PackageLinter","borrow","borrow_mut","borrow_replacement","clone","clone_boxed","clone_boxed","clone_into","deref","deref_mut","drop","fmt","from","init","into","is_default_member","metadata","new","package_graph","project_ctx","run","self_address_mut","self_address_mut","to_owned","try_from","try_into","type_id","vzip","workspace_path","CwdNotInProjectRoot","Exec","FromHex","GitRoot","Guppy","HakariCargoToml","HakariTomlOut","Io","NonUtf8Path","Result","Serde","SystemError","TargetSpec","borrow","borrow_mut","borrow_replacement","de","deref","deref_mut","drop","fmt","fmt","from","from_hex","git_root","guppy","hakari_cargo_toml","hakari_toml_out","init","into","io","ser","source","target_spec","to_string","try_from","try_into","type_id","vzip","0","cmd","context","context","context","context","context","context","context","current_dir","err","err","err","err","err","err","err","err","path","project_root","status","ProjectContext","ProjectLinter","borrow","borrow_mut","borrow_replacement","core","default_members","deref","deref_mut","drop","fmt","from","full_path","hakari","init","into","new","package_graph","project_root","run","try_from","try_into","type_id","vzip","LintEngine","LintEngineConfig","LintResults","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_replacement","borrow_replacement","borrow_replacement","build","clone","clone_boxed","clone_boxed","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fail_fast","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","messages","new","new","run","self_address_mut","self_address_mut","skipped","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_content_linters","with_file_path_linters","with_package_linters","with_project_linters"],"q":["x_lintx_lint::LintKind","","","","x_lint::RunStatus","x_lint::SkipReason","","","","x_lint::content","","","","","","","","","","","","","","","","","","","","","","","x_lint::file_path","","","","","","","","","","","","","","","","","","","","","","","","","","","","x_lint::package","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x_lint::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x_lint::prelude::SystemError","","","","","","","","","","","","","","","","","","","","","x_lint::project","","","","","","","","","","","","","","","","","","","","","","","","x_lint::runner","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","This lint run was successful, with messages possibly …","","The given file was excepted by a glob rule","A lint formatter.","","","A message raised by a lint.","Message source for lints.","Represents a linter.","This file’s content was not valid UTF-8.","","","The run status of a lint.","The reason for why this lint was skipped.","This lint was skipped.","This extension was unsupported.","The given file was unsupported by this linter.","The given package was unsupported by this linter.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the name of the linter.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Writes a new lint message to this formatter.","Writes a new lint message to this formatter with a custom …","","","","","","","","","","The number of bytes that will be searched for null bytes …","","Represents a linter that checks file contents.","","","","Returns the content, or <code>None</code> if this is a non-UTF-8 file.","Returns the raw bytes for the content.","","","","Returns the file context.","","","","","Returns true if this is a binary file.","Pre-run step – avoids loading the contents if possible.","Executes the lint against the given content context.","","","","","Contains information for a single file path.","Represents a linter that runs once per file path.","","","","","","","","","","","Returns the extension of the file. Returns <code>None</code> if there’…","Returns the path of this file, relative to the root of the …","","","","","Constructs a new context.","Returns the project context.","Executes this linter against the given file path context.","","","","","","","","Lint context for an individual package.","Represents a linter that runs once per package.","","","","","","","","","","","","","","","Returns true if this is a default member of this workspace.","Returns the metadata for this package.","","Returns the package graph.","Returns the project context.","","","","","","","","","Returns the relative path for this package in the …","","","","","","","","","","Type alias for the return type for <code>run</code> methods.","","A system error that happened while running a lint.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Overall linter context for a project.","Represents a linter that checks some property for the …","","","","Returns the core context.","Returns information about the default workspace members.","","","","","","Returns the absolute path from the project root.","Returns Hakari information.","","","","Returns the package graph, computing it for the first time …","Returns the project root.","Executes the lint against the given project context.","","","","","Executor for linters.","Configuration for the lint engine.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,2,3,1,4,0,0,0,0,0,0,4,1,1,0,0,3,4,4,4,2,5,3,4,6,2,7,1,5,3,4,6,2,7,1,5,3,4,6,2,7,1,3,4,2,7,1,3,3,4,4,2,2,7,7,1,1,3,4,2,7,1,0,5,3,4,6,2,7,1,5,3,4,6,2,7,1,5,3,4,6,2,7,1,3,4,2,1,3,4,2,1,0,3,4,6,2,2,7,1,1,5,3,4,6,2,7,1,5,3,4,6,2,7,1,5,3,4,6,2,7,1,7,6,6,8,7,3,4,1,5,6,0,0,0,0,3,3,4,4,2,2,7,7,1,1,3,4,2,7,1,2,1,5,3,4,6,2,7,1,5,3,4,6,2,7,1,5,3,4,6,2,7,1,5,3,4,6,2,7,1,5,5,9,10,11,11,12,13,14,15,16,17,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,18,18,17,17,17,17,0,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,20,19,19,19,19,19,19,19,0,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,22,21,21,21,21,21,21,21,21,23,23,23,23,23,23,23,23,23,0,23,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,25,26,27,28,29,30,31,32,33,26,27,28,29,30,34,31,32,34,33,25,0,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,36,35,35,35,35,0,0,0,37,38,39,37,38,39,37,38,39,37,37,37,37,37,37,38,39,37,38,39,37,38,39,37,37,38,39,37,38,39,37,38,39,37,38,39,39,37,38,38,37,37,39,37,37,38,39,37,38,39,37,38,39,37,38,39,37,37,37,37],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["runstatus",4]],[[],["skipreason",4]],[[],["lintlevel",4]],[[],["lintsource",3]],[[],["lintkind",4]],[[],[["box",3,["nonsyncfeatures","global"]],["nonsyncfeatures",8],["global",3]]],[[],[["defaultfeatures",8],["box",3,["defaultfeatures","global"]],["global",3]]],[[],[["defaultfeatures",8],["box",3,["defaultfeatures","global"]],["global",3]]],[[],[["box",3,["nonsyncfeatures","global"]],["nonsyncfeatures",8],["global",3]]],[[],[["defaultfeatures",8],["box",3,["defaultfeatures","global"]],["global",3]]],[[],[["box",3,["nonsyncfeatures","global"]],["nonsyncfeatures",8],["global",3]]],[[],[["box",3,["nonsyncfeatures","global"]],["nonsyncfeatures",8],["global",3]]],[[],[["defaultfeatures",8],["box",3,["defaultfeatures","global"]],["global",3]]],[[],[["defaultfeatures",8],["box",3,["defaultfeatures","global"]],["global",3]]],[[],[["box",3,["nonsyncfeatures","global"]],["nonsyncfeatures",8],["global",3]]],[[]],[[]],[[]],[[]],[[]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["runstatus",4]],["bool",15]],[[["skipreason",4]],["bool",15]],[[["lintlevel",4]],["bool",15]],[[["lintkind",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["lintkind",4]],[[],["lintlevel",4]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[["runstatus",4]],["bool",15]],[[["skipreason",4]],["bool",15]],[[["lintkind",4]],["bool",15]],[[["lintsource",3],["vec",3]]],[[["lintlevel",4]]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["lintlevel",4]]],[[["lintlevel",4],["lintkind",4]]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[],[["str",15],["option",4,["str"]]]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["filepathcontext",3]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[],["bool",15]],[[["filepathcontext",3]],[["runstatus",4],["result",6,["runstatus"]]]],[[["lintformatter",3],["contentcontext",3]],[["runstatus",4],["result",6,["runstatus"]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[]],[[],["filepathcontext",3]],[[],[["defaultfeatures",8],["box",3,["defaultfeatures","global"]],["global",3]]],[[],[["box",3,["nonsyncfeatures","global"]],["nonsyncfeatures",8],["global",3]]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],[["str",15],["option",4,["str"]]]],[[],["utf8path",3]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[["utf8path",3],["projectcontext",3]]],[[],["projectcontext",3]],[[["filepathcontext",3],["lintformatter",3]],[["runstatus",4],["result",6,["runstatus"]]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[]],[[],["packagecontext",3]],[[],[["defaultfeatures",8],["box",3,["defaultfeatures","global"]],["global",3]]],[[],[["box",3,["nonsyncfeatures","global"]],["nonsyncfeatures",8],["global",3]]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[],["bool",15]],[[],["packagemetadata",3]],[[["utf8path",3],["packagegraph",3],["projectcontext",3],["packagemetadata",3]],["result",6]],[[],["packagegraph",3]],[[],["projectcontext",3]],[[["packagecontext",3],["lintformatter",3]],[["runstatus",4],["result",6,["runstatus"]]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["utf8path",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[],["systemerror",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[["fromhexerror",4]],["systemerror",4]],[[],["systemerror",4]],[[["error",4]],["systemerror",4]],[[["cargotomlerror",4]],["systemerror",4]],[[["tomlouterror",4]],["systemerror",4]],[[],["usize",15]],[[]],[[["error",3]],["systemerror",4]],[[],["systemerror",4]],[[],[["option",4,["error"]],["error",8]]],[[["error",4]],["systemerror",4]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[],["xcorecontext",3]],[[],[["workspacesubset",3],["result",6,["workspacesubset"]]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[],["utf8pathbuf",3]],[[],[["result",6,["hakari"]],["hakari",3]]],[[],["usize",15]],[[]],[[["xcorecontext",3]]],[[],[["packagegraph",3],["result",6,["packagegraph"]]]],[[],["utf8path",3]],[[["projectcontext",3],["lintformatter",3]],[["runstatus",4],["result",6,["runstatus"]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["lintengine",3]],[[],["lintengineconfig",3]],[[],[["box",3,["nonsyncfeatures","global"]],["nonsyncfeatures",8],["global",3]]],[[],[["defaultfeatures",8],["box",3,["defaultfeatures","global"]],["global",3]]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["bool",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],null,[[["xcorecontext",3]]],[[["lintengineconfig",3]]],[[],[["lintresults",3],["result",6,["lintresults"]]]],[[]],[[]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[4,"LintKind"],[4,"LintLevel"],[4,"RunStatus"],[4,"SkipReason"],[3,"LintFormatter"],[3,"LintMessage"],[3,"LintSource"],[8,"Linter"],[13,"FilePath"],[13,"Content"],[13,"Package"],[13,"Skipped"],[13,"UnsupportedExtension"],[13,"UnsupportedFile"],[13,"UnsupportedPackage"],[13,"GlobExemption"],[3,"ContentContext"],[8,"ContentLinter"],[3,"FilePathContext"],[8,"FilePathLinter"],[3,"PackageContext"],[8,"PackageLinter"],[4,"SystemError"],[13,"GitRoot"],[13,"Exec"],[13,"FromHex"],[13,"Guppy"],[13,"HakariCargoToml"],[13,"HakariTomlOut"],[13,"Io"],[13,"Serde"],[13,"TargetSpec"],[13,"CwdNotInProjectRoot"],[13,"NonUtf8Path"],[3,"ProjectContext"],[8,"ProjectLinter"],[3,"LintEngineConfig"],[3,"LintEngine"],[3,"LintResults"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};