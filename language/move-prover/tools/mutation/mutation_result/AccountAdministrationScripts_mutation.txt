warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/GUID.move:39:29
   │
39 │         generator.counter = creation_num + 1;
   │                             ^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/GUID.move:75:9
   │
75 │         &guid.id == id
   │         ^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/FixedPoint32.move:40:32
   │
40 │         let unscaled_product = (val as u128) * (multiplier.value as u128);
   │                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/FixedPoint32.move:43:23
   │
43 │         let product = unscaled_product >> 32;
   │                       ^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/FixedPoint32.move:45:17
   │
45 │         assert!(product <= MAX_U64, Errors::limit_exceeded(EMULTIPLICATION));
   │                 ^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/FixedPoint32.move:99:17
   │
99 │         assert!(divisor.value != 0, Errors::invalid_argument(EDIVISION_BY_ZERO));
   │                 ^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/FixedPoint32.move:102:28
    │
102 │         let scaled_value = (val as u128) << 32;
    │                            ^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/FixedPoint32.move:103:24
    │
103 │         let quotient = scaled_value / (divisor.value as u128);
    │                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/FixedPoint32.move:105:17
    │
105 │         assert!(quotient <= MAX_U64, Errors::limit_exceeded(EDIVISION));
    │                 ^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/FixedPoint32.move:164:32
    │
164 │         let scaled_numerator = (numerator as u128) << 64;
    │                                ^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/FixedPoint32.move:165:34
    │
165 │         let scaled_denominator = (denominator as u128) << 32;
    │                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/FixedPoint32.move:166:17
    │
166 │         assert!(scaled_denominator != 0, Errors::invalid_argument(EDENOMINATOR));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/FixedPoint32.move:167:24
    │
167 │         let quotient = scaled_numerator / scaled_denominator;
    │                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/FixedPoint32.move:168:17
    │
168 │         assert!(quotient != 0 || numerator == 0, Errors::invalid_argument(ERATIO_OUT_OF_RANGE));
    │                 ^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/FixedPoint32.move:168:17
    │
168 │         assert!(quotient != 0 || numerator == 0, Errors::invalid_argument(ERATIO_OUT_OF_RANGE));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/FixedPoint32.move:168:34
    │
168 │         assert!(quotient != 0 || numerator == 0, Errors::invalid_argument(ERATIO_OUT_OF_RANGE));
    │                                  ^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/FixedPoint32.move:171:17
    │
171 │         assert!(quotient <= MAX_U64, Errors::limit_exceeded(ERATIO_OUT_OF_RANGE));
    │                 ^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/FixedPoint32.move:233:9
    │
233 │         num.value == 0
    │         ^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/ValidatorConfig.move:182:13
    │
182 │             Signer::address_of(validator_operator_account) == get_operator(validator_addr),
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/ValidatorConfig.move:233:9
    │
233 │         exists<ValidatorConfig>(addr) && Option::is_some(&borrow_global<ValidatorConfig>(addr).config)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:259:13
    │  
259 │ ╭             has_published_account_limits<Token>(payer) &&
260 │ │             VASP::is_vasp(payer) &&
    │ ╰────────────────────────────────^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:259:13
    │  
259 │ ╭             has_published_account_limits<Token>(payer) &&
260 │ │             VASP::is_vasp(payer) &&
261 │ │             !VASP::is_same_vasp(payer, payee)
    │ ╰─────────────────────────────────────────────^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:263:13
    │  
263 │ ╭             has_published_account_limits<Token>(payee) &&
264 │ │             VASP::is_vasp(payee) &&
    │ ╰────────────────────────────────^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:263:13
    │  
263 │ ╭             has_published_account_limits<Token>(payee) &&
264 │ │             VASP::is_vasp(payee) &&
265 │ │             !VASP::is_same_vasp(payee, payer)
    │ ╰─────────────────────────────────────────────^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:301:17
    │
301 │         assert!(deposit_value > 0, Errors::invalid_argument(ECOIN_DEPOSIT_IS_ZERO));
    │                 ^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:548:17
    │
548 │         assert!(Diem::value(coin) >= amount, Errors::limit_exceeded(EINSUFFICIENT_BALANCE));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:923:13
    │
923 │             Vector::length(&new_authentication_key) == 32,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:1066:13
     │
1066 │             new_account_addr != @VMReserved,
     │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:1070:13
     │
1070 │             new_account_addr != @DiemFramework,
     │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:1164:13
     │
1164 │             Vector::length(&authentication_key) == 32,
     │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:1760:13
     │
1760 │             Signer::address_of(&sender) == @DiemRoot,
     │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:1809:13
     │
1809 │             Vector::length(&secondary_signer_public_key_hashes) == num_secondary_signers,
     │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:1821:13
     │
1821 │             (i < num_secondary_signers)
     │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:1833:17
     │
1833 │                 signer_public_key_hash == *&signer_account.authentication_key,
     │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:1836:17
     │
1836 │             i = i + 1;
     │                 ^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:1930:17
     │
1930 │         assert!(ChainId::get() == chain_id, Errors::invalid_argument(PROLOGUE_EBAD_CHAIN_ID));
     │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:1946:13
     │
1946 │             Hash::sha3_256(txn_public_key) == *&sender_account.authentication_key,
     │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:1952:13
     │
1952 │             (txn_gas_price as u128) * (txn_max_gas_units as u128) <= MAX_U64,
     │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:1952:13
     │
1952 │             (txn_gas_price as u128) * (txn_max_gas_units as u128) <= MAX_U64,
     │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:1956:35
     │
1956 │         let max_transaction_fee = txn_gas_price * txn_max_gas_units;
     │                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:1959:13
     │
1959 │         if (max_transaction_fee > 0) {
     │             ^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:1973:17
     │
1973 │                 balance_amount >= max_transaction_fee,
     │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:1980:13
     │
1980 │             DiemTimestamp::now_seconds() < txn_expiration_time_seconds,
     │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:1986:13
     │
1986 │             (txn_sequence_number as u128) < MAX_U64,
     │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:1999:17
     │
1999 │                 txn_sequence_number >= sender_account.sequence_number,
     │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:2006:17
     │
2006 │                 txn_sequence_number == sender_account.sequence_number,
     │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:2090:17
     │
2090 │         assert!(txn_max_gas_units >= gas_units_remaining, Errors::invalid_argument(EGAS));
     │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:2091:24
     │
2091 │         let gas_used = txn_max_gas_units - gas_units_remaining;
     │                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:2096:13
     │
2096 │             (txn_gas_price as u128) * (gas_used as u128) <= MAX_U64,
     │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:2096:13
     │
2096 │             (txn_gas_price as u128) * (gas_used as u128) <= MAX_U64,
     │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:2099:38
     │
2099 │         let transaction_fee_amount = txn_gas_price * gas_used;
     │                                      ^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:2109:13
     │
2109 │             sender_account.sequence_number < (MAX_U64 as u64),
     │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:2123:17
     │
2123 │                 sender_account.sequence_number == txn_sequence_number,
     │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:2131:42
     │
2131 │         sender_account.sequence_number = sender_account.sequence_number + 1;
     │                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:2133:13
     │
2133 │         if (transaction_fee_amount > 0) {
     │             ^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:2140:17
     │
2140 │                 transaction_fee_amount <= Diem::value(coin),
     │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:2164:13
     │
2164 │             Signer::address_of(dr_account) == @DiemRoot,
     │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DesignatedDealer.move:142:17
    │
142 │         assert!(amount > 0, Errors::invalid_argument(EINVALID_MINT_AMOUNT));
    │                 ^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/DiemTransactionPublishingOption.move:75:9
   │  
75 │ ╭         Vector::is_empty(&publish_option.script_allow_list)
76 │ │             // fixed allowlist. check inclusion
77 │ │             || Vector::contains(&publish_option.script_allow_list, hash)
   │ ╰────────────────────────────────────────────────────────────────────────^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/DiemTransactionPublishingOption.move:92:9
   │
92 │         publish_option.module_publishing_allowed || Roles::has_diem_root_role(account)
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/VASP.move:81:17
   │
81 │         assert!(*num_children < MAX_CHILD_ACCOUNTS, Errors::limit_exceeded(ETOO_MANY_CHILDREN));
   │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/VASP.move:82:25
   │
82 │         *num_children = *num_children + 1;
   │                         ^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/VASP.move:175:9
    │
175 │         is_parent(addr) || is_child(addr)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/VASP.move:189:9
    │
189 │         is_vasp(addr1) && is_vasp(addr2) && parent_address(addr1) == parent_address(addr2)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/VASP.move:189:9
    │
189 │         is_vasp(addr1) && is_vasp(addr2) && parent_address(addr1) == parent_address(addr2)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/VASP.move:189:45
    │
189 │         is_vasp(addr1) && is_vasp(addr2) && parent_address(addr1) == parent_address(addr2)
    │                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/XDX.move:97:9
   │  
97 │ ╭         Diem::is_currency<CoinType>() &&
98 │ │             Diem::currency_code<CoinType>() == Diem::currency_code<XDX>()
   │ ╰─────────────────────────────────────────────────────────────────────────^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/XDX.move:98:13
   │
98 │             Diem::currency_code<CoinType>() == Diem::currency_code<XDX>()
   │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:37:17
   │
37 │         assert!(code == 0, Errors::invalid_argument(code));
   │                 ^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:193:13
    │
193 │         if (seq_nonce == 0) {
    │             ^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:200:13
    │
200 │         if (t.min_nonce > seq_nonce) {
    │             ^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:206:13
    │
206 │         if (t.min_nonce + jump_limit <= seq_nonce) {
    │             ^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:206:13
    │
206 │         if (t.min_nonce + jump_limit <= seq_nonce) {
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:210:23
    │
210 │         let bit_pos = seq_nonce - t.min_nonce;
    │                       ^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:214:13
    │
214 │         if (bit_pos >= NONCE_MASK_SIZE) {
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:217:25
    │
217 │             let shift = (bit_pos - NONCE_MASK_SIZE + 1);
    │                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:217:26
    │
217 │             let shift = (bit_pos - NONCE_MASK_SIZE + 1);
    │                          ^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:223:16
    │
223 │             if(shift >= NONCE_MASK_SIZE) {
    │                ^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:225:31
    │
225 │                 t.min_nonce = seq_nonce + 1 - NONCE_MASK_SIZE;
    │                               ^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:225:31
    │
225 │                 t.min_nonce = seq_nonce + 1 - NONCE_MASK_SIZE;
    │                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:229:32
    │
229 │                 t.nonce_mask = t.nonce_mask >> (shift as u8);
    │                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:230:31
    │
230 │                 t.min_nonce = t.min_nonce + shift;
    │                               ^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:236:23
    │
236 │         let bit_pos = seq_nonce - t.min_nonce;
    │                       ^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:237:19
    │
237 │         let set = 1u128 << (bit_pos as u8);
    │                   ^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:239:13
    │
239 │         if (t.nonce_mask & set != 0) {
    │             ^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:239:13
    │
239 │         if (t.nonce_mask & set != 0) {
    │             ^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:242:24
    │
242 │         t.nonce_mask = t.nonce_mask | set;
    │                        ^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemSystem.move:184:13
    │
184 │             validator_set_size() < MAX_VALIDATORS,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemSystem.move:298:13
    │
298 │             ValidatorConfig::get_operator(validator_addr) == Signer::address_of(validator_operator_account),
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemSystem.move:309:17
    │
309 │                 validator_info.last_config_update_time <= MAX_U64 - FIVE_MINUTES,
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemSystem.move:309:59
    │
309 │                 validator_info.last_config_update_time <= MAX_U64 - FIVE_MINUTES,
    │                                                           ^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemSystem.move:313:17
    │
313 │                 DiemTimestamp::now_microseconds() > validator_info.last_config_update_time + FIVE_MINUTES,
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemSystem.move:313:53
    │
313 │                 DiemTimestamp::now_microseconds() > validator_info.last_config_update_time + FIVE_MINUTES,
    │                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemSystem.move:447:17
    │
447 │         assert!(i < validator_set_size(), Errors::invalid_argument(EVALIDATOR_INDEX));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemSystem.move:471:13
    │
471 │             (i < size)
    │             ^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemSystem.move:475:17
    │
475 │             if (validator_info_ref.addr == addr) {
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemSystem.move:481:17
    │
481 │             i = i + 1;
    │                 ^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemSystem.move:512:13
    │
512 │         if (i >= size) {
    │             ^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemSystem.move:525:13
    │
525 │         if (config_ref == &new_validator_config) {
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:422:17
    │
422 │         assert!(MAX_U128 - info.total_value >= (value as u128), Errors::limit_exceeded(ECURRENCY_INFO));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:422:17
    │
422 │         assert!(MAX_U128 - info.total_value >= (value as u128), Errors::limit_exceeded(ECURRENCY_INFO));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:423:28
    │
423 │         info.total_value = info.total_value + (value as u128);
    │                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:487:17
    │
487 │         assert!(value(&preburn.to_burn) == 0, Errors::invalid_state(EPREBURN_OCCUPIED));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:491:17
    │
491 │         assert!(MAX_U64 - info.preburn_value >= coin_value, Errors::limit_exceeded(ECOIN));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:491:17
    │
491 │         assert!(MAX_U64 - info.preburn_value >= coin_value, Errors::limit_exceeded(ECOIN));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:492:30
    │
492 │         info.preburn_value = info.preburn_value + coin_value;
    │                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:678:13
    │
678 │         if (preburn_exists && !preburn_queue_exists) {
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:683:17
    │
683 │             if (to_burn.value > 0)  {
    │                 ^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:729:17
    │
729 │         assert!(value(&preburn.preburn.to_burn) > 0, Errors::invalid_argument(EPREBURN));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:732:13
    │
732 │             Vector::length(preburns) < MAX_OUTSTANDING_PREBURNS,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:770:17
    │
770 │         assert!(value(&coin) > 0, Errors::invalid_argument(ECOIN));
    │                 ^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:836:13
    │
836 │             (index < queue_length)
    │             ^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:839:17
    │
839 │             if (value(&elem.preburn.to_burn) == amount) {
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:844:21
    │
844 │             index = index + 1;
    │                     ^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:936:17
    │
936 │         assert!(preburn.to_burn.value > 0, Errors::invalid_state(EPREBURN_EMPTY));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:942:17
    │
942 │         assert!(info.total_value >= (value as u128), Errors::limit_exceeded(ECURRENCY_INFO));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:943:28
    │
943 │         info.total_value = info.total_value - (value as u128);
    │                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:944:17
    │
944 │         assert!(info.preburn_value >= value, Errors::limit_exceeded(EPREBURN));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:945:30
    │
945 │         info.preburn_value = info.preburn_value - value;
    │                              ^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:1013:17
     │
1013 │         assert!(info.preburn_value >= amount, Errors::limit_exceeded(EPREBURN));
     │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:1014:30
     │
1014 │         info.preburn_value = info.preburn_value - amount;
     │                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:1079:17
     │
1079 │         assert!(coin.value > 0, Errors::invalid_argument(ECOIN));
     │                 ^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:1165:17
     │
1165 │         assert!(coin.value >= amount, Errors::limit_exceeded(EAMOUNT_EXCEEDS_COIN_VALUE));
     │                 ^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:1166:22
     │
1166 │         coin.value = coin.value - amount;
     │                      ^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:1212:17
     │
1212 │         assert!(MAX_U64 - coin.value >= value, Errors::limit_exceeded(ECOIN));
     │                 ^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:1212:17
     │
1212 │         assert!(MAX_U64 - coin.value >= value, Errors::limit_exceeded(ECOIN));
     │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:1213:22
     │
1213 │         coin.value = coin.value + value;
     │                      ^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:1231:17
     │
1231 │         assert!(value == 0, Errors::invalid_argument(EDESTRUCTION_OF_NONZERO_COIN))
     │                 ^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:1269:17
     │
1269 │         assert!(0 < scaling_factor && scaling_factor <= MAX_SCALING_FACTOR, Errors::invalid_argument(ECURRENCY_INFO));
     │                 ^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:1269:17
     │
1269 │         assert!(0 < scaling_factor && scaling_factor <= MAX_SCALING_FACTOR, Errors::invalid_argument(ECURRENCY_INFO));
     │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:1269:39
     │
1269 │         assert!(0 < scaling_factor && scaling_factor <= MAX_SCALING_FACTOR, Errors::invalid_argument(ECURRENCY_INFO));
     │                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:1420:9
     │  
1420 │ ╭         is_currency<CoinType>() &&
1421 │ │         !borrow_global<CurrencyInfo<CoinType>>(@CurrencyInfo).is_synthetic
     │ ╰──────────────────────────────────────────────────────────────────────────^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:1430:9
     │  
1430 │ ╭         exists<CurrencyInfo<CoinType>>(addr) &&
1431 │ │             borrow_global<CurrencyInfo<CoinType>>(addr).is_synthetic
     │ ╰────────────────────────────────────────────────────────────────────^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:1478:17
     │
1478 │         assert!(currency_code<FromCoinType>() != b"XDX", Errors::invalid_argument(ECOIN));
     │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/AccountFreezing.move:89:17
   │
89 │         assert!(frozen_address != @DiemRoot, Errors::invalid_argument(ECANNOT_FREEZE_DIEM_ROOT));
   │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/AccountFreezing.move:90:17
   │
90 │         assert!(frozen_address != @TreasuryCompliance, Errors::invalid_argument(ECANNOT_FREEZE_TC));
   │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountFreezing.move:162:9
    │
162 │         exists<FreezingBit>(addr) && borrow_global<FreezingBit>(addr).is_frozen
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/DiemBlock.move:74:13
   │
74 │             proposer == @VMReserved || DiemSystem::is_validator(proposer),
   │             ^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/DiemBlock.move:74:13
   │
74 │             proposer == @VMReserved || DiemSystem::is_validator(proposer),
   │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/DiemBlock.move:80:37
   │
80 │         block_metadata_ref.height = block_metadata_ref.height + 1;
   │                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/DiemTimestamp.move:78:13
   │
78 │         if (proposer == @VMReserved) {
   │             ^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/DiemTimestamp.move:80:21
   │
80 │             assert!(now == timestamp, Errors::invalid_argument(ETIMESTAMP));
   │                     ^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/DiemTimestamp.move:83:21
   │
83 │             assert!(now < timestamp, Errors::invalid_argument(ETIMESTAMP));
   │                     ^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemTimestamp.move:126:9
    │
126 │         now_microseconds() / MICRO_CONVERSION_FACTOR
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemConfig.move:186:13
    │
186 │             Signer::address_of(dr_account) == @DiemRoot,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemConfig.move:198:13
    │
198 │             Signer::address_of(dr_account) == @DiemRoot,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemConfig.move:294:13
    │
294 │         if (DiemTimestamp::is_genesis() || DiemTimestamp::now_microseconds() == 0 || !reconfiguration_enabled()) {
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemConfig.move:294:13
    │
294 │         if (DiemTimestamp::is_genesis() || DiemTimestamp::now_microseconds() == 0 || !reconfiguration_enabled()) {
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemConfig.move:294:44
    │
294 │         if (DiemTimestamp::is_genesis() || DiemTimestamp::now_microseconds() == 0 || !reconfiguration_enabled()) {
    │                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemConfig.move:313:13
    │
313 │         if (current_time == config_ref.last_reconfiguration_time) {
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemConfig.move:317:17
    │
317 │         assert!(current_time > config_ref.last_reconfiguration_time, Errors::invalid_state(EINVALID_BLOCK_TIME));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemConfig.move:319:28
    │
319 │         config_ref.epoch = config_ref.epoch + 1;
    │                            ^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemConfig.move:392:17
    │
392 │         assert!(config_ref.epoch == 0 && config_ref.last_reconfiguration_time == 0, Errors::invalid_state(ECONFIGURATION));
    │                 ^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemConfig.move:392:17
    │
392 │         assert!(config_ref.epoch == 0 && config_ref.last_reconfiguration_time == 0, Errors::invalid_state(ECONFIGURATION));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemConfig.move:392:42
    │
392 │         assert!(config_ref.epoch == 0 && config_ref.last_reconfiguration_time == 0, Errors::invalid_state(ECONFIGURATION));
    │                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/CoreAddresses.move:21:17
   │
21 │         assert!(Signer::address_of(account) == @DiemRoot, Errors::requires_address(EDIEM_ROOT))
   │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/CoreAddresses.move:37:13
   │
37 │             Signer::address_of(account) == @TreasuryCompliance,
   │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/CoreAddresses.move:55:17
   │
55 │         assert!(Signer::address_of(account) == @VMReserved, Errors::requires_address(EVM))
   │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/CoreAddresses.move:70:17
   │
70 │         assert!(Signer::address_of(account) == @CurrencyInfo, Errors::requires_address(ECURRENCY_INFO))
   │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/Authenticator.move:43:17
   │
43 │         assert!(threshold != 0, Errors::invalid_argument(EZERO_THRESHOLD));
   │                 ^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/Authenticator.move:45:13
   │
45 │             (threshold as u64) <= len,
   │             ^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/Authenticator.move:50:13
   │
50 │             len <= MAX_MULTI_ED25519_KEYS,
   │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/Authenticator.move:77:16
   │
77 │         while (i < len) {
   │                ^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/Authenticator.move:83:17
   │
83 │             i = i + 1;
   │                 ^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/RecoveryAddress.move:53:13
   │
53 │             *DiemAccount::key_rotation_capability_address(&rotation_cap) == addr,
   │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/RecoveryAddress.move:98:13
   │
98 │             sender == to_recover ||
   │             ^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/RecoveryAddress.move:98:13
    │  
 98 │ ╭             sender == to_recover ||
 99 │ │             // The owner of the `RecoveryAddress` resource can rotate any key
100 │ │             sender == recovery_address,
    │ ╰──────────────────────────────────────^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/RecoveryAddress.move:100:13
    │
100 │             sender == recovery_address,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/RecoveryAddress.move:112:13
    │
112 │             (i < len)
    │             ^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/RecoveryAddress.move:116:17
    │
116 │             if (DiemAccount::key_rotation_capability_address(cap) == &to_recover) {
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/RecoveryAddress.move:167:13
    │
167 │             Vector::length(recovery_caps) < MAX_REGISTERED_KEYS,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/CRSN.move:77:17
   │
77 │         assert!(size > 0, Errors::invalid_argument(EZERO_SIZE_CRSN));
   │                 ^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/CRSN.move:78:17
   │
78 │         assert!(size <= MAX_CRSN_SIZE, Errors::invalid_argument(ECRSN_SIZE_TOO_LARGE));
   │                 ^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/CRSN.move:105:32
    │
105 │             let scaled_nonce = sequence_nonce - crsn.min_nonce;
    │                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/CRSN.move:111:17
    │
111 │             if (crsn.min_nonce > sequence_nonce) return true
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/CRSN.move:126:13
    │
126 │         if ((sequence_nonce < crsn.min_nonce) ||
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/CRSN.move:126:13
    │  
126 │           if ((sequence_nonce < crsn.min_nonce) ||
    │ ╭─────────────^
127 │ │             ((sequence_nonce as u128) >= (crsn.min_nonce as u128) + (BitVector::length(&crsn.slots) as u128))) {
    │ ╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/CRSN.move:127:13
    │
127 │             ((sequence_nonce as u128) >= (crsn.min_nonce as u128) + (BitVector::length(&crsn.slots) as u128))) {
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/CRSN.move:127:42
    │
127 │             ((sequence_nonce as u128) >= (crsn.min_nonce as u128) + (BitVector::length(&crsn.slots) as u128))) {
    │                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/CRSN.move:131:32
    │
131 │             let scaled_nonce = sequence_nonce - crsn.min_nonce;
    │                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/CRSN.move:167:17
    │
167 │         assert!(shift_amount > 0, Errors::invalid_argument(EINVALID_SHIFT));
    │                 ^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/CRSN.move:180:26
    │
180 │         crsn.min_nonce = crsn.min_nonce + shift_amount;
    │                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/CRSN.move:194:13
    │
194 │         if (index == 0) return;
    │             ^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/CRSN.move:196:26
    │
196 │         crsn.min_nonce = crsn.min_nonce + index;
    │                          ^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:244:13
    │
244 │         if (new_max_inflow > 0) { limits_def.max_inflow = new_max_inflow };
    │             ^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:245:13
    │
245 │         if (new_max_outflow > 0) { limits_def.max_outflow = new_max_outflow };
    │             ^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:246:13
    │
246 │         if (new_max_holding_balance > 0) { limits_def.max_holding = new_max_holding_balance };
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:247:13
    │
247 │         if (new_time_period > 0) { limits_def.time_period = new_time_period };
    │             ^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:284:13
    │
284 │         if (aggregate_balance != 0)  { window.tracked_balance = aggregate_balance };
    │             ^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:313:17
    │
313 │         assert!(window.window_start <= MAX_U64 - limits_definition.time_period, Errors::limit_exceeded(EWINDOW));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:313:40
    │
313 │         assert!(window.window_start <= MAX_U64 - limits_definition.time_period, Errors::limit_exceeded(EWINDOW));
    │                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:314:13
    │
314 │         if (current_time > window.window_start + limits_definition.time_period) {
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:314:28
    │
314 │         if (current_time > window.window_start + limits_definition.time_period) {
    │                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:378:17
    │
378 │         assert!(receiving.window_inflow <= MAX_U64 - amount, Errors::limit_exceeded(EWINDOW));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:378:44
    │
378 │         assert!(receiving.window_inflow <= MAX_U64 - amount, Errors::limit_exceeded(EWINDOW));
    │                                            ^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:379:25
    │
379 │         let inflow_ok = (receiving.window_inflow + amount) <= limits_definition.max_inflow;
    │                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:379:25
    │
379 │         let inflow_ok = (receiving.window_inflow + amount) <= limits_definition.max_inflow;
    │                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:381:17
    │
381 │         assert!(receiving.tracked_balance <= MAX_U64 - amount, Errors::limit_exceeded(EWINDOW));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:381:46
    │
381 │         assert!(receiving.tracked_balance <= MAX_U64 - amount, Errors::limit_exceeded(EWINDOW));
    │                                              ^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:382:26
    │
382 │         let holding_ok = (receiving.tracked_balance + amount) <= limits_definition.max_holding;
    │                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:382:26
    │
382 │         let holding_ok = (receiving.tracked_balance + amount) <= limits_definition.max_holding;
    │                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:384:13
    │
384 │         if (inflow_ok && holding_ok) {
    │             ^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:385:39
    │
385 │             receiving.window_inflow = receiving.window_inflow + amount;
    │                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:386:41
    │
386 │             receiving.tracked_balance = receiving.tracked_balance + amount;
    │                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:388:9
    │
388 │         inflow_ok && holding_ok
    │         ^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:464:17
    │
464 │         assert!(sending.window_outflow <= MAX_U64 - amount, Errors::limit_exceeded(EWINDOW));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:464:43
    │
464 │         assert!(sending.window_outflow <= MAX_U64 - amount, Errors::limit_exceeded(EWINDOW));
    │                                           ^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:465:26
    │
465 │         let outflow_ok = sending.window_outflow + amount <= limits_definition.max_outflow;
    │                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:465:26
    │
465 │         let outflow_ok = sending.window_outflow + amount <= limits_definition.max_outflow;
    │                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:468:38
    │
468 │             sending.window_outflow = sending.window_outflow + amount;
    │                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:469:43
    │
469 │             sending.tracked_balance = if (amount >= sending.tracked_balance) 0
    │                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:470:45
    │
470 │                                        else sending.tracked_balance - amount;
    │                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:520:9
    │
520 │         limits_def.max_inflow == MAX_U64 &&
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:520:9
    │  
520 │ ╭         limits_def.max_inflow == MAX_U64 &&
521 │ │         limits_def.max_outflow == MAX_U64 &&
    │ ╰─────────────────────────────────────────^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:520:9
    │  
520 │ ╭         limits_def.max_inflow == MAX_U64 &&
521 │ │         limits_def.max_outflow == MAX_U64 &&
522 │ │         limits_def.max_holding == MAX_U64 &&
    │ ╰─────────────────────────────────────────^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:520:9
    │  
520 │ ╭         limits_def.max_inflow == MAX_U64 &&
521 │ │         limits_def.max_outflow == MAX_U64 &&
522 │ │         limits_def.max_holding == MAX_U64 &&
523 │ │         limits_def.time_period == ONE_DAY
    │ ╰─────────────────────────────────────────^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:521:9
    │
521 │         limits_def.max_outflow == MAX_U64 &&
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:522:9
    │
522 │         limits_def.max_holding == MAX_U64 &&
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:523:9
    │
523 │         limits_def.time_period == ONE_DAY
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/Event.move:49:30
   │
49 │         handle_ref.counter = handle_ref.counter + 1;
   │                              ^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Roles.move:196:8
    │  
196 │ ╭        exists<RoleId>(addr)
197 │ │            && borrow_global<RoleId>(addr).role_id == role_id
    │ ╰────────────────────────────────────────────────────────────^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Roles.move:197:15
    │
197 │            && borrow_global<RoleId>(addr).role_id == role_id
    │               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Roles.move:238:9
    │  
238 │ ╭         has_parent_VASP_role(account) ||
239 │ │         has_child_VASP_role(account) ||
    │ ╰────────────────────────────────────^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Roles.move:238:9
    │  
238 │ ╭         has_parent_VASP_role(account) ||
239 │ │         has_child_VASP_role(account) ||
240 │ │         has_designated_dealer_role(account)
    │ ╰───────────────────────────────────────────^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Roles.move:251:17
    │
251 │         assert!(borrow_global<RoleId>(addr).role_id == DIEM_ROOT_ROLE_ID, Errors::requires_role(EDIEM_ROOT));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Roles.move:265:13
    │
265 │             borrow_global<RoleId>(addr).role_id == TREASURY_COMPLIANCE_ROLE_ID,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Roles.move:279:13
    │
279 │             borrow_global<RoleId>(addr).role_id == PARENT_VASP_ROLE_ID,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Roles.move:293:13
    │
293 │             borrow_global<RoleId>(addr).role_id == CHILD_VASP_ROLE_ID,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Roles.move:308:13
    │
308 │             borrow_global<RoleId>(addr).role_id == DESIGNATED_DEALER_ROLE_ID,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Roles.move:322:13
    │
322 │             borrow_global<RoleId>(validator_addr).role_id == VALIDATOR_ROLE_ID,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Roles.move:336:13
    │
336 │             borrow_global<RoleId>(validator_operator_addr).role_id == VALIDATOR_OPERATOR_ROLE_ID,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Roles.move:351:13
    │
351 │             role_id == PARENT_VASP_ROLE_ID || role_id == DESIGNATED_DEALER_ROLE_ID,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Roles.move:351:13
    │
351 │             role_id == PARENT_VASP_ROLE_ID || role_id == DESIGNATED_DEALER_ROLE_ID,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Roles.move:351:47
    │
351 │             role_id == PARENT_VASP_ROLE_ID || role_id == DESIGNATED_DEALER_ROLE_ID,
    │                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Roles.move:365:13
    │
365 │             role_id == PARENT_VASP_ROLE_ID || role_id == CHILD_VASP_ROLE_ID,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Roles.move:365:13
    │
365 │             role_id == PARENT_VASP_ROLE_ID || role_id == CHILD_VASP_ROLE_ID,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Roles.move:365:47
    │
365 │             role_id == PARENT_VASP_ROLE_ID || role_id == CHILD_VASP_ROLE_ID,
    │                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/BitVector.move:20:17
   │
20 │         assert!(length > 0, Errors::invalid_argument(ELENGTH));
   │                 ^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/BitVector.move:21:17
   │
21 │         assert!(length < MAX_SIZE, Errors::invalid_argument(ELENGTH));
   │                 ^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/BitVector.move:28:13
   │
28 │             (counter < length)}) {
   │             ^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/BitVector.move:55:17
   │
55 │         assert!(bit_index < Vector::length(&bitvector.bit_field), Errors::invalid_argument(EINDEX));
   │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/BitVector.move:71:17
   │
71 │         assert!(bit_index < Vector::length(&bitvector.bit_field), Errors::invalid_argument(EINDEX));
   │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/BitVector.move:88:13
   │
88 │         if (amount >= bitvector.length) {
   │             ^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/BitVector.move:91:19
   │
91 │            while (i < len) {
   │                   ^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/BitVector.move:94:20
   │
94 │                i = i + 1;
   │                    ^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/BitVector.move:99:20
   │
99 │             while (i < bitvector.length) {
   │                    ^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/BitVector.move:100:64
    │
100 │                 if (is_index_set(bitvector, i)) set(bitvector, i - amount)
    │                                                                ^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/BitVector.move:101:39
    │
101 │                 else unset(bitvector, i - amount);
    │                                       ^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/BitVector.move:102:21
    │
102 │                 i = i + 1;
    │                     ^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/BitVector.move:105:17
    │
105 │             i = bitvector.length - amount;
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/BitVector.move:107:20
    │
107 │             while (i < bitvector.length) {
    │                    ^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/BitVector.move:109:21
    │
109 │                 i = i + 1;
    │                     ^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/BitVector.move:117:17
    │
117 │         assert!(bit_index < Vector::length(&bitvector.bit_field), Errors::invalid_argument(EINDEX));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/BitVector.move:146:17
    │
146 │         assert!(start_index < bitvector.length, Errors::invalid_argument(EINDEX));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/BitVector.move:150:16
    │
150 │         while (index < bitvector.length) {
    │                ^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/BitVector.move:152:21
    │
152 │             index = index + 1;
    │                     ^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/BitVector.move:155:9
    │
155 │         index - start_index
    │         ^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/Errors.move:18:9
   │
18 │         (category as u64) + (reason << 8)
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/Errors.move:18:29
   │
18 │         (category as u64) + (reason << 8)
   │                             ^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/Vector.move:61:13
   │
61 │         if (len == 0) return ();
   │             ^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/Vector.move:64:26
   │
64 │         let back_index = len -1;
   │                          ^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/Vector.move:65:16
   │
65 │         while (front_index < back_index) {
   │                ^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/Vector.move:67:27
   │
67 │             front_index = front_index + 1;
   │                           ^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/Vector.move:68:26
   │
68 │             back_index = back_index - 1;
   │                          ^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/Vector.move:92:9
   │
92 │         length(v) == 0
   │         ^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/Vector.move:99:16
   │
99 │         while (i < len) {
   │                ^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/Vector.move:100:17
    │
100 │             if (borrow(v, i) == e) return true;
    │                 ^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/Vector.move:101:17
    │
101 │             i = i + 1;
    │                 ^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/Vector.move:114:16
    │
114 │         while (i < len) {
    │                ^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/Vector.move:115:17
    │
115 │             if (borrow(v, i) == e) return (true, i);
    │                 ^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/Vector.move:116:17
    │
116 │             i = i + 1;
    │                 ^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/Vector.move:130:13
    │
130 │         if (i >= len) abort EINDEX_OUT_OF_BOUNDS;
    │             ^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/Vector.move:132:15
    │
132 │         len = len - 1;
    │               ^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/Vector.move:133:16
    │
133 │         while (i < len) swap(v, i, { i = i + 1; i });
    │                ^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/Vector.move:133:42
    │
133 │         while (i < len) swap(v, i, { i = i + 1; i });
    │                                          ^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/Vector.move:145:24
    │
145 │         let last_idx = length(v) - 1;
    │                        ^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/VASPDomain.move:65:17
   │
65 │         assert!(Vector::length(&domain) <= DOMAIN_LENGTH, Errors::invalid_argument(EINVALID_VASP_DOMAIN));
   │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemVMConfig.move:155:13
    │
155 │             min_price_per_gas_unit <= max_price_per_gas_unit,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemVMConfig.move:159:13
    │
159 │             min_transaction_gas_units <= maximum_number_of_gas_units,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DualAttestation.move:314:27
    │
314 │         let above_limit = approx_xdx_microdiem_value >= travel_rule_limit_microdiem;
    │                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DualAttestation.move:319:13
    │
319 │         if (payer == payee) {
    │             ^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DualAttestation.move:324:9
    │
324 │         VASP::is_vasp(payer) && VASP::is_vasp(payee) &&
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DualAttestation.move:324:9
    │  
324 │ ╭         VASP::is_vasp(payer) && VASP::is_vasp(payee) &&
325 │ │             VASP::parent_address(payer) != VASP::parent_address(payee)
    │ ╰──────────────────────────────────────────────────────────────────────^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DualAttestation.move:325:13
    │
325 │             VASP::parent_address(payer) != VASP::parent_address(payee)
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DualAttestation.move:385:13
    │
385 │             Vector::length(&metadata_signature) == 64,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DualAttestation.move:457:13
    │  
457 │           if (!Vector::is_empty(&metadata_signature) || // allow opt-in dual attestation
    │ ╭─────────────^
458 │ │             dual_attestation_required<Currency>(payer, payee, value)
    │ ╰────────────────────────────────────────────────────────────────────^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DualAttestation.move:487:29
    │
487 │         let initial_limit = (INITIAL_DUAL_ATTESTATION_LIMIT as u128) * (Diem::scaling_factor<XDX>() as u128);
    │                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DualAttestation.move:488:17
    │
488 │         assert!(initial_limit <= MAX_U64, Errors::limit_exceeded(ELIMIT));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Genesis.move:155:17
    │
155 │         assert!(num_owners == num_owner_names, 0);
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Genesis.move:157:17
    │
157 │         assert!(num_owner_names == num_owner_keys, 0);
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Genesis.move:159:17
    │
159 │         assert!(num_owner_keys == num_operators, 0);
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Genesis.move:161:17
    │
161 │         assert!(num_operators == num_operator_names, 0);
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Genesis.move:163:17
    │
163 │         assert!(num_operator_names == num_operator_keys, 0);
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Genesis.move:165:17
    │
165 │         assert!(num_operator_keys == num_validator_network_addresses, 0);
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Genesis.move:167:17
    │
167 │         assert!(num_validator_network_addresses == num_full_node_network_addresses, 0);
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Genesis.move:171:16
    │
171 │         while (i < num_owners) {
    │                ^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Genesis.move:199:21
    │
199 │             assert!(ValidatorOperatorConfig::get_human_name(operator_address) == operator_name, 0);
    │                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Genesis.move:217:17
    │
217 │             i = i + 1;
    │                 ^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/DiemVersion.move:43:13
   │
43 │             old_config.major < major,
   │             ^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/GUID.move:39:29
   │
39 │         generator.counter = creation_num + 1;
   │                             ^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/GUID.move:75:9
   │
75 │         &guid.id == id
   │         ^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/FixedPoint32.move:40:32
   │
40 │         let unscaled_product = (val as u128) * (multiplier.value as u128);
   │                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/FixedPoint32.move:43:23
   │
43 │         let product = unscaled_product >> 32;
   │                       ^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/FixedPoint32.move:45:17
   │
45 │         assert!(product <= MAX_U64, Errors::limit_exceeded(EMULTIPLICATION));
   │                 ^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/FixedPoint32.move:99:17
   │
99 │         assert!(divisor.value != 0, Errors::invalid_argument(EDIVISION_BY_ZERO));
   │                 ^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/FixedPoint32.move:102:28
    │
102 │         let scaled_value = (val as u128) << 32;
    │                            ^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/FixedPoint32.move:103:24
    │
103 │         let quotient = scaled_value / (divisor.value as u128);
    │                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/FixedPoint32.move:105:17
    │
105 │         assert!(quotient <= MAX_U64, Errors::limit_exceeded(EDIVISION));
    │                 ^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/FixedPoint32.move:164:32
    │
164 │         let scaled_numerator = (numerator as u128) << 64;
    │                                ^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/FixedPoint32.move:165:34
    │
165 │         let scaled_denominator = (denominator as u128) << 32;
    │                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/FixedPoint32.move:166:17
    │
166 │         assert!(scaled_denominator != 0, Errors::invalid_argument(EDENOMINATOR));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/FixedPoint32.move:167:24
    │
167 │         let quotient = scaled_numerator / scaled_denominator;
    │                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/FixedPoint32.move:168:17
    │
168 │         assert!(quotient != 0 || numerator == 0, Errors::invalid_argument(ERATIO_OUT_OF_RANGE));
    │                 ^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/FixedPoint32.move:168:17
    │
168 │         assert!(quotient != 0 || numerator == 0, Errors::invalid_argument(ERATIO_OUT_OF_RANGE));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/FixedPoint32.move:168:34
    │
168 │         assert!(quotient != 0 || numerator == 0, Errors::invalid_argument(ERATIO_OUT_OF_RANGE));
    │                                  ^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/FixedPoint32.move:171:17
    │
171 │         assert!(quotient <= MAX_U64, Errors::limit_exceeded(ERATIO_OUT_OF_RANGE));
    │                 ^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/FixedPoint32.move:233:9
    │
233 │         num.value == 0
    │         ^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/ValidatorConfig.move:182:13
    │
182 │             Signer::address_of(validator_operator_account) == get_operator(validator_addr),
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/ValidatorConfig.move:233:9
    │
233 │         exists<ValidatorConfig>(addr) && Option::is_some(&borrow_global<ValidatorConfig>(addr).config)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:259:13
    │  
259 │ ╭             has_published_account_limits<Token>(payer) &&
260 │ │             VASP::is_vasp(payer) &&
    │ ╰────────────────────────────────^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:259:13
    │  
259 │ ╭             has_published_account_limits<Token>(payer) &&
260 │ │             VASP::is_vasp(payer) &&
261 │ │             !VASP::is_same_vasp(payer, payee)
    │ ╰─────────────────────────────────────────────^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:263:13
    │  
263 │ ╭             has_published_account_limits<Token>(payee) &&
264 │ │             VASP::is_vasp(payee) &&
    │ ╰────────────────────────────────^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:263:13
    │  
263 │ ╭             has_published_account_limits<Token>(payee) &&
264 │ │             VASP::is_vasp(payee) &&
265 │ │             !VASP::is_same_vasp(payee, payer)
    │ ╰─────────────────────────────────────────────^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:301:17
    │
301 │         assert!(deposit_value > 0, Errors::invalid_argument(ECOIN_DEPOSIT_IS_ZERO));
    │                 ^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:548:17
    │
548 │         assert!(Diem::value(coin) >= amount, Errors::limit_exceeded(EINSUFFICIENT_BALANCE));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:923:13
    │
923 │             Vector::length(&new_authentication_key) == 32,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:1066:13
     │
1066 │             new_account_addr != @VMReserved,
     │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:1070:13
     │
1070 │             new_account_addr != @DiemFramework,
     │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:1164:13
     │
1164 │             Vector::length(&authentication_key) == 32,
     │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:1760:13
     │
1760 │             Signer::address_of(&sender) == @DiemRoot,
     │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:1809:13
     │
1809 │             Vector::length(&secondary_signer_public_key_hashes) == num_secondary_signers,
     │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:1821:13
     │
1821 │             (i < num_secondary_signers)
     │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:1833:17
     │
1833 │                 signer_public_key_hash == *&signer_account.authentication_key,
     │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:1836:17
     │
1836 │             i = i + 1;
     │                 ^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:1930:17
     │
1930 │         assert!(ChainId::get() == chain_id, Errors::invalid_argument(PROLOGUE_EBAD_CHAIN_ID));
     │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:1946:13
     │
1946 │             Hash::sha3_256(txn_public_key) == *&sender_account.authentication_key,
     │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:1952:13
     │
1952 │             (txn_gas_price as u128) * (txn_max_gas_units as u128) <= MAX_U64,
     │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:1952:13
     │
1952 │             (txn_gas_price as u128) * (txn_max_gas_units as u128) <= MAX_U64,
     │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:1956:35
     │
1956 │         let max_transaction_fee = txn_gas_price * txn_max_gas_units;
     │                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:1959:13
     │
1959 │         if (max_transaction_fee > 0) {
     │             ^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:1973:17
     │
1973 │                 balance_amount >= max_transaction_fee,
     │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:1980:13
     │
1980 │             DiemTimestamp::now_seconds() < txn_expiration_time_seconds,
     │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:1986:13
     │
1986 │             (txn_sequence_number as u128) < MAX_U64,
     │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:1999:17
     │
1999 │                 txn_sequence_number >= sender_account.sequence_number,
     │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:2006:17
     │
2006 │                 txn_sequence_number == sender_account.sequence_number,
     │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:2090:17
     │
2090 │         assert!(txn_max_gas_units >= gas_units_remaining, Errors::invalid_argument(EGAS));
     │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:2091:24
     │
2091 │         let gas_used = txn_max_gas_units - gas_units_remaining;
     │                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:2096:13
     │
2096 │             (txn_gas_price as u128) * (gas_used as u128) <= MAX_U64,
     │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:2096:13
     │
2096 │             (txn_gas_price as u128) * (gas_used as u128) <= MAX_U64,
     │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:2099:38
     │
2099 │         let transaction_fee_amount = txn_gas_price * gas_used;
     │                                      ^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:2109:13
     │
2109 │             sender_account.sequence_number < (MAX_U64 as u64),
     │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:2123:17
     │
2123 │                 sender_account.sequence_number == txn_sequence_number,
     │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:2131:42
     │
2131 │         sender_account.sequence_number = sender_account.sequence_number + 1;
     │                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:2133:13
     │
2133 │         if (transaction_fee_amount > 0) {
     │             ^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:2140:17
     │
2140 │                 transaction_fee_amount <= Diem::value(coin),
     │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/DiemAccount.move:2164:13
     │
2164 │             Signer::address_of(dr_account) == @DiemRoot,
     │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DesignatedDealer.move:142:17
    │
142 │         assert!(amount > 0, Errors::invalid_argument(EINVALID_MINT_AMOUNT));
    │                 ^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/DiemTransactionPublishingOption.move:75:9
   │  
75 │ ╭         Vector::is_empty(&publish_option.script_allow_list)
76 │ │             // fixed allowlist. check inclusion
77 │ │             || Vector::contains(&publish_option.script_allow_list, hash)
   │ ╰────────────────────────────────────────────────────────────────────────^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/DiemTransactionPublishingOption.move:92:9
   │
92 │         publish_option.module_publishing_allowed || Roles::has_diem_root_role(account)
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/VASP.move:81:17
   │
81 │         assert!(*num_children < MAX_CHILD_ACCOUNTS, Errors::limit_exceeded(ETOO_MANY_CHILDREN));
   │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/VASP.move:82:25
   │
82 │         *num_children = *num_children + 1;
   │                         ^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/VASP.move:175:9
    │
175 │         is_parent(addr) || is_child(addr)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/VASP.move:189:9
    │
189 │         is_vasp(addr1) && is_vasp(addr2) && parent_address(addr1) == parent_address(addr2)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/VASP.move:189:9
    │
189 │         is_vasp(addr1) && is_vasp(addr2) && parent_address(addr1) == parent_address(addr2)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/VASP.move:189:45
    │
189 │         is_vasp(addr1) && is_vasp(addr2) && parent_address(addr1) == parent_address(addr2)
    │                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/XDX.move:97:9
   │  
97 │ ╭         Diem::is_currency<CoinType>() &&
98 │ │             Diem::currency_code<CoinType>() == Diem::currency_code<XDX>()
   │ ╰─────────────────────────────────────────────────────────────────────────^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/XDX.move:98:13
   │
98 │             Diem::currency_code<CoinType>() == Diem::currency_code<XDX>()
   │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:37:17
   │
37 │         assert!(code == 0, Errors::invalid_argument(code));
   │                 ^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:193:13
    │
193 │         if (seq_nonce == 0) {
    │             ^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:200:13
    │
200 │         if (t.min_nonce > seq_nonce) {
    │             ^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:206:13
    │
206 │         if (t.min_nonce + jump_limit <= seq_nonce) {
    │             ^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:206:13
    │
206 │         if (t.min_nonce + jump_limit <= seq_nonce) {
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:210:23
    │
210 │         let bit_pos = seq_nonce - t.min_nonce;
    │                       ^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:214:13
    │
214 │         if (bit_pos >= NONCE_MASK_SIZE) {
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:217:25
    │
217 │             let shift = (bit_pos - NONCE_MASK_SIZE + 1);
    │                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:217:26
    │
217 │             let shift = (bit_pos - NONCE_MASK_SIZE + 1);
    │                          ^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:223:16
    │
223 │             if(shift >= NONCE_MASK_SIZE) {
    │                ^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:225:31
    │
225 │                 t.min_nonce = seq_nonce + 1 - NONCE_MASK_SIZE;
    │                               ^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:225:31
    │
225 │                 t.min_nonce = seq_nonce + 1 - NONCE_MASK_SIZE;
    │                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:229:32
    │
229 │                 t.nonce_mask = t.nonce_mask >> (shift as u8);
    │                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:230:31
    │
230 │                 t.min_nonce = t.min_nonce + shift;
    │                               ^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:236:23
    │
236 │         let bit_pos = seq_nonce - t.min_nonce;
    │                       ^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:237:19
    │
237 │         let set = 1u128 << (bit_pos as u8);
    │                   ^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:239:13
    │
239 │         if (t.nonce_mask & set != 0) {
    │             ^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:239:13
    │
239 │         if (t.nonce_mask & set != 0) {
    │             ^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/SlidingNonce.move:242:24
    │
242 │         t.nonce_mask = t.nonce_mask | set;
    │                        ^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemSystem.move:184:13
    │
184 │             validator_set_size() < MAX_VALIDATORS,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemSystem.move:298:13
    │
298 │             ValidatorConfig::get_operator(validator_addr) == Signer::address_of(validator_operator_account),
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemSystem.move:309:17
    │
309 │                 validator_info.last_config_update_time <= MAX_U64 - FIVE_MINUTES,
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemSystem.move:309:59
    │
309 │                 validator_info.last_config_update_time <= MAX_U64 - FIVE_MINUTES,
    │                                                           ^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemSystem.move:313:17
    │
313 │                 DiemTimestamp::now_microseconds() > validator_info.last_config_update_time + FIVE_MINUTES,
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemSystem.move:313:53
    │
313 │                 DiemTimestamp::now_microseconds() > validator_info.last_config_update_time + FIVE_MINUTES,
    │                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemSystem.move:447:17
    │
447 │         assert!(i < validator_set_size(), Errors::invalid_argument(EVALIDATOR_INDEX));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemSystem.move:471:13
    │
471 │             (i < size)
    │             ^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemSystem.move:475:17
    │
475 │             if (validator_info_ref.addr == addr) {
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemSystem.move:481:17
    │
481 │             i = i + 1;
    │                 ^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemSystem.move:512:13
    │
512 │         if (i >= size) {
    │             ^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemSystem.move:525:13
    │
525 │         if (config_ref == &new_validator_config) {
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:422:17
    │
422 │         assert!(MAX_U128 - info.total_value >= (value as u128), Errors::limit_exceeded(ECURRENCY_INFO));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:422:17
    │
422 │         assert!(MAX_U128 - info.total_value >= (value as u128), Errors::limit_exceeded(ECURRENCY_INFO));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:423:28
    │
423 │         info.total_value = info.total_value + (value as u128);
    │                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:487:17
    │
487 │         assert!(value(&preburn.to_burn) == 0, Errors::invalid_state(EPREBURN_OCCUPIED));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:491:17
    │
491 │         assert!(MAX_U64 - info.preburn_value >= coin_value, Errors::limit_exceeded(ECOIN));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:491:17
    │
491 │         assert!(MAX_U64 - info.preburn_value >= coin_value, Errors::limit_exceeded(ECOIN));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:492:30
    │
492 │         info.preburn_value = info.preburn_value + coin_value;
    │                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:678:13
    │
678 │         if (preburn_exists && !preburn_queue_exists) {
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:683:17
    │
683 │             if (to_burn.value > 0)  {
    │                 ^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:729:17
    │
729 │         assert!(value(&preburn.preburn.to_burn) > 0, Errors::invalid_argument(EPREBURN));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:732:13
    │
732 │             Vector::length(preburns) < MAX_OUTSTANDING_PREBURNS,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:770:17
    │
770 │         assert!(value(&coin) > 0, Errors::invalid_argument(ECOIN));
    │                 ^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:836:13
    │
836 │             (index < queue_length)
    │             ^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:839:17
    │
839 │             if (value(&elem.preburn.to_burn) == amount) {
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:844:21
    │
844 │             index = index + 1;
    │                     ^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:936:17
    │
936 │         assert!(preburn.to_burn.value > 0, Errors::invalid_state(EPREBURN_EMPTY));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:942:17
    │
942 │         assert!(info.total_value >= (value as u128), Errors::limit_exceeded(ECURRENCY_INFO));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:943:28
    │
943 │         info.total_value = info.total_value - (value as u128);
    │                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:944:17
    │
944 │         assert!(info.preburn_value >= value, Errors::limit_exceeded(EPREBURN));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:945:30
    │
945 │         info.preburn_value = info.preburn_value - value;
    │                              ^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:1013:17
     │
1013 │         assert!(info.preburn_value >= amount, Errors::limit_exceeded(EPREBURN));
     │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:1014:30
     │
1014 │         info.preburn_value = info.preburn_value - amount;
     │                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:1079:17
     │
1079 │         assert!(coin.value > 0, Errors::invalid_argument(ECOIN));
     │                 ^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:1165:17
     │
1165 │         assert!(coin.value >= amount, Errors::limit_exceeded(EAMOUNT_EXCEEDS_COIN_VALUE));
     │                 ^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:1166:22
     │
1166 │         coin.value = coin.value - amount;
     │                      ^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:1212:17
     │
1212 │         assert!(MAX_U64 - coin.value >= value, Errors::limit_exceeded(ECOIN));
     │                 ^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:1212:17
     │
1212 │         assert!(MAX_U64 - coin.value >= value, Errors::limit_exceeded(ECOIN));
     │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:1213:22
     │
1213 │         coin.value = coin.value + value;
     │                      ^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:1231:17
     │
1231 │         assert!(value == 0, Errors::invalid_argument(EDESTRUCTION_OF_NONZERO_COIN))
     │                 ^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:1269:17
     │
1269 │         assert!(0 < scaling_factor && scaling_factor <= MAX_SCALING_FACTOR, Errors::invalid_argument(ECURRENCY_INFO));
     │                 ^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:1269:17
     │
1269 │         assert!(0 < scaling_factor && scaling_factor <= MAX_SCALING_FACTOR, Errors::invalid_argument(ECURRENCY_INFO));
     │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:1269:39
     │
1269 │         assert!(0 < scaling_factor && scaling_factor <= MAX_SCALING_FACTOR, Errors::invalid_argument(ECURRENCY_INFO));
     │                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:1420:9
     │  
1420 │ ╭         is_currency<CoinType>() &&
1421 │ │         !borrow_global<CurrencyInfo<CoinType>>(@CurrencyInfo).is_synthetic
     │ ╰──────────────────────────────────────────────────────────────────────────^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:1430:9
     │  
1430 │ ╭         exists<CurrencyInfo<CoinType>>(addr) &&
1431 │ │             borrow_global<CurrencyInfo<CoinType>>(addr).is_synthetic
     │ ╰────────────────────────────────────────────────────────────────────^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
     ┌─ ../../../../diem-move/diem-framework/core/sources/Diem.move:1478:17
     │
1478 │         assert!(currency_code<FromCoinType>() != b"XDX", Errors::invalid_argument(ECOIN));
     │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/AccountFreezing.move:89:17
   │
89 │         assert!(frozen_address != @DiemRoot, Errors::invalid_argument(ECANNOT_FREEZE_DIEM_ROOT));
   │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/AccountFreezing.move:90:17
   │
90 │         assert!(frozen_address != @TreasuryCompliance, Errors::invalid_argument(ECANNOT_FREEZE_TC));
   │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountFreezing.move:162:9
    │
162 │         exists<FreezingBit>(addr) && borrow_global<FreezingBit>(addr).is_frozen
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/DiemBlock.move:74:13
   │
74 │             proposer == @VMReserved || DiemSystem::is_validator(proposer),
   │             ^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/DiemBlock.move:74:13
   │
74 │             proposer == @VMReserved || DiemSystem::is_validator(proposer),
   │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/DiemBlock.move:80:37
   │
80 │         block_metadata_ref.height = block_metadata_ref.height + 1;
   │                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/DiemTimestamp.move:78:13
   │
78 │         if (proposer == @VMReserved) {
   │             ^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/DiemTimestamp.move:80:21
   │
80 │             assert!(now == timestamp, Errors::invalid_argument(ETIMESTAMP));
   │                     ^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/DiemTimestamp.move:83:21
   │
83 │             assert!(now < timestamp, Errors::invalid_argument(ETIMESTAMP));
   │                     ^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemTimestamp.move:126:9
    │
126 │         now_microseconds() / MICRO_CONVERSION_FACTOR
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemConfig.move:186:13
    │
186 │             Signer::address_of(dr_account) == @DiemRoot,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemConfig.move:198:13
    │
198 │             Signer::address_of(dr_account) == @DiemRoot,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemConfig.move:294:13
    │
294 │         if (DiemTimestamp::is_genesis() || DiemTimestamp::now_microseconds() == 0 || !reconfiguration_enabled()) {
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemConfig.move:294:13
    │
294 │         if (DiemTimestamp::is_genesis() || DiemTimestamp::now_microseconds() == 0 || !reconfiguration_enabled()) {
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemConfig.move:294:44
    │
294 │         if (DiemTimestamp::is_genesis() || DiemTimestamp::now_microseconds() == 0 || !reconfiguration_enabled()) {
    │                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemConfig.move:313:13
    │
313 │         if (current_time == config_ref.last_reconfiguration_time) {
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemConfig.move:317:17
    │
317 │         assert!(current_time > config_ref.last_reconfiguration_time, Errors::invalid_state(EINVALID_BLOCK_TIME));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemConfig.move:319:28
    │
319 │         config_ref.epoch = config_ref.epoch + 1;
    │                            ^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemConfig.move:392:17
    │
392 │         assert!(config_ref.epoch == 0 && config_ref.last_reconfiguration_time == 0, Errors::invalid_state(ECONFIGURATION));
    │                 ^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemConfig.move:392:17
    │
392 │         assert!(config_ref.epoch == 0 && config_ref.last_reconfiguration_time == 0, Errors::invalid_state(ECONFIGURATION));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemConfig.move:392:42
    │
392 │         assert!(config_ref.epoch == 0 && config_ref.last_reconfiguration_time == 0, Errors::invalid_state(ECONFIGURATION));
    │                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/CoreAddresses.move:21:17
   │
21 │         assert!(Signer::address_of(account) == @DiemRoot, Errors::requires_address(EDIEM_ROOT))
   │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/CoreAddresses.move:37:13
   │
37 │             Signer::address_of(account) == @TreasuryCompliance,
   │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/CoreAddresses.move:55:17
   │
55 │         assert!(Signer::address_of(account) == @VMReserved, Errors::requires_address(EVM))
   │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/CoreAddresses.move:70:17
   │
70 │         assert!(Signer::address_of(account) == @CurrencyInfo, Errors::requires_address(ECURRENCY_INFO))
   │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/Authenticator.move:43:17
   │
43 │         assert!(threshold != 0, Errors::invalid_argument(EZERO_THRESHOLD));
   │                 ^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/Authenticator.move:45:13
   │
45 │             (threshold as u64) <= len,
   │             ^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/Authenticator.move:50:13
   │
50 │             len <= MAX_MULTI_ED25519_KEYS,
   │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/Authenticator.move:77:16
   │
77 │         while (i < len) {
   │                ^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/Authenticator.move:83:17
   │
83 │             i = i + 1;
   │                 ^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/RecoveryAddress.move:53:13
   │
53 │             *DiemAccount::key_rotation_capability_address(&rotation_cap) == addr,
   │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/RecoveryAddress.move:98:13
   │
98 │             sender == to_recover ||
   │             ^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/RecoveryAddress.move:98:13
    │  
 98 │ ╭             sender == to_recover ||
 99 │ │             // The owner of the `RecoveryAddress` resource can rotate any key
100 │ │             sender == recovery_address,
    │ ╰──────────────────────────────────────^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/RecoveryAddress.move:100:13
    │
100 │             sender == recovery_address,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/RecoveryAddress.move:112:13
    │
112 │             (i < len)
    │             ^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/RecoveryAddress.move:116:17
    │
116 │             if (DiemAccount::key_rotation_capability_address(cap) == &to_recover) {
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/RecoveryAddress.move:167:13
    │
167 │             Vector::length(recovery_caps) < MAX_REGISTERED_KEYS,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/CRSN.move:77:17
   │
77 │         assert!(size > 0, Errors::invalid_argument(EZERO_SIZE_CRSN));
   │                 ^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/CRSN.move:78:17
   │
78 │         assert!(size <= MAX_CRSN_SIZE, Errors::invalid_argument(ECRSN_SIZE_TOO_LARGE));
   │                 ^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/CRSN.move:105:32
    │
105 │             let scaled_nonce = sequence_nonce - crsn.min_nonce;
    │                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/CRSN.move:111:17
    │
111 │             if (crsn.min_nonce > sequence_nonce) return true
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/CRSN.move:126:13
    │
126 │         if ((sequence_nonce < crsn.min_nonce) ||
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/CRSN.move:126:13
    │  
126 │           if ((sequence_nonce < crsn.min_nonce) ||
    │ ╭─────────────^
127 │ │             ((sequence_nonce as u128) >= (crsn.min_nonce as u128) + (BitVector::length(&crsn.slots) as u128))) {
    │ ╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/CRSN.move:127:13
    │
127 │             ((sequence_nonce as u128) >= (crsn.min_nonce as u128) + (BitVector::length(&crsn.slots) as u128))) {
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/CRSN.move:127:42
    │
127 │             ((sequence_nonce as u128) >= (crsn.min_nonce as u128) + (BitVector::length(&crsn.slots) as u128))) {
    │                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/CRSN.move:131:32
    │
131 │             let scaled_nonce = sequence_nonce - crsn.min_nonce;
    │                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/CRSN.move:167:17
    │
167 │         assert!(shift_amount > 0, Errors::invalid_argument(EINVALID_SHIFT));
    │                 ^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/CRSN.move:180:26
    │
180 │         crsn.min_nonce = crsn.min_nonce + shift_amount;
    │                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/CRSN.move:194:13
    │
194 │         if (index == 0) return;
    │             ^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/CRSN.move:196:26
    │
196 │         crsn.min_nonce = crsn.min_nonce + index;
    │                          ^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:244:13
    │
244 │         if (new_max_inflow > 0) { limits_def.max_inflow = new_max_inflow };
    │             ^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:245:13
    │
245 │         if (new_max_outflow > 0) { limits_def.max_outflow = new_max_outflow };
    │             ^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:246:13
    │
246 │         if (new_max_holding_balance > 0) { limits_def.max_holding = new_max_holding_balance };
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:247:13
    │
247 │         if (new_time_period > 0) { limits_def.time_period = new_time_period };
    │             ^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:284:13
    │
284 │         if (aggregate_balance != 0)  { window.tracked_balance = aggregate_balance };
    │             ^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:313:17
    │
313 │         assert!(window.window_start <= MAX_U64 - limits_definition.time_period, Errors::limit_exceeded(EWINDOW));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:313:40
    │
313 │         assert!(window.window_start <= MAX_U64 - limits_definition.time_period, Errors::limit_exceeded(EWINDOW));
    │                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:314:13
    │
314 │         if (current_time > window.window_start + limits_definition.time_period) {
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:314:28
    │
314 │         if (current_time > window.window_start + limits_definition.time_period) {
    │                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:378:17
    │
378 │         assert!(receiving.window_inflow <= MAX_U64 - amount, Errors::limit_exceeded(EWINDOW));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:378:44
    │
378 │         assert!(receiving.window_inflow <= MAX_U64 - amount, Errors::limit_exceeded(EWINDOW));
    │                                            ^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:379:25
    │
379 │         let inflow_ok = (receiving.window_inflow + amount) <= limits_definition.max_inflow;
    │                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:379:25
    │
379 │         let inflow_ok = (receiving.window_inflow + amount) <= limits_definition.max_inflow;
    │                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:381:17
    │
381 │         assert!(receiving.tracked_balance <= MAX_U64 - amount, Errors::limit_exceeded(EWINDOW));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:381:46
    │
381 │         assert!(receiving.tracked_balance <= MAX_U64 - amount, Errors::limit_exceeded(EWINDOW));
    │                                              ^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:382:26
    │
382 │         let holding_ok = (receiving.tracked_balance + amount) <= limits_definition.max_holding;
    │                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:382:26
    │
382 │         let holding_ok = (receiving.tracked_balance + amount) <= limits_definition.max_holding;
    │                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:384:13
    │
384 │         if (inflow_ok && holding_ok) {
    │             ^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:385:39
    │
385 │             receiving.window_inflow = receiving.window_inflow + amount;
    │                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:386:41
    │
386 │             receiving.tracked_balance = receiving.tracked_balance + amount;
    │                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:388:9
    │
388 │         inflow_ok && holding_ok
    │         ^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:464:17
    │
464 │         assert!(sending.window_outflow <= MAX_U64 - amount, Errors::limit_exceeded(EWINDOW));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:464:43
    │
464 │         assert!(sending.window_outflow <= MAX_U64 - amount, Errors::limit_exceeded(EWINDOW));
    │                                           ^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:465:26
    │
465 │         let outflow_ok = sending.window_outflow + amount <= limits_definition.max_outflow;
    │                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:465:26
    │
465 │         let outflow_ok = sending.window_outflow + amount <= limits_definition.max_outflow;
    │                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:468:38
    │
468 │             sending.window_outflow = sending.window_outflow + amount;
    │                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:469:43
    │
469 │             sending.tracked_balance = if (amount >= sending.tracked_balance) 0
    │                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:470:45
    │
470 │                                        else sending.tracked_balance - amount;
    │                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:520:9
    │
520 │         limits_def.max_inflow == MAX_U64 &&
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:520:9
    │  
520 │ ╭         limits_def.max_inflow == MAX_U64 &&
521 │ │         limits_def.max_outflow == MAX_U64 &&
    │ ╰─────────────────────────────────────────^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:520:9
    │  
520 │ ╭         limits_def.max_inflow == MAX_U64 &&
521 │ │         limits_def.max_outflow == MAX_U64 &&
522 │ │         limits_def.max_holding == MAX_U64 &&
    │ ╰─────────────────────────────────────────^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:520:9
    │  
520 │ ╭         limits_def.max_inflow == MAX_U64 &&
521 │ │         limits_def.max_outflow == MAX_U64 &&
522 │ │         limits_def.max_holding == MAX_U64 &&
523 │ │         limits_def.time_period == ONE_DAY
    │ ╰─────────────────────────────────────────^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:521:9
    │
521 │         limits_def.max_outflow == MAX_U64 &&
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:522:9
    │
522 │         limits_def.max_holding == MAX_U64 &&
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/AccountLimits.move:523:9
    │
523 │         limits_def.time_period == ONE_DAY
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/Event.move:49:30
   │
49 │         handle_ref.counter = handle_ref.counter + 1;
   │                              ^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Roles.move:196:8
    │  
196 │ ╭        exists<RoleId>(addr)
197 │ │            && borrow_global<RoleId>(addr).role_id == role_id
    │ ╰────────────────────────────────────────────────────────────^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Roles.move:197:15
    │
197 │            && borrow_global<RoleId>(addr).role_id == role_id
    │               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Roles.move:238:9
    │  
238 │ ╭         has_parent_VASP_role(account) ||
239 │ │         has_child_VASP_role(account) ||
    │ ╰────────────────────────────────────^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Roles.move:238:9
    │  
238 │ ╭         has_parent_VASP_role(account) ||
239 │ │         has_child_VASP_role(account) ||
240 │ │         has_designated_dealer_role(account)
    │ ╰───────────────────────────────────────────^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Roles.move:251:17
    │
251 │         assert!(borrow_global<RoleId>(addr).role_id == DIEM_ROOT_ROLE_ID, Errors::requires_role(EDIEM_ROOT));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Roles.move:265:13
    │
265 │             borrow_global<RoleId>(addr).role_id == TREASURY_COMPLIANCE_ROLE_ID,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Roles.move:279:13
    │
279 │             borrow_global<RoleId>(addr).role_id == PARENT_VASP_ROLE_ID,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Roles.move:293:13
    │
293 │             borrow_global<RoleId>(addr).role_id == CHILD_VASP_ROLE_ID,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Roles.move:308:13
    │
308 │             borrow_global<RoleId>(addr).role_id == DESIGNATED_DEALER_ROLE_ID,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Roles.move:322:13
    │
322 │             borrow_global<RoleId>(validator_addr).role_id == VALIDATOR_ROLE_ID,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Roles.move:336:13
    │
336 │             borrow_global<RoleId>(validator_operator_addr).role_id == VALIDATOR_OPERATOR_ROLE_ID,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Roles.move:351:13
    │
351 │             role_id == PARENT_VASP_ROLE_ID || role_id == DESIGNATED_DEALER_ROLE_ID,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Roles.move:351:13
    │
351 │             role_id == PARENT_VASP_ROLE_ID || role_id == DESIGNATED_DEALER_ROLE_ID,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Roles.move:351:47
    │
351 │             role_id == PARENT_VASP_ROLE_ID || role_id == DESIGNATED_DEALER_ROLE_ID,
    │                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Roles.move:365:13
    │
365 │             role_id == PARENT_VASP_ROLE_ID || role_id == CHILD_VASP_ROLE_ID,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Roles.move:365:13
    │
365 │             role_id == PARENT_VASP_ROLE_ID || role_id == CHILD_VASP_ROLE_ID,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Roles.move:365:47
    │
365 │             role_id == PARENT_VASP_ROLE_ID || role_id == CHILD_VASP_ROLE_ID,
    │                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/BitVector.move:20:17
   │
20 │         assert!(length > 0, Errors::invalid_argument(ELENGTH));
   │                 ^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/BitVector.move:21:17
   │
21 │         assert!(length < MAX_SIZE, Errors::invalid_argument(ELENGTH));
   │                 ^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/BitVector.move:28:13
   │
28 │             (counter < length)}) {
   │             ^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/BitVector.move:55:17
   │
55 │         assert!(bit_index < Vector::length(&bitvector.bit_field), Errors::invalid_argument(EINDEX));
   │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/BitVector.move:71:17
   │
71 │         assert!(bit_index < Vector::length(&bitvector.bit_field), Errors::invalid_argument(EINDEX));
   │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/BitVector.move:88:13
   │
88 │         if (amount >= bitvector.length) {
   │             ^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/BitVector.move:91:19
   │
91 │            while (i < len) {
   │                   ^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/BitVector.move:94:20
   │
94 │                i = i + 1;
   │                    ^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/BitVector.move:99:20
   │
99 │             while (i < bitvector.length) {
   │                    ^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/BitVector.move:100:64
    │
100 │                 if (is_index_set(bitvector, i)) set(bitvector, i - amount)
    │                                                                ^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/BitVector.move:101:39
    │
101 │                 else unset(bitvector, i - amount);
    │                                       ^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/BitVector.move:102:21
    │
102 │                 i = i + 1;
    │                     ^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/BitVector.move:105:17
    │
105 │             i = bitvector.length - amount;
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/BitVector.move:107:20
    │
107 │             while (i < bitvector.length) {
    │                    ^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/BitVector.move:109:21
    │
109 │                 i = i + 1;
    │                     ^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/BitVector.move:117:17
    │
117 │         assert!(bit_index < Vector::length(&bitvector.bit_field), Errors::invalid_argument(EINDEX));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/BitVector.move:146:17
    │
146 │         assert!(start_index < bitvector.length, Errors::invalid_argument(EINDEX));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/BitVector.move:150:16
    │
150 │         while (index < bitvector.length) {
    │                ^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/BitVector.move:152:21
    │
152 │             index = index + 1;
    │                     ^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/BitVector.move:155:9
    │
155 │         index - start_index
    │         ^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/Errors.move:18:9
   │
18 │         (category as u64) + (reason << 8)
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/Errors.move:18:29
   │
18 │         (category as u64) + (reason << 8)
   │                             ^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/Vector.move:61:13
   │
61 │         if (len == 0) return ();
   │             ^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/Vector.move:64:26
   │
64 │         let back_index = len -1;
   │                          ^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/Vector.move:65:16
   │
65 │         while (front_index < back_index) {
   │                ^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/Vector.move:67:27
   │
67 │             front_index = front_index + 1;
   │                           ^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/Vector.move:68:26
   │
68 │             back_index = back_index - 1;
   │                          ^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/Vector.move:92:9
   │
92 │         length(v) == 0
   │         ^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../language/move-stdlib/sources/Vector.move:99:16
   │
99 │         while (i < len) {
   │                ^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/Vector.move:100:17
    │
100 │             if (borrow(v, i) == e) return true;
    │                 ^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/Vector.move:101:17
    │
101 │             i = i + 1;
    │                 ^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/Vector.move:114:16
    │
114 │         while (i < len) {
    │                ^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/Vector.move:115:17
    │
115 │             if (borrow(v, i) == e) return (true, i);
    │                 ^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/Vector.move:116:17
    │
116 │             i = i + 1;
    │                 ^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/Vector.move:130:13
    │
130 │         if (i >= len) abort EINDEX_OUT_OF_BOUNDS;
    │             ^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/Vector.move:132:15
    │
132 │         len = len - 1;
    │               ^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/Vector.move:133:16
    │
133 │         while (i < len) swap(v, i, { i = i + 1; i });
    │                ^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/Vector.move:133:42
    │
133 │         while (i < len) swap(v, i, { i = i + 1; i });
    │                                          ^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../language/move-stdlib/sources/Vector.move:145:24
    │
145 │         let last_idx = length(v) - 1;
    │                        ^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/VASPDomain.move:65:17
   │
65 │         assert!(Vector::length(&domain) <= DOMAIN_LENGTH, Errors::invalid_argument(EINVALID_VASP_DOMAIN));
   │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemVMConfig.move:155:13
    │
155 │             min_price_per_gas_unit <= max_price_per_gas_unit,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DiemVMConfig.move:159:13
    │
159 │             min_transaction_gas_units <= maximum_number_of_gas_units,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DualAttestation.move:314:27
    │
314 │         let above_limit = approx_xdx_microdiem_value >= travel_rule_limit_microdiem;
    │                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DualAttestation.move:319:13
    │
319 │         if (payer == payee) {
    │             ^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DualAttestation.move:324:9
    │
324 │         VASP::is_vasp(payer) && VASP::is_vasp(payee) &&
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DualAttestation.move:324:9
    │  
324 │ ╭         VASP::is_vasp(payer) && VASP::is_vasp(payee) &&
325 │ │             VASP::parent_address(payer) != VASP::parent_address(payee)
    │ ╰──────────────────────────────────────────────────────────────────────^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DualAttestation.move:325:13
    │
325 │             VASP::parent_address(payer) != VASP::parent_address(payee)
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DualAttestation.move:385:13
    │
385 │             Vector::length(&metadata_signature) == 64,
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DualAttestation.move:457:13
    │  
457 │           if (!Vector::is_empty(&metadata_signature) || // allow opt-in dual attestation
    │ ╭─────────────^
458 │ │             dual_attestation_required<Currency>(payer, payee, value)
    │ ╰────────────────────────────────────────────────────────────────────^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DualAttestation.move:487:29
    │
487 │         let initial_limit = (INITIAL_DUAL_ATTESTATION_LIMIT as u128) * (Diem::scaling_factor<XDX>() as u128);
    │                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/DualAttestation.move:488:17
    │
488 │         assert!(initial_limit <= MAX_U64, Errors::limit_exceeded(ELIMIT));
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Genesis.move:155:17
    │
155 │         assert!(num_owners == num_owner_names, 0);
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Genesis.move:157:17
    │
157 │         assert!(num_owner_names == num_owner_keys, 0);
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Genesis.move:159:17
    │
159 │         assert!(num_owner_keys == num_operators, 0);
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Genesis.move:161:17
    │
161 │         assert!(num_operators == num_operator_names, 0);
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Genesis.move:163:17
    │
163 │         assert!(num_operator_names == num_operator_keys, 0);
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Genesis.move:165:17
    │
165 │         assert!(num_operator_keys == num_validator_network_addresses, 0);
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Genesis.move:167:17
    │
167 │         assert!(num_validator_network_addresses == num_full_node_network_addresses, 0);
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Genesis.move:171:16
    │
171 │         while (i < num_owners) {
    │                ^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Genesis.move:199:21
    │
199 │             assert!(ValidatorOperatorConfig::get_human_name(operator_address) == operator_name, 0);
    │                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
    ┌─ ../../../../diem-move/diem-framework/core/sources/Genesis.move:217:17
    │
217 │             i = i + 1;
    │                 ^^^^^ prover passed after mutation

warning[W13001]: Mutation passed after arithmetic operation
   ┌─ ../../../../diem-move/diem-framework/core/sources/DiemVersion.move:43:13
   │
43 │             old_config.major < major,
   │             ^^^^^^^^^^^^^^^^^^^^^^^^ prover passed after mutation

